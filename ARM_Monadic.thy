(* ARM_Monadic.thy - generated by L3 - 19/05/2016 *)
theory ARM_Monadic
imports "$ISABELLE_HOME/src/HOL/Word/Word" "L3_Lib" TLB
begin

ML_file "$ISABELLE_HOME/src/HOL/Word/Tools/word_lib.ML"
ML_file "L3.ML"

datatype Architecture = ARMv4 | ARMv4T | ARMv5T | ARMv5TE | ARMv6 | ARMv6K | ARMv6T2 | ARMv7_A |
  ARMv7_R

datatype Extensions = Extension_ThumbEE | Extension_Security | Extension_Multiprocessing |
  Extension_Virtualization | Extension_VFP | Extension_AdvanvedSIMD

record PSR =
  A :: bool
  C :: bool
  E :: bool
  F :: bool
  GE :: "4 word"
  I :: bool
  IT :: "8 word"
  J :: bool
  M :: "5 word"
  N :: bool
  Q :: bool
  T :: bool
  V :: bool
  Z :: bool
  psr'rst :: "4 word"

record CP14 = TEEHBR :: "32 word"

record SCTLR =
  A :: bool
  B :: bool
  BR :: bool
  C :: bool
  DZ :: bool
  EE :: bool
  FI :: bool
  I :: bool
  IE :: bool
  M :: bool
  NMFI :: bool
  RR :: bool
  SW :: bool
  TE :: bool
  U :: bool
  V :: bool
  VE :: bool
  Z :: bool
  sctlr'rst :: "14 word"

record HSCTLR =
  A :: bool
  C :: bool
  CP15BEN :: bool
  EE :: bool
  FI :: bool
  I :: bool
  M :: bool
  TE :: bool
  WXN :: bool
  hsctlr'rst :: "23 word"

record HSR = EC :: "6 word" IL :: bool ISS :: "25 word"

record SCR =
  AW :: bool
  EA :: bool
  FIQ :: bool
  FW :: bool
  HCE :: bool
  IRQ :: bool
  NS :: bool
  SCD :: bool
  SIF :: bool
  nET :: bool
  scr'rst :: "22 word"

record NSACR =
  NSASEDIS :: bool
  NSD32DIS :: bool
  NSTRCDIS :: bool
  RFR :: bool
  cp :: "14 word"
  nsacr'rst :: "14 word"

record HCR =
  AMO :: bool
  BSU :: "2 word"
  DC :: bool
  FB :: bool
  FMO :: bool
  IMO :: bool
  PTW :: bool
  SWIO :: bool
  TAC :: bool
  TGE :: bool
  TID :: "4 word"
  TIDCP :: bool
  TPC :: bool
  TPU :: bool
  TSC :: bool
  TSW :: bool
  TTLB :: bool
  TVM :: bool
  TWE :: bool
  TWI :: bool
  VA :: bool
  VF :: bool
  VI :: bool
  VM :: bool
  hcr'rst :: "4 word"

record CP15 =
  HCR :: HCR
  HSCTLR :: HSCTLR
  HSR :: HSR
  MVBAR :: "32 word"
  NSACR :: NSACR
  SCR :: SCR
  SCTLR :: SCTLR
  VBAR :: "32 word"

datatype InstrSet = InstrSet_ARM | InstrSet_Thumb | InstrSet_Jazelle | InstrSet_ThumbEE

datatype Encoding = Encoding_Thumb | Encoding_Thumb2 | Encoding_ARM

datatype RName = RName_0usr | RName_1usr | RName_2usr | RName_3usr | RName_4usr | RName_5usr |
  RName_6usr | RName_7usr | RName_8usr | RName_8fiq | RName_9usr | RName_9fiq | RName_10usr |
  RName_10fiq | RName_11usr | RName_11fiq | RName_12usr | RName_12fiq | RName_SPusr | RName_SPfiq |
  RName_SPirq | RName_SPsvc | RName_SPabt | RName_SPund | RName_SPmon | RName_SPhyp | RName_LRusr |
  RName_LRfiq | RName_LRirq | RName_LRsvc | RName_LRabt | RName_LRund | RName_LRmon | RName_PC

datatype SRType = SRType_LSL | SRType_LSR | SRType_ASR | SRType_ROR | SRType_RRX

record FPSCR =
  AHP :: bool
  C :: bool
  DN :: bool
  DZC :: bool
  DZE :: bool
  FZ :: bool
  IDC :: bool
  IDE :: bool
  IOC :: bool
  IOE :: bool
  IXC :: bool
  IXE :: bool
  N :: bool
  OFC :: bool
  OFE :: bool
  QC :: bool
  RMode :: "2 word"
  UFC :: bool
  UFE :: bool
  V :: bool
  Z :: bool
  fpscr'rst :: "10 word"

record FP = FPSCR :: FPSCR REG :: "5 word \<Rightarrow> 64 word"

datatype VFPNegMul = VFPNegMul_VNMLA | VFPNegMul_VNMLS | VFPNegMul_VNMUL

datatype offset1 = immediate_form1 "32 word" | register_form1 "4 word \<times> SRType \<times> nat"

datatype offset2 = immediate_form2 "32 word" | register_form2 "4 word"

datatype Hint =
    Breakpoint "32 word"
  | DataMemoryBarrier "4 word"
  | DataSynchronizationBarrier "4 word"
  | Debug "4 word"
  | InstructionSynchronizationBarrier "4 word"
  | PreloadData "bool \<times> bool \<times> 4 word \<times> offset1"
  | PreloadDataLiteral "bool \<times> 32 word"
  | PreloadInstruction "bool \<times> 4 word \<times> offset1"
  | SendEvent
  | WaitForEvent
  | WaitForInterrupt
  | Yield

datatype System =
    ChangeProcessorState
        "bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> 5 word option"
  | EnterxLeavex bool
  | ExceptionReturn
  | HypervisorCall "16 word"
  | MoveToBankedOrSpecialRegister "bool \<times> 5 word \<times> 4 word"
  | MoveToRegisterFromBankedOrSpecial "bool \<times> 5 word \<times> 4 word"
  | MoveToRegisterFromSpecial "bool \<times> 4 word"
  | MoveToSpecialFromImmediate "bool \<times> 32 word \<times> 4 word"
  | MoveToSpecialFromRegister "bool \<times> 4 word \<times> 4 word"
  | ReturnFromException "bool \<times> bool \<times> bool \<times> 4 word"
  | SecureMonitorCall "4 word"
  | Setend bool
  | StoreReturnState "bool \<times> bool \<times> bool \<times> 5 word"
  | SupervisorCall "32 word"

datatype Store =
    StoreByte "bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | StoreByteUnprivileged "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | StoreDual
      "bool \<times>
       bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> offset2"
  | StoreExclusive "4 word \<times> 4 word \<times> 4 word \<times> 32 word"
  | StoreExclusiveByte "4 word \<times> 4 word \<times> 4 word"
  | StoreExclusiveDoubleword "4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | StoreExclusiveHalf "4 word \<times> 4 word \<times> 4 word"
  | StoreHalf "bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | StoreHalfUnprivileged "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"
  | StoreMultiple "bool \<times> bool \<times> bool \<times> 4 word \<times> 16 word"
  | StoreMultipleUserRegisters "bool \<times> bool \<times> 4 word \<times> 16 word"
  | StoreUnprivileged "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | StoreWord "bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"

datatype Load =
    LoadByte
        "bool \<times>
         bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | LoadByteLiteral "bool \<times> bool \<times> 4 word \<times> 32 word"
  | LoadByteUnprivileged "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | LoadDual
      "bool \<times>
       bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> offset2"
  | LoadDualLiteral "bool \<times> 4 word \<times> 4 word \<times> 32 word"
  | LoadExclusive "4 word \<times> 4 word \<times> 32 word"
  | LoadExclusiveByte "4 word \<times> 4 word"
  | LoadExclusiveDoubleword "4 word \<times> 4 word \<times> 4 word"
  | LoadExclusiveHalf "4 word \<times> 4 word"
  | LoadHalf
      "bool \<times>
       bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | LoadHalfLiteral "bool \<times> bool \<times> 4 word \<times> 32 word"
  | LoadHalfUnprivileged
      "bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"
  | LoadLiteral "bool \<times> 4 word \<times> 32 word"
  | LoadMultiple "bool \<times> bool \<times> bool \<times> 4 word \<times> 16 word"
  | LoadMultipleExceptionReturn "bool \<times> bool \<times> bool \<times> 4 word \<times> 15 word"
  | LoadMultipleUserRegisters "bool \<times> bool \<times> 4 word \<times> 15 word"
  | LoadSignedByteUnprivileged "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"
  | LoadUnprivileged "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"
  | LoadWord "bool \<times> bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"

datatype Media =
    BitFieldClearOrInsert "4 word \<times> 4 word \<times> nat \<times> nat"
  | BitFieldExtract "bool \<times> 4 word \<times> 4 word \<times> nat \<times> nat"
  | ByteReverse "4 word \<times> 4 word"
  | ByteReversePackedHalfword "4 word \<times> 4 word"
  | ByteReverseSignedHalfword "4 word \<times> 4 word"
  | ExtendByte "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"
  | ExtendByte16 "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"
  | ExtendHalfword "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"
  | PackHalfword "SRType \<times> nat \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | ReverseBits "4 word \<times> 4 word"
  | Saturate "SRType \<times> nat \<times> nat \<times> bool \<times> 4 word \<times> 4 word"
  | Saturate16 "nat \<times> bool \<times> 4 word \<times> 4 word"
  | SaturatingAddSubtract "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SelectBytes "4 word \<times> 4 word \<times> 4 word"

datatype SIMD =
    SignedAddSub16 "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedAddSub8 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedHalvingAddSub16 "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedHalvingAddSub8 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedSaturatingAddSub16 "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedSaturatingAddSub8 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedAddSub16 "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedAddSub8 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedHalvingAddSub16 "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedHalvingAddSub8 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedSaturatingAddSub16 "2 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedSaturatingAddSub8 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | UnsignedSumAbsoluteDifferences "4 word \<times> 4 word \<times> 4 word \<times> 4 word"

datatype Multiply =
    Multiply32 "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | MultiplyAccumulate "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | MultiplyAccumulateAccumulate "4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | MultiplyLong
      "bool \<times>
       bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | MultiplySubtract "4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | Signed16Multiply32Accumulate
      "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | Signed16Multiply32Result "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | Signed16Multiply64Accumulate
      "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | Signed16x32Multiply32Accumulate
      "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | Signed16x32Multiply32Result "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedMostSignificantMultiply
      "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedMostSignificantMultiplySubtract
      "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedMultiplyDual
      "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"
  | SignedMultiplyLongDual
      "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"

datatype Data =
    AddSub "bool \<times> 4 word \<times> 4 word \<times> 12 word"
  | ArithLogicImmediate "4 word \<times> bool \<times> 4 word \<times> 4 word \<times> 12 word"
  | CountLeadingZeroes "4 word \<times> 4 word"
  | Move "bool \<times> bool \<times> 4 word \<times> 12 word"
  | MoveHalfword "bool \<times> 4 word \<times> 16 word"
  | Register
      "4 word \<times>
       bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"
  | RegisterShiftedRegister
      "4 word \<times>
       bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> SRType \<times> 4 word"
  | ShiftImmediate "bool \<times> bool \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"
  | ShiftRegister
      "bool \<times> bool \<times> 4 word \<times> 4 word \<times> SRType \<times> 4 word"
  | TestCompareImmediate "2 word \<times> 4 word \<times> 12 word"
  | TestCompareRegister "2 word \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"

datatype Branch =
    BranchExchange "4 word"
  | BranchLinkExchangeImmediate "InstrSet \<times> 32 word"
  | BranchLinkExchangeRegister "4 word"
  | BranchTarget "32 word"
  | CheckArray "4 word \<times> 4 word"
  | CompareBranch "bool \<times> 4 word \<times> 32 word"
  | HandlerBranchLink "bool \<times> 32 word"
  | HandlerBranchLinkParameter "32 word \<times> 32 word"
  | HandlerBranchParameter "32 word \<times> 32 word"
  | TableBranchByte "bool \<times> 4 word \<times> 4 word"

datatype VFP =
    UndefinedVFP
  | vadd "bool \<times> 5 word \<times> 5 word \<times> 5 word"
  | vcmp "bool \<times> 5 word \<times> 5 word option"
  | vldr "bool \<times> bool \<times> 5 word \<times> 4 word \<times> 32 word"
  | vmla_vmls "bool \<times> bool \<times> 5 word \<times> 5 word \<times> 5 word"
  | vmov "bool \<times> 5 word \<times> 5 word"
  | vmov_imm "bool \<times> 5 word \<times> 64 word"
  | vmrs "4 word"
  | vmul "bool \<times> 5 word \<times> 5 word \<times> 5 word"
  | vneg_mul "bool \<times> VFPNegMul \<times> 5 word \<times> 5 word \<times> 5 word"
  | vstr "bool \<times> bool \<times> 5 word \<times> 4 word \<times> 32 word"
  | vsub "bool \<times> 5 word \<times> 5 word \<times> 5 word"

datatype instruction =
    Branch Branch
  | ClearExclusive
  | Data Data
  | Divide "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | Hint Hint
  | IfThen "4 word \<times> 4 word"
  | Load Load
  | Media Media
  | Multiply Multiply
  | NoOperation
  | SIMD SIMD
  | Store Store
  | Swap "bool \<times> 4 word \<times> 4 word \<times> 4 word"
  | System System
  | Undefined "32 word"
  | VFP VFP

datatype MachineCode =
    ARM "32 word"
  | BadCode string
  | Thumb "16 word"
  | Thumb2 "16 word \<times> 16 word"
  | ThumbEE "16 word"

datatype exception =
    ASSERT string
  | AlignmentFault "32 word"
  | IMPLEMENTATION_DEFINED string
  | NoException
  | UNPREDICTABLE string
  | PAGE_FAULT string (* MMU *)

record state =
  Architecture :: Architecture
  CP14 :: CP14
  CP15 :: CP15
  CPSR :: PSR
  CurrentCondition :: "4 word"
  ELR_hyp :: "32 word"
  Encoding :: Encoding
  Extensions :: "Extensions set"
  FP :: FP
  MEM :: "32 word \<Rightarrow> 8 word"
  REG :: "RName \<Rightarrow> 32 word"
  SPSR_abt :: PSR
  SPSR_fiq :: PSR
  SPSR_hyp :: PSR
  SPSR_irq :: PSR
  SPSR_mon :: PSR
  SPSR_svc :: PSR
  SPSR_und :: PSR
  exception :: exception
  undefined :: bool
  (* additional MMU state *)
  TTBR0 :: "32 word" 
  TLB :: tlb
  ASID :: asid

(* TLB entry eviction oracle, could additional take a nat if history was important *)
consts tlb_evict :: "state \<Rightarrow> tlb_entry set"

fun nat_to_Architecture :: "nat \<Rightarrow> Architecture" where
  "nat_to_Architecture x =
   (if x = 0 then ARM_Monadic.ARMv4
    else if x = 1 then ARM_Monadic.ARMv4T
    else if x = 2 then ARM_Monadic.ARMv5T
    else if x = 3 then ARM_Monadic.ARMv5TE
    else if x = 4 then ARM_Monadic.ARMv6
    else if x = 5 then ARM_Monadic.ARMv6K
    else if x = 6 then ARM_Monadic.ARMv6T2
    else if x = 7 then ARM_Monadic.ARMv7_A
    else if x = 8 then ARM_Monadic.ARMv7_R
    else HOL.undefined)"

fun nat_to_Extensions :: "nat \<Rightarrow> Extensions" where
  "nat_to_Extensions x =
   (if x = 0 then ARM_Monadic.Extension_ThumbEE
    else if x = 1 then ARM_Monadic.Extension_Security
    else if x = 2 then ARM_Monadic.Extension_Multiprocessing
    else if x = 3 then ARM_Monadic.Extension_Virtualization
    else if x = 4 then ARM_Monadic.Extension_VFP
    else if x = 5 then ARM_Monadic.Extension_AdvanvedSIMD
    else HOL.undefined)"

fun nat_to_InstrSet :: "nat \<Rightarrow> InstrSet" where
  "nat_to_InstrSet x =
   (if x = 0 then ARM_Monadic.InstrSet_ARM
    else if x = 1 then ARM_Monadic.InstrSet_Thumb
    else if x = 2 then ARM_Monadic.InstrSet_Jazelle
    else if x = 3 then ARM_Monadic.InstrSet_ThumbEE
    else HOL.undefined)"

fun nat_to_Encoding :: "nat \<Rightarrow> Encoding" where
  "nat_to_Encoding x =
   (if x = 0 then ARM_Monadic.Encoding_Thumb
    else if x = 1 then ARM_Monadic.Encoding_Thumb2
    else if x = 2 then ARM_Monadic.Encoding_ARM
    else HOL.undefined)"

fun nat_to_RName :: "nat \<Rightarrow> RName" where
  "nat_to_RName x =
   (if x = 0 then ARM_Monadic.RName_0usr
    else if x = 1 then ARM_Monadic.RName_1usr
    else if x = 2 then ARM_Monadic.RName_2usr
    else if x = 3 then ARM_Monadic.RName_3usr
    else if x = 4 then ARM_Monadic.RName_4usr
    else if x = 5 then ARM_Monadic.RName_5usr
    else if x = 6 then ARM_Monadic.RName_6usr
    else if x = 7 then ARM_Monadic.RName_7usr
    else if x = 8 then ARM_Monadic.RName_8usr
    else if x = 9 then ARM_Monadic.RName_8fiq
    else if x = 10 then ARM_Monadic.RName_9usr
    else if x = 11 then ARM_Monadic.RName_9fiq
    else if x = 12 then ARM_Monadic.RName_10usr
    else if x = 13 then ARM_Monadic.RName_10fiq
    else if x = 14 then ARM_Monadic.RName_11usr
    else if x = 15 then ARM_Monadic.RName_11fiq
    else if x = 16 then ARM_Monadic.RName_12usr
    else if x = 17 then ARM_Monadic.RName_12fiq
    else if x = 18 then ARM_Monadic.RName_SPusr
    else if x = 19 then ARM_Monadic.RName_SPfiq
    else if x = 20 then ARM_Monadic.RName_SPirq
    else if x = 21 then ARM_Monadic.RName_SPsvc
    else if x = 22 then ARM_Monadic.RName_SPabt
    else if x = 23 then ARM_Monadic.RName_SPund
    else if x = 24 then ARM_Monadic.RName_SPmon
    else if x = 25 then ARM_Monadic.RName_SPhyp
    else if x = 26 then ARM_Monadic.RName_LRusr
    else if x = 27 then ARM_Monadic.RName_LRfiq
    else if x = 28 then ARM_Monadic.RName_LRirq
    else if x = 29 then ARM_Monadic.RName_LRsvc
    else if x = 30 then ARM_Monadic.RName_LRabt
    else if x = 31 then ARM_Monadic.RName_LRund
    else if x = 32 then ARM_Monadic.RName_LRmon
    else if x = 33 then ARM_Monadic.RName_PC
    else HOL.undefined)"

fun nat_to_SRType :: "nat \<Rightarrow> SRType" where
  "nat_to_SRType x =
   (if x = 0 then ARM_Monadic.SRType_LSL
    else if x = 1 then ARM_Monadic.SRType_LSR
    else if x = 2 then ARM_Monadic.SRType_ASR
    else if x = 3 then ARM_Monadic.SRType_ROR
    else if x = 4 then ARM_Monadic.SRType_RRX
    else HOL.undefined)"

fun nat_to_VFPNegMul :: "nat \<Rightarrow> VFPNegMul" where
  "nat_to_VFPNegMul x =
   (if x = 0 then ARM_Monadic.VFPNegMul_VNMLA
    else if x = 1 then ARM_Monadic.VFPNegMul_VNMLS
    else if x = 2 then ARM_Monadic.VFPNegMul_VNMUL
    else HOL.undefined)"

fun Architecture_to_nat :: "Architecture \<Rightarrow> nat" where
  "Architecture_to_nat x =
   (case x of
       ARM_Monadic.ARMv4 => 0
          | ARM_Monadic.ARMv4T => 1
          | ARM_Monadic.ARMv5T => 2
          | ARM_Monadic.ARMv5TE => 3
          | ARM_Monadic.ARMv6 => 4
          | ARM_Monadic.ARMv6K => 5
          | ARM_Monadic.ARMv6T2 => 6
          | ARM_Monadic.ARMv7_A => 7
          | ARM_Monadic.ARMv7_R => 8)"

fun Extensions_to_nat :: "Extensions \<Rightarrow> nat" where
  "Extensions_to_nat x =
   (case x of
       ARM_Monadic.Extension_ThumbEE => 0
          | ARM_Monadic.Extension_Security => 1
          | ARM_Monadic.Extension_Multiprocessing => 2
          | ARM_Monadic.Extension_Virtualization => 3
          | ARM_Monadic.Extension_VFP => 4
          | ARM_Monadic.Extension_AdvanvedSIMD => 5)"

fun InstrSet_to_nat :: "InstrSet \<Rightarrow> nat" where
  "InstrSet_to_nat x =
   (case x of
       ARM_Monadic.InstrSet_ARM => 0
          | ARM_Monadic.InstrSet_Thumb => 1
          | ARM_Monadic.InstrSet_Jazelle => 2
          | ARM_Monadic.InstrSet_ThumbEE => 3)"

fun Encoding_to_nat :: "Encoding \<Rightarrow> nat" where
  "Encoding_to_nat x =
   (case x of
       ARM_Monadic.Encoding_Thumb => 0
          | ARM_Monadic.Encoding_Thumb2 => 1
          | ARM_Monadic.Encoding_ARM => 2)"

fun RName_to_nat :: "RName \<Rightarrow> nat" where
  "RName_to_nat x =
   (case x of
       ARM_Monadic.RName_0usr => 0
          | ARM_Monadic.RName_1usr => 1
          | ARM_Monadic.RName_2usr => 2
          | ARM_Monadic.RName_3usr => 3
          | ARM_Monadic.RName_4usr => 4
          | ARM_Monadic.RName_5usr => 5
          | ARM_Monadic.RName_6usr => 6
          | ARM_Monadic.RName_7usr => 7
          | ARM_Monadic.RName_8usr => 8
          | ARM_Monadic.RName_8fiq => 9
          | ARM_Monadic.RName_9usr => 10
          | ARM_Monadic.RName_9fiq => 11
          | ARM_Monadic.RName_10usr => 12
          | ARM_Monadic.RName_10fiq => 13
          | ARM_Monadic.RName_11usr => 14
          | ARM_Monadic.RName_11fiq => 15
          | ARM_Monadic.RName_12usr => 16
          | ARM_Monadic.RName_12fiq => 17
          | ARM_Monadic.RName_SPusr => 18
          | ARM_Monadic.RName_SPfiq => 19
          | ARM_Monadic.RName_SPirq => 20
          | ARM_Monadic.RName_SPsvc => 21
          | ARM_Monadic.RName_SPabt => 22
          | ARM_Monadic.RName_SPund => 23
          | ARM_Monadic.RName_SPmon => 24
          | ARM_Monadic.RName_SPhyp => 25
          | ARM_Monadic.RName_LRusr => 26
          | ARM_Monadic.RName_LRfiq => 27
          | ARM_Monadic.RName_LRirq => 28
          | ARM_Monadic.RName_LRsvc => 29
          | ARM_Monadic.RName_LRabt => 30
          | ARM_Monadic.RName_LRund => 31
          | ARM_Monadic.RName_LRmon => 32
          | ARM_Monadic.RName_PC => 33)"

fun SRType_to_nat :: "SRType \<Rightarrow> nat" where
  "SRType_to_nat x =
   (case x of
       ARM_Monadic.SRType_LSL => 0
          | ARM_Monadic.SRType_LSR => 1
          | ARM_Monadic.SRType_ASR => 2
          | ARM_Monadic.SRType_ROR => 3
          | ARM_Monadic.SRType_RRX => 4)"

fun VFPNegMul_to_nat :: "VFPNegMul \<Rightarrow> nat" where
  "VFPNegMul_to_nat x =
   (case x of
       ARM_Monadic.VFPNegMul_VNMLA => 0
          | ARM_Monadic.VFPNegMul_VNMLS => 1
          | ARM_Monadic.VFPNegMul_VNMUL => 2)"

fun Architecture_to_string :: "Architecture \<Rightarrow> string" where
  "Architecture_to_string x =
   (case x of
       ARM_Monadic.ARMv4 => ''ARMv4''
          | ARM_Monadic.ARMv4T => ''ARMv4T''
          | ARM_Monadic.ARMv5T => ''ARMv5T''
          | ARM_Monadic.ARMv5TE => ''ARMv5TE''
          | ARM_Monadic.ARMv6 => ''ARMv6''
          | ARM_Monadic.ARMv6K => ''ARMv6K''
          | ARM_Monadic.ARMv6T2 => ''ARMv6T2''
          | ARM_Monadic.ARMv7_A => ''ARMv7_A''
          | ARM_Monadic.ARMv7_R => ''ARMv7_R'')"

fun Extensions_to_string :: "Extensions \<Rightarrow> string" where
  "Extensions_to_string x =
   (case x of
       ARM_Monadic.Extension_ThumbEE => ''Extension_ThumbEE''
          | ARM_Monadic.Extension_Security => ''Extension_Security''
          | ARM_Monadic.Extension_Multiprocessing => ''Extension_Multiprocessing''
          | ARM_Monadic.Extension_Virtualization => ''Extension_Virtualization''
          | ARM_Monadic.Extension_VFP => ''Extension_VFP''
          | ARM_Monadic.Extension_AdvanvedSIMD => ''Extension_AdvanvedSIMD'')"

fun InstrSet_to_string :: "InstrSet \<Rightarrow> string" where
  "InstrSet_to_string x =
   (case x of
       ARM_Monadic.InstrSet_ARM => ''InstrSet_ARM''
          | ARM_Monadic.InstrSet_Thumb => ''InstrSet_Thumb''
          | ARM_Monadic.InstrSet_Jazelle => ''InstrSet_Jazelle''
          | ARM_Monadic.InstrSet_ThumbEE => ''InstrSet_ThumbEE'')"

fun Encoding_to_string :: "Encoding \<Rightarrow> string" where
  "Encoding_to_string x =
   (case x of
       ARM_Monadic.Encoding_Thumb => ''Encoding_Thumb''
          | ARM_Monadic.Encoding_Thumb2 => ''Encoding_Thumb2''
          | ARM_Monadic.Encoding_ARM => ''Encoding_ARM'')"

fun RName_to_string :: "RName \<Rightarrow> string" where
  "RName_to_string x =
   (case x of
       ARM_Monadic.RName_0usr => ''RName_0usr''
          | ARM_Monadic.RName_1usr => ''RName_1usr''
          | ARM_Monadic.RName_2usr => ''RName_2usr''
          | ARM_Monadic.RName_3usr => ''RName_3usr''
          | ARM_Monadic.RName_4usr => ''RName_4usr''
          | ARM_Monadic.RName_5usr => ''RName_5usr''
          | ARM_Monadic.RName_6usr => ''RName_6usr''
          | ARM_Monadic.RName_7usr => ''RName_7usr''
          | ARM_Monadic.RName_8usr => ''RName_8usr''
          | ARM_Monadic.RName_8fiq => ''RName_8fiq''
          | ARM_Monadic.RName_9usr => ''RName_9usr''
          | ARM_Monadic.RName_9fiq => ''RName_9fiq''
          | ARM_Monadic.RName_10usr => ''RName_10usr''
          | ARM_Monadic.RName_10fiq => ''RName_10fiq''
          | ARM_Monadic.RName_11usr => ''RName_11usr''
          | ARM_Monadic.RName_11fiq => ''RName_11fiq''
          | ARM_Monadic.RName_12usr => ''RName_12usr''
          | ARM_Monadic.RName_12fiq => ''RName_12fiq''
          | ARM_Monadic.RName_SPusr => ''RName_SPusr''
          | ARM_Monadic.RName_SPfiq => ''RName_SPfiq''
          | ARM_Monadic.RName_SPirq => ''RName_SPirq''
          | ARM_Monadic.RName_SPsvc => ''RName_SPsvc''
          | ARM_Monadic.RName_SPabt => ''RName_SPabt''
          | ARM_Monadic.RName_SPund => ''RName_SPund''
          | ARM_Monadic.RName_SPmon => ''RName_SPmon''
          | ARM_Monadic.RName_SPhyp => ''RName_SPhyp''
          | ARM_Monadic.RName_LRusr => ''RName_LRusr''
          | ARM_Monadic.RName_LRfiq => ''RName_LRfiq''
          | ARM_Monadic.RName_LRirq => ''RName_LRirq''
          | ARM_Monadic.RName_LRsvc => ''RName_LRsvc''
          | ARM_Monadic.RName_LRabt => ''RName_LRabt''
          | ARM_Monadic.RName_LRund => ''RName_LRund''
          | ARM_Monadic.RName_LRmon => ''RName_LRmon''
          | ARM_Monadic.RName_PC => ''RName_PC'')"

fun SRType_to_string :: "SRType \<Rightarrow> string" where
  "SRType_to_string x =
   (case x of
       ARM_Monadic.SRType_LSL => ''SRType_LSL''
          | ARM_Monadic.SRType_LSR => ''SRType_LSR''
          | ARM_Monadic.SRType_ASR => ''SRType_ASR''
          | ARM_Monadic.SRType_ROR => ''SRType_ROR''
          | ARM_Monadic.SRType_RRX => ''SRType_RRX'')"

fun VFPNegMul_to_string :: "VFPNegMul \<Rightarrow> string" where
  "VFPNegMul_to_string x =
   (case x of
       ARM_Monadic.VFPNegMul_VNMLA => ''VFPNegMul_VNMLA''
          | ARM_Monadic.VFPNegMul_VNMLS => ''VFPNegMul_VNMLS''
          | ARM_Monadic.VFPNegMul_VNMUL => ''VFPNegMul_VNMUL'')"

fun string_to_Architecture :: "string \<Rightarrow> Architecture" where
  "string_to_Architecture x =
   (if x = ''ARMv4'' then ARM_Monadic.ARMv4
    else if x = ''ARMv4T'' then ARM_Monadic.ARMv4T
    else if x = ''ARMv5T'' then ARM_Monadic.ARMv5T
    else if x = ''ARMv5TE'' then ARM_Monadic.ARMv5TE
    else if x = ''ARMv6'' then ARM_Monadic.ARMv6
    else if x = ''ARMv6K'' then ARM_Monadic.ARMv6K
    else if x = ''ARMv6T2'' then ARM_Monadic.ARMv6T2
    else if x = ''ARMv7_A'' then ARM_Monadic.ARMv7_A
    else if x = ''ARMv7_R'' then ARM_Monadic.ARMv7_R
    else HOL.undefined)"

fun string_to_Extensions :: "string \<Rightarrow> Extensions" where
  "string_to_Extensions x =
   (if x = ''Extension_ThumbEE'' then ARM_Monadic.Extension_ThumbEE
    else if x = ''Extension_Security'' then ARM_Monadic.Extension_Security
    else if x = ''Extension_Multiprocessing'' then ARM_Monadic.Extension_Multiprocessing
    else if x = ''Extension_Virtualization'' then ARM_Monadic.Extension_Virtualization
    else if x = ''Extension_VFP'' then ARM_Monadic.Extension_VFP
    else if x = ''Extension_AdvanvedSIMD'' then ARM_Monadic.Extension_AdvanvedSIMD
    else HOL.undefined)"

fun string_to_InstrSet :: "string \<Rightarrow> InstrSet" where
  "string_to_InstrSet x =
   (if x = ''InstrSet_ARM'' then ARM_Monadic.InstrSet_ARM
    else if x = ''InstrSet_Thumb'' then ARM_Monadic.InstrSet_Thumb
    else if x = ''InstrSet_Jazelle'' then ARM_Monadic.InstrSet_Jazelle
    else if x = ''InstrSet_ThumbEE'' then ARM_Monadic.InstrSet_ThumbEE
    else HOL.undefined)"

fun string_to_Encoding :: "string \<Rightarrow> Encoding" where
  "string_to_Encoding x =
   (if x = ''Encoding_Thumb'' then ARM_Monadic.Encoding_Thumb
    else if x = ''Encoding_Thumb2'' then ARM_Monadic.Encoding_Thumb2
    else if x = ''Encoding_ARM'' then ARM_Monadic.Encoding_ARM
    else HOL.undefined)"

fun string_to_RName :: "string \<Rightarrow> RName" where
  "string_to_RName x =
   (if x = ''RName_0usr'' then ARM_Monadic.RName_0usr
    else if x = ''RName_1usr'' then ARM_Monadic.RName_1usr
    else if x = ''RName_2usr'' then ARM_Monadic.RName_2usr
    else if x = ''RName_3usr'' then ARM_Monadic.RName_3usr
    else if x = ''RName_4usr'' then ARM_Monadic.RName_4usr
    else if x = ''RName_5usr'' then ARM_Monadic.RName_5usr
    else if x = ''RName_6usr'' then ARM_Monadic.RName_6usr
    else if x = ''RName_7usr'' then ARM_Monadic.RName_7usr
    else if x = ''RName_8usr'' then ARM_Monadic.RName_8usr
    else if x = ''RName_8fiq'' then ARM_Monadic.RName_8fiq
    else if x = ''RName_9usr'' then ARM_Monadic.RName_9usr
    else if x = ''RName_9fiq'' then ARM_Monadic.RName_9fiq
    else if x = ''RName_10usr'' then ARM_Monadic.RName_10usr
    else if x = ''RName_10fiq'' then ARM_Monadic.RName_10fiq
    else if x = ''RName_11usr'' then ARM_Monadic.RName_11usr
    else if x = ''RName_11fiq'' then ARM_Monadic.RName_11fiq
    else if x = ''RName_12usr'' then ARM_Monadic.RName_12usr
    else if x = ''RName_12fiq'' then ARM_Monadic.RName_12fiq
    else if x = ''RName_SPusr'' then ARM_Monadic.RName_SPusr
    else if x = ''RName_SPfiq'' then ARM_Monadic.RName_SPfiq
    else if x = ''RName_SPirq'' then ARM_Monadic.RName_SPirq
    else if x = ''RName_SPsvc'' then ARM_Monadic.RName_SPsvc
    else if x = ''RName_SPabt'' then ARM_Monadic.RName_SPabt
    else if x = ''RName_SPund'' then ARM_Monadic.RName_SPund
    else if x = ''RName_SPmon'' then ARM_Monadic.RName_SPmon
    else if x = ''RName_SPhyp'' then ARM_Monadic.RName_SPhyp
    else if x = ''RName_LRusr'' then ARM_Monadic.RName_LRusr
    else if x = ''RName_LRfiq'' then ARM_Monadic.RName_LRfiq
    else if x = ''RName_LRirq'' then ARM_Monadic.RName_LRirq
    else if x = ''RName_LRsvc'' then ARM_Monadic.RName_LRsvc
    else if x = ''RName_LRabt'' then ARM_Monadic.RName_LRabt
    else if x = ''RName_LRund'' then ARM_Monadic.RName_LRund
    else if x = ''RName_LRmon'' then ARM_Monadic.RName_LRmon
    else if x = ''RName_PC'' then ARM_Monadic.RName_PC
    else HOL.undefined)"

fun string_to_SRType :: "string \<Rightarrow> SRType" where
  "string_to_SRType x =
   (if x = ''SRType_LSL'' then ARM_Monadic.SRType_LSL
    else if x = ''SRType_LSR'' then ARM_Monadic.SRType_LSR
    else if x = ''SRType_ASR'' then ARM_Monadic.SRType_ASR
    else if x = ''SRType_ROR'' then ARM_Monadic.SRType_ROR
    else if x = ''SRType_RRX'' then ARM_Monadic.SRType_RRX
    else HOL.undefined)"

fun string_to_VFPNegMul :: "string \<Rightarrow> VFPNegMul" where
  "string_to_VFPNegMul x =
   (if x = ''VFPNegMul_VNMLA'' then ARM_Monadic.VFPNegMul_VNMLA
    else if x = ''VFPNegMul_VNMLS'' then ARM_Monadic.VFPNegMul_VNMLS
    else if x = ''VFPNegMul_VNMUL'' then ARM_Monadic.VFPNegMul_VNMUL
    else HOL.undefined)"

fun boolify'3 :: "3 word \<Rightarrow> (bool \<times> bool \<times> bool)" where
  "boolify'3 w =
   (case to_bl w of
     [b0,b1,b2] \<Rightarrow>
     (b0,b1,b2))"

fun boolify'4 :: "4 word \<Rightarrow> (bool \<times> bool \<times> bool \<times> bool)" where
  "boolify'4 w =
   (case to_bl w of
     [b0,b1,b2,b3] \<Rightarrow>
     (b0,b1,b2,b3))"

fun boolify'8 :: "8 word \<Rightarrow>
  (bool \<times>
   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool)" where
  "boolify'8 w =
   (case to_bl w of
     [b0,b1,b2,b3,b4,b5,b6,b7] \<Rightarrow>
     (b0,b1,b2,b3,b4,b5,b6,b7))"

fun boolify'16 :: "16 word \<Rightarrow>
  (bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool)" where
  "boolify'16 w =
   (case to_bl w of
     [b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15] \<Rightarrow>
     (b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15))"

fun boolify'28 :: "28 word \<Rightarrow>
  (bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool)" where
  "boolify'28 w =
   (case to_bl w of
     [b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,
      b26,b27] \<Rightarrow>
     (b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,
      b26,b27))"

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("raise'exception",
   close
     (var("e",@{typ exception}),
      mb(mr(close(var("s",qTy),call("state.exception",@{typ exception},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ exception}),
            mb(mb(mu(eq(var("v",@{typ exception}),
                        Term.Const(@{const_name "NoException"},@{typ exception})),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mw(close
                              (var("s",qTy),
                               rupd
                                 ("state.exception",tp[var("s",qTy),var("e",@{typ exception})],
                                  @{theory}))),mu(lu,qTy)))),
               close(var_a HOLogic.unitT,mu(lx(@{typ 'a}),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ArchVersion",
   close
     (var_a HOLogic.unitT,
      mb(mr(close
              (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
         close
           (var("x",@{typ Architecture}),
            mu(cs(var("x",@{typ Architecture}),
                  [(lc("ARMv4","Architecture",@{theory}),ln 4),
                   (lc("ARMv4T","Architecture",@{theory}),ln 4),
                   (lc("ARMv5T","Architecture",@{theory}),ln 5),
                   (lc("ARMv5TE","Architecture",@{theory}),ln 5),
                   (lc("ARMv6","Architecture",@{theory}),ln 6),
                   (lc("ARMv6K","Architecture",@{theory}),ln 6),
                   (lc("ARMv6T2","Architecture",@{theory}),ln 6),
                   (lc("ARMv7_A","Architecture",@{theory}),ln 7),
                   (lc("ARMv7_R","Architecture",@{theory}),ln 7)],@{context}),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HaveDSPSupport",
   close
     (var_a HOLogic.unitT,
      mb(mr(close
              (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Architecture}),
            mb(mu(bop(In,var("v",@{typ Architecture}),
                      sl[lc("ARMv4","Architecture",@{theory}),lc("ARMv4T","Architecture",@{theory}),
                         lc("ARMv5T","Architecture",@{theory})]),qTy),
               close(var_b"v",mu(mop(Not,var_b"v"),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HaveThumb2",
   close
     (var_a HOLogic.unitT,
      mb(mr(close
              (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Architecture}),
            mu(bop(In,var("v",@{typ Architecture}),
                   sl[lc("ARMv6T2","Architecture",@{theory}),lc("ARMv7_A","Architecture",@{theory}),
                      lc("ARMv7_R","Architecture",@{theory})]),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HaveThumbEE",
   close
     (var_a HOLogic.unitT,
      mb(mr(close
              (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Architecture}),
            mb(mu(eq(var("v",@{typ Architecture}),lc("ARMv7_A","Architecture",@{theory})),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",mu(lt,qTy),
                      mb(mr(close
                              (var("s",qTy),
                               call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ Architecture}),
                            mb(mu(eq(var("v",@{typ Architecture}),
                                     lc("ARMv7_R","Architecture",@{theory})),qTy),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(mr(close
                                              (var("s",qTy),
                                               call
                                                 ("state.Extensions",@{typ "Extensions set"},
                                                  var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ "Extensions set"}),
                                            mu(bop(In,
                                                   lc("Extension_ThumbEE","Extensions",@{theory}),
                                                   var("v",@{typ "Extensions set"})),qTy))),
                                      mu(lf,qTy)))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HaveMPExt",
   close
     (var_a HOLogic.unitT,
      mb(call("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
         close
           (var_n"v",
            mb(mu(bop(Ge,var_n"v",ln 7),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(mr(close
                              (var("s",qTy),
                               call
                                 ("state.Extensions",@{typ "Extensions set"},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ "Extensions set"}),
                            mu(bop(In,lc("Extension_Multiprocessing","Extensions",@{theory}),
                                   var("v",@{typ "Extensions set"})),qTy))),mu(lf,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HaveSecurityExt",
   close
     (var_a HOLogic.unitT,
      mb(mr(close
              (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Architecture}),
            mb(mu(bop(In,var("v",@{typ Architecture}),
                      sl[lc("ARMv6K","Architecture",@{theory}),
                         lc("ARMv7_A","Architecture",@{theory})]),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(mr(close
                              (var("s",qTy),
                               call
                                 ("state.Extensions",@{typ "Extensions set"},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ "Extensions set"}),
                            mu(bop(In,lc("Extension_Security","Extensions",@{theory}),
                                   var("v",@{typ "Extensions set"})),qTy))),mu(lf,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HaveVirtExt",
   close
     (var_a HOLogic.unitT,
      mb(call("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
         close
           (var_n"v",
            mb(mu(bop(Ge,var_n"v",ln 7),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(mr(close
                              (var("s",qTy),
                               call
                                 ("state.Extensions",@{typ "Extensions set"},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ "Extensions set"}),
                            mu(bop(In,lc("Extension_Virtualization","Extensions",@{theory}),
                                   var("v",@{typ "Extensions set"})),qTy))),mu(lf,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'PSR",
   close
     (var_w("x",32),
      record
        ("PSR",
         [bop(Bit,var_w("x",32),ln 8),bop(Bit,var_w("x",32),ln 29),bop(Bit,var_w("x",32),ln 9),
          bop(Bit,var_w("x",32),ln 6),ex(var_w("x",32),ln 19,ln 16,w4),bop(Bit,var_w("x",32),ln 7),
          cc[ex(var_w("x",32),ln 15,ln 10,(Word_Lib.mk_wordT 6)),
             ex(var_w("x",32),ln 26,ln 25,(Word_Lib.mk_wordT 2))],bop(Bit,var_w("x",32),ln 24),
          ex(var_w("x",32),ln 4,ln 0,(Word_Lib.mk_wordT 5)),bop(Bit,var_w("x",32),ln 31),
          bop(Bit,var_w("x",32),ln 27),bop(Bit,var_w("x",32),ln 5),bop(Bit,var_w("x",32),ln 28),
          bop(Bit,var_w("x",32),ln 30),ex(var_w("x",32),ln 23,ln 20,w4)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'PSR",
   close
     (var("x",@{typ PSR}),
      let'
        (var_w("IT",8),call("PSR.IT",w8,var("x",@{typ PSR}),@{theory}),
         cc[mop(Cast w1,call("PSR.N",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.Z",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.C",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.V",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.Q",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            ex(var_w("IT",8),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("PSR.J",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            call("PSR.psr'rst",w4,var("x",@{typ PSR}),@{theory}),
            call("PSR.GE",w4,var("x",@{typ PSR}),@{theory}),
            ex(var_w("IT",8),ln 7,ln 2,(Word_Lib.mk_wordT 6)),
            mop(Cast w1,call("PSR.E",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.A",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.I",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.F",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            mop(Cast w1,call("PSR.T",HOLogic.boolT,var("x",@{typ PSR}),@{theory})),
            call("PSR.M",(Word_Lib.mk_wordT 5),var("x",@{typ PSR}),@{theory})])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'PSR",
   close(tp[var_a w32,var("x",@{typ PSR})],call("reg'PSR",w32,var("x",@{typ PSR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'PSR",
   close(tp[var_a @{typ PSR},var_w("x",32)],call("rec'PSR",@{typ PSR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'SCTLR",
   close
     (var_w("x",32),
      record
        ("SCTLR",
         [bop(Bit,var_w("x",32),ln 1),bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 17),
          bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 19),bop(Bit,var_w("x",32),ln 25),
          bop(Bit,var_w("x",32),ln 21),bop(Bit,var_w("x",32),ln 12),bop(Bit,var_w("x",32),ln 31),
          bop(Bit,var_w("x",32),ln 0),bop(Bit,var_w("x",32),ln 27),bop(Bit,var_w("x",32),ln 14),
          bop(Bit,var_w("x",32),ln 10),bop(Bit,var_w("x",32),ln 30),bop(Bit,var_w("x",32),ln 22),
          bop(Bit,var_w("x",32),ln 13),bop(Bit,var_w("x",32),ln 24),bop(Bit,var_w("x",32),ln 11),
          cc[ex(var_w("x",32),ln 6,ln 3,w4),ex(var_w("x",32),ln 9,ln 8,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 16,ln 15,(Word_Lib.mk_wordT 2)),ex(var_w("x",32),ln 18,ln 18,w1),
             ex(var_w("x",32),ln 20,ln 20,w1),ex(var_w("x",32),ln 23,ln 23,w1),
             ex(var_w("x",32),ln 26,ln 26,w1),ex(var_w("x",32),ln 29,ln 28,(Word_Lib.mk_wordT 2))]],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'SCTLR",
   close
     (var("x",@{typ SCTLR}),
      let'
        (var_w("sctlr'rst",14),
         call("SCTLR.sctlr'rst",(Word_Lib.mk_wordT 14),var("x",@{typ SCTLR}),@{theory}),
         cc[mop(Cast w1,call("SCTLR.IE",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.TE",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("SCTLR.NMFI",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 2,ln 2,w1),
            mop(Cast w1,call("SCTLR.EE",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.VE",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 3,ln 3,w1),
            mop(Cast w1,call("SCTLR.U",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.FI",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 4,ln 4,w1),
            mop(Cast w1,call("SCTLR.DZ",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 5,ln 5,w1),
            mop(Cast w1,call("SCTLR.BR",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 7,ln 6,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("SCTLR.RR",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.V",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.I",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.Z",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.SW",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 9,ln 8,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("SCTLR.B",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            ex(var_w("sctlr'rst",14),ln 13,ln 10,w4),
            mop(Cast w1,call("SCTLR.C",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.A",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory})),
            mop(Cast w1,call("SCTLR.M",HOLogic.boolT,var("x",@{typ SCTLR}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'SCTLR",
   close(tp[var_a w32,var("x",@{typ SCTLR})],call("reg'SCTLR",w32,var("x",@{typ SCTLR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'SCTLR",
   close
     (tp[var_a @{typ SCTLR},var_w("x",32)],call("rec'SCTLR",@{typ SCTLR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'HSCTLR",
   close
     (var_w("x",32),
      record
        ("HSCTLR",
         [bop(Bit,var_w("x",32),ln 1),bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 5),
          bop(Bit,var_w("x",32),ln 25),bop(Bit,var_w("x",32),ln 21),bop(Bit,var_w("x",32),ln 12),
          bop(Bit,var_w("x",32),ln 0),bop(Bit,var_w("x",32),ln 30),bop(Bit,var_w("x",32),ln 19),
          cc[ex(var_w("x",32),ln 4,ln 3,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 11,ln 6,(Word_Lib.mk_wordT 6)),
             ex(var_w("x",32),ln 18,ln 13,(Word_Lib.mk_wordT 6)),ex(var_w("x",32),ln 20,ln 20,w1),
             ex(var_w("x",32),ln 24,ln 22,(Word_Lib.mk_wordT 3)),ex(var_w("x",32),ln 29,ln 26,w4),
             ex(var_w("x",32),ln 31,ln 31,w1)]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'HSCTLR",
   close
     (var("x",@{typ HSCTLR}),
      let'
        (var_w("hsctlr'rst",23),
         call("HSCTLR.hsctlr'rst",(Word_Lib.mk_wordT 23),var("x",@{typ HSCTLR}),@{theory}),
         cc[ex(var_w("hsctlr'rst",23),ln 0,ln 0,w1),
            mop(Cast w1,call("HSCTLR.TE",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            ex(var_w("hsctlr'rst",23),ln 4,ln 1,w4),
            mop(Cast w1,call("HSCTLR.EE",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            ex(var_w("hsctlr'rst",23),ln 7,ln 5,(Word_Lib.mk_wordT 3)),
            mop(Cast w1,call("HSCTLR.FI",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            ex(var_w("hsctlr'rst",23),ln 8,ln 8,w1),
            mop(Cast w1,call("HSCTLR.WXN",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            ex(var_w("hsctlr'rst",23),ln 14,ln 9,(Word_Lib.mk_wordT 6)),
            mop(Cast w1,call("HSCTLR.I",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            ex(var_w("hsctlr'rst",23),ln 20,ln 15,(Word_Lib.mk_wordT 6)),
            mop(Cast w1,call("HSCTLR.CP15BEN",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            ex(var_w("hsctlr'rst",23),ln 22,ln 21,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("HSCTLR.C",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            mop(Cast w1,call("HSCTLR.A",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory})),
            mop(Cast w1,call("HSCTLR.M",HOLogic.boolT,var("x",@{typ HSCTLR}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'HSCTLR",
   close
     (tp[var_a w32,var("x",@{typ HSCTLR})],call("reg'HSCTLR",w32,var("x",@{typ HSCTLR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'HSCTLR",
   close
     (tp[var_a @{typ HSCTLR},var_w("x",32)],call("rec'HSCTLR",@{typ HSCTLR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'HSR",
   close
     (var_w("x",32),
      record
        ("HSR",
         [ex(var_w("x",32),ln 31,ln 26,(Word_Lib.mk_wordT 6)),bop(Bit,var_w("x",32),ln 25),
          ex(var_w("x",32),ln 24,ln 0,(Word_Lib.mk_wordT 25))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'HSR",
   close
     (var("x",@{typ HSR}),
      cc[call("HSR.EC",(Word_Lib.mk_wordT 6),var("x",@{typ HSR}),@{theory}),
         mop(Cast w1,call("HSR.IL",HOLogic.boolT,var("x",@{typ HSR}),@{theory})),
         call("HSR.ISS",(Word_Lib.mk_wordT 25),var("x",@{typ HSR}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'HSR",
   close(tp[var_a w32,var("x",@{typ HSR})],call("reg'HSR",w32,var("x",@{typ HSR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'HSR",
   close(tp[var_a @{typ HSR},var_w("x",32)],call("rec'HSR",@{typ HSR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'SCR",
   close
     (var_w("x",32),
      record
        ("SCR",
         [bop(Bit,var_w("x",32),ln 5),bop(Bit,var_w("x",32),ln 3),bop(Bit,var_w("x",32),ln 2),
          bop(Bit,var_w("x",32),ln 4),bop(Bit,var_w("x",32),ln 8),bop(Bit,var_w("x",32),ln 1),
          bop(Bit,var_w("x",32),ln 0),bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 9),
          bop(Bit,var_w("x",32),ln 6),ex(var_w("x",32),ln 31,ln 10,(Word_Lib.mk_wordT 22))],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'SCR",
   close
     (var("x",@{typ SCR}),
      cc[call("SCR.scr'rst",(Word_Lib.mk_wordT 22),var("x",@{typ SCR}),@{theory}),
         mop(Cast w1,call("SCR.SIF",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.HCE",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.SCD",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.nET",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.AW",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.FW",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.EA",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.FIQ",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.IRQ",HOLogic.boolT,var("x",@{typ SCR}),@{theory})),
         mop(Cast w1,call("SCR.NS",HOLogic.boolT,var("x",@{typ SCR}),@{theory}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'SCR",
   close(tp[var_a w32,var("x",@{typ SCR})],call("reg'SCR",w32,var("x",@{typ SCR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'SCR",
   close(tp[var_a @{typ SCR},var_w("x",32)],call("rec'SCR",@{typ SCR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'NSACR",
   close
     (var_w("x",32),
      record
        ("NSACR",
         [bop(Bit,var_w("x",32),ln 15),bop(Bit,var_w("x",32),ln 14),bop(Bit,var_w("x",32),ln 20),
          bop(Bit,var_w("x",32),ln 19),ex(var_w("x",32),ln 13,ln 0,(Word_Lib.mk_wordT 14)),
          cc[ex(var_w("x",32),ln 18,ln 16,(Word_Lib.mk_wordT 3)),
             ex(var_w("x",32),ln 31,ln 21,(Word_Lib.mk_wordT 11))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'NSACR",
   close
     (var("x",@{typ NSACR}),
      let'
        (var_w("nsacr'rst",14),
         call("NSACR.nsacr'rst",(Word_Lib.mk_wordT 14),var("x",@{typ NSACR}),@{theory}),
         cc[ex(var_w("nsacr'rst",14),ln 10,ln 0,(Word_Lib.mk_wordT 11)),
            mop(Cast w1,call("NSACR.NSTRCDIS",HOLogic.boolT,var("x",@{typ NSACR}),@{theory})),
            mop(Cast w1,call("NSACR.RFR",HOLogic.boolT,var("x",@{typ NSACR}),@{theory})),
            ex(var_w("nsacr'rst",14),ln 13,ln 11,(Word_Lib.mk_wordT 3)),
            mop(Cast w1,call("NSACR.NSASEDIS",HOLogic.boolT,var("x",@{typ NSACR}),@{theory})),
            mop(Cast w1,call("NSACR.NSD32DIS",HOLogic.boolT,var("x",@{typ NSACR}),@{theory})),
            call("NSACR.cp",(Word_Lib.mk_wordT 14),var("x",@{typ NSACR}),@{theory})])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'NSACR",
   close(tp[var_a w32,var("x",@{typ NSACR})],call("reg'NSACR",w32,var("x",@{typ NSACR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'NSACR",
   close
     (tp[var_a @{typ NSACR},var_w("x",32)],call("rec'NSACR",@{typ NSACR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'HCR",
   close
     (var_w("x",32),
      record
        ("HCR",
         [bop(Bit,var_w("x",32),ln 5),ex(var_w("x",32),ln 11,ln 10,(Word_Lib.mk_wordT 2)),
          bop(Bit,var_w("x",32),ln 12),bop(Bit,var_w("x",32),ln 9),bop(Bit,var_w("x",32),ln 3),
          bop(Bit,var_w("x",32),ln 4),bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 1),
          bop(Bit,var_w("x",32),ln 21),bop(Bit,var_w("x",32),ln 27),
          ex(var_w("x",32),ln 18,ln 15,w4),bop(Bit,var_w("x",32),ln 20),
          bop(Bit,var_w("x",32),ln 23),bop(Bit,var_w("x",32),ln 24),bop(Bit,var_w("x",32),ln 19),
          bop(Bit,var_w("x",32),ln 22),bop(Bit,var_w("x",32),ln 25),bop(Bit,var_w("x",32),ln 26),
          bop(Bit,var_w("x",32),ln 14),bop(Bit,var_w("x",32),ln 13),bop(Bit,var_w("x",32),ln 8),
          bop(Bit,var_w("x",32),ln 6),bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 0),
          ex(var_w("x",32),ln 31,ln 28,w4)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'HCR",
   close
     (var("x",@{typ HCR}),
      cc[call("HCR.hcr'rst",w4,var("x",@{typ HCR}),@{theory}),
         mop(Cast w1,call("HCR.TGE",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TVM",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TTLB",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TPU",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TPC",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TSW",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TAC",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TIDCP",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TSC",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         call("HCR.TID",w4,var("x",@{typ HCR}),@{theory}),
         mop(Cast w1,call("HCR.TWE",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.TWI",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.DC",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         call("HCR.BSU",(Word_Lib.mk_wordT 2),var("x",@{typ HCR}),@{theory}),
         mop(Cast w1,call("HCR.FB",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.VA",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.VI",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.VF",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.AMO",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.IMO",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.FMO",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.PTW",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.SWIO",HOLogic.boolT,var("x",@{typ HCR}),@{theory})),
         mop(Cast w1,call("HCR.VM",HOLogic.boolT,var("x",@{typ HCR}),@{theory}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'HCR",
   close(tp[var_a w32,var("x",@{typ HCR})],call("reg'HCR",w32,var("x",@{typ HCR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'HCR",
   close(tp[var_a @{typ HCR},var_w("x",32)],call("rec'HCR",@{typ HCR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("ProcessorID",close(var_a HOLogic.unitT,li 0))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("IsExternalAbort",close(var_a HOLogic.unitT,lx HOLogic.boolT))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("IsSecure",
   close
     (var_a HOLogic.unitT,
      mb(call("HaveSecurityExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mu(mop(Not,var_b"v"),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",mu(lt,qTy),
                      mb(mr(close
                              (var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ CP15}),
                            mb(mb(mb(mu(call("CP15.SCR",@{typ SCR},var("v",@{typ CP15}),@{theory}),
                                        qTy),
                                     close
                                       (var("v",@{typ SCR}),
                                        mu(call
                                             ("SCR.NS",HOLogic.boolT,var("v",@{typ SCR}),@{theory}),
                                           qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",mu(lt,qTy),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mu(call
                                                    ("PSR.M",(Word_Lib.mk_wordT 5),
                                                     var("v",@{typ PSR}),@{theory}),qTy),
                                               close(var_w("v",5),mu(eq(var_w("v",5),lw(22,5)),qTy)))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UnalignedSupport",
   close
     (var_a HOLogic.unitT,
      mb(call("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
         close
           (var_n"v",
            mb(mr(close(var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
               close
                 (var("v0",@{typ CP15}),
                  mb(mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v0",@{typ CP15}),@{theory}),qTy),
                           close
                             (var("v",@{typ SCTLR}),
                              mu(call("SCTLR.U",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),qTy))),
                        close(var_b"v0",mu(bop(And,eq(var_n"v",ln 6),var_b"v0"),qTy))),
                     close(var_b"v0",mu(bop(Or,bop(Ge,var_n"v",ln 7),var_b"v0"),qTy)))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BadMode",
   close
     (var_w("mode",5),
      itb([(eq(var_w("mode",5),lw(16,5)),mu(lf,qTy)),(eq(var_w("mode",5),lw(17,5)),mu(lf,qTy)),
           (eq(var_w("mode",5),lw(18,5)),mu(lf,qTy)),(eq(var_w("mode",5),lw(19,5)),mu(lf,qTy)),
           (eq(var_w("mode",5),lw(22,5)),
            mb(call
                 ("HaveSecurityExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
               close(var_b"v",mu(mop(Not,var_b"v"),qTy)))),
           (eq(var_w("mode",5),lw(23,5)),mu(lf,qTy)),
           (eq(var_w("mode",5),lw(26,5)),
            mb(call("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
               close(var_b"v",mu(mop(Not,var_b"v"),qTy)))),
           (eq(var_w("mode",5),lw(27,5)),mu(lf,qTy)),(eq(var_w("mode",5),lw(31,5)),mu(lf,qTy))],
          mu(lt,qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CurrentModeIsNotUser",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                     close
                       (var_w("v",5),
                        call
                          ("BadMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                           var_w("v",5),@{theory}))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(mr(close
                                 (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ PSR}),
                               mb(mb(mb(mb(mu(call
                                                ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                                 @{theory}),qTy),
                                           close
                                             (var_w("v",5),
                                              mu(mop(Cast(@{typ string}),var_w("v",5)),qTy))),
                                        close(var_s"v",mu(cc[ls"BadMode: ",var_s"v"],qTy))),
                                     close
                                       (var_s"v",
                                        mu(call
                                             ("exception.UNPREDICTABLE",@{typ exception},var_s"v",
                                              @{theory}),qTy))),
                                  close
                                    (var("v",@{typ exception}),
                                     call
                                       ("raise'exception",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ exception}),@{theory}))))),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ PSR}),
                        mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),
                                 qTy),close(var_w("v",5),mu(eq(var_w("v",5),lw(16,5)),qTy))),
                           close(var_b"v",mu(mop(Not,var_b"v"),qTy)))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CurrentModeIsUserOrSystem",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                     close
                       (var_w("v",5),
                        call
                          ("BadMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                           var_w("v",5),@{theory}))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(mr(close
                                 (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ PSR}),
                               mb(mb(mb(mb(mu(call
                                                ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                                 @{theory}),qTy),
                                           close
                                             (var_w("v",5),
                                              mu(mop(Cast(@{typ string}),var_w("v",5)),qTy))),
                                        close(var_s"v",mu(cc[ls"BadMode: ",var_s"v"],qTy))),
                                     close
                                       (var_s"v",
                                        mu(call
                                             ("exception.UNPREDICTABLE",@{typ exception},var_s"v",
                                              @{theory}),qTy))),
                                  close
                                    (var("v",@{typ exception}),
                                     call
                                       ("raise'exception",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ exception}),@{theory}))))),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ PSR}),
                        mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                           close(var_w("v",5),mu(bop(In,var_w("v",5),sl[lw(16,5),lw(31,5)]),qTy)))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CurrentModeIsHyp",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                     close
                       (var_w("v",5),
                        call
                          ("BadMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                           var_w("v",5),@{theory}))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(mr(close
                                 (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ PSR}),
                               mb(mb(mb(mb(mu(call
                                                ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                                 @{theory}),qTy),
                                           close
                                             (var_w("v",5),
                                              mu(mop(Cast(@{typ string}),var_w("v",5)),qTy))),
                                        close(var_s"v",mu(cc[ls"BadMode: ",var_s"v"],qTy))),
                                     close
                                       (var_s"v",
                                        mu(call
                                             ("exception.UNPREDICTABLE",@{typ exception},var_s"v",
                                              @{theory}),qTy))),
                                  close
                                    (var("v",@{typ exception}),
                                     call
                                       ("raise'exception",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ exception}),@{theory}))))),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ PSR}),
                        mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                           close(var_w("v",5),mu(eq(var_w("v",5),lw(26,5)),qTy)))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("IntegerZeroDivideTrappingEnabled",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ CP15}),
            mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),qTy),
               close
                 (var("v",@{typ SCTLR}),
                  mu(call("SCTLR.DZ",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ISETSTATE",
   mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ PSR}),
         mb(mb(mu(call("PSR.J",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
               close(var_b"v",mu(mop(Cast w1,var_b"v"),qTy))),
            close
              (var_w("v",1),
               mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                  close
                    (var("v0",@{typ PSR}),
                     mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v0",@{typ PSR}),@{theory}),qTy),
                           close(var_b"v",mu(mop(Cast w1,var_b"v"),qTy))),
                        close(var_w("v0",1),mu(cc[var_w("v",1),var_w("v0",1)],qTy))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'ISETSTATE",
   close
     (var_w("value",2),
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(tp[var("v",@{typ PSR}),bop(Bit,var_w("value",2),ln 1)],qTy),
                     close
                       (var("v",@{typ "PSR \<times> bool"}),
                        mu(rupd("PSR.J",var("v",@{typ "PSR \<times> bool"}),@{theory}),qTy))),
                  close
                    (var("v",@{typ PSR}),
                     mw(close
                          (var("s",qTy),
                           rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ PSR}),
                        mb(mb(mu(tp[var("v",@{typ PSR}),bop(Bit,var_w("value",2),ln 0)],qTy),
                              close
                                (var("v",@{typ "PSR \<times> bool"}),
                                 mu(rupd("PSR.T",var("v",@{typ "PSR \<times> bool"}),@{theory}),qTy))),
                           close
                             (var("v",@{typ PSR}),
                              mw(close
                                   (var("s",qTy),
                                    rupd
                                      ("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CurrentInstrSet",
   close
     (var_a HOLogic.unitT,
      mb(const("ISETSTATE",@{typ "state \<Rightarrow> (2 word \<times> state)"},@{theory}),
         close
           (var_w("x",2),
            mu(itb([(eq(var_w("x",2),lw(0,2)),lc("InstrSet_ARM","InstrSet",@{theory})),
                    (eq(var_w("x",2),lw(1,2)),lc("InstrSet_Thumb","InstrSet",@{theory})),
                    (eq(var_w("x",2),lw(2,2)),lc("InstrSet_Jazelle","InstrSet",@{theory})),
                    (eq(var_w("x",2),lw(3,2)),lc("InstrSet_ThumbEE","InstrSet",@{theory}))],
                   lx @{typ InstrSet}),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SelectInstrSet",
   close
     (var("iset",@{typ InstrSet}),
      cs(var("iset",@{typ InstrSet}),
         [(lc("InstrSet_ARM","InstrSet",@{theory}),
           mb(call
                ("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                 @{theory}),
              close
                (var("v",@{typ InstrSet}),
                 mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ThumbEE","InstrSet",@{theory})),qTy),
                    close
                      (var_b"b",
                       ite(var_b"b",
                           call
                             ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              call
                                ("exception.UNPREDICTABLE",@{typ exception},ls"SelectInstrSet",
                                 @{theory}),@{theory}),
                           call
                             ("write'ISETSTATE",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              lw(0,2),@{theory}))))))),
          (lc("InstrSet_Thumb","InstrSet",@{theory}),
           call
             ("write'ISETSTATE",@{typ "state \<Rightarrow> (unit \<times> state)"},lw(1,2),@{theory})),
          (lc("InstrSet_Jazelle","InstrSet",@{theory}),
           call
             ("write'ISETSTATE",@{typ "state \<Rightarrow> (unit \<times> state)"},lw(2,2),@{theory})),
          (lc("InstrSet_ThumbEE","InstrSet",@{theory}),
           call
             ("write'ISETSTATE",@{typ "state \<Rightarrow> (unit \<times> state)"},lw(3,2),@{theory}))],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ITSTATE",
   mb(call("HaveThumb2",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
      close
        (var_b"b",
         ite(var_b"b",
             mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                close(var("v",@{typ PSR}),mu(call("PSR.IT",w8,var("v",@{typ PSR}),@{theory}),qTy))),
             mu(lw(0,8),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'ITSTATE",
   close
     (var_w("value",8),
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(tp[var("v",@{typ PSR}),var_w("value",8)],qTy),
                  close
                    (var("v",@{typ "PSR \<times> 8 word"}),
                     mu(rupd("PSR.IT",var("v",@{typ "PSR \<times> 8 word"}),@{theory}),qTy))),
               close
                 (var("v",@{typ PSR}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ITAdvance",
   close
     (var_a HOLogic.unitT,
      mb(call("HaveThumb2",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   mb(mr(close
                           (var("s",qTy),
                            call("state.Encoding",@{typ Encoding},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ Encoding}),
                         mb(mu(eq(var("v",@{typ Encoding}),lc("Encoding_ARM","Encoding",@{theory})),
                               qTy),close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),mu(lf,qTy)),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const
                           ("ITSTATE",@{typ "state \<Rightarrow> (8 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",8),
                            mb(mb(mu(ex(var_w("v",8),ln 2,ln 0,(Word_Lib.mk_wordT 3)),qTy),
                                  close(var_w("v",3),mu(eq(var_w("v",3),lw(0,3)),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("write'ITSTATE",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},lw(0,8),
                                         @{theory}),
                                      mb(const
                                           ("ITSTATE",
                                            @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                            @{theory}),
                                         close
                                           (var_w("w",8),
                                            mb(const
                                                 ("ITSTATE",
                                                  @{typ
                                                  "state \<Rightarrow> (8 word \<times> state)"},
                                                  @{theory}),
                                               close
                                                 (var_w("v",8),
                                                  mb(mb(mb(mu(ex(var_w("v",8),ln 4,ln 0,
                                                                 (Word_Lib.mk_wordT 5)),qTy),
                                                           close
                                                             (var_w("v",5),
                                                              mu(bop(Lsl,var_w("v",5),ln 1),qTy))),
                                                        close
                                                          (var_w("v",5),
                                                           mu(bfi(ln 4,ln 0,var_w("v",5),
                                                                  var_w("w",8)),qTy))),
                                                     close
                                                       (var_w("v",8),
                                                        call
                                                          ("write'ITSTATE",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},var_w("v",8),
                                                           @{theory})))))))))))),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("InITBlock",
   close
     (var_a HOLogic.unitT,
      mb(const("ITSTATE",@{typ "state \<Rightarrow> (8 word \<times> state)"},@{theory}),
         close
           (var_w("v",8),
            mb(mb(mu(ex(var_w("v",8),ln 3,ln 0,w4),qTy),
                  close(var_w("v",4),mu(eq(var_w("v",4),lw(0,4)),qTy))),
               close(var_b"v",mu(mop(Not,var_b"v"),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LastInITBlock",
   close
     (var_a HOLogic.unitT,
      mb(const("ITSTATE",@{typ "state \<Rightarrow> (8 word \<times> state)"},@{theory}),
         close
           (var_w("v",8),
            mb(mu(ex(var_w("v",8),ln 3,ln 0,w4),qTy),
               close(var_w("v",4),mu(eq(var_w("v",4),lw(8,4)),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ThumbCondition",
   close
     (var_a HOLogic.unitT,
      mb(const("ITSTATE",@{typ "state \<Rightarrow> (8 word \<times> state)"},@{theory}),
         close
           (var_w("v",8),
            mb(mu(eq(var_w("v",8),lw(0,8)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",mu(lw(14,4),qTy),
                      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ PSR}),
                            mb(mb(mb(mb(mu(call("PSR.IT",w8,var("v",@{typ PSR}),@{theory}),qTy),
                                        close(var_w("v",8),mu(ex(var_w("v",8),ln 3,ln 0,w4),qTy))),
                                     close(var_w("v",4),mu(eq(var_w("v",4),lw(0,4)),qTy))),
                                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mu(call("PSR.IT",w8,var("v",@{typ PSR}),@{theory}),
                                                  qTy),
                                               close
                                                 (var_w("v",8),mu(ex(var_w("v",8),ln 7,ln 4,w4),qTy))))),
                                      call
                                        ("raise'exception",
                                         @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                         call
                                           ("exception.UNPREDICTABLE",@{typ exception},
                                            ls"ThumbCondition",@{theory}),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BigEndian",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),mu(call("PSR.E",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("SetExclusiveMonitors",close(tp[var_w("address",32),var_n"n"],lu))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("ExclusiveMonitorsPass",close(tp[var_w("address",32),var_n"n"],lx HOLogic.boolT))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("ClearExclusiveLocal",close(var_i"id",lu))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CurrentCond",
   close
     (var_a HOLogic.unitT,
      mr(close(var("s",qTy),call("state.CurrentCondition",w4,var("s",qTy),@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ConditionPassed",
   close
     (var_a HOLogic.unitT,
      mb(call("CurrentCond",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
         close
           (var_w("cond",4),
            mb(cs(ex(var_w("cond",4),ln 3,ln 1,(Word_Lib.mk_wordT 3)),
                  [(var_w("v",3),
                    itb([(eq(var_w("v",3),lw(0,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mu(call("PSR.Z",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy)))),
                         (eq(var_w("v",3),lw(1,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy)))),
                         (eq(var_w("v",3),lw(2,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mu(call("PSR.N",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy)))),
                         (eq(var_w("v",3),lw(3,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mu(call("PSR.V",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy)))),
                         (eq(var_w("v",3),lw(4,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mu(call
                                                        ("PSR.Z",HOLogic.boolT,var("v",@{typ PSR}),
                                                         @{theory}),qTy),
                                                   close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),
                                          mu(lf,qTy))))))),
                         (eq(var_w("v",3),lw(5,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mb(mu(call("PSR.N",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                                   close
                                     (var_b"v",
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v0",@{typ PSR}),
                                            mb(mu(call
                                                    ("PSR.V",HOLogic.boolT,var("v0",@{typ PSR}),
                                                     @{theory}),qTy),
                                               close(var_b"v0",mu(eq(var_b"v",var_b"v0"),qTy)))))))))),
                         (eq(var_w("v",3),lw(6,3)),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mb(mb(mu(call("PSR.N",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),
                                         qTy),
                                      close
                                        (var_b"v",
                                         mb(mr(close
                                                 (var("s",qTy),
                                                  call
                                                    ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                            close
                                              (var("v0",@{typ PSR}),
                                               mb(mu(call
                                                       ("PSR.V",HOLogic.boolT,var("v0",@{typ PSR}),
                                                        @{theory}),qTy),
                                                  close(var_b"v0",mu(eq(var_b"v",var_b"v0"),qTy))))))),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mu(call
                                                        ("PSR.Z",HOLogic.boolT,var("v",@{typ PSR}),
                                                         @{theory}),qTy),
                                                   close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),
                                          mu(lf,qTy))))))),(eq(var_w("v",3),lw(7,3)),mu(lt,qTy))],
                        lx(@{typ "state \<Rightarrow> (bool \<times> state)"})))],@{context}),
               close
                 (var_b"result",
                  mu(ite(bop(And,bop(Bit,var_w("cond",4),ln 0),mop(Not,eq(var_w("cond",4),lw(15,4)))),
                         mop(Not,var_b"result"),var_b"result"),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SPSR",
   mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ PSR}),
         mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
               close
                 (var_w("v",5),
                  call
                    ("BadMode",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("v",5),
                     @{theory}))),
            close
              (var_b"b",
               ite(var_b"b",
                   mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ PSR}),
                         mb(mb(mb(mb(mu(call
                                          ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                           @{theory}),qTy),
                                     close
                                       (var_w("v",5),mu(mop(Cast(@{typ string}),var_w("v",5)),qTy))),
                                  close(var_s"v",mu(cc[ls"SPSR: BadMode: ",var_s"v"],qTy))),
                               close
                                 (var_s"v",
                                  mu(call
                                       ("exception.UNPREDICTABLE",@{typ exception},var_s"v",
                                        @{theory}),qTy))),
                            close
                              (var("v",@{typ exception}),
                               call
                                 ("raise'exception",
                                  @{typ "state \<Rightarrow> (PSR \<times> state)"},
                                  var("v",@{typ exception}),@{theory}))))),
                   mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ PSR}),
                         mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                            close
                              (var_w("x",5),
                               itb([(eq(var_w("x",5),lw(17,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_fiq",@{typ PSR},var("s",qTy),@{theory})))),
                                    (eq(var_w("x",5),lw(18,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_irq",@{typ PSR},var("s",qTy),@{theory})))),
                                    (eq(var_w("x",5),lw(19,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_svc",@{typ PSR},var("s",qTy),@{theory})))),
                                    (eq(var_w("x",5),lw(22,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_mon",@{typ PSR},var("s",qTy),@{theory})))),
                                    (eq(var_w("x",5),lw(23,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_abt",@{typ PSR},var("s",qTy),@{theory})))),
                                    (eq(var_w("x",5),lw(26,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_hyp",@{typ PSR},var("s",qTy),@{theory})))),
                                    (eq(var_w("x",5),lw(27,5)),
                                     mr(close
                                          (var("s",qTy),
                                           call("state.SPSR_und",@{typ PSR},var("s",qTy),@{theory}))))],
                                   call
                                     ("raise'exception",
                                      @{typ "state \<Rightarrow> (PSR \<times> state)"},
                                      call
                                        ("exception.UNPREDICTABLE",@{typ exception},ls"SPSR",
                                         @{theory}),@{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'SPSR",
   close
     (var("value",@{typ PSR}),
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_w("v",5),
                     call
                       ("BadMode",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("v",5),
                        @{theory}))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ PSR}),
                            mb(mb(mb(mb(mu(call
                                             ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                              @{theory}),qTy),
                                        close
                                          (var_w("v",5),
                                           mu(mop(Cast(@{typ string}),var_w("v",5)),qTy))),
                                     close(var_s"v",mu(cc[ls"SPSR: BadMode: ",var_s"v"],qTy))),
                                  close
                                    (var_s"v",
                                     mu(call
                                          ("exception.UNPREDICTABLE",@{typ exception},var_s"v",
                                           @{theory}),qTy))),
                               close
                                 (var("v",@{typ exception}),
                                  call
                                    ("raise'exception",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ exception}),@{theory}))))),
                      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ PSR}),
                            mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),
                                  qTy),
                               close
                                 (var_w("x",5),
                                  itb([(eq(var_w("x",5),lw(17,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_fiq",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory})))),
                                       (eq(var_w("x",5),lw(18,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_irq",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory})))),
                                       (eq(var_w("x",5),lw(19,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_svc",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory})))),
                                       (eq(var_w("x",5),lw(22,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_mon",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory})))),
                                       (eq(var_w("x",5),lw(23,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_abt",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory})))),
                                       (eq(var_w("x",5),lw(26,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_hyp",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory})))),
                                       (eq(var_w("x",5),lw(27,5)),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.SPSR_und",
                                                 tp[var("s",qTy),var("value",@{typ PSR})],@{theory}))))],
                                      call
                                        ("raise'exception",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         call
                                           ("exception.UNPREDICTABLE",@{typ exception},ls"SPSR",
                                            @{theory}),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CPSRWriteByInstr",
   close
     (tp[var_w("value",32),var_w("bytemask",4),var_b"is_excpt_return"],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"privileged",
            mb(mr(close(var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ CP15}),
                  mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),qTy),
                        close
                          (var("v",@{typ SCTLR}),
                           mu(call("SCTLR.NMFI",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),qTy))),
                     close
                       (var_b"nmfi",
                        mb(ite(bop(Bit,var_w("bytemask",4),ln 3),
                               mb(mr(close
                                       (var("s",qTy),
                                        call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                  close
                                    (var("v",@{typ PSR}),
                                     mb(mb(mu(call("reg'PSR",w32,var("v",@{typ PSR}),@{theory}),qTy),
                                           close
                                             (var_w("w",32),
                                              mb(mr(close
                                                      (var("s",qTy),
                                                       call
                                                         ("state.CPSR",@{typ PSR},var("s",qTy),
                                                          @{theory}))),
                                                 close
                                                   (var("v",@{typ PSR}),
                                                    mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                bfi(ln 31,ln 27,
                                                                    ex(var_w("value",32),ln 31,
                                                                       ln 27,(Word_Lib.mk_wordT 5)),
                                                                    var_w("w",32))],qTy),
                                                          close
                                                            (var("v",@{typ "PSR \<times> 32 word"}),
                                                             mu(call
                                                                  ("write'reg'PSR",@{typ PSR},
                                                                   var("v",
                                                                       @{typ "PSR \<times> 32 word"}),
                                                                   @{theory}),qTy))),
                                                       close
                                                         (var("v",@{typ PSR}),
                                                          mw(close
                                                               (var("s",qTy),
                                                                rupd
                                                                  ("state.CPSR",
                                                                   tp[var("s",qTy),
                                                                      var("v",@{typ PSR})],@{theory}))))))))),
                                        close
                                          (var_a HOLogic.unitT,
                                           ite(var_b"is_excpt_return",
                                               mb(mr(close
                                                       (var("s",qTy),
                                                        call
                                                          ("state.CPSR",@{typ PSR},var("s",qTy),
                                                           @{theory}))),
                                                  close
                                                    (var("v",@{typ PSR}),
                                                     mb(mu(call
                                                             ("reg'PSR",w32,var("v",@{typ PSR}),
                                                              @{theory}),qTy),
                                                        close
                                                          (var_w("w",32),
                                                           mb(mr(close
                                                                   (var("s",qTy),
                                                                    call
                                                                      ("state.CPSR",@{typ PSR},
                                                                       var("s",qTy),@{theory}))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                             bfi(ln 26,ln 24,
                                                                                 ex(var_w("value",32),
                                                                                    ln 26,ln 24,
                                                                                    (Word_Lib.mk_wordT 3)),
                                                                                 var_w("w",32))],qTy),
                                                                       close
                                                                         (var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          mu(call
                                                                               ("write'reg'PSR",
                                                                                @{typ PSR},
                                                                                var("v",
                                                                                    @{typ
                                                                                    "PSR \<times>
                                                                                     32 word"}),
                                                                                @{theory}),qTy))),
                                                                    close
                                                                      (var("v",@{typ PSR}),
                                                                       mw(close
                                                                            (var("s",qTy),
                                                                             rupd
                                                                               ("state.CPSR",
                                                                                tp[var("s",qTy),
                                                                                   var("v",
                                                                                       @{typ PSR})],
                                                                                @{theory}))))))))))),
                                               mu(lu,qTy)))))),mu(lu,qTy)),
                           close
                             (var_a HOLogic.unitT,
                              mb(ite(bop(Bit,var_w("bytemask",4),ln 2),
                                     mb(mr(close
                                             (var("s",qTy),
                                              call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                        close
                                          (var("v",@{typ PSR}),
                                           mb(mu(call("reg'PSR",w32,var("v",@{typ PSR}),@{theory}),
                                                 qTy),
                                              close
                                                (var_w("w",32),
                                                 mb(mr(close
                                                         (var("s",qTy),
                                                          call
                                                            ("state.CPSR",@{typ PSR},var("s",qTy),
                                                             @{theory}))),
                                                    close
                                                      (var("v",@{typ PSR}),
                                                       mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                   bfi(ln 19,ln 16,
                                                                       ex(var_w("value",32),ln 19,
                                                                          ln 16,w4),var_w("w",32))],
                                                                qTy),
                                                             close
                                                               (var("v",
                                                                    @{typ "PSR \<times> 32 word"}),
                                                                mu(call
                                                                     ("write'reg'PSR",@{typ PSR},
                                                                      var("v",
                                                                          @{typ
                                                                          "PSR \<times> 32 word"}),
                                                                      @{theory}),qTy))),
                                                          close
                                                            (var("v",@{typ PSR}),
                                                             mw(close
                                                                  (var("s",qTy),
                                                                   rupd
                                                                     ("state.CPSR",
                                                                      tp[var("s",qTy),
                                                                         var("v",@{typ PSR})],
                                                                      @{theory}))))))))))),
                                     mu(lu,qTy)),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(ite(bop(Bit,var_w("bytemask",4),ln 1),
                                           mb(ite(var_b"is_excpt_return",
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.CPSR",@{typ PSR},var("s",qTy),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ PSR}),
                                                        mb(mu(call
                                                                ("reg'PSR",w32,var("v",@{typ PSR}),
                                                                 @{theory}),qTy),
                                                           close
                                                             (var_w("w",32),
                                                              mb(mr(close
                                                                      (var("s",qTy),
                                                                       call
                                                                         ("state.CPSR",@{typ PSR},
                                                                          var("s",qTy),@{theory}))),
                                                                 close
                                                                   (var("v",@{typ PSR}),
                                                                    mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                                bfi(ln 15,ln 10,
                                                                                    ex(var_w("value",32),
                                                                                       ln 15,ln 10,
                                                                                       (Word_Lib.mk_wordT 6)),
                                                                                    var_w("w",32))],
                                                                             qTy),
                                                                          close
                                                                            (var("v",
                                                                                 @{typ
                                                                                 "PSR \<times>
                                                                                  32 word"}),
                                                                             mu(call
                                                                                  ("write'reg'PSR",
                                                                                   @{typ PSR},
                                                                                   var("v",
                                                                                       @{typ
                                                                                       "PSR \<times>
                                                                                        32 word"}),
                                                                                   @{theory}),qTy))),
                                                                       close
                                                                         (var("v",@{typ PSR}),
                                                                          mw(close
                                                                               (var("s",qTy),
                                                                                rupd
                                                                                  ("state.CPSR",
                                                                                   tp[var("s",qTy),
                                                                                      var("v",
                                                                                          @{typ PSR})],
                                                                                   @{theory}))))))))))),
                                                  mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mb(mr(close
                                                         (var("s",qTy),
                                                          call
                                                            ("state.CPSR",@{typ PSR},var("s",qTy),
                                                             @{theory}))),
                                                    close
                                                      (var("v",@{typ PSR}),
                                                       mb(mb(mu(call
                                                                  ("reg'PSR",w32,
                                                                   var("v",@{typ PSR}),@{theory}),
                                                                qTy),
                                                             close
                                                               (var_w("w",32),
                                                                mb(mr(close
                                                                        (var("s",qTy),
                                                                         call
                                                                           ("state.CPSR",@{typ PSR},
                                                                            var("s",qTy),@{theory}))),
                                                                   close
                                                                     (var("v",@{typ PSR}),
                                                                      mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                                  bfi(ln 9,ln 9,
                                                                                      mop(Cast w1,
                                                                                          bop(Bit,
                                                                                              var_w("value",32),
                                                                                              ln 9)),
                                                                                      var_w("w",32))],
                                                                               qTy),
                                                                            close
                                                                              (var("v",
                                                                                   @{typ
                                                                                   "PSR \<times>
                                                                                    32 word"}),
                                                                               mu(call
                                                                                    ("write'reg'PSR",
                                                                                     @{typ PSR},
                                                                                     var("v",
                                                                                         @{typ
                                                                                         "PSR \<times>
                                                                                          32 word"}),
                                                                                     @{theory}),qTy))),
                                                                         close
                                                                           (var("v",@{typ PSR}),
                                                                            mw(close
                                                                                 (var("s",qTy),
                                                                                  rupd
                                                                                    ("state.CPSR",
                                                                                     tp[var("s",qTy),
                                                                                        var("v",
                                                                                            @{typ PSR})],
                                                                                     @{theory}))))))))),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mb(call
                                                                  ("IsSecure",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v",
                                                                   mb(mb(ite(var_b"v",mu(lt,qTy),
                                                                             mb(mr(close
                                                                                     (var("s",qTy),
                                                                                      call
                                                                                        ("state.CP15",
                                                                                         @{typ CP15},
                                                                                         var("s",qTy),
                                                                                         @{theory}))),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ CP15}),
                                                                                   mb(mu(call
                                                                                           ("CP15.SCR",
                                                                                            @{typ SCR},
                                                                                            var("v",
                                                                                                @{typ CP15}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ SCR}),
                                                                                         mu(call
                                                                                              ("SCR.AW",
                                                                                               HOLogic.boolT,
                                                                                               var("v",
                                                                                                   @{typ SCR}),
                                                                                               @{theory}),
                                                                                            qTy)))))),
                                                                         close
                                                                           (var_b"v",
                                                                            mu(bop(And,
                                                                                   var_b"privileged",
                                                                                   var_b"v"),qTy))),
                                                                      close
                                                                        (var_b"b",
                                                                         ite(var_b"b",
                                                                             mb(mr(close
                                                                                     (var("s",qTy),
                                                                                      call
                                                                                        ("state.CPSR",
                                                                                         @{typ PSR},
                                                                                         var("s",qTy),
                                                                                         @{theory}))),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ PSR}),
                                                                                   mb(mu(call
                                                                                           ("reg'PSR",
                                                                                            w32,
                                                                                            var("v",
                                                                                                @{typ PSR}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var_w("w",32),
                                                                                         mb(mr(close
                                                                                                 (var("s",
                                                                                                      qTy),
                                                                                                  call
                                                                                                    ("state.CPSR",
                                                                                                     @{typ PSR},
                                                                                                     var("s",
                                                                                                         qTy),
                                                                                                     @{theory}))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ PSR}),
                                                                                               mb(mb(mu(tp[var("v",
                                                                                                               @{typ PSR}),
                                                                                                           bfi(ln
                                                                                                                8,
                                                                                                               ln
                                                                                                                8,
                                                                                                               mop(Cast
                                                                                                                     w1,
                                                                                                                   bop(Bit,
                                                                                                                       var_w("value",32),
                                                                                                                       ln
                                                                                                                        8)),
                                                                                                               var_w("w",32))],
                                                                                                        qTy),
                                                                                                     close
                                                                                                       (var("v",
                                                                                                            @{typ
                                                                                                            "PSR \<times>
                                                                                                             32 word"}),
                                                                                                        mu(call
                                                                                                             ("write'reg'PSR",
                                                                                                              @{typ PSR},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "PSR \<times>
                                                                                                                   32 word"}),
                                                                                                              @{theory}),
                                                                                                           qTy))),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ PSR}),
                                                                                                     mw(close
                                                                                                          (var("s",
                                                                                                               qTy),
                                                                                                           rupd
                                                                                                             ("state.CPSR",
                                                                                                              tp[var("s",
                                                                                                                     qTy),
                                                                                                                 var("v",
                                                                                                                     @{typ PSR})],
                                                                                                              @{theory}))))))))))),
                                                                             mu(lu,qTy)))))))))))),
                                           mu(lu,qTy)),
                                       close
                                         (var_a HOLogic.unitT,
                                          ite(bop(Bit,var_w("bytemask",4),ln 0),
                                              mb(ite(var_b"privileged",
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.CPSR",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mu(call
                                                                   ("reg'PSR",w32,
                                                                    var("v",@{typ PSR}),@{theory}),
                                                                 qTy),
                                                              close
                                                                (var_w("w",32),
                                                                 mb(mr(close
                                                                         (var("s",qTy),
                                                                          call
                                                                            ("state.CPSR",
                                                                             @{typ PSR},
                                                                             var("s",qTy),@{theory}))),
                                                                    close
                                                                      (var("v",@{typ PSR}),
                                                                       mb(mb(mu(tp[var("v",
                                                                                       @{typ PSR}),
                                                                                   bfi(ln 7,ln 7,
                                                                                       mop(Cast w1,
                                                                                           bop(Bit,
                                                                                               var_w("value",32),
                                                                                               ln 7)),
                                                                                       var_w("w",32))],
                                                                                qTy),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ
                                                                                    "PSR \<times>
                                                                                     32 word"}),
                                                                                mu(call
                                                                                     ("write'reg'PSR",
                                                                                      @{typ PSR},
                                                                                      var("v",
                                                                                          @{typ
                                                                                          "PSR \<times>
                                                                                           32 word"}),
                                                                                      @{theory}),qTy))),
                                                                          close
                                                                            (var("v",@{typ PSR}),
                                                                             mw(close
                                                                                  (var("s",qTy),
                                                                                   rupd
                                                                                     ("state.CPSR",
                                                                                      tp[var("s",qTy),
                                                                                         var("v",
                                                                                             @{typ PSR})],
                                                                                      @{theory}))))))))))),
                                                     mu(lu,qTy)),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    mb(call
                                                         ("IsSecure",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mb(mb(mb(ite(var_b"v",mu(lt,qTy),
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CP15",
                                                                                      @{typ CP15},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ CP15}),
                                                                                mb(mb(mu(call
                                                                                           ("CP15.SCR",
                                                                                            @{typ SCR},
                                                                                            var("v",
                                                                                                @{typ CP15}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ SCR}),
                                                                                         mu(call
                                                                                              ("SCR.FW",
                                                                                               HOLogic.boolT,
                                                                                               var("v",
                                                                                                   @{typ SCR}),
                                                                                               @{theory}),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      ite(var_b"b",
                                                                                          mu(lt,qTy),
                                                                                          call
                                                                                            ("HaveVirtExt",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (bool \<times>
                                                                                               state)"},
                                                                                             lu,
                                                                                             @{theory}))))))),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(bop(And,
                                                                                bop(Or,
                                                                                    mop(Not,
                                                                                        var_b"nmfi"),
                                                                                    mop(Not,
                                                                                        bop(Bit,
                                                                                            var_w("value",32),
                                                                                            ln 6))),
                                                                                var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"v",
                                                                      mu(bop(And,var_b"privileged",
                                                                             var_b"v"),qTy))),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",
                                                                       mb(mr(close
                                                                               (var("s",qTy),
                                                                                call
                                                                                  ("state.CPSR",
                                                                                   @{typ PSR},
                                                                                   var("s",qTy),
                                                                                   @{theory}))),
                                                                          close
                                                                            (var("v",@{typ PSR}),
                                                                             mb(mu(call
                                                                                     ("reg'PSR",w32,
                                                                                      var("v",
                                                                                          @{typ PSR}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_w("w",32),
                                                                                   mb(mr(close
                                                                                           (var("s",
                                                                                                qTy),
                                                                                            call
                                                                                              ("state.CPSR",
                                                                                               @{typ PSR},
                                                                                               var("s",
                                                                                                   qTy),
                                                                                               @{theory}))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ PSR}),
                                                                                         mb(mb(mu(tp[var("v",
                                                                                                         @{typ PSR}),
                                                                                                     bfi(ln
                                                                                                          6,
                                                                                                         ln
                                                                                                          6,
                                                                                                         mop(Cast
                                                                                                               w1,
                                                                                                             bop(Bit,
                                                                                                                 var_w("value",32),
                                                                                                                 ln
                                                                                                                  6)),
                                                                                                         var_w("w",32))],
                                                                                                  qTy),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "PSR \<times>
                                                                                                       32 word"}),
                                                                                                  mu(call
                                                                                                       ("write'reg'PSR",
                                                                                                        @{typ PSR},
                                                                                                        var("v",
                                                                                                            @{typ
                                                                                                            "PSR \<times>
                                                                                                             32 word"}),
                                                                                                        @{theory}),
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ PSR}),
                                                                                               mw(close
                                                                                                    (var("s",
                                                                                                         qTy),
                                                                                                     rupd
                                                                                                       ("state.CPSR",
                                                                                                        tp[var("s",
                                                                                                               qTy),
                                                                                                           var("v",
                                                                                                               @{typ PSR})],
                                                                                                        @{theory}))))))))))),
                                                                       mu(lu,qTy)))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mb(ite(var_b"is_excpt_return",
                                                                       mb(mr(close
                                                                               (var("s",qTy),
                                                                                call
                                                                                  ("state.CPSR",
                                                                                   @{typ PSR},
                                                                                   var("s",qTy),
                                                                                   @{theory}))),
                                                                          close
                                                                            (var("v",@{typ PSR}),
                                                                             mb(mu(call
                                                                                     ("reg'PSR",w32,
                                                                                      var("v",
                                                                                          @{typ PSR}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_w("w",32),
                                                                                   mb(mr(close
                                                                                           (var("s",
                                                                                                qTy),
                                                                                            call
                                                                                              ("state.CPSR",
                                                                                               @{typ PSR},
                                                                                               var("s",
                                                                                                   qTy),
                                                                                               @{theory}))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ PSR}),
                                                                                         mb(mb(mu(tp[var("v",
                                                                                                         @{typ PSR}),
                                                                                                     bfi(ln
                                                                                                          5,
                                                                                                         ln
                                                                                                          5,
                                                                                                         mop(Cast
                                                                                                               w1,
                                                                                                             bop(Bit,
                                                                                                                 var_w("value",32),
                                                                                                                 ln
                                                                                                                  5)),
                                                                                                         var_w("w",32))],
                                                                                                  qTy),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "PSR \<times>
                                                                                                       32 word"}),
                                                                                                  mu(call
                                                                                                       ("write'reg'PSR",
                                                                                                        @{typ PSR},
                                                                                                        var("v",
                                                                                                            @{typ
                                                                                                            "PSR \<times>
                                                                                                             32 word"}),
                                                                                                        @{theory}),
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ PSR}),
                                                                                               mw(close
                                                                                                    (var("s",
                                                                                                         qTy),
                                                                                                     rupd
                                                                                                       ("state.CPSR",
                                                                                                        tp[var("s",
                                                                                                               qTy),
                                                                                                           var("v",
                                                                                                               @{typ PSR})],
                                                                                                        @{theory}))))))))))),
                                                                       mu(lu,qTy)),
                                                                   close
                                                                     (var_a HOLogic.unitT,
                                                                      ite(var_b"privileged",
                                                                          mb(call
                                                                               ("BadMode",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (bool \<times>
                                                                                  state)"},
                                                                                ex(var_w("value",32),
                                                                                   ln 4,ln 0,
                                                                                   (Word_Lib.mk_wordT 5)),
                                                                                @{theory}),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("raise'exception",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       call
                                                                                         ("exception.UNPREDICTABLE",
                                                                                          @{typ exception},
                                                                                          cc[ls
                                                                                              "CPSRWriteByInstr: BadMode: ",
                                                                                             mop(Cast
                                                                                                   (@{typ
                                                                                                    string}),
                                                                                                 ex(var_w("value",32),
                                                                                                    ln
                                                                                                     4,
                                                                                                    ln
                                                                                                     0,
                                                                                                    (Word_Lib.mk_wordT 5)))],
                                                                                          @{theory}),
                                                                                       @{theory}),
                                                                                    mb(call
                                                                                         ("IsSecure",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (bool \<times>
                                                                                            state)"},
                                                                                          lu,
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var_b"v",
                                                                                          mb(mb(mb(mu(mop(Not,
                                                                                                          var_b"v"),
                                                                                                      qTy),
                                                                                                   close
                                                                                                     (var_b"b",
                                                                                                      mu(bop(And,
                                                                                                             var_b"b",
                                                                                                             eq(ex(var_w("value",32),
                                                                                                                   ln
                                                                                                                    4,
                                                                                                                   ln
                                                                                                                    0,
                                                                                                                   (Word_Lib.mk_wordT 5)),
                                                                                                                lw(22,
                                                                                                                   5))),
                                                                                                         qTy))),
                                                                                                close
                                                                                                  (var_b"b",
                                                                                                   ite(var_b"b",
                                                                                                       call
                                                                                                         ("raise'exception",
                                                                                                          @{typ
                                                                                                          "state \<Rightarrow>
                                                                                                           (unit \<times>
                                                                                                            state)"},
                                                                                                          call
                                                                                                            ("exception.UNPREDICTABLE",
                                                                                                             @{typ exception},
                                                                                                             ls
                                                                                                              "CPSRWriteByInstr",
                                                                                                             @{theory}),
                                                                                                          @{theory}),
                                                                                                       mu(lu,
                                                                                                          qTy)))),
                                                                                             close
                                                                                               (var_a
                                                                                                  HOLogic.unitT,
                                                                                                mb(call
                                                                                                     ("IsSecure",
                                                                                                      @{typ
                                                                                                      "state \<Rightarrow>
                                                                                                       (bool \<times>
                                                                                                        state)"},
                                                                                                      lu,
                                                                                                      @{theory}),
                                                                                                   close
                                                                                                     (var_b"v",
                                                                                                      mb(mb(mb(mu(mop(Not,
                                                                                                                      var_b"v"),
                                                                                                                  qTy),
                                                                                                               close
                                                                                                                 (var_b"b",
                                                                                                                  ite(var_b"b",
                                                                                                                      mb(mr(close
                                                                                                                              (var("s",
                                                                                                                                   qTy),
                                                                                                                               call
                                                                                                                                 ("state.CP15",
                                                                                                                                  @{typ CP15},
                                                                                                                                  var("s",
                                                                                                                                      qTy),
                                                                                                                                  @{theory}))),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ CP15}),
                                                                                                                            mb(mb(mu(call
                                                                                                                                       ("CP15.NSACR",
                                                                                                                                        @{typ NSACR},
                                                                                                                                        var("v",
                                                                                                                                            @{typ CP15}),
                                                                                                                                        @{theory}),
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ NSACR}),
                                                                                                                                     mu(call
                                                                                                                                          ("NSACR.RFR",
                                                                                                                                           HOLogic.boolT,
                                                                                                                                           var("v",
                                                                                                                                               @{typ NSACR}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var_b"v",
                                                                                                                                  mu(bop(And,
                                                                                                                                         eq(ex(var_w("value",32),
                                                                                                                                               ln
                                                                                                                                                4,
                                                                                                                                               ln
                                                                                                                                                0,
                                                                                                                                               (Word_Lib.mk_wordT 5)),
                                                                                                                                            lw(17,
                                                                                                                                               5)),
                                                                                                                                         var_b"v"),
                                                                                                                                     qTy))))),
                                                                                                                      mu(lf,
                                                                                                                         qTy)))),
                                                                                                            close
                                                                                                              (var_b"b",
                                                                                                               ite(var_b"b",
                                                                                                                   call
                                                                                                                     ("raise'exception",
                                                                                                                      @{typ
                                                                                                                      "state \<Rightarrow>
                                                                                                                       (unit \<times>
                                                                                                                        state)"},
                                                                                                                      call
                                                                                                                        ("exception.UNPREDICTABLE",
                                                                                                                         @{typ exception},
                                                                                                                         ls
                                                                                                                          "CPSRWriteByInstr",
                                                                                                                         @{theory}),
                                                                                                                      @{theory}),
                                                                                                                   mu(lu,
                                                                                                                      qTy)))),
                                                                                                         close
                                                                                                           (var_a
                                                                                                              HOLogic.unitT,
                                                                                                            mb(mr(close
                                                                                                                    (var("s",
                                                                                                                         qTy),
                                                                                                                     call
                                                                                                                       ("state.CP15",
                                                                                                                        @{typ CP15},
                                                                                                                        var("s",
                                                                                                                            qTy),
                                                                                                                        @{theory}))),
                                                                                                               close
                                                                                                                 (var("v",
                                                                                                                      @{typ CP15}),
                                                                                                                  mb(mb(mb(mb(mb(mu(call
                                                                                                                                      ("CP15.SCR",
                                                                                                                                       @{typ SCR},
                                                                                                                                       var("v",
                                                                                                                                           @{typ CP15}),
                                                                                                                                       @{theory}),
                                                                                                                                    qTy),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ SCR}),
                                                                                                                                    mu(call
                                                                                                                                         ("SCR.NS",
                                                                                                                                          HOLogic.boolT,
                                                                                                                                          var("v",
                                                                                                                                              @{typ SCR}),
                                                                                                                                          @{theory}),
                                                                                                                                       qTy))),
                                                                                                                              close
                                                                                                                                (var_b"v",
                                                                                                                                 mu(mop(Not,
                                                                                                                                        var_b"v"),
                                                                                                                                    qTy))),
                                                                                                                           close
                                                                                                                             (var_b"b",
                                                                                                                              mu(bop(And,
                                                                                                                                     var_b"b",
                                                                                                                                     eq(ex(var_w("value",32),
                                                                                                                                           ln
                                                                                                                                            4,
                                                                                                                                           ln
                                                                                                                                            0,
                                                                                                                                           (Word_Lib.mk_wordT 5)),
                                                                                                                                        lw(26,
                                                                                                                                           5))),
                                                                                                                                 qTy))),
                                                                                                                        close
                                                                                                                          (var_b"b",
                                                                                                                           ite(var_b"b",
                                                                                                                               call
                                                                                                                                 ("raise'exception",
                                                                                                                                  @{typ
                                                                                                                                  "state \<Rightarrow>
                                                                                                                                   (unit \<times>
                                                                                                                                    state)"},
                                                                                                                                  call
                                                                                                                                    ("exception.UNPREDICTABLE",
                                                                                                                                     @{typ exception},
                                                                                                                                     ls
                                                                                                                                      "CPSRWriteByInstr",
                                                                                                                                     @{theory}),
                                                                                                                                  @{theory}),
                                                                                                                               mu(lu,
                                                                                                                                  qTy)))),
                                                                                                                     close
                                                                                                                       (var_a
                                                                                                                          HOLogic.unitT,
                                                                                                                        mb(call
                                                                                                                             ("IsSecure",
                                                                                                                              @{typ
                                                                                                                              "state \<Rightarrow>
                                                                                                                               (bool \<times>
                                                                                                                                state)"},
                                                                                                                              lu,
                                                                                                                              @{theory}),
                                                                                                                           close
                                                                                                                             (var_b"v",
                                                                                                                              mb(mb(mb(mu(mop(Not,
                                                                                                                                              var_b"v"),
                                                                                                                                          qTy),
                                                                                                                                       close
                                                                                                                                         (var_b"b",
                                                                                                                                          ite(var_b"b",
                                                                                                                                              mb(mr(close
                                                                                                                                                      (var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       call
                                                                                                                                                         ("state.CPSR",
                                                                                                                                                          @{typ PSR},
                                                                                                                                                          var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          @{theory}))),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    mb(mb(mb(mu(call
                                                                                                                                                                  ("PSR.M",
                                                                                                                                                                   (Word_Lib.mk_wordT 5),
                                                                                                                                                                   var("v",
                                                                                                                                                                       @{typ PSR}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                qTy),
                                                                                                                                                             close
                                                                                                                                                               (var_w("v",5),
                                                                                                                                                                mu(eq(var_w("v",5),
                                                                                                                                                                      lw(26,
                                                                                                                                                                         5)),
                                                                                                                                                                   qTy))),
                                                                                                                                                          close
                                                                                                                                                            (var_b"v",
                                                                                                                                                             mu(mop(Not,
                                                                                                                                                                    var_b"v"),
                                                                                                                                                                qTy))),
                                                                                                                                                       close
                                                                                                                                                         (var_b"b",
                                                                                                                                                          mu(bop(And,
                                                                                                                                                                 var_b"b",
                                                                                                                                                                 eq(ex(var_w("value",32),
                                                                                                                                                                       ln
                                                                                                                                                                        4,
                                                                                                                                                                       ln
                                                                                                                                                                        0,
                                                                                                                                                                       (Word_Lib.mk_wordT 5)),
                                                                                                                                                                    lw(26,
                                                                                                                                                                       5))),
                                                                                                                                                             qTy))))),
                                                                                                                                              mu(lf,
                                                                                                                                                 qTy)))),
                                                                                                                                    close
                                                                                                                                      (var_b"b",
                                                                                                                                       ite(var_b"b",
                                                                                                                                           call
                                                                                                                                             ("raise'exception",
                                                                                                                                              @{typ
                                                                                                                                              "state \<Rightarrow>
                                                                                                                                               (unit \<times>
                                                                                                                                                state)"},
                                                                                                                                              call
                                                                                                                                                ("exception.UNPREDICTABLE",
                                                                                                                                                 @{typ exception},
                                                                                                                                                 ls
                                                                                                                                                  "CPSRWriteByInstr",
                                                                                                                                                 @{theory}),
                                                                                                                                              @{theory}),
                                                                                                                                           mu(lu,
                                                                                                                                              qTy)))),
                                                                                                                                 close
                                                                                                                                   (var_a
                                                                                                                                      HOLogic.unitT,
                                                                                                                                    mb(mr(close
                                                                                                                                            (var("s",
                                                                                                                                                 qTy),
                                                                                                                                             call
                                                                                                                                               ("state.CPSR",
                                                                                                                                                @{typ PSR},
                                                                                                                                                var("s",
                                                                                                                                                    qTy),
                                                                                                                                                @{theory}))),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ PSR}),
                                                                                                                                          mb(mb(mb(mb(mu(call
                                                                                                                                                           ("PSR.M",
                                                                                                                                                            (Word_Lib.mk_wordT 5),
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ PSR}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var_w("v",5),
                                                                                                                                                         mu(eq(var_w("v",5),
                                                                                                                                                               lw(26,
                                                                                                                                                                  5)),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"b",
                                                                                                                                                      mu(bop(And,
                                                                                                                                                             var_b"b",
                                                                                                                                                             bop(And,
                                                                                                                                                                 mop(Not,
                                                                                                                                                                     eq(ex(var_w("value",32),
                                                                                                                                                                           ln
                                                                                                                                                                            4,
                                                                                                                                                                           ln
                                                                                                                                                                            0,
                                                                                                                                                                           (Word_Lib.mk_wordT 5)),
                                                                                                                                                                        lw(26,
                                                                                                                                                                           5))),
                                                                                                                                                                 mop(Not,
                                                                                                                                                                     var_b"is_excpt_return"))),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"b",
                                                                                                                                                   ite(var_b"b",
                                                                                                                                                       call
                                                                                                                                                         ("raise'exception",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (unit \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          call
                                                                                                                                                            ("exception.UNPREDICTABLE",
                                                                                                                                                             @{typ exception},
                                                                                                                                                             ls
                                                                                                                                                              "CPSRWriteByInstr",
                                                                                                                                                             @{theory}),
                                                                                                                                                          @{theory}),
                                                                                                                                                       mu(lu,
                                                                                                                                                          qTy)))),
                                                                                                                                             close
                                                                                                                                               (var_a
                                                                                                                                                  HOLogic.unitT,
                                                                                                                                                mb(mr(close
                                                                                                                                                        (var("s",
                                                                                                                                                             qTy),
                                                                                                                                                         call
                                                                                                                                                           ("state.CPSR",
                                                                                                                                                            @{typ PSR},
                                                                                                                                                            var("s",
                                                                                                                                                                qTy),
                                                                                                                                                            @{theory}))),
                                                                                                                                                   close
                                                                                                                                                     (var("v",
                                                                                                                                                          @{typ PSR}),
                                                                                                                                                      mb(mu(call
                                                                                                                                                              ("reg'PSR",
                                                                                                                                                               w32,
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ PSR}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy),
                                                                                                                                                         close
                                                                                                                                                           (var_w("w",32),
                                                                                                                                                            mb(mr(close
                                                                                                                                                                    (var("s",
                                                                                                                                                                         qTy),
                                                                                                                                                                     call
                                                                                                                                                                       ("state.CPSR",
                                                                                                                                                                        @{typ PSR},
                                                                                                                                                                        var("s",
                                                                                                                                                                            qTy),
                                                                                                                                                                        @{theory}))),
                                                                                                                                                               close
                                                                                                                                                                 (var("v",
                                                                                                                                                                      @{typ PSR}),
                                                                                                                                                                  mb(mb(mu(tp[var("v",
                                                                                                                                                                                  @{typ PSR}),
                                                                                                                                                                              bfi(ln
                                                                                                                                                                                   4,
                                                                                                                                                                                  ln
                                                                                                                                                                                   0,
                                                                                                                                                                                  ex(var_w("value",32),
                                                                                                                                                                                     ln
                                                                                                                                                                                      4,
                                                                                                                                                                                     ln
                                                                                                                                                                                      0,
                                                                                                                                                                                     (Word_Lib.mk_wordT 5)),
                                                                                                                                                                                  var_w("w",32))],
                                                                                                                                                                           qTy),
                                                                                                                                                                        close
                                                                                                                                                                          (var("v",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "PSR \<times>
                                                                                                                                                                                32 word"}),
                                                                                                                                                                           mu(call
                                                                                                                                                                                ("write'reg'PSR",
                                                                                                                                                                                 @{typ PSR},
                                                                                                                                                                                 var("v",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "PSR \<times>
                                                                                                                                                                                      32 word"}),
                                                                                                                                                                                 @{theory}),
                                                                                                                                                                              qTy))),
                                                                                                                                                                     close
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ PSR}),
                                                                                                                                                                        mw(close
                                                                                                                                                                             (var("s",
                                                                                                                                                                                  qTy),
                                                                                                                                                                              rupd
                                                                                                                                                                                ("state.CPSR",
                                                                                                                                                                                 tp[var("s",
                                                                                                                                                                                        qTy),
                                                                                                                                                                                    var("v",
                                                                                                                                                                                        @{typ PSR})],
                                                                                                                                                                                 @{theory})))))))))))))))))))))))))))))))))),
                                                                          mu(lu,qTy)))))))))),
                                              mu(lu,qTy))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SPSRWriteByInstr",
   close
     (tp[var_w("value",32),var_w("bytemask",4)],
      mb(call
           ("CurrentModeIsUserOrSystem",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
            @{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   call
                     ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      call
                        ("exception.UNPREDICTABLE",@{typ exception},ls"SPSRWriteByInstr",@{theory}),
                      @{theory}),mu(lu,qTy)),
               close
                 (var_a HOLogic.unitT,
                  mb(ite(bop(Bit,var_w("bytemask",4),ln 3),
                         mb(const
                              ("SPSR",@{typ "state \<Rightarrow> (PSR \<times> state)"},@{theory}),
                            close
                              (var("x",@{typ PSR}),
                               call
                                 ("write'SPSR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  call
                                    ("write'reg'PSR",@{typ PSR},
                                     tp[var("x",@{typ PSR}),
                                        bfi(ln 31,ln 24,ex(var_w("value",32),ln 31,ln 24,w8),
                                            call("reg'PSR",w32,var("x",@{typ PSR}),@{theory}))],
                                     @{theory}),@{theory}))),mu(lu,qTy)),
                     close
                       (var_a HOLogic.unitT,
                        mb(ite(bop(Bit,var_w("bytemask",4),ln 2),
                               mb(const
                                    ("SPSR",@{typ "state \<Rightarrow> (PSR \<times> state)"},
                                     @{theory}),
                                  close
                                    (var("x",@{typ PSR}),
                                     call
                                       ("write'SPSR",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        call
                                          ("write'reg'PSR",@{typ PSR},
                                           tp[var("x",@{typ PSR}),
                                              bfi(ln 19,ln 16,ex(var_w("value",32),ln 19,ln 16,w4),
                                                  call("reg'PSR",w32,var("x",@{typ PSR}),@{theory}))],
                                           @{theory}),@{theory}))),mu(lu,qTy)),
                           close
                             (var_a HOLogic.unitT,
                              mb(ite(bop(Bit,var_w("bytemask",4),ln 1),
                                     mb(const
                                          ("SPSR",@{typ "state \<Rightarrow> (PSR \<times> state)"},
                                           @{theory}),
                                        close
                                          (var("x",@{typ PSR}),
                                           call
                                             ("write'SPSR",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              call
                                                ("write'reg'PSR",@{typ PSR},
                                                 tp[var("x",@{typ PSR}),
                                                    bfi(ln 15,ln 8,
                                                        ex(var_w("value",32),ln 15,ln 8,w8),
                                                        call
                                                          ("reg'PSR",w32,var("x",@{typ PSR}),
                                                           @{theory}))],@{theory}),@{theory}))),
                                     mu(lu,qTy)),
                                 close
                                   (var_a HOLogic.unitT,
                                    ite(bop(Bit,var_w("bytemask",4),ln 0),
                                        mb(const
                                             ("SPSR",
                                              @{typ "state \<Rightarrow> (PSR \<times> state)"},
                                              @{theory}),
                                           close
                                             (var("v",@{typ PSR}),
                                              mb(call
                                                   ("write'SPSR",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},
                                                    call
                                                      ("write'reg'PSR",@{typ PSR},
                                                       tp[var("v",@{typ PSR}),
                                                          bfi(ln 7,ln 5,
                                                              ex(var_w("value",32),ln 7,ln 5,
                                                                 (Word_Lib.mk_wordT 3)),
                                                              call
                                                                ("reg'PSR",w32,var("v",@{typ PSR}),
                                                                 @{theory}))],@{theory}),@{theory}),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    mb(call
                                                         ("BadMode",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          ex(var_w("value",32),ln 4,ln 0,
                                                             (Word_Lib.mk_wordT 5)),@{theory}),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              call
                                                                ("raise'exception",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 call
                                                                   ("exception.UNPREDICTABLE",
                                                                    @{typ exception},
                                                                    cc[ls
                                                                        "SPSRWriteByInstr: BadMode: ",
                                                                       mop(Cast(@{typ string}),
                                                                           ex(var_w("value",32),
                                                                              ln 4,ln 0,
                                                                              (Word_Lib.mk_wordT 5)))],
                                                                    @{theory}),@{theory}),
                                                              mb(const
                                                                   ("SPSR",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (PSR \<times> state)"},
                                                                    @{theory}),
                                                                 close
                                                                   (var("x",@{typ PSR}),
                                                                    call
                                                                      ("write'SPSR",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          tp[var("x",@{typ PSR}),
                                                                             bfi(ln 4,ln 0,
                                                                                 ex(var_w("value",32),
                                                                                    ln 4,ln 0,
                                                                                    (Word_Lib.mk_wordT 5)),
                                                                                 call
                                                                                   ("reg'PSR",w32,
                                                                                    var("x",
                                                                                        @{typ PSR}),
                                                                                    @{theory}))],
                                                                          @{theory}),@{theory})))))))))),
                                        mu(lu,qTy))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("RBankSelect",
   close
     (tp[var_w("mode",5),var("usr",@{typ RName}),var("fiq",@{typ RName}),var("irq",@{typ RName}),
         var("svc",@{typ RName}),var("abt",@{typ RName}),var("und",@{typ RName}),
         var("mon",@{typ RName}),var("hyp",@{typ RName})],
      mb(call
           ("BadMode",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("mode",5),@{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                call
                  ("raise'exception",@{typ "state \<Rightarrow> (RName \<times> state)"},
                   call
                     ("exception.UNPREDICTABLE",@{typ exception},
                      cc[ls"RBankSelect: BadMode",mop(Cast(@{typ string}),var_w("mode",5))],
                      @{theory}),@{theory}),
                mu(itb([(eq(var_w("mode",5),lw(16,5)),var("usr",@{typ RName})),
                        (eq(var_w("mode",5),lw(17,5)),var("fiq",@{typ RName})),
                        (eq(var_w("mode",5),lw(18,5)),var("irq",@{typ RName})),
                        (eq(var_w("mode",5),lw(19,5)),var("svc",@{typ RName})),
                        (eq(var_w("mode",5),lw(22,5)),var("mon",@{typ RName})),
                        (eq(var_w("mode",5),lw(23,5)),var("abt",@{typ RName})),
                        (eq(var_w("mode",5),lw(26,5)),var("hyp",@{typ RName})),
                        (eq(var_w("mode",5),lw(27,5)),var("und",@{typ RName})),
                        (eq(var_w("mode",5),lw(31,5)),var("usr",@{typ RName}))],lx @{typ RName}),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("RfiqBankSelect",
   close
     (tp[var_w("mode",5),var("usr",@{typ RName}),var("fiq",@{typ RName})],
      call
        ("RBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
         tp[var_w("mode",5),var("usr",@{typ RName}),var("fiq",@{typ RName}),var("usr",@{typ RName}),
            var("usr",@{typ RName}),var("usr",@{typ RName}),var("usr",@{typ RName}),
            var("usr",@{typ RName}),var("usr",@{typ RName})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LookUpRName",
   close
     (tp[var_w("n",4),var_w("mode",5)],
      itb([(eq(var_w("n",4),lw(0,4)),mu(lc("RName_0usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(1,4)),mu(lc("RName_1usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(2,4)),mu(lc("RName_2usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(3,4)),mu(lc("RName_3usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(4,4)),mu(lc("RName_4usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(5,4)),mu(lc("RName_5usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(6,4)),mu(lc("RName_6usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(7,4)),mu(lc("RName_7usr","RName",@{theory}),qTy)),
           (eq(var_w("n",4),lw(8,4)),
            call
              ("RfiqBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_8usr","RName",@{theory}),
                  lc("RName_8fiq","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(9,4)),
            call
              ("RfiqBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_9usr","RName",@{theory}),
                  lc("RName_9fiq","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(10,4)),
            call
              ("RfiqBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_10usr","RName",@{theory}),
                  lc("RName_10fiq","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(11,4)),
            call
              ("RfiqBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_11usr","RName",@{theory}),
                  lc("RName_11fiq","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(12,4)),
            call
              ("RfiqBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_12usr","RName",@{theory}),
                  lc("RName_12fiq","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(13,4)),
            call
              ("RBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_SPusr","RName",@{theory}),
                  lc("RName_SPfiq","RName",@{theory}),lc("RName_SPirq","RName",@{theory}),
                  lc("RName_SPsvc","RName",@{theory}),lc("RName_SPabt","RName",@{theory}),
                  lc("RName_SPund","RName",@{theory}),lc("RName_SPmon","RName",@{theory}),
                  lc("RName_SPhyp","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(14,4)),
            call
              ("RBankSelect",@{typ "state \<Rightarrow> (RName \<times> state)"},
               tp[var_w("mode",5),lc("RName_LRusr","RName",@{theory}),
                  lc("RName_LRfiq","RName",@{theory}),lc("RName_LRirq","RName",@{theory}),
                  lc("RName_LRsvc","RName",@{theory}),lc("RName_LRabt","RName",@{theory}),
                  lc("RName_LRund","RName",@{theory}),lc("RName_LRmon","RName",@{theory}),
                  lc("RName_LRusr","RName",@{theory})],@{theory})),
           (eq(var_w("n",4),lw(15,4)),
            call
              ("raise'exception",@{typ "state \<Rightarrow> (RName \<times> state)"},
               call
                 ("exception.ASSERT",@{typ exception},ls"LookUpRName: n >= 0 and n <= 14",@{theory}),
               @{theory}))],lx(@{typ "state \<Rightarrow> (RName \<times> state)"}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Rmode",
   close
     (tp[var_w("n",4),var_w("mode",5)],
      mb(call("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mu(mop(Not,var_b"v"),qTy),
               close
                 (var_b"notSecure",
                  mb(ite(bop(And,var_b"notSecure",eq(var_w("mode",5),lw(22,5))),
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call("exception.UNPREDICTABLE",@{typ exception},ls"Rmode",@{theory}),
                            @{theory}),mu(lu,qTy)),
                     close
                       (var_a HOLogic.unitT,
                        mb(mr(close
                                (var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                           close
                             (var("v",@{typ CP15}),
                              mb(mb(mb(mb(mb(mu(call
                                                  ("CP15.NSACR",@{typ NSACR},var("v",@{typ CP15}),
                                                   @{theory}),qTy),
                                             close
                                               (var("v",@{typ NSACR}),
                                                mu(call
                                                     ("NSACR.RFR",HOLogic.boolT,
                                                      var("v",@{typ NSACR}),@{theory}),qTy))),
                                          close
                                            (var_b"v",
                                             mu(bop(And,eq(var_w("mode",5),lw(17,5)),var_b"v"),qTy))),
                                       close(var_b"v",mu(bop(And,var_b"notSecure",var_b"v"),qTy))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           call
                                             ("raise'exception",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              call
                                                ("exception.UNPREDICTABLE",@{typ exception},
                                                 ls"Rmode",@{theory}),@{theory}),mu(lu,qTy)))),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(mr(close
                                            (var("s",qTy),
                                             call
                                               ("state.REG",@{typ "RName \<Rightarrow> 32 word"},
                                                var("s",qTy),@{theory}))),
                                       close
                                         (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                                          mb(call
                                               ("LookUpRName",
                                                @{typ "state \<Rightarrow> (RName \<times> state)"},
                                                tp[var_w("n",4),var_w("mode",5)],@{theory}),
                                             close
                                               (var("v0",@{typ RName}),
                                                mu(apply
                                                     (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                                                      var("v0",@{typ RName})),qTy)))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'Rmode",
   close
     (tp[var_w("value",32),var_w("n",4),var_w("mode",5)],
      mb(call("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mu(mop(Not,var_b"v"),qTy),
               close
                 (var_b"notSecure",
                  mb(ite(bop(And,var_b"notSecure",eq(var_w("mode",5),lw(22,5))),
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call("exception.UNPREDICTABLE",@{typ exception},ls"Rmode",@{theory}),
                            @{theory}),mu(lu,qTy)),
                     close
                       (var_a HOLogic.unitT,
                        mb(mr(close
                                (var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                           close
                             (var("v",@{typ CP15}),
                              mb(mb(mb(mb(mb(mu(call
                                                  ("CP15.NSACR",@{typ NSACR},var("v",@{typ CP15}),
                                                   @{theory}),qTy),
                                             close
                                               (var("v",@{typ NSACR}),
                                                mu(call
                                                     ("NSACR.RFR",HOLogic.boolT,
                                                      var("v",@{typ NSACR}),@{theory}),qTy))),
                                          close
                                            (var_b"v",
                                             mu(bop(And,eq(var_w("mode",5),lw(17,5)),var_b"v"),qTy))),
                                       close(var_b"v",mu(bop(And,var_b"notSecure",var_b"v"),qTy))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           call
                                             ("raise'exception",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              call
                                                ("exception.UNPREDICTABLE",@{typ exception},
                                                 ls"Rmode",@{theory}),@{theory}),mu(lu,qTy)))),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(call
                                         ("CurrentInstrSet",
                                          @{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var("v",@{typ InstrSet}),
                                          mb(mb(mb(mb(mb(mu(eq(var("v",@{typ InstrSet}),
                                                               lc("InstrSet_ARM","InstrSet",
                                                                  @{theory})),qTy),
                                                         close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                      close
                                                        (var_b"v",
                                                         mu(bop(And,
                                                                mop(Not,
                                                                    eq(ex(var_w("value",32),ln 1,
                                                                          ln 0,(Word_Lib.mk_wordT 2)),
                                                                       lw(0,2))),var_b"v"),qTy))),
                                                   close
                                                     (var_b"v",
                                                      mu(bop(And,eq(var_w("n",4),lw(13,4)),var_b"v"),
                                                         qTy))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       call
                                                         ("raise'exception",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          call
                                                            ("exception.UNPREDICTABLE",
                                                             @{typ exception},ls"Rmode",@{theory}),
                                                          @{theory}),mu(lu,qTy)))),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(call
                                                     ("LookUpRName",
                                                      @{typ
                                                      "state \<Rightarrow> (RName \<times> state)"},
                                                      tp[var_w("n",4),var_w("mode",5)],@{theory}),
                                                   close
                                                     (var("x",@{typ RName}),
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.REG",
                                                                  @{typ
                                                                  "RName \<Rightarrow> 32 word"},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",
                                                                @{typ "RName \<Rightarrow> 32 word"}),
                                                            mb(mu(fupd
                                                                    (var("v",
                                                                         @{typ
                                                                         "RName \<Rightarrow>
                                                                          32 word"}),
                                                                     var("x",@{typ RName}),
                                                                     var_w("value",32)),qTy),
                                                               close
                                                                 (var("v",
                                                                      @{typ
                                                                      "RName \<Rightarrow> 32 word"}),
                                                                  mw(close
                                                                       (var("s",qTy),
                                                                        rupd
                                                                          ("state.REG",
                                                                           tp[var("s",qTy),
                                                                              var("v",
                                                                                  @{typ
                                                                                  "RName \<Rightarrow>
                                                                                   32 word"})],
                                                                           @{theory})))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("R",
   close
     (var_w("n",4),
      ite(eq(var_w("n",4),lw(15,4)),
          mb(call
               ("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                @{theory}),
             close
               (var("v",@{typ InstrSet}),
                mb(mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ARM","InstrSet",@{theory})),qTy),
                      close(var_b"b",mu(ite(var_b"b",lw(8,32),lw(4,32)),qTy))),
                   close
                     (var_w("offset",32),
                      mb(mr(close
                              (var("s",qTy),
                               call
                                 ("state.REG",@{typ "RName \<Rightarrow> 32 word"},var("s",qTy),
                                  @{theory}))),
                         close
                           (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                            mb(mu(apply
                                    (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                                     lc("RName_PC","RName",@{theory})),qTy),
                               close
                                 (var_w("v",32),mu(bop(Add,var_w("v",32),var_w("offset",32)),qTy))))))))),
          mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
             close
               (var("v",@{typ PSR}),
                mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                      close(var_w("v",5),mu(tp[var_w("n",4),var_w("v",5)],qTy))),
                   close
                     (var("v",@{typ "4 word \<times> 5 word"}),
                      call
                        ("Rmode",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                         var("v",@{typ "4 word \<times> 5 word"}),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'R",
   close
     (tp[var_w("value",32),var_w("n",4)],
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),qTy),
                  close(var_w("v",5),mu(tp[var_w("n",4),var_w("v",5)],qTy))),
               close
                 (var("x",@{typ "4 word \<times> 5 word"}),
                  call
                    ("write'Rmode",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     tp[var_w("value",32),var("x",@{typ "4 word \<times> 5 word"})],@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SP",call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},lw(13,4),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'SP",
   close
     (var_w("value",32),
      call
        ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("value",32),lw(13,4)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LR",call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},lw(14,4),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'LR",
   close
     (var_w("value",32),
      call
        ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("value",32),lw(14,4)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("PC",call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},lw(15,4),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BranchTo",
   close
     (var_w("address",32),
      mb(mr(close
              (var("s",qTy),
               call("state.REG",@{typ "RName \<Rightarrow> 32 word"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "RName \<Rightarrow> 32 word"}),
            mb(mu(fupd
                    (var("v",@{typ "RName \<Rightarrow> 32 word"}),lc("RName_PC","RName",@{theory}),
                     var_w("address",32)),qTy),
               close
                 (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                  mw(close
                       (var("s",qTy),
                        rupd
                          ("state.REG",
                           tp[var("s",qTy),var("v",@{typ "RName \<Rightarrow> 32 word"})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("PCStoreValue",
   close
     (var_a HOLogic.unitT,
      const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BranchWritePC",
   close
     (var_w("address",32),
      mb(call("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,@{theory}),
         close
           (var("v",@{typ InstrSet}),
            mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ARM","InstrSet",@{theory})),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                            @{theory}),
                         close
                           (var_n"v",
                            mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),qTy),
                                     close
                                       (var_b"b",
                                        mu(bop(And,var_b"b",
                                               mop(Not,
                                                   eq(ex(var_w("address",32),ln 1,ln 0,
                                                         (Word_Lib.mk_wordT 2)),lw(0,2)))),qTy))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         call
                                           ("raise'exception",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},
                                            call
                                              ("exception.UNPREDICTABLE",@{typ exception},
                                               ls"BranchWritePC",@{theory}),@{theory}),mu(lu,qTy)))),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     cc[ex(var_w("address",32),ln 31,ln 2,(Word_Lib.mk_wordT 30)),
                                        lw(0,2)],@{theory}))))),
                      call
                        ("BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         cc[ex(var_w("address",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),lw(0,1)],
                         @{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BXWritePC",
   close
     (var_w("address",32),
      mb(call("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,@{theory}),
         close
           (var("v",@{typ InstrSet}),
            mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ThumbEE","InstrSet",@{theory})),qTy),
               close
                 (var_b"b",
                  itb([(var_b"b",
                        ite(bop(Bit,var_w("address",32),ln 0),
                            call
                              ("BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               cc[ex(var_w("address",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),lw(0,1)],
                               @{theory}),
                            call
                              ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},ls"BXWritePC",@{theory}),
                               @{theory}))),
                       (bop(Bit,var_w("address",32),ln 0),
                        mb(call
                             ("SelectInstrSet",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              lc("InstrSet_Thumb","InstrSet",@{theory}),@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 cc[ex(var_w("address",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),
                                    lw(0,1)],@{theory})))),
                       (mop(Not,bop(Bit,var_w("address",32),ln 1)),
                        mb(call
                             ("SelectInstrSet",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              lc("InstrSet_ARM","InstrSet",@{theory}),@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var_w("address",32),@{theory}))))],
                      call
                        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         call("exception.UNPREDICTABLE",@{typ exception},ls"BXWritePC",@{theory}),
                         @{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LoadWritePC",
   close
     (var_w("address",32),
      mb(call("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
         close
           (var_n"v",
            mb(mu(bop(Ge,var_n"v",ln 5),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("BXWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         var_w("address",32),@{theory}),
                      call
                        ("BranchWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         var_w("address",32),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ALUWritePC",
   close
     (var_w("address",32),
      mb(call("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
         close
           (var_n"v",
            mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(call
                              ("CurrentInstrSet",
                               @{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,@{theory}),
                            close
                              (var("v",@{typ InstrSet}),
                               mu(eq(var("v",@{typ InstrSet}),
                                     lc("InstrSet_ARM","InstrSet",@{theory})),qTy))),mu(lf,qTy)))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("BXWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         var_w("address",32),@{theory}),
                      call
                        ("BranchWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         var_w("address",32),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ThisInstrLength",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.Encoding",@{typ Encoding},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Encoding}),
            mb(mu(eq(var("v",@{typ Encoding}),lc("Encoding_Thumb","Encoding",@{theory})),qTy),
               close(var_b"b",mu(ite(var_b"b",ln 16,ln 32),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("IncPC",
   close
     (var_a HOLogic.unitT,
      mb(mr(close
              (var("s",qTy),
               call("state.REG",@{typ "RName \<Rightarrow> 32 word"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "RName \<Rightarrow> 32 word"}),
            mb(mb(mu(apply
                       (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                        lc("RName_PC","RName",@{theory})),qTy),
                  close
                    (var_w("v",32),
                     mb(call
                          ("ThisInstrLength",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                           @{theory}),
                        close
                          (var_n"v0",
                           mb(mb(mu(eq(var_n"v0",ln 16),qTy),
                                 close(var_b"b",mu(ite(var_b"b",lw(2,32),lw(4,32)),qTy))),
                              close(var_w("v0",32),mu(bop(Add,var_w("v",32),var_w("v0",32)),qTy))))))),
               close
                 (var_w("v",32),
                  call
                    ("BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v",32),
                     @{theory})))))))
end
\<close>

(*
ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("mem1",
   close
     (var_w("address",32),
      mb(mr(close
              (var("s",qTy),
               call("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
            mb(mu(apply(var("v",@{typ "32 word \<Rightarrow> 8 word"}),var_w("address",32)),qTy),
               close(var_w("v",8),mu(mop(Cast(@{typ "bool list"}),var_w("v",8)),qTy)))))))
end
\<close>
*)


definition 
  mmu_translate ::"32 word  \<Rightarrow> state \<Rightarrow> 32 word \<times> state"
where
  "mmu_translate va \<equiv> do {
     update_state (\<lambda>s. s\<lparr> TLB := TLB s - tlb_evict s \<rparr>);
     mem   <- read_state MEM;
     asid  <- read_state ASID;
     ttbr0 <- read_state TTBR0;
     tlb   <- read_state TLB;
          case lookup tlb asid va of
            Hit entry \<Rightarrow> if is_fault entry
              then raise'exception (PAGE_FAULT ''more info'')
                else return (va_to_pa va entry)
          | Miss \<Rightarrow> let entry = pt_walk asid mem ttbr0 va in
              if is_fault entry
                then raise'exception (PAGE_FAULT ''more info'')
                  else do {
                    update_state (\<lambda>s. s\<lparr> TLB := tlb \<union> {entry} \<rparr>);
                    return (va_to_pa va entry)
                  }
          | Incon \<Rightarrow> raise'exception (IMPLEMENTATION_DEFINED ''set on fire'')
   }" 

(* mem1 is reading from memory *)
(* Here pa can be undefined either because of PAGE_FAULT or IMPLEMENTATION_DEFINED (incon) *)
(* state can be changed either because of TLB update, or raise'exception *)
definition
  mem1 :: "32 word \<Rightarrow> state \<Rightarrow> bool list \<times> state"
where
  "mem1 \<equiv> \<lambda>va. do {
     mem \<leftarrow> read_state MEM;  
     pa \<leftarrow> mmu_translate va;
     let v = mem pa;  (*arent these two *)
     v \<leftarrow> return (mem pa);  (* same? *) 
     return (nat_to_bitstring (nat (uint v)))
  }"                           


ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("mem",
   close
     (tp[var_w("address",32),var_n"size"],
      itb([(eq(var_n"size",ln 1),
            mb(call
                 ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                  bop(Add,var_w("address",32),lw(0,32)),@{theory}),
               close(var_v"v",mu(ex(var_v"v",ln 7,ln 0,@{typ "bool list"}),qTy)))),
           (eq(var_n"size",ln 2),
            mb(call
                 ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                  bop(Add,var_w("address",32),lw(1,32)),@{theory}),
               close
                 (var_v"v",
                  mb(mb(call
                          ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                           bop(Add,var_w("address",32),lw(0,32)),@{theory}),
                        close(var_v"v0",mu(cc[var_v"v",var_v"v0"],qTy))),
                     close(var_v"v",mu(ex(var_v"v",ln 15,ln 0,@{typ "bool list"}),qTy)))))),
           (eq(var_n"size",ln 4),
            mb(call
                 ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                  bop(Add,var_w("address",32),lw(3,32)),@{theory}),
               close
                 (var_v"v",
                  mb(mb(call
                          ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                           bop(Add,var_w("address",32),lw(2,32)),@{theory}),
                        close
                          (var_v"v0",
                           mb(mb(call
                                   ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                                    bop(Add,var_w("address",32),lw(1,32)),@{theory}),
                                 close
                                   (var_v"v1",
                                    mb(mb(call
                                            ("mem1",
                                             @{typ "state \<Rightarrow> (bool list \<times> state)"},
                                             bop(Add,var_w("address",32),lw(0,32)),@{theory}),
                                          close(var_v"v2",mu(cc[var_v"v1",var_v"v2"],qTy))),
                                       close(var_v"v1",mu(cc[var_v"v0",var_v"v1"],qTy))))),
                              close(var_v"v0",mu(cc[var_v"v",var_v"v0"],qTy))))),
                     close(var_v"v",mu(ex(var_v"v",ln 31,ln 0,@{typ "bool list"}),qTy)))))),
           (eq(var_n"size",ln 8),
            mb(call
                 ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                  bop(Add,var_w("address",32),lw(7,32)),@{theory}),
               close
                 (var_v"v",
                  mb(mb(call
                          ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                           bop(Add,var_w("address",32),lw(6,32)),@{theory}),
                        close
                          (var_v"v0",
                           mb(mb(call
                                   ("mem1",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                                    bop(Add,var_w("address",32),lw(5,32)),@{theory}),
                                 close
                                   (var_v"v1",
                                    mb(mb(call
                                            ("mem1",
                                             @{typ "state \<Rightarrow> (bool list \<times> state)"},
                                             bop(Add,var_w("address",32),lw(4,32)),@{theory}),
                                          close
                                            (var_v"v2",
                                             mb(mb(call
                                                     ("mem1",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (bool list \<times> state)"},
                                                      bop(Add,var_w("address",32),lw(3,32)),
                                                      @{theory}),
                                                   close
                                                     (var_v"v3",
                                                      mb(mb(call
                                                              ("mem1",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool list \<times> state)"},
                                                               bop(Add,var_w("address",32),lw(2,32)),
                                                               @{theory}),
                                                            close
                                                              (var_v"v4",
                                                               mb(mb(call
                                                                       ("mem1",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (bool list \<times> state)"},
                                                                        bop(Add,var_w("address",32),
                                                                            lw(1,32)),@{theory}),
                                                                     close
                                                                       (var_v"v5",
                                                                        mb(mb(call
                                                                                ("mem1",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (bool list \<times>
                                                                                   state)"},
                                                                                 bop(Add,
                                                                                     var_w("address",32),
                                                                                     lw(0,32)),
                                                                                 @{theory}),
                                                                              close
                                                                                (var_v"v6",
                                                                                 mu(cc[var_v"v5",
                                                                                       var_v"v6"],
                                                                                    qTy))),
                                                                           close
                                                                             (var_v"v5",
                                                                              mu(cc[var_v"v4",
                                                                                    var_v"v5"],qTy))))),
                                                                  close
                                                                    (var_v"v4",
                                                                     mu(cc[var_v"v3",var_v"v4"],qTy))))),
                                                         close
                                                           (var_v"v3",
                                                            mu(cc[var_v"v2",var_v"v3"],qTy))))),
                                                close(var_v"v2",mu(cc[var_v"v1",var_v"v2"],qTy))))),
                                       close(var_v"v1",mu(cc[var_v"v0",var_v"v1"],qTy))))),
                              close(var_v"v0",mu(cc[var_v"v",var_v"v0"],qTy))))),
                     close(var_v"v",mu(ex(var_v"v",ln 63,ln 0,@{typ "bool list"}),qTy))))))],
          call
            ("raise'exception",@{typ "state \<Rightarrow> (bool list \<times> state)"},
             call("exception.ASSERT",@{typ exception},ls"mem: size in {1, 2, 4, 8}",@{theory}),
             @{theory}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'mem1",
   close
     (tp[var_v"value",var_w("address",32),var_n"size"],
      itb([(eq(var_n"size",ln 1),
            mb(mr(close
                    (var("s",qTy),
                     call("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                  mb(mu(fupd
                          (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                           bop(Add,var_w("address",32),lw(0,32)),
                           mop(Cast w8,ex(var_v"value",ln 7,ln 0,@{typ "bool list"}))),qTy),
                     close
                       (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                        mw(close
                             (var("s",qTy),
                              rupd
                                ("state.MEM",
                                 tp[var("s",qTy),var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                 @{theory})))))))),
           (eq(var_n"size",ln 2),
            mb(mb(mr(close
                       (var("s",qTy),
                        call
                          ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),@{theory}))),
                  close
                    (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                     mb(mu(fupd
                             (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                              bop(Add,var_w("address",32),lw(0,32)),
                              mop(Cast w8,ex(var_v"value",ln 7,ln 0,@{typ "bool list"}))),qTy),
                        close
                          (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                           mw(close
                                (var("s",qTy),
                                 rupd
                                   ("state.MEM",
                                    tp[var("s",qTy),var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                    @{theory}))))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close
                          (var("s",qTy),
                           call
                             ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),
                              @{theory}))),
                     close
                       (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                        mb(mu(fupd
                                (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                 bop(Add,var_w("address",32),lw(1,32)),
                                 mop(Cast w8,ex(var_v"value",ln 15,ln 8,@{typ "bool list"}))),qTy),
                           close
                             (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                              mw(close
                                   (var("s",qTy),
                                    rupd
                                      ("state.MEM",
                                       tp[var("s",qTy),
                                          var("v",@{typ "32 word \<Rightarrow> 8 word"})],@{theory})))))))))),
           (eq(var_n"size",ln 4),
            mb(mb(mr(close
                       (var("s",qTy),
                        call
                          ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),@{theory}))),
                  close
                    (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                     mb(mu(fupd
                             (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                              bop(Add,var_w("address",32),lw(0,32)),
                              mop(Cast w8,ex(var_v"value",ln 7,ln 0,@{typ "bool list"}))),qTy),
                        close
                          (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                           mw(close
                                (var("s",qTy),
                                 rupd
                                   ("state.MEM",
                                    tp[var("s",qTy),var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                    @{theory}))))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mb(mr(close
                             (var("s",qTy),
                              call
                                ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),
                                 @{theory}))),
                        close
                          (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                           mb(mu(fupd
                                   (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                    bop(Add,var_w("address",32),lw(1,32)),
                                    mop(Cast w8,ex(var_v"value",ln 15,ln 8,@{typ "bool list"}))),qTy),
                              close
                                (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                 mw(close
                                      (var("s",qTy),
                                       rupd
                                         ("state.MEM",
                                          tp[var("s",qTy),
                                             var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                          @{theory}))))))),
                     close
                       (var_a HOLogic.unitT,
                        mb(mb(mr(close
                                   (var("s",qTy),
                                    call
                                      ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},
                                       var("s",qTy),@{theory}))),
                              close
                                (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                 mb(mu(fupd
                                         (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                          bop(Add,var_w("address",32),lw(2,32)),
                                          mop(Cast w8,
                                              ex(var_v"value",ln 23,ln 16,@{typ "bool list"}))),qTy),
                                    close
                                      (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                       mw(close
                                            (var("s",qTy),
                                             rupd
                                               ("state.MEM",
                                                tp[var("s",qTy),
                                                   var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                                @{theory}))))))),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call
                                         ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},
                                          var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                    mb(mu(fupd
                                            (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                             bop(Add,var_w("address",32),lw(3,32)),
                                             mop(Cast w8,
                                                 ex(var_v"value",ln 31,ln 24,@{typ "bool list"}))),
                                          qTy),
                                       close
                                         (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                          mw(close
                                               (var("s",qTy),
                                                rupd
                                                  ("state.MEM",
                                                   tp[var("s",qTy),
                                                      var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                                   @{theory})))))))))))))),
           (eq(var_n"size",ln 8),
            mb(mb(mr(close
                       (var("s",qTy),
                        call
                          ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),@{theory}))),
                  close
                    (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                     mb(mu(fupd
                             (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                              bop(Add,var_w("address",32),lw(0,32)),
                              mop(Cast w8,ex(var_v"value",ln 7,ln 0,@{typ "bool list"}))),qTy),
                        close
                          (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                           mw(close
                                (var("s",qTy),
                                 rupd
                                   ("state.MEM",
                                    tp[var("s",qTy),var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                    @{theory}))))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mb(mr(close
                             (var("s",qTy),
                              call
                                ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},var("s",qTy),
                                 @{theory}))),
                        close
                          (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                           mb(mu(fupd
                                   (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                    bop(Add,var_w("address",32),lw(1,32)),
                                    mop(Cast w8,ex(var_v"value",ln 15,ln 8,@{typ "bool list"}))),qTy),
                              close
                                (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                 mw(close
                                      (var("s",qTy),
                                       rupd
                                         ("state.MEM",
                                          tp[var("s",qTy),
                                             var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                          @{theory}))))))),
                     close
                       (var_a HOLogic.unitT,
                        mb(mb(mr(close
                                   (var("s",qTy),
                                    call
                                      ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},
                                       var("s",qTy),@{theory}))),
                              close
                                (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                 mb(mu(fupd
                                         (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                          bop(Add,var_w("address",32),lw(2,32)),
                                          mop(Cast w8,
                                              ex(var_v"value",ln 23,ln 16,@{typ "bool list"}))),qTy),
                                    close
                                      (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                       mw(close
                                            (var("s",qTy),
                                             rupd
                                               ("state.MEM",
                                                tp[var("s",qTy),
                                                   var("v",@{typ "32 word \<Rightarrow> 8 word"})],
                                                @{theory}))))))),
                           close
                             (var_a HOLogic.unitT,
                              mb(mb(mr(close
                                         (var("s",qTy),
                                          call
                                            ("state.MEM",@{typ "32 word \<Rightarrow> 8 word"},
                                             var("s",qTy),@{theory}))),
                                    close
                                      (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                       mb(mu(fupd
                                               (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                                bop(Add,var_w("address",32),lw(3,32)),
                                                mop(Cast w8,
                                                    ex(var_v"value",ln 31,ln 24,@{typ "bool list"}))),
                                             qTy),
                                          close
                                            (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                             mw(close
                                                  (var("s",qTy),
                                                   rupd
                                                     ("state.MEM",
                                                      tp[var("s",qTy),
                                                         var("v",
                                                             @{typ "32 word \<Rightarrow> 8 word"})],
                                                      @{theory}))))))),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call
                                                  ("state.MEM",
                                                   @{typ "32 word \<Rightarrow> 8 word"},
                                                   var("s",qTy),@{theory}))),
                                          close
                                            (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                             mb(mu(fupd
                                                     (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                                      bop(Add,var_w("address",32),lw(4,32)),
                                                      mop(Cast w8,
                                                          ex(var_v"value",ln 39,ln 32,
                                                             @{typ "bool list"}))),qTy),
                                                close
                                                  (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                                   mw(close
                                                        (var("s",qTy),
                                                         rupd
                                                           ("state.MEM",
                                                            tp[var("s",qTy),
                                                               var("v",
                                                                   @{typ
                                                                   "32 word \<Rightarrow> 8 word"})],
                                                            @{theory}))))))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mb(mr(close
                                                     (var("s",qTy),
                                                      call
                                                        ("state.MEM",
                                                         @{typ "32 word \<Rightarrow> 8 word"},
                                                         var("s",qTy),@{theory}))),
                                                close
                                                  (var("v",@{typ "32 word \<Rightarrow> 8 word"}),
                                                   mb(mu(fupd
                                                           (var("v",
                                                                @{typ
                                                                "32 word \<Rightarrow> 8 word"}),
                                                            bop(Add,var_w("address",32),lw(5,32)),
                                                            mop(Cast w8,
                                                                ex(var_v"value",ln 47,ln 40,
                                                                   @{typ "bool list"}))),qTy),
                                                      close
                                                        (var("v",
                                                             @{typ "32 word \<Rightarrow> 8 word"}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.MEM",
                                                                  tp[var("s",qTy),
                                                                     var("v",
                                                                         @{typ
                                                                         "32 word \<Rightarrow>
                                                                          8 word"})],@{theory}))))))),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(mb(mr(close
                                                           (var("s",qTy),
                                                            call
                                                              ("state.MEM",
                                                               @{typ "32 word \<Rightarrow> 8 word"},
                                                               var("s",qTy),@{theory}))),
                                                      close
                                                        (var("v",
                                                             @{typ "32 word \<Rightarrow> 8 word"}),
                                                         mb(mu(fupd
                                                                 (var("v",
                                                                      @{typ
                                                                      "32 word \<Rightarrow> 8 word"}),
                                                                  bop(Add,var_w("address",32),
                                                                      lw(6,32)),
                                                                  mop(Cast w8,
                                                                      ex(var_v"value",ln 55,ln 48,
                                                                         @{typ "bool list"}))),qTy),
                                                            close
                                                              (var("v",
                                                                   @{typ
                                                                   "32 word \<Rightarrow> 8 word"}),
                                                               mw(close
                                                                    (var("s",qTy),
                                                                     rupd
                                                                       ("state.MEM",
                                                                        tp[var("s",qTy),
                                                                           var("v",
                                                                               @{typ
                                                                               "32 word \<Rightarrow>
                                                                                8 word"})],@{theory}))))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.MEM",
                                                                  @{typ
                                                                  "32 word \<Rightarrow> 8 word"},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",
                                                                @{typ
                                                                "32 word \<Rightarrow> 8 word"}),
                                                            mb(mu(fupd
                                                                    (var("v",
                                                                         @{typ
                                                                         "32 word \<Rightarrow>
                                                                          8 word"}),
                                                                     bop(Add,var_w("address",32),
                                                                         lw(7,32)),
                                                                     mop(Cast w8,
                                                                         ex(var_v"value",ln 63,
                                                                            ln 56,@{typ "bool list"}))),
                                                                  qTy),
                                                               close
                                                                 (var("v",
                                                                      @{typ
                                                                      "32 word \<Rightarrow> 8 word"}),
                                                                  mw(close
                                                                       (var("s",qTy),
                                                                        rupd
                                                                          ("state.MEM",
                                                                           tp[var("s",qTy),
                                                                              var("v",
                                                                                  @{typ
                                                                                  "32 word \<Rightarrow>
                                                                                   8 word"})],
                                                                           @{theory}))))))))))))))))))))))],
          call
            ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
             call("exception.ASSERT",@{typ exception},ls"mem: size in {1, 2, 4, 8}",@{theory}),
             @{theory}))))
end
\<close>


definition
  "write'mem" :: "bool list \<times> 32 word \<times> nat \<Rightarrow> state \<Rightarrow> unit \<times> state"
where
  "write'mem \<equiv> \<lambda>(value, vaddr, size). do {
     paddr <- mmu_translate vaddr;
     (* size is in {1, 2, 4, 8} and will be aligned, so will not cross page boundaries *)
     write'mem1 (value, paddr, size)
  }"


ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BigEndianReverse",
   close
     (tp[var_v"value",var_n"n"],
      itb([(eq(var_n"n",ln 1),mu(ex(var_v"value",ln 7,ln 0,@{typ "bool list"}),qTy)),
           (eq(var_n"n",ln 2),
            mu(cc[ex(var_v"value",ln 7,ln 0,@{typ "bool list"}),
                  ex(var_v"value",ln 15,ln 8,@{typ "bool list"})],qTy)),
           (eq(var_n"n",ln 4),
            mu(cc[ex(var_v"value",ln 7,ln 0,@{typ "bool list"}),
                  ex(var_v"value",ln 15,ln 8,@{typ "bool list"}),
                  ex(var_v"value",ln 23,ln 16,@{typ "bool list"}),
                  ex(var_v"value",ln 31,ln 24,@{typ "bool list"})],qTy)),
           (eq(var_n"n",ln 8),
            mu(cc[ex(var_v"value",ln 7,ln 0,@{typ "bool list"}),
                  ex(var_v"value",ln 15,ln 8,@{typ "bool list"}),
                  ex(var_v"value",ln 23,ln 16,@{typ "bool list"}),
                  ex(var_v"value",ln 31,ln 24,@{typ "bool list"}),
                  ex(var_v"value",ln 39,ln 32,@{typ "bool list"}),
                  ex(var_v"value",ln 47,ln 40,@{typ "bool list"}),
                  ex(var_v"value",ln 55,ln 48,@{typ "bool list"}),
                  ex(var_v"value",ln 63,ln 56,@{typ "bool list"})],qTy))],
          call
            ("raise'exception",@{typ "state \<Rightarrow> (bool list \<times> state)"},
             call
               ("exception.ASSERT",@{typ exception},ls"BigEndianReverse: n in {1, 2, 4, 8}",
                @{theory}),@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Align",
   close
     (tp[var("w",@{typ "'N::len word"}),var_n"n"],
      mop(Cast(@{typ "'N::len word"}),
          bop(Mul,var_n"n",bop(Div,mop(Cast HOLogic.natT,var("w",@{typ "'N::len word"})),var_n"n")))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Aligned",
   close
     (tp[var("w",@{typ "'N::len word"}),var_n"n"],
      eq(var("w",@{typ "'N::len word"}),
         call("Align",@{typ "'N::len word"},tp[var("w",@{typ "'N::len word"}),var_n"n"],@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("MemA_with_priv",
   close
     (tp[var_w("address",32),var_n"size",var_b"privileged"],
      mn(lx w32,
         mb(ite(call("Aligned",HOLogic.boolT,tp[var_w("address",32),var_n"size"],@{theory}),
                mw(close
                     (var("s",@{typ "32 word \<times> state"}),
                      tp[var_w("address",32),mop(Snd,var("s",@{typ "32 word \<times> state"}))])),
                mb(mr(close
                        (var("s",@{typ "32 word \<times> state"}),
                         call
                           ("state.CP15",@{typ CP15},
                            mop(Snd,var("s",@{typ "32 word \<times> state"})),@{theory}))),
                   close
                     (var("v",@{typ CP15}),
                      mb(mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),
                                  @{typ "32 word \<times> state"}),
                               close
                                 (var("v",@{typ SCTLR}),
                                  mu(call("SCTLR.A",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),
                                     @{typ "32 word \<times> state"}))),
                            close
                              (var_b"b",
                               ite(var_b"b",mu(lt,@{typ "32 word \<times> state"}),
                                   mb(mr(close
                                           (var("s",@{typ "32 word \<times> state"}),
                                            call
                                              ("state.CP15",@{typ CP15},
                                               mop(Snd,var("s",@{typ "32 word \<times> state"})),
                                               @{theory}))),
                                      close
                                        (var("v",@{typ CP15}),
                                         mb(mu(call
                                                 ("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),
                                                  @{theory}),@{typ "32 word \<times> state"}),
                                            close
                                              (var("v",@{typ SCTLR}),
                                               mu(call
                                                    ("SCTLR.U",HOLogic.boolT,var("v",@{typ SCTLR}),
                                                     @{theory}),@{typ "32 word \<times> state"})))))))),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                md(call
                                     ("raise'exception",
                                      @{typ "state \<Rightarrow> (unit \<times> state)"},
                                      call
                                        ("exception.AlignmentFault",@{typ exception},
                                         var_w("address",32),@{theory}),@{theory}),w32),
                                mw(close
                                     (var("s",@{typ "32 word \<times> state"}),
                                      tp[call
                                           ("Align",w32,tp[var_w("address",32),var_n"size"],
                                            @{theory}),
                                         mop(Snd,var("s",@{typ "32 word \<times> state"}))])))))))),
            close
              (var_a HOLogic.unitT,
               mb(mr(close
                       (var("s",@{typ "32 word \<times> state"}),
                        mop(Fst,var("s",@{typ "32 word \<times> state"})))),
                  close
                    (var_w("v",32),
                     mb(mb(mu(tp[var_w("v",32),var_n"size"],@{typ "32 word \<times> state"}),
                           close
                             (var("v",@{typ "32 word \<times> nat"}),
                              md(call
                                   ("mem",@{typ "state \<Rightarrow> (bool list \<times> state)"},
                                    var("v",@{typ "32 word \<times> nat"}),@{theory}),w32))),
                        close
                          (var_v"v",
                           mn(var_v"v",
                              mb(mr(close
                                      (var("s",@{typ "bool list \<times> 32 word \<times> state"}),
                                       call
                                         ("state.CPSR",@{typ PSR},
                                          mop(Snd,
                                              mop(Snd,
                                                  var("s",
                                                      @{typ
                                                      "bool list \<times> 32 word \<times> state"}))),
                                          @{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mu(call
                                               ("PSR.E",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),
                                             @{typ "bool list \<times> 32 word \<times> state"}),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(mr(close
                                                         (var("s",
                                                              @{typ
                                                              "bool list \<times>
                                                               32 word \<times> state"}),
                                                          mop(Fst,
                                                              var("s",
                                                                  @{typ
                                                                  "bool list \<times>
                                                                   32 word \<times> state"})))),
                                                    close
                                                      (var_v"v",
                                                       mb(mb(mu(tp[var_v"v",var_n"size"],
                                                                @{typ
                                                                "bool list \<times>
                                                                 32 word \<times> state"}),
                                                             close
                                                               (var("v",
                                                                    @{typ "bool list \<times> nat"}),
                                                                md(md(call
                                                                        ("BigEndianReverse",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (bool list \<times> state)"},
                                                                         var("v",
                                                                             @{typ
                                                                             "bool list \<times> nat"}),
                                                                         @{theory}),w32),
                                                                   @{typ "bool list"}))),
                                                          close
                                                            (var_v"v",
                                                             mw(close
                                                                  (var("s",
                                                                       @{typ
                                                                       "bool list \<times>
                                                                        32 word \<times> state"}),
                                                                   tp[var_v"v",
                                                                      mop(Snd,
                                                                          var("s",
                                                                              @{typ
                                                                              "bool list \<times>
                                                                               32 word \<times>
                                                                               state"}))])))))),
                                                 mu(lu,
                                                    @{typ
                                                    "bool list \<times> 32 word \<times> state"})))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",
                                                       @{typ
                                                       "bool list \<times> 32 word \<times> state"}),
                                                   mop(Fst,
                                                       var("s",
                                                           @{typ
                                                           "bool list \<times>
                                                            32 word \<times> state"})))),
                                             close
                                               (var_v"v",
                                                mu(mop(Cast(@{typ "'N::len word"}),var_v"v"),
                                                   @{typ
                                                   "bool list \<times> 32 word \<times> state"})))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'MemA_with_priv",
   close
     (tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size",var_b"privileged"],
      mn(lx w32,
         mb(ite(call("Aligned",HOLogic.boolT,tp[var_w("address",32),var_n"size"],@{theory}),
                mw(close
                     (var("s",@{typ "32 word \<times> state"}),
                      tp[var_w("address",32),mop(Snd,var("s",@{typ "32 word \<times> state"}))])),
                mb(mr(close
                        (var("s",@{typ "32 word \<times> state"}),
                         call
                           ("state.CP15",@{typ CP15},
                            mop(Snd,var("s",@{typ "32 word \<times> state"})),@{theory}))),
                   close
                     (var("v",@{typ CP15}),
                      mb(mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),
                                  @{typ "32 word \<times> state"}),
                               close
                                 (var("v",@{typ SCTLR}),
                                  mu(call("SCTLR.A",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),
                                     @{typ "32 word \<times> state"}))),
                            close
                              (var_b"b",
                               ite(var_b"b",mu(lt,@{typ "32 word \<times> state"}),
                                   mb(mr(close
                                           (var("s",@{typ "32 word \<times> state"}),
                                            call
                                              ("state.CP15",@{typ CP15},
                                               mop(Snd,var("s",@{typ "32 word \<times> state"})),
                                               @{theory}))),
                                      close
                                        (var("v",@{typ CP15}),
                                         mb(mu(call
                                                 ("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),
                                                  @{theory}),@{typ "32 word \<times> state"}),
                                            close
                                              (var("v",@{typ SCTLR}),
                                               mu(call
                                                    ("SCTLR.U",HOLogic.boolT,var("v",@{typ SCTLR}),
                                                     @{theory}),@{typ "32 word \<times> state"})))))))),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                md(call
                                     ("raise'exception",
                                      @{typ "state \<Rightarrow> (unit \<times> state)"},
                                      call
                                        ("exception.AlignmentFault",@{typ exception},
                                         var_w("address",32),@{theory}),@{theory}),w32),
                                mw(close
                                     (var("s",@{typ "32 word \<times> state"}),
                                      tp[call
                                           ("Align",w32,tp[var_w("address",32),var_n"size"],
                                            @{theory}),
                                         mop(Snd,var("s",@{typ "32 word \<times> state"}))])))))))),
            close
              (var_a HOLogic.unitT,
               mb(mr(close
                       (var("s",@{typ "32 word \<times> state"}),
                        call
                          ("state.CPSR",@{typ PSR},
                           mop(Snd,var("s",@{typ "32 word \<times> state"})),@{theory}))),
                  close
                    (var("v",@{typ PSR}),
                     mb(mb(mu(call("PSR.E",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),
                              @{typ "32 word \<times> state"}),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  md(call
                                       ("BigEndianReverse",
                                        @{typ "state \<Rightarrow> (bool list \<times> state)"},
                                        tp[mop(Cast(@{typ "bool list"}),
                                               var("value",@{typ "'N::len word"})),var_n"size"],
                                        @{theory}),w32),
                                  mu(mop(Cast(@{typ "bool list"}),var("value",@{typ "'N::len word"})),
                                     @{typ "32 word \<times> state"})))),
                        close
                          (var_v"end_value",
                           mb(mr(close
                                   (var("s",@{typ "32 word \<times> state"}),
                                    mop(Fst,var("s",@{typ "32 word \<times> state"})))),
                              close
                                (var_w("v",32),
                                 mb(mu(tp[var_w("v",32),var_n"size"],@{typ "32 word \<times> state"}),
                                    close
                                      (var("x",@{typ "32 word \<times> nat"}),
                                       md(call
                                            ("write'mem",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[var_v"end_value",
                                                var("x",@{typ "32 word \<times> nat"})],@{theory}),
                                          w32))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("MemA_unpriv",
   close
     (tp[var_w("address",32),var_n"size"],
      call
        ("MemA_with_priv",@{typ "state \<Rightarrow> ('N::len word \<times> state)"},
         tp[var_w("address",32),var_n"size",lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'MemA_unpriv",
   close
     (tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size"],
      call
        ("write'MemA_with_priv",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size",lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("MemA",
   close
     (tp[var_w("address",32),var_n"size"],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mb(mu(tp[var_n"size",var_b"v"],qTy),
                  close
                    (var("v",@{typ "nat \<times> bool"}),
                     mu(tp[var_w("address",32),var("v",@{typ "nat \<times> bool"})],qTy))),
               close
                 (var("v",@{typ "32 word \<times> nat \<times> bool"}),
                  call
                    ("MemA_with_priv",@{typ "state \<Rightarrow> ('N::len word \<times> state)"},
                     var("v",@{typ "32 word \<times> nat \<times> bool"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'MemA",
   close
     (tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size"],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mb(mu(tp[var_n"size",var_b"v"],qTy),
                  close
                    (var("v",@{typ "nat \<times> bool"}),
                     mu(tp[var_w("address",32),var("v",@{typ "nat \<times> bool"})],qTy))),
               close
                 (var("x",@{typ "32 word \<times> nat \<times> bool"}),
                  call
                    ("write'MemA_with_priv",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     tp[var("value",@{typ "'N::len word"}),
                        var("x",@{typ "32 word \<times> nat \<times> bool"})],@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("MemU_with_priv",
   close
     (tp[var_w("address",32),var_n"size",var_b"privileged"],
      mn(bop(Rep,ln 64,lv"0"),
         mb(mr(close
                 (var("s",@{typ "bool list \<times> state"}),
                  call
                    ("state.CP15",@{typ CP15},mop(Snd,var("s",@{typ "bool list \<times> state"})),
                     @{theory}))),
            close
              (var("v",@{typ CP15}),
               mb(mb(mb(mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),
                                 @{typ "bool list \<times> state"}),
                              close
                                (var("v",@{typ SCTLR}),
                                 mu(call("SCTLR.A",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),
                                    @{typ "bool list \<times> state"}))),
                           close(var_b"v",mu(mop(Not,var_b"v"),@{typ "bool list \<times> state"}))),
                        close
                          (var_b"b",
                           ite(var_b"b",
                               mb(mr(close
                                       (var("s",@{typ "bool list \<times> state"}),
                                        call
                                          ("state.CP15",@{typ CP15},
                                           mop(Snd,var("s",@{typ "bool list \<times> state"})),
                                           @{theory}))),
                                  close
                                    (var("v",@{typ CP15}),
                                     mb(mb(mu(call
                                                ("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),
                                                 @{theory}),@{typ "bool list \<times> state"}),
                                           close
                                             (var("v",@{typ SCTLR}),
                                              mu(call
                                                   ("SCTLR.U",HOLogic.boolT,var("v",@{typ SCTLR}),
                                                    @{theory}),@{typ "bool list \<times> state"}))),
                                        close
                                          (var_b"v",
                                           mu(mop(Not,var_b"v"),@{typ "bool list \<times> state"}))))),
                               mu(lf,@{typ "bool list \<times> state"})))),
                     close
                       (var_b"b",
                        mu(ite(var_b"b",
                               call("Align",w32,tp[var_w("address",32),var_n"size"],@{theory}),
                               var_w("address",32)),@{typ "bool list \<times> state"}))),
                  close
                    (var_w("VA",32),
                     mb(ite(call("Aligned",HOLogic.boolT,tp[var_w("VA",32),var_n"size"],@{theory}),
                            mb(md(call
                                    ("MemA_with_priv",
                                     @{typ "state \<Rightarrow> ('N::len word \<times> state)"},
                                     tp[var_w("VA",32),var_n"size",var_b"privileged"],@{theory}),
                                  @{typ "bool list"}),
                               close
                                 (var("v",@{typ "'N::len word"}),
                                  mb(mu(mop(Cast(@{typ "bool list"}),var("v",@{typ "'N::len word"})),
                                        @{typ "bool list \<times> state"}),
                                     close
                                       (var_v"v",
                                        mw(close
                                             (var("s",@{typ "bool list \<times> state"}),
                                              tp[var_v"v",
                                                 mop(Snd,var("s",@{typ "bool list \<times> state"}))])))))),
                            mb(mr(close
                                    (var("s",@{typ "bool list \<times> state"}),
                                     call
                                       ("state.CP15",@{typ CP15},
                                        mop(Snd,var("s",@{typ "bool list \<times> state"})),
                                        @{theory}))),
                               close
                                 (var("v",@{typ CP15}),
                                  mb(mb(mu(call
                                             ("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),
                                              @{theory}),@{typ "bool list \<times> state"}),
                                        close
                                          (var("v",@{typ SCTLR}),
                                           mu(call
                                                ("SCTLR.A",HOLogic.boolT,var("v",@{typ SCTLR}),
                                                 @{theory}),@{typ "bool list \<times> state"}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            md(call
                                                 ("raise'exception",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  call
                                                    ("exception.AlignmentFault",@{typ exception},
                                                     var_w("address",32),@{theory}),@{theory}),
                                               @{typ "bool list"}),
                                            mb(forloop
                                                 (tp[ln 0,bop(Sub,var_n"size",ln 1),
                                                     close
                                                       (var_n"i",
                                                        mb(mr(close
                                                                (var("s",
                                                                     @{typ
                                                                     "bool list \<times> state"}),
                                                                 mop(Fst,
                                                                     var("s",
                                                                         @{typ
                                                                         "bool list \<times> state"})))),
                                                           close
                                                             (var_v"v",
                                                              mb(mb(md(call
                                                                         ("MemA_with_priv",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (8 word \<times> state)"},
                                                                          tp[bop(Add,var_w("VA",32),
                                                                                 mop(Cast w32,
                                                                                     var_n"i")),
                                                                             ln 1,var_b"privileged"],
                                                                          @{theory}),
                                                                       @{typ "bool list"}),
                                                                    close
                                                                      (var_w("v0",8),
                                                                       mb(mu(mop(Cast
                                                                                   (@{typ
                                                                                    "bool list"}),
                                                                                 var_w("v0",8)),
                                                                             @{typ
                                                                             "bool list \<times>
                                                                              state"}),
                                                                          close
                                                                            (var_v"v0",
                                                                             mu(bfi(bop(Add,
                                                                                        bop(Mul,
                                                                                            ln 8,
                                                                                            var_n"i"),
                                                                                        ln 7),
                                                                                    bop(Mul,ln 8,
                                                                                        var_n"i"),
                                                                                    var_v"v0",
                                                                                    var_v"v"),
                                                                                @{typ
                                                                                "bool list \<times>
                                                                                 state"}))))),
                                                                 close
                                                                   (var_v"v",
                                                                    mw(close
                                                                         (var("s",
                                                                              @{typ
                                                                              "bool list \<times>
                                                                               state"}),
                                                                          tp[var_v"v",
                                                                             mop(Snd,
                                                                                 var("s",
                                                                                     @{typ
                                                                                     "bool list \<times>
                                                                                      state"}))])))))))]),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mb(mr(close
                                                          (var("s",@{typ "bool list \<times> state"}),
                                                           call
                                                             ("state.CPSR",@{typ PSR},
                                                              mop(Snd,
                                                                  var("s",
                                                                      @{typ
                                                                      "bool list \<times> state"})),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ PSR}),
                                                        mb(mu(call
                                                                ("PSR.E",HOLogic.boolT,
                                                                 var("v",@{typ PSR}),@{theory}),
                                                              @{typ "bool list \<times> state"}),
                                                           close
                                                             (var_b"b",
                                                              ite(var_b"b",
                                                                  mb(mr(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "bool list \<times>
                                                                                state"}),
                                                                           mop(Fst,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "bool list \<times>
                                                                                    state"})))),
                                                                     close
                                                                       (var_v"v",
                                                                        mb(mb(mu(tp[var_v"v",
                                                                                    var_n"size"],
                                                                                 @{typ
                                                                                 "bool list \<times>
                                                                                  state"}),
                                                                              close
                                                                                (var("v",
                                                                                     @{typ
                                                                                     "bool list \<times>
                                                                                      nat"}),
                                                                                 md(call
                                                                                      ("BigEndianReverse",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (bool list \<times>
                                                                                         state)"},
                                                                                       var("v",
                                                                                           @{typ
                                                                                           "bool list \<times>
                                                                                            nat"}),
                                                                                       @{theory}),
                                                                                    @{typ
                                                                                    "bool list"}))),
                                                                           close
                                                                             (var_v"v",
                                                                              mw(close
                                                                                   (var("s",
                                                                                        @{typ
                                                                                        "bool list \<times>
                                                                                         state"}),
                                                                                    tp[var_v"v",
                                                                                       mop(Snd,
                                                                                           var("s",
                                                                                               @{typ
                                                                                               "bool list \<times>
                                                                                                state"}))])))))),
                                                                  mu(lu,
                                                                     @{typ
                                                                     "bool list \<times> state"})))))))))))))),
                        close
                          (var_a HOLogic.unitT,
                           mb(mr(close
                                   (var("s",@{typ "bool list \<times> state"}),
                                    mop(Fst,var("s",@{typ "bool list \<times> state"})))),
                              close
                                (var_v"v",
                                 mu(mop(Cast(@{typ "'N::len word"}),var_v"v"),
                                    @{typ "bool list \<times> state"}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'MemU_with_priv",
   close
     (tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size",var_b"privileged"],
      mb(mr(close(var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ CP15}),
            mb(mb(mb(mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),qTy),
                           close
                             (var("v",@{typ SCTLR}),
                              mu(call("SCTLR.A",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),qTy))),
                        close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                     close
                       (var_b"b",
                        ite(var_b"b",
                            mb(mr(close
                                    (var("s",qTy),
                                     call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                               close
                                 (var("v",@{typ CP15}),
                                  mb(mb(mu(call
                                             ("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),
                                              @{theory}),qTy),
                                        close
                                          (var("v",@{typ SCTLR}),
                                           mu(call
                                                ("SCTLR.U",HOLogic.boolT,var("v",@{typ SCTLR}),
                                                 @{theory}),qTy))),
                                     close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),mu(lf,qTy)))),
                  close
                    (var_b"b",
                     mu(ite(var_b"b",
                            call("Align",w32,tp[var_w("address",32),var_n"size"],@{theory}),
                            var_w("address",32)),qTy))),
               close
                 (var_w("VA",32),
                  ite(call("Aligned",HOLogic.boolT,tp[var_w("VA",32),var_n"size"],@{theory}),
                      call
                        ("write'MemA_with_priv",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         tp[var("value",@{typ "'N::len word"}),var_w("VA",32),var_n"size",
                            var_b"privileged"],@{theory}),
                      mb(mr(close
                              (var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ CP15}),
                            mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),
                                     qTy),
                                  close
                                    (var("v",@{typ SCTLR}),
                                     mu(call
                                          ("SCTLR.A",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),
                                        qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("raise'exception",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         call
                                           ("exception.AlignmentFault",@{typ exception},
                                            var_w("address",32),@{theory}),@{theory}),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mb(mu(call
                                                       ("PSR.E",HOLogic.boolT,var("v",@{typ PSR}),
                                                        @{theory}),qTy),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         call
                                                           ("BigEndianReverse",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool list \<times> state)"},
                                                            tp[mop(Cast(@{typ "bool list"}),
                                                                   var("value",@{typ "'N::len word"})),
                                                               var_n"size"],@{theory}),
                                                         mu(mop(Cast(@{typ "bool list"}),
                                                                var("value",@{typ "'N::len word"})),
                                                            qTy)))),
                                               close
                                                 (var_v"v",
                                                  forloop
                                                    (tp[ln 0,bop(Sub,var_n"size",ln 1),
                                                        close
                                                          (var_n"i",
                                                           call
                                                             ("write'MemA_with_priv",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[mop(Cast w8,
                                                                     ex(var_v"v",
                                                                        bop(Add,
                                                                            bop(Mul,ln 8,var_n"i"),
                                                                            ln 7),
                                                                        bop(Mul,ln 8,var_n"i"),
                                                                        @{typ "bool list"})),
                                                                 bop(Add,var_w("VA",32),
                                                                     mop(Cast w32,var_n"i")),ln 1,
                                                                 var_b"privileged"],@{theory}))])))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("MemU_unpriv",
   close
     (tp[var_w("address",32),var_n"size"],
      call
        ("MemU_with_priv",@{typ "state \<Rightarrow> ('N::len word \<times> state)"},
         tp[var_w("address",32),var_n"size",lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'MemU_unpriv",
   close
     (tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size"],
      call
        ("write'MemU_with_priv",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size",lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("MemU",
   close
     (tp[var_w("address",32),var_n"size"],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mb(mu(tp[var_n"size",var_b"v"],qTy),
                  close
                    (var("v",@{typ "nat \<times> bool"}),
                     mu(tp[var_w("address",32),var("v",@{typ "nat \<times> bool"})],qTy))),
               close
                 (var("v",@{typ "32 word \<times> nat \<times> bool"}),
                  call
                    ("MemU_with_priv",@{typ "state \<Rightarrow> ('N::len word \<times> state)"},
                     var("v",@{typ "32 word \<times> nat \<times> bool"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'MemU",
   close
     (tp[var("value",@{typ "'N::len word"}),var_w("address",32),var_n"size"],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mb(mu(tp[var_n"size",var_b"v"],qTy),
                  close
                    (var("v",@{typ "nat \<times> bool"}),
                     mu(tp[var_w("address",32),var("v",@{typ "nat \<times> bool"})],qTy))),
               close
                 (var("x",@{typ "32 word \<times> nat \<times> bool"}),
                  call
                    ("write'MemU_with_priv",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     tp[var("value",@{typ "'N::len word"}),
                        var("x",@{typ "32 word \<times> nat \<times> bool"})],@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("NullCheckIfThumbEE",
   close
     (var_w("n",4),
      mn(lf,
         mb(md(call
                 ("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                  @{theory}),HOLogic.boolT),
            close
              (var("v",@{typ InstrSet}),
               mb(mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ThumbEE","InstrSet",@{theory})),
                        @{typ "bool \<times> state"}),
                     close
                       (var_b"b",
                        ite(var_b"b",
                            itb([(eq(var_w("n",4),lw(15,4)),
                                  mb(md(const
                                          ("PC",
                                           @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                           @{theory}),HOLogic.boolT),
                                     close
                                       (var_w("v",32),
                                        mb(mb(mb(mu(tp[var_w("v",32),ln 4],
                                                    @{typ "bool \<times> state"}),
                                                 close
                                                   (var("v",@{typ "32 word \<times> nat"}),
                                                    mu(call
                                                         ("Align",w32,
                                                          var("v",@{typ "32 word \<times> nat"}),
                                                          @{theory}),@{typ "bool \<times> state"}))),
                                              close
                                                (var_w("v",32),
                                                 mu(eq(var_w("v",32),lw(0,32)),
                                                    @{typ "bool \<times> state"}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  md(call
                                                       ("raise'exception",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        call
                                                          ("exception.UNPREDICTABLE",
                                                           @{typ exception},ls"NullCheckIfThumbEE",
                                                           @{theory}),@{theory}),HOLogic.boolT),
                                                  mu(lu,@{typ "bool \<times> state"}))))))),
                                 (eq(var_w("n",4),lw(13,4)),
                                  mb(md(const
                                          ("SP",
                                           @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                           @{theory}),HOLogic.boolT),
                                     close
                                       (var_w("v",32),
                                        mb(mu(eq(var_w("v",32),lw(0,32)),
                                              @{typ "bool \<times> state"}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  md(call
                                                       ("raise'exception",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        call
                                                          ("exception.UNPREDICTABLE",
                                                           @{typ exception},ls"NullCheckIfThumbEE",
                                                           @{theory}),@{theory}),HOLogic.boolT),
                                                  mu(lu,@{typ "bool \<times> state"})))))))],
                                mb(md(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("n",4),@{theory}),HOLogic.boolT),
                                   close
                                     (var_w("v",32),
                                      mb(mu(eq(var_w("v",32),lw(0,32)),@{typ "bool \<times> state"}),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                mb(md(const
                                                        ("PC",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (32 word \<times> state)"},@{theory}),
                                                      HOLogic.boolT),
                                                   close
                                                     (var_w("v",32),
                                                      mb(mb(mb(mu(ex(var_w("v",32),ln 31,ln 1,
                                                                     (Word_Lib.mk_wordT 31)),
                                                                  @{typ "bool \<times> state"}),
                                                               close
                                                                 (var_w("v",31),
                                                                  mu(cc[var_w("v",31),lw(1,1)],
                                                                     @{typ "bool \<times> state"}))),
                                                            close
                                                              (var_w("v",32),
                                                               md(call
                                                                    ("write'LR",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     var_w("v",32),@{theory}),
                                                                  HOLogic.boolT))),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(md(call
                                                                    ("write'ITSTATE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     lw(0,8),@{theory}),
                                                                  HOLogic.boolT),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "bool \<times> state"}),
                                                                           call
                                                                             ("state.CP14",
                                                                              @{typ CP14},
                                                                              mop(Snd,
                                                                                  var("s",
                                                                                      @{typ
                                                                                      "bool \<times>
                                                                                       state"})),
                                                                              @{theory}))),
                                                                     close
                                                                       (var("v",@{typ CP14}),
                                                                        mb(mb(mb(mu(call
                                                                                      ("CP14.TEEHBR",
                                                                                       w32,
                                                                                       var("v",
                                                                                           @{typ CP14}),
                                                                                       @{theory}),
                                                                                    @{typ
                                                                                    "bool \<times>
                                                                                     state"}),
                                                                                 close
                                                                                   (var_w("v",32),
                                                                                    mu(bop(Sub,
                                                                                           var_w("v",32),
                                                                                           lw(4,32)),
                                                                                       @{typ
                                                                                       "bool \<times>
                                                                                        state"}))),
                                                                              close
                                                                                (var_w("v",32),
                                                                                 md(call
                                                                                      ("BranchWritePC",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       var_w("v",32),
                                                                                       @{theory}),
                                                                                    HOLogic.boolT))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mw(close
                                                                                   (var("s",
                                                                                        @{typ
                                                                                        "bool \<times>
                                                                                         state"}),
                                                                                    tp[lt,
                                                                                       mop(Snd,
                                                                                           var("s",
                                                                                               @{typ
                                                                                               "bool \<times>
                                                                                                state"}))])))))))))))),
                                                mu(lu,@{typ "bool \<times> state"}))))))),
                            mu(lu,@{typ "bool \<times> state"})))),
                  close
                    (var_a HOLogic.unitT,
                     mb(mr(close
                             (var("s",@{typ "bool \<times> state"}),
                              mop(Fst,var("s",@{typ "bool \<times> state"})))),
                        close(var_b"v",mu(mop(Not,var_b"v"),@{typ "bool \<times> state"}))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("HighestSetBit",
   close
     (var("w",@{typ "'N::len word"}),
      ite(eq(var("w",@{typ "'N::len word"}),ly(0,"N")),mop(Neg,li 1),
          mop(Cast HOLogic.intT,mop(Log,var("w",@{typ "'N::len word"}))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("CountLeadingZeroBits",
   close
     (var("w",@{typ "'N::len word"}),
      mop(Cast HOLogic.natT,
          bop(Sub,bop(Sub,mop(Cast HOLogic.intT,mop(Size,ly(0,"N"))),li 1),
              call("HighestSetBit",HOLogic.intT,var("w",@{typ "'N::len word"}),@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LowestSetBit",
   close
     (var("w",@{typ "'N::len word"}),
      call("CountLeadingZeroBits",HOLogic.natT,mop(Rev,var("w",@{typ "'N::len word"})),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("BitCount",
   close
     (var("w",@{typ "'N::len word"}),
      mn(ln 0,
         mb(forloop
              (tp[ln 0,bop(Sub,mop(Size,ly(0,"N")),ln 1),
                  close
                    (var_n"i",
                     ite(bop(Bit,var("w",@{typ "'N::len word"}),var_n"i"),
                         mb(mr(close
                                 (var("s",@{typ "nat \<times> state"}),
                                  mop(Fst,var("s",@{typ "nat \<times> state"})))),
                            close
                              (var_n"v",
                               mb(mu(bop(Add,var_n"v",ln 1),@{typ "nat \<times> state"}),
                                  close
                                    (var_n"v",
                                     mw(close
                                          (var("s",@{typ "nat \<times> state"}),
                                           tp[var_n"v",mop(Snd,var("s",@{typ "nat \<times> state"}))])))))),
                         mu(lu,@{typ "nat \<times> state"})))]),
            close
              (var_a HOLogic.unitT,
               mr(close
                    (var("s",@{typ "nat \<times> state"}),
                     mop(Fst,var("s",@{typ "nat \<times> state"})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignExtendFrom",
   close
     (tp[var("w",@{typ "'N::len word"}),var_n"p"],
      let'
        (var_n"s",bop(Sub,bop(Sub,mop(Size,ly(0,"N")),ln 1),var_n"p"),
         bop(Asr,bop(Lsl,var("w",@{typ "'N::len word"}),var_n"s"),var_n"s"))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Extend",
   close
     (tp[var_b"unsigned",var("w",@{typ "'M::len word"})],
      ite(var_b"unsigned",mop(Cast(@{typ "'N::len word"}),var("w",@{typ "'M::len word"})),
          mop(SE(@{typ "'N::len word"}),var("w",@{typ "'M::len word"})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("UInt",
   close
     (var("w",@{typ "'N::len word"}),
      mop(Cast HOLogic.intT,mop(Cast HOLogic.natT,var("w",@{typ "'N::len word"})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignedSatQ",
   close
     (tp[var_i"i",var_n"N"],
      mb(ite(bop(Lt,mop(Size,ly(0,"M")),var_n"N"),
             call
               ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                call("exception.ASSERT",@{typ exception},ls"SignedSatQ: M < N",@{theory}),@{theory}),
             mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mu(let'
                 (var_i"max",mop(Cast HOLogic.intT,bop(Exp,ln 2,bop(Sub,var_n"N",ln 1))),
                  itb([(bop(Gt,var_i"i",bop(Sub,var_i"max",li 1)),
                        tp[mop(Cast(@{typ "'M::len word"}),bop(Sub,var_i"max",li 1)),lt]),
                       (bop(Lt,var_i"i",mop(Neg,var_i"max")),
                        tp[mop(Cast(@{typ "'M::len word"}),mop(Neg,var_i"max")),lt])],
                      tp[mop(Cast(@{typ "'M::len word"}),var_i"i"),lf])),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UnsignedSatQ",
   close
     (tp[var_i"i",var_n"N"],
      mb(ite(bop(Lt,mop(Size,ly(0,"M")),var_n"N"),
             call
               ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                call("exception.ASSERT",@{typ exception},ls"UnsignedSatQ: M < N",@{theory}),
                @{theory}),mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mu(let'
                 (var_i"max",mop(Cast HOLogic.intT,bop(Sub,bop(Exp,ln 2,var_n"N"),ln 1)),
                  itb([(bop(Gt,var_i"i",var_i"max"),
                        tp[mop(Cast(@{typ "'M::len word"}),var_i"max"),lt]),
                       (bop(Lt,var_i"i",li 0),tp[ly(0,"M"),lt])],
                      tp[mop(Cast(@{typ "'M::len word"}),var_i"i"),lf])),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignedSat",
   close
     (tp[var_i"i",var_n"N"],
      mb(call
           ("SignedSatQ",@{typ "state \<Rightarrow> (('M::len word \<times> bool) \<times> state)"},
            tp[var_i"i",var_n"N"],@{theory}),
         close
           (var("v",@{typ "'M::len word \<times> bool"}),
            mu(mop(Fst,var("v",@{typ "'M::len word \<times> bool"})),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UnsignedSat",
   close
     (tp[var_i"i",var_n"N"],
      mb(call
           ("UnsignedSatQ",
            @{typ "state \<Rightarrow> (('M::len word \<times> bool) \<times> state)"},
            tp[var_i"i",var_n"N"],@{theory}),
         close
           (var("v",@{typ "'M::len word \<times> bool"}),
            mu(mop(Fst,var("v",@{typ "'M::len word \<times> bool"})),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LSL_C",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      mb(ite(eq(var_n"shift",ln 0),
             call
               ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                call("exception.ASSERT",@{typ exception},ls"LSL_C",@{theory}),@{theory}),mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mu(tp[bop(Lsl,var("x",@{typ "'N::len word"}),var_n"shift"),
                  bop(Bit,
                      cc[mop(Cast(@{typ "bool list"}),var("x",@{typ "'N::len word"})),
                         bop(Rep,var_n"shift",lv"0")],mop(Size,ly(0,"N")))],qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LSL",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      ite(eq(var_n"shift",ln 0),mu(var("x",@{typ "'N::len word"}),qTy),
          mb(call
               ("LSL_C",@{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                tp[var("x",@{typ "'N::len word"}),var_n"shift"],@{theory}),
             close
               (var("v",@{typ "'N::len word \<times> bool"}),
                mu(mop(Fst,var("v",@{typ "'N::len word \<times> bool"})),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LSR_C",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      mb(ite(eq(var_n"shift",ln 0),
             call
               ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                call("exception.ASSERT",@{typ exception},ls"LSR_C",@{theory}),@{theory}),mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mu(tp[bop(Lsr,var("x",@{typ "'N::len word"}),var_n"shift"),
                  bop(And,bop(Le,var_n"shift",mop(Size,ly(0,"N"))),
                      bop(Bit,var("x",@{typ "'N::len word"}),bop(Sub,var_n"shift",ln 1)))],qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LSR",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      ite(eq(var_n"shift",ln 0),mu(var("x",@{typ "'N::len word"}),qTy),
          mb(call
               ("LSR_C",@{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                tp[var("x",@{typ "'N::len word"}),var_n"shift"],@{theory}),
             close
               (var("v",@{typ "'N::len word \<times> bool"}),
                mu(mop(Fst,var("v",@{typ "'N::len word \<times> bool"})),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ASR_C",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      mb(ite(eq(var_n"shift",ln 0),
             call
               ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                call("exception.ASSERT",@{typ exception},ls"ASR_C",@{theory}),@{theory}),mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mu(tp[bop(Asr,var("x",@{typ "'N::len word"}),var_n"shift"),
                  bop(Bit,var("x",@{typ "'N::len word"}),
                      bop(Sub,mop(Min,tp[mop(Size,ly(0,"N")),var_n"shift"]),ln 1))],qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ASR",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      ite(eq(var_n"shift",ln 0),mu(var("x",@{typ "'N::len word"}),qTy),
          mb(call
               ("ASR_C",@{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                tp[var("x",@{typ "'N::len word"}),var_n"shift"],@{theory}),
             close
               (var("v",@{typ "'N::len word \<times> bool"}),
                mu(mop(Fst,var("v",@{typ "'N::len word \<times> bool"})),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ROR_C",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      mb(ite(eq(var_n"shift",ln 0),
             call
               ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                call("exception.ASSERT",@{typ exception},ls"ROR_C",@{theory}),@{theory}),mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mu(let'
                 (var("result",@{typ "'N::len word"}),
                  bop(Ror,var("x",@{typ "'N::len word"}),var_n"shift"),
                  tp[var("result",@{typ "'N::len word"}),
                     mop(Msb,var("result",@{typ "'N::len word"}))]),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ROR",
   close
     (tp[var("x",@{typ "'N::len word"}),var_n"shift"],
      ite(eq(var_n"shift",ln 0),mu(var("x",@{typ "'N::len word"}),qTy),
          mb(call
               ("ROR_C",@{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                tp[var("x",@{typ "'N::len word"}),var_n"shift"],@{theory}),
             close
               (var("v",@{typ "'N::len word \<times> bool"}),
                mu(mop(Fst,var("v",@{typ "'N::len word \<times> bool"})),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("RRX_C",
   close
     (tp[var("x",@{typ "'N::len word"}),var_b"carry_in"],
      tp[mop(Cast(@{typ "'N::len word"}),
             cc[mop(Cast(@{typ "bool list"}),var_b"carry_in"),
                ex(mop(Cast(@{typ "bool list"}),var("x",@{typ "'N::len word"})),
                   bop(Sub,mop(Size,ly(0,"N")),ln 1),ln 1,@{typ "bool list"})]),
         bop(Bit,var("x",@{typ "'N::len word"}),ln 0)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("RRX",
   close
     (tp[var("x",@{typ "'N::len word"}),var_b"carry_in"],
      mop(Fst,
          call
            ("RRX_C",@{typ "'N::len word \<times> bool"},
             tp[var("x",@{typ "'N::len word"}),var_b"carry_in"],@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("DecodeImmShift",
   close
     (tp[var_w("typ",2),var_w("imm5",5)],
      itb([(eq(var_w("typ",2),lw(0,2)),
            tp[lc("SRType_LSL","SRType",@{theory}),mop(Cast HOLogic.natT,var_w("imm5",5))]),
           (eq(var_w("typ",2),lw(1,2)),
            tp[lc("SRType_LSR","SRType",@{theory}),
               ite(eq(var_w("imm5",5),lw(0,5)),ln 32,mop(Cast HOLogic.natT,var_w("imm5",5)))]),
           (eq(var_w("typ",2),lw(2,2)),
            tp[lc("SRType_ASR","SRType",@{theory}),
               ite(eq(var_w("imm5",5),lw(0,5)),ln 32,mop(Cast HOLogic.natT,var_w("imm5",5)))]),
           (eq(var_w("typ",2),lw(3,2)),
            ite(eq(var_w("imm5",5),lw(0,5)),tp[lc("SRType_RRX","SRType",@{theory}),ln 1],
                tp[lc("SRType_ROR","SRType",@{theory}),mop(Cast HOLogic.natT,var_w("imm5",5))]))],
          lx(@{typ "SRType \<times> nat"}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("DecodeRegShift",
   close
     (var_w("typ",2),
      itb([(eq(var_w("typ",2),lw(0,2)),lc("SRType_LSL","SRType",@{theory})),
           (eq(var_w("typ",2),lw(1,2)),lc("SRType_LSR","SRType",@{theory})),
           (eq(var_w("typ",2),lw(2,2)),lc("SRType_ASR","SRType",@{theory})),
           (eq(var_w("typ",2),lw(3,2)),lc("SRType_ROR","SRType",@{theory}))],lx @{typ SRType})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Shift_C",
   close
     (tp[var("value",@{typ "'N::len word"}),var("typ",@{typ SRType}),var_n"amount",var_b"carry_in"],
      ite(eq(var_n"amount",ln 0),mu(tp[var("value",@{typ "'N::len word"}),var_b"carry_in"],qTy),
          cs(var("typ",@{typ SRType}),
             [(lc("SRType_LSL","SRType",@{theory}),
               call
                 ("LSL_C",
                  @{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                  tp[var("value",@{typ "'N::len word"}),var_n"amount"],@{theory})),
              (lc("SRType_LSR","SRType",@{theory}),
               call
                 ("LSR_C",
                  @{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                  tp[var("value",@{typ "'N::len word"}),var_n"amount"],@{theory})),
              (lc("SRType_ASR","SRType",@{theory}),
               call
                 ("ASR_C",
                  @{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                  tp[var("value",@{typ "'N::len word"}),var_n"amount"],@{theory})),
              (lc("SRType_ROR","SRType",@{theory}),
               call
                 ("ROR_C",
                  @{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
                  tp[var("value",@{typ "'N::len word"}),var_n"amount"],@{theory})),
              (lc("SRType_RRX","SRType",@{theory}),
               mu(call
                    ("RRX_C",@{typ "'N::len word \<times> bool"},
                     tp[var("value",@{typ "'N::len word"}),var_b"carry_in"],@{theory}),qTy))],
             @{context}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Shift",
   close
     (tp[var("value",@{typ "'N::len word"}),var("typ",@{typ SRType}),var_n"amount",var_b"carry_in"],
      mb(call
           ("Shift_C",@{typ "state \<Rightarrow> (('N::len word \<times> bool) \<times> state)"},
            tp[var("value",@{typ "'N::len word"}),var("typ",@{typ SRType}),var_n"amount",
               var_b"carry_in"],@{theory}),
         close
           (var("v",@{typ "'N::len word \<times> bool"}),
            mu(mop(Fst,var("v",@{typ "'N::len word \<times> bool"})),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("ARMExpandImm_C",
   close
     (tp[var_w("imm12",12),var_b"carry_in"],
      call
        ("Shift_C",@{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
         tp[mop(Cast w32,ex(var_w("imm12",12),ln 7,ln 0,w8)),lc("SRType_ROR","SRType",@{theory}),
            bop(Mul,ln 2,mop(Cast HOLogic.natT,ex(var_w("imm12",12),ln 11,ln 8,w4))),var_b"carry_in"],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ARMExpandImm",
   close
     (var_w("imm12",12),
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                     close(var_b"v",mu(tp[var_w("imm12",12),var_b"v"],qTy))),
                  close
                    (var("v",@{typ "12 word \<times> bool"}),
                     call
                       ("ARMExpandImm_C",
                        @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                        var("v",@{typ "12 word \<times> bool"}),@{theory}))),
               close
                 (var("v",@{typ "32 word \<times> bool"}),
                  mu(mop(Fst,var("v",@{typ "32 word \<times> bool"})),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ThumbExpandImm_C",
   close
     (tp[var_w("imm12",12),var_b"carry_in"],
      ite(eq(ex(var_w("imm12",12),ln 11,ln 10,(Word_Lib.mk_wordT 2)),lw(0,2)),
          mb(cs(ex(var_w("imm12",12),ln 9,ln 8,(Word_Lib.mk_wordT 2)),
                [(var_w("v",2),
                  itb([(eq(var_w("v",2),lw(0,2)),
                        mu(mop(Cast w32,ex(var_w("imm12",12),ln 7,ln 0,w8)),qTy)),
                       (eq(var_w("v",2),lw(1,2)),
                        ite(eq(ex(var_w("imm12",12),ln 7,ln 0,w8),lw(0,8)),
                            call
                              ("raise'exception",
                               @{typ "state \<Rightarrow> (32 word \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},ls"ThumbExpandImm_C",
                                  @{theory}),@{theory}),
                            mu(cc[lw(0,8),ex(var_w("imm12",12),ln 7,ln 0,w8),lw(0,8),
                                  ex(var_w("imm12",12),ln 7,ln 0,w8)],qTy))),
                       (eq(var_w("v",2),lw(2,2)),
                        ite(eq(ex(var_w("imm12",12),ln 7,ln 0,w8),lw(0,8)),
                            call
                              ("raise'exception",
                               @{typ "state \<Rightarrow> (32 word \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},ls"ThumbExpandImm_C",
                                  @{theory}),@{theory}),
                            mu(cc[ex(var_w("imm12",12),ln 7,ln 0,w8),lw(0,8),
                                  ex(var_w("imm12",12),ln 7,ln 0,w8),lw(0,8)],qTy))),
                       (eq(var_w("v",2),lw(3,2)),
                        ite(eq(ex(var_w("imm12",12),ln 7,ln 0,w8),lw(0,8)),
                            call
                              ("raise'exception",
                               @{typ "state \<Rightarrow> (32 word \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},ls"ThumbExpandImm_C",
                                  @{theory}),@{theory}),
                            mu(cc[ex(var_w("imm12",12),ln 7,ln 0,w8),
                                  ex(var_w("imm12",12),ln 7,ln 0,w8),
                                  ex(var_w("imm12",12),ln 7,ln 0,w8),
                                  ex(var_w("imm12",12),ln 7,ln 0,w8)],qTy)))],
                      lx(@{typ "state \<Rightarrow> (32 word \<times> state)"})))],@{context}),
             close(var_w("imm32",32),mu(tp[var_w("imm32",32),var_b"carry_in"],qTy))),
          call
            ("ROR_C",@{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
             tp[mop(Cast w32,cc[lw(1,1),ex(var_w("imm12",12),ln 6,ln 0,(Word_Lib.mk_wordT 7))]),
                mop(Cast HOLogic.natT,ex(var_w("imm12",12),ln 11,ln 7,(Word_Lib.mk_wordT 5)))],
             @{theory}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ExpandImm_C",
   close
     (tp[var_w("imm12",12),var_b"carry_in"],
      mb(mr(close(var("s",qTy),call("state.Encoding",@{typ Encoding},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Encoding}),
            mb(mu(eq(var("v",@{typ Encoding}),lc("Encoding_Thumb2","Encoding",@{theory})),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("ThumbExpandImm_C",
                         @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                         tp[var_w("imm12",12),var_b"carry_in"],@{theory}),
                      call
                        ("ARMExpandImm_C",
                         @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                         tp[var_w("imm12",12),var_b"carry_in"],@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("AddWithCarry",
   close
     (tp[var("x",@{typ "'N::len word"}),var("y",@{typ "'N::len word"}),var_b"carry_in"],
      let'
        (var_n"unsigned_sum",
         bop(Add,
             bop(Add,mop(Cast HOLogic.natT,var("x",@{typ "'N::len word"})),
                 mop(Cast HOLogic.natT,var("y",@{typ "'N::len word"}))),
             mop(Cast HOLogic.natT,var_b"carry_in")),
         let'
           (var("result",@{typ "'N::len word"}),
            mop(Cast(@{typ "'N::len word"}),var_n"unsigned_sum"),
            tp[var("result",@{typ "'N::len word"}),
               mop(Not,
                   eq(mop(Cast HOLogic.natT,var("result",@{typ "'N::len word"})),var_n"unsigned_sum")),
               mop(Not,
                   eq(mop(Cast HOLogic.intT,var("result",@{typ "'N::len word"})),
                      bop(Add,
                          bop(Add,mop(Cast HOLogic.intT,var("x",@{typ "'N::len word"})),
                              mop(Cast HOLogic.intT,var("y",@{typ "'N::len word"}))),
                          mop(Cast HOLogic.intT,var_b"carry_in"))))]))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("DataProcessingALU",
   close
     (tp[var_w("opc",4),var_w("a",32),var_w("b",32),var_b"c"],
      itb([(eq(var_w("opc",4),lw(0,4)),
            tp[bop(BAnd,var_w("a",32),var_w("b",32)),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(8,4)),
            tp[bop(BAnd,var_w("a",32),var_w("b",32)),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(1,4)),
            tp[bop(BXor,var_w("a",32),var_w("b",32)),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(9,4)),
            tp[bop(BXor,var_w("a",32),var_w("b",32)),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(2,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[var_w("a",32),mop(BNot,var_w("b",32)),lt],@{theory})),
           (eq(var_w("opc",4),lw(10,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[var_w("a",32),mop(BNot,var_w("b",32)),lt],@{theory})),
           (eq(var_w("opc",4),lw(3,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[mop(BNot,var_w("a",32)),var_w("b",32),lt],@{theory})),
           (eq(var_w("opc",4),lw(4,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[var_w("a",32),var_w("b",32),lf],@{theory})),
           (eq(var_w("opc",4),lw(11,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[var_w("a",32),var_w("b",32),lf],@{theory})),
           (eq(var_w("opc",4),lw(5,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[var_w("a",32),var_w("b",32),var_b"c"],@{theory})),
           (eq(var_w("opc",4),lw(6,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[var_w("a",32),mop(BNot,var_w("b",32)),var_b"c"],@{theory})),
           (eq(var_w("opc",4),lw(7,4)),
            call
              ("AddWithCarry",@{typ "32 word \<times> bool \<times> bool"},
               tp[mop(BNot,var_w("a",32)),var_w("b",32),var_b"c"],@{theory})),
           (eq(var_w("opc",4),lw(12,4)),
            tp[bop(BOr,var_w("a",32),var_w("b",32)),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(13,4)),tp[var_w("b",32),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(14,4)),
            tp[bop(BAnd,var_w("a",32),mop(BNot,var_w("b",32))),var_b"c",lx HOLogic.boolT]),
           (eq(var_w("opc",4),lw(15,4)),
            tp[bop(BOr,var_w("a",32),mop(BNot,var_w("b",32))),var_b"c",lx HOLogic.boolT])],
          lx(@{typ "32 word \<times> bool \<times> bool"}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("ArithmeticOpcode",
   close
     (var_w("opc",4),
      bop(And,bop(Or,bop(Bit,var_w("opc",4),ln 2),bop(Bit,var_w("opc",4),ln 1)),
          mop(Not,bop(And,bop(Bit,var_w("opc",4),ln 3),bop(Bit,var_w("opc",4),ln 2))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ExcVectorBase",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ CP15}),
            mb(mb(mu(call("CP15.SCTLR",@{typ SCTLR},var("v",@{typ CP15}),@{theory}),qTy),
                  close
                    (var("v",@{typ SCTLR}),
                     mu(call("SCTLR.V",HOLogic.boolT,var("v",@{typ SCTLR}),@{theory}),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",mu(lw(268431360,32),qTy),
                      mb(call
                           ("HaveSecurityExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                mb(mr(close
                                        (var("s",qTy),
                                         call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                   close
                                     (var("v",@{typ CP15}),
                                      mu(call("CP15.VBAR",w32,var("v",@{typ CP15}),@{theory}),qTy))),
                                mu(lw(0,32),qTy)))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("EnterMonitorMode",
   close
     (tp[var("new_spsr_value",@{typ PSR}),var_w("new_lr_value",32),var_w("vect_offset",32)],
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(tp[var("v",@{typ PSR}),lw(22,5)],qTy),
                     close
                       (var("v",@{typ "PSR \<times> 5 word"}),
                        mu(rupd("PSR.M",var("v",@{typ "PSR \<times> 5 word"}),@{theory}),qTy))),
                  close
                    (var("v",@{typ PSR}),
                     mw(close
                          (var("s",qTy),
                           rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("write'SPSR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("new_spsr_value",@{typ PSR}),@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[var_w("new_lr_value",32),lw(14,4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mb(mu(tp[var("v",@{typ PSR}),lf],qTy),
                                             close
                                               (var("v",@{typ "PSR \<times> bool"}),
                                                mu(rupd
                                                     ("PSR.J",var("v",@{typ "PSR \<times> bool"}),
                                                      @{theory}),qTy))),
                                          close
                                            (var("v",@{typ PSR}),
                                             mw(close
                                                  (var("s",qTy),
                                                   rupd
                                                     ("state.CPSR",
                                                      tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mb(mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CP15",@{typ CP15},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v0",@{typ CP15}),
                                                               mb(mb(mu(call
                                                                          ("CP15.SCTLR",
                                                                           @{typ SCTLR},
                                                                           var("v0",@{typ CP15}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var("v",@{typ SCTLR}),
                                                                        mu(call
                                                                             ("SCTLR.TE",
                                                                              HOLogic.boolT,
                                                                              var("v",@{typ SCTLR}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var_b"v0",
                                                                     mu(tp[var("v",@{typ PSR}),
                                                                           var_b"v0"],qTy))))),
                                                         close
                                                           (var("v",@{typ "PSR \<times> bool"}),
                                                            mu(rupd
                                                                 ("PSR.T",
                                                                  var("v",@{typ "PSR \<times> bool"}),
                                                                  @{theory}),qTy))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.CPSR",
                                                                  tp[var("s",qTy),
                                                                     var("v",@{typ PSR})],@{theory}))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.CPSR",@{typ PSR},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mb(mb(mb(mb(mr(close
                                                                             (var("s",qTy),
                                                                              call
                                                                                ("state.CP15",
                                                                                 @{typ CP15},
                                                                                 var("s",qTy),
                                                                                 @{theory}))),
                                                                        close
                                                                          (var("v0",@{typ CP15}),
                                                                           mb(mb(mu(call
                                                                                      ("CP15.SCTLR",
                                                                                       @{typ SCTLR},
                                                                                       var("v0",
                                                                                           @{typ CP15}),
                                                                                       @{theory}),
                                                                                    qTy),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ SCTLR}),
                                                                                    mu(call
                                                                                         ("SCTLR.EE",
                                                                                          HOLogic.boolT,
                                                                                          var("v",
                                                                                              @{typ SCTLR}),
                                                                                          @{theory}),
                                                                                       qTy))),
                                                                              close
                                                                                (var_b"v0",
                                                                                 mu(tp[var("v",
                                                                                           @{typ PSR}),
                                                                                       var_b"v0"],
                                                                                    qTy))))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        mu(rupd
                                                                             ("PSR.E",
                                                                              var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var("v",@{typ PSR}),
                                                                     mw(close
                                                                          (var("s",qTy),
                                                                           rupd
                                                                             ("state.CPSR",
                                                                              tp[var("s",qTy),
                                                                                 var("v",@{typ PSR})],
                                                                              @{theory}))))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.CPSR",
                                                                              @{typ PSR},
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var("v",@{typ PSR}),
                                                                        mb(mb(mb(mu(tp[var("v",
                                                                                           @{typ PSR}),
                                                                                       lt],qTy),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ
                                                                                        "PSR \<times>
                                                                                         bool"}),
                                                                                    mu(rupd
                                                                                         ("PSR.A",
                                                                                          var("v",
                                                                                              @{typ
                                                                                              "PSR \<times>
                                                                                               bool"}),
                                                                                          @{theory}),
                                                                                       qTy))),
                                                                              close
                                                                                (var("v",@{typ PSR}),
                                                                                 mw(close
                                                                                      (var("s",qTy),
                                                                                       rupd
                                                                                         ("state.CPSR",
                                                                                          tp[var("s",
                                                                                                 qTy),
                                                                                             var("v",
                                                                                                 @{typ PSR})],
                                                                                          @{theory}))))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.CPSR",
                                                                                          @{typ PSR},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ PSR}),
                                                                                    mb(mb(mb(mu(tp[var("v",
                                                                                                       @{typ PSR}),
                                                                                                   lt],
                                                                                                qTy),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ
                                                                                                    "PSR \<times>
                                                                                                     bool"}),
                                                                                                mu(rupd
                                                                                                     ("PSR.F",
                                                                                                      var("v",
                                                                                                          @{typ
                                                                                                          "PSR \<times>
                                                                                                           bool"}),
                                                                                                      @{theory}),
                                                                                                   qTy))),
                                                                                          close
                                                                                            (var("v",
                                                                                                 @{typ PSR}),
                                                                                             mw(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   rupd
                                                                                                     ("state.CPSR",
                                                                                                      tp[var("s",
                                                                                                             qTy),
                                                                                                         var("v",
                                                                                                             @{typ PSR})],
                                                                                                      @{theory}))))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(mr(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   call
                                                                                                     ("state.CPSR",
                                                                                                      @{typ PSR},
                                                                                                      var("s",
                                                                                                          qTy),
                                                                                                      @{theory}))),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ PSR}),
                                                                                                mb(mb(mb(mu(tp[var("v",
                                                                                                                   @{typ PSR}),
                                                                                                               lt],
                                                                                                            qTy),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "PSR \<times>
                                                                                                                 bool"}),
                                                                                                            mu(rupd
                                                                                                                 ("PSR.I",
                                                                                                                  var("v",
                                                                                                                      @{typ
                                                                                                                      "PSR \<times>
                                                                                                                       bool"}),
                                                                                                                  @{theory}),
                                                                                                               qTy))),
                                                                                                      close
                                                                                                        (var("v",
                                                                                                             @{typ PSR}),
                                                                                                         mw(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               rupd
                                                                                                                 ("state.CPSR",
                                                                                                                  tp[var("s",
                                                                                                                         qTy),
                                                                                                                     var("v",
                                                                                                                         @{typ PSR})],
                                                                                                                  @{theory}))))),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(mr(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               call
                                                                                                                 ("state.CPSR",
                                                                                                                  @{typ PSR},
                                                                                                                  var("s",
                                                                                                                      qTy),
                                                                                                                  @{theory}))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ PSR}),
                                                                                                            mb(mb(mb(mu(tp[var("v",
                                                                                                                               @{typ PSR}),
                                                                                                                           lw(0,
                                                                                                                              8)],
                                                                                                                        qTy),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ
                                                                                                                            "PSR \<times>
                                                                                                                             8 word"}),
                                                                                                                        mu(rupd
                                                                                                                             ("PSR.IT",
                                                                                                                              var("v",
                                                                                                                                  @{typ
                                                                                                                                  "PSR \<times>
                                                                                                                                   8 word"}),
                                                                                                                              @{theory}),
                                                                                                                           qTy))),
                                                                                                                  close
                                                                                                                    (var("v",
                                                                                                                         @{typ PSR}),
                                                                                                                     mw(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           rupd
                                                                                                                             ("state.CPSR",
                                                                                                                              tp[var("s",
                                                                                                                                     qTy),
                                                                                                                                 var("v",
                                                                                                                                     @{typ PSR})],
                                                                                                                              @{theory}))))),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(mr(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           call
                                                                                                                             ("state.CP15",
                                                                                                                              @{typ CP15},
                                                                                                                              var("s",
                                                                                                                                  qTy),
                                                                                                                              @{theory}))),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ CP15}),
                                                                                                                        mb(mb(mu(call
                                                                                                                                   ("CP15.MVBAR",
                                                                                                                                    w32,
                                                                                                                                    var("v",
                                                                                                                                        @{typ CP15}),
                                                                                                                                    @{theory}),
                                                                                                                                 qTy),
                                                                                                                              close
                                                                                                                                (var_w("v",32),
                                                                                                                                 mu(bop(Add,
                                                                                                                                        var_w("v",32),
                                                                                                                                        var_w("vect_offset",32)),
                                                                                                                                    qTy))),
                                                                                                                           close
                                                                                                                             (var_w("v",32),
                                                                                                                              call
                                                                                                                                ("BranchTo",
                                                                                                                                 @{typ
                                                                                                                                 "state \<Rightarrow>
                                                                                                                                  (unit \<times>
                                                                                                                                   state)"},
                                                                                                                                 var_w("v",32),
                                                                                                                                 @{theory})))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("EnterHypMode",
   close
     (tp[var("new_spsr_value",@{typ PSR}),var_w("new_lr_value",32),var_w("vect_offset",32)],
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(tp[var("v",@{typ PSR}),lw(26,5)],qTy),
                     close
                       (var("v",@{typ "PSR \<times> 5 word"}),
                        mu(rupd("PSR.M",var("v",@{typ "PSR \<times> 5 word"}),@{theory}),qTy))),
                  close
                    (var("v",@{typ PSR}),
                     mw(close
                          (var("s",qTy),
                           rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("write'SPSR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("new_spsr_value",@{typ PSR}),@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[var_w("new_lr_value",32),lw(14,4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mb(mu(tp[var("v",@{typ PSR}),lf],qTy),
                                             close
                                               (var("v",@{typ "PSR \<times> bool"}),
                                                mu(rupd
                                                     ("PSR.J",var("v",@{typ "PSR \<times> bool"}),
                                                      @{theory}),qTy))),
                                          close
                                            (var("v",@{typ PSR}),
                                             mw(close
                                                  (var("s",qTy),
                                                   rupd
                                                     ("state.CPSR",
                                                      tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mb(mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CP15",@{typ CP15},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v0",@{typ CP15}),
                                                               mb(mb(mu(call
                                                                          ("CP15.SCTLR",
                                                                           @{typ SCTLR},
                                                                           var("v0",@{typ CP15}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var("v",@{typ SCTLR}),
                                                                        mu(call
                                                                             ("SCTLR.TE",
                                                                              HOLogic.boolT,
                                                                              var("v",@{typ SCTLR}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var_b"v0",
                                                                     mu(tp[var("v",@{typ PSR}),
                                                                           var_b"v0"],qTy))))),
                                                         close
                                                           (var("v",@{typ "PSR \<times> bool"}),
                                                            mu(rupd
                                                                 ("PSR.T",
                                                                  var("v",@{typ "PSR \<times> bool"}),
                                                                  @{theory}),qTy))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.CPSR",
                                                                  tp[var("s",qTy),
                                                                     var("v",@{typ PSR})],@{theory}))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.CPSR",@{typ PSR},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mb(mb(mb(mb(mr(close
                                                                             (var("s",qTy),
                                                                              call
                                                                                ("state.CP15",
                                                                                 @{typ CP15},
                                                                                 var("s",qTy),
                                                                                 @{theory}))),
                                                                        close
                                                                          (var("v0",@{typ CP15}),
                                                                           mb(mb(mu(call
                                                                                      ("CP15.SCTLR",
                                                                                       @{typ SCTLR},
                                                                                       var("v0",
                                                                                           @{typ CP15}),
                                                                                       @{theory}),
                                                                                    qTy),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ SCTLR}),
                                                                                    mu(call
                                                                                         ("SCTLR.EE",
                                                                                          HOLogic.boolT,
                                                                                          var("v",
                                                                                              @{typ SCTLR}),
                                                                                          @{theory}),
                                                                                       qTy))),
                                                                              close
                                                                                (var_b"v0",
                                                                                 mu(tp[var("v",
                                                                                           @{typ PSR}),
                                                                                       var_b"v0"],
                                                                                    qTy))))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        mu(rupd
                                                                             ("PSR.E",
                                                                              var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var("v",@{typ PSR}),
                                                                     mw(close
                                                                          (var("s",qTy),
                                                                           rupd
                                                                             ("state.CPSR",
                                                                              tp[var("s",qTy),
                                                                                 var("v",@{typ PSR})],
                                                                              @{theory}))))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.CPSR",
                                                                              @{typ PSR},
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var("v",@{typ PSR}),
                                                                        mb(mb(mb(mu(tp[var("v",
                                                                                           @{typ PSR}),
                                                                                       lt],qTy),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ
                                                                                        "PSR \<times>
                                                                                         bool"}),
                                                                                    mu(rupd
                                                                                         ("PSR.A",
                                                                                          var("v",
                                                                                              @{typ
                                                                                              "PSR \<times>
                                                                                               bool"}),
                                                                                          @{theory}),
                                                                                       qTy))),
                                                                              close
                                                                                (var("v",@{typ PSR}),
                                                                                 mw(close
                                                                                      (var("s",qTy),
                                                                                       rupd
                                                                                         ("state.CPSR",
                                                                                          tp[var("s",
                                                                                                 qTy),
                                                                                             var("v",
                                                                                                 @{typ PSR})],
                                                                                          @{theory}))))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.CPSR",
                                                                                          @{typ PSR},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ PSR}),
                                                                                    mb(mb(mb(mu(tp[var("v",
                                                                                                       @{typ PSR}),
                                                                                                   lt],
                                                                                                qTy),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ
                                                                                                    "PSR \<times>
                                                                                                     bool"}),
                                                                                                mu(rupd
                                                                                                     ("PSR.F",
                                                                                                      var("v",
                                                                                                          @{typ
                                                                                                          "PSR \<times>
                                                                                                           bool"}),
                                                                                                      @{theory}),
                                                                                                   qTy))),
                                                                                          close
                                                                                            (var("v",
                                                                                                 @{typ PSR}),
                                                                                             mw(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   rupd
                                                                                                     ("state.CPSR",
                                                                                                      tp[var("s",
                                                                                                             qTy),
                                                                                                         var("v",
                                                                                                             @{typ PSR})],
                                                                                                      @{theory}))))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(mr(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   call
                                                                                                     ("state.CPSR",
                                                                                                      @{typ PSR},
                                                                                                      var("s",
                                                                                                          qTy),
                                                                                                      @{theory}))),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ PSR}),
                                                                                                mb(mb(mb(mu(tp[var("v",
                                                                                                                   @{typ PSR}),
                                                                                                               lt],
                                                                                                            qTy),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "PSR \<times>
                                                                                                                 bool"}),
                                                                                                            mu(rupd
                                                                                                                 ("PSR.I",
                                                                                                                  var("v",
                                                                                                                      @{typ
                                                                                                                      "PSR \<times>
                                                                                                                       bool"}),
                                                                                                                  @{theory}),
                                                                                                               qTy))),
                                                                                                      close
                                                                                                        (var("v",
                                                                                                             @{typ PSR}),
                                                                                                         mw(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               rupd
                                                                                                                 ("state.CPSR",
                                                                                                                  tp[var("s",
                                                                                                                         qTy),
                                                                                                                     var("v",
                                                                                                                         @{typ PSR})],
                                                                                                                  @{theory}))))),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(mr(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               call
                                                                                                                 ("state.CPSR",
                                                                                                                  @{typ PSR},
                                                                                                                  var("s",
                                                                                                                      qTy),
                                                                                                                  @{theory}))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ PSR}),
                                                                                                            mb(mb(mb(mu(tp[var("v",
                                                                                                                               @{typ PSR}),
                                                                                                                           lw(0,
                                                                                                                              8)],
                                                                                                                        qTy),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ
                                                                                                                            "PSR \<times>
                                                                                                                             8 word"}),
                                                                                                                        mu(rupd
                                                                                                                             ("PSR.IT",
                                                                                                                              var("v",
                                                                                                                                  @{typ
                                                                                                                                  "PSR \<times>
                                                                                                                                   8 word"}),
                                                                                                                              @{theory}),
                                                                                                                           qTy))),
                                                                                                                  close
                                                                                                                    (var("v",
                                                                                                                         @{typ PSR}),
                                                                                                                     mw(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           rupd
                                                                                                                             ("state.CPSR",
                                                                                                                              tp[var("s",
                                                                                                                                     qTy),
                                                                                                                                 var("v",
                                                                                                                                     @{typ PSR})],
                                                                                                                              @{theory}))))),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(mr(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           call
                                                                                                                             ("state.CP15",
                                                                                                                              @{typ CP15},
                                                                                                                              var("s",
                                                                                                                                  qTy),
                                                                                                                              @{theory}))),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ CP15}),
                                                                                                                        mb(mb(mu(call
                                                                                                                                   ("CP15.MVBAR",
                                                                                                                                    w32,
                                                                                                                                    var("v",
                                                                                                                                        @{typ CP15}),
                                                                                                                                    @{theory}),
                                                                                                                                 qTy),
                                                                                                                              close
                                                                                                                                (var_w("v",32),
                                                                                                                                 mu(bop(Add,
                                                                                                                                        var_w("v",32),
                                                                                                                                        var_w("vect_offset",32)),
                                                                                                                                    qTy))),
                                                                                                                           close
                                                                                                                             (var_w("v",32),
                                                                                                                              call
                                                                                                                                ("BranchTo",
                                                                                                                                 @{typ
                                                                                                                                 "state \<Rightarrow>
                                                                                                                                  (unit \<times>
                                                                                                                                   state)"},
                                                                                                                                 var_w("v",32),
                                                                                                                                 @{theory})))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeReset",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(tp[var("v",@{typ PSR}),lw(19,5)],qTy),
                     close
                       (var("v",@{typ "PSR \<times> 5 word"}),
                        mu(rupd("PSR.M",var("v",@{typ "PSR \<times> 5 word"}),@{theory}),qTy))),
                  close
                    (var("v",@{typ PSR}),
                     mw(close
                          (var("s",qTy),
                           rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("HaveSecurityExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                        @{theory}),
                     close
                       (var_b"v",
                        mb(ite(var_b"v",
                               mb(mr(close
                                       (var("s",qTy),
                                        call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                  close
                                    (var("v",@{typ CP15}),
                                     mb(mu(call
                                             ("CP15.SCR",@{typ SCR},var("v",@{typ CP15}),@{theory}),
                                           qTy),
                                        close
                                          (var("x0",@{typ SCR}),
                                           mb(mr(close
                                                   (var("s",qTy),
                                                    call
                                                      ("state.CP15",@{typ CP15},var("s",qTy),
                                                       @{theory}))),
                                              close
                                                (var("v",@{typ CP15}),
                                                 mb(mb(mu(tp[var("v",@{typ CP15}),
                                                             rupd
                                                               ("SCR.NS",
                                                                tp[var("x0",@{typ SCR}),lf],
                                                                @{theory})],qTy),
                                                       close
                                                         (var("v",@{typ "CP15 \<times> SCR"}),
                                                          mu(rupd
                                                               ("CP15.SCR",
                                                                var("v",@{typ "CP15 \<times> SCR"}),
                                                                @{theory}),qTy))),
                                                    close
                                                      (var("v",@{typ CP15}),
                                                       mw(close
                                                            (var("s",qTy),
                                                             rupd
                                                               ("state.CP15",
                                                                tp[var("s",qTy),var("v",@{typ CP15})],
                                                                @{theory}))))))))))),mu(lu,qTy)),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                             close
                                               (var("v",@{typ "PSR \<times> bool"}),
                                                mu(rupd
                                                     ("PSR.I",var("v",@{typ "PSR \<times> bool"}),
                                                      @{theory}),qTy))),
                                          close
                                            (var("v",@{typ PSR}),
                                             mw(close
                                                  (var("s",qTy),
                                                   rupd
                                                     ("state.CPSR",
                                                      tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                         close
                                                           (var("v",@{typ "PSR \<times> bool"}),
                                                            mu(rupd
                                                                 ("PSR.F",
                                                                  var("v",@{typ "PSR \<times> bool"}),
                                                                  @{theory}),qTy))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.CPSR",
                                                                  tp[var("s",qTy),
                                                                     var("v",@{typ PSR})],@{theory}))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.CPSR",@{typ PSR},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mb(mb(mb(mu(tp[var("v",@{typ PSR}),lt],
                                                                        qTy),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        mu(rupd
                                                                             ("PSR.A",
                                                                              var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var("v",@{typ PSR}),
                                                                     mw(close
                                                                          (var("s",qTy),
                                                                           rupd
                                                                             ("state.CPSR",
                                                                              tp[var("s",qTy),
                                                                                 var("v",@{typ PSR})],
                                                                              @{theory}))))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.CPSR",
                                                                              @{typ PSR},
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var("v",@{typ PSR}),
                                                                        mb(mb(mb(mu(tp[var("v",
                                                                                           @{typ PSR}),
                                                                                       lw(0,8)],qTy),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ
                                                                                        "PSR \<times>
                                                                                         8 word"}),
                                                                                    mu(rupd
                                                                                         ("PSR.IT",
                                                                                          var("v",
                                                                                              @{typ
                                                                                              "PSR \<times>
                                                                                               8 word"}),
                                                                                          @{theory}),
                                                                                       qTy))),
                                                                              close
                                                                                (var("v",@{typ PSR}),
                                                                                 mw(close
                                                                                      (var("s",qTy),
                                                                                       rupd
                                                                                         ("state.CPSR",
                                                                                          tp[var("s",
                                                                                                 qTy),
                                                                                             var("v",
                                                                                                 @{typ PSR})],
                                                                                          @{theory}))))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.CPSR",
                                                                                          @{typ PSR},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ PSR}),
                                                                                    mb(mb(mb(mu(tp[var("v",
                                                                                                       @{typ PSR}),
                                                                                                   lf],
                                                                                                qTy),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ
                                                                                                    "PSR \<times>
                                                                                                     bool"}),
                                                                                                mu(rupd
                                                                                                     ("PSR.J",
                                                                                                      var("v",
                                                                                                          @{typ
                                                                                                          "PSR \<times>
                                                                                                           bool"}),
                                                                                                      @{theory}),
                                                                                                   qTy))),
                                                                                          close
                                                                                            (var("v",
                                                                                                 @{typ PSR}),
                                                                                             mw(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   rupd
                                                                                                     ("state.CPSR",
                                                                                                      tp[var("s",
                                                                                                             qTy),
                                                                                                         var("v",
                                                                                                             @{typ PSR})],
                                                                                                      @{theory}))))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(mr(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   call
                                                                                                     ("state.CPSR",
                                                                                                      @{typ PSR},
                                                                                                      var("s",
                                                                                                          qTy),
                                                                                                      @{theory}))),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ PSR}),
                                                                                                mb(mb(mb(mb(mr(close
                                                                                                                 (var("s",
                                                                                                                      qTy),
                                                                                                                  call
                                                                                                                    ("state.CP15",
                                                                                                                     @{typ CP15},
                                                                                                                     var("s",
                                                                                                                         qTy),
                                                                                                                     @{theory}))),
                                                                                                            close
                                                                                                              (var("v0",
                                                                                                                   @{typ CP15}),
                                                                                                               mb(mb(mu(call
                                                                                                                          ("CP15.SCTLR",
                                                                                                                           @{typ SCTLR},
                                                                                                                           var("v0",
                                                                                                                               @{typ CP15}),
                                                                                                                           @{theory}),
                                                                                                                        qTy),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ SCTLR}),
                                                                                                                        mu(call
                                                                                                                             ("SCTLR.TE",
                                                                                                                              HOLogic.boolT,
                                                                                                                              var("v",
                                                                                                                                  @{typ SCTLR}),
                                                                                                                              @{theory}),
                                                                                                                           qTy))),
                                                                                                                  close
                                                                                                                    (var_b"v0",
                                                                                                                     mu(tp[var("v",
                                                                                                                               @{typ PSR}),
                                                                                                                           var_b"v0"],
                                                                                                                        qTy))))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "PSR \<times>
                                                                                                                 bool"}),
                                                                                                            mu(rupd
                                                                                                                 ("PSR.T",
                                                                                                                  var("v",
                                                                                                                      @{typ
                                                                                                                      "PSR \<times>
                                                                                                                       bool"}),
                                                                                                                  @{theory}),
                                                                                                               qTy))),
                                                                                                      close
                                                                                                        (var("v",
                                                                                                             @{typ PSR}),
                                                                                                         mw(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               rupd
                                                                                                                 ("state.CPSR",
                                                                                                                  tp[var("s",
                                                                                                                         qTy),
                                                                                                                     var("v",
                                                                                                                         @{typ PSR})],
                                                                                                                  @{theory}))))),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(mr(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               call
                                                                                                                 ("state.CPSR",
                                                                                                                  @{typ PSR},
                                                                                                                  var("s",
                                                                                                                      qTy),
                                                                                                                  @{theory}))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ PSR}),
                                                                                                            mb(mb(mb(mb(mr(close
                                                                                                                             (var("s",
                                                                                                                                  qTy),
                                                                                                                              call
                                                                                                                                ("state.CP15",
                                                                                                                                 @{typ CP15},
                                                                                                                                 var("s",
                                                                                                                                     qTy),
                                                                                                                                 @{theory}))),
                                                                                                                        close
                                                                                                                          (var("v0",
                                                                                                                               @{typ CP15}),
                                                                                                                           mb(mb(mu(call
                                                                                                                                      ("CP15.SCTLR",
                                                                                                                                       @{typ SCTLR},
                                                                                                                                       var("v0",
                                                                                                                                           @{typ CP15}),
                                                                                                                                       @{theory}),
                                                                                                                                    qTy),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ SCTLR}),
                                                                                                                                    mu(call
                                                                                                                                         ("SCTLR.EE",
                                                                                                                                          HOLogic.boolT,
                                                                                                                                          var("v",
                                                                                                                                              @{typ SCTLR}),
                                                                                                                                          @{theory}),
                                                                                                                                       qTy))),
                                                                                                                              close
                                                                                                                                (var_b"v0",
                                                                                                                                 mu(tp[var("v",
                                                                                                                                           @{typ PSR}),
                                                                                                                                       var_b"v0"],
                                                                                                                                    qTy))))),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ
                                                                                                                            "PSR \<times>
                                                                                                                             bool"}),
                                                                                                                        mu(rupd
                                                                                                                             ("PSR.E",
                                                                                                                              var("v",
                                                                                                                                  @{typ
                                                                                                                                  "PSR \<times>
                                                                                                                                   bool"}),
                                                                                                                              @{theory}),
                                                                                                                           qTy))),
                                                                                                                  close
                                                                                                                    (var("v",
                                                                                                                         @{typ PSR}),
                                                                                                                     mw(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           rupd
                                                                                                                             ("state.CPSR",
                                                                                                                              tp[var("s",
                                                                                                                                     qTy),
                                                                                                                                 var("v",
                                                                                                                                     @{typ PSR})],
                                                                                                                              @{theory}))))),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(call
                                                                                                                       ("ExcVectorBase",
                                                                                                                        @{typ
                                                                                                                        "state \<Rightarrow>
                                                                                                                         (32 word \<times>
                                                                                                                          state)"},
                                                                                                                        lu,
                                                                                                                        @{theory}),
                                                                                                                     close
                                                                                                                       (var_w("v",32),
                                                                                                                        mb(mu(bop(Add,
                                                                                                                                  var_w("v",32),
                                                                                                                                  lw(0,
                                                                                                                                     32)),
                                                                                                                              qTy),
                                                                                                                           close
                                                                                                                             (var_w("v",32),
                                                                                                                              call
                                                                                                                                ("BranchTo",
                                                                                                                                 @{typ
                                                                                                                                 "state \<Rightarrow>
                                                                                                                                  (unit \<times>
                                                                                                                                   state)"},
                                                                                                                                 var_w("v",32),
                                                                                                                                 @{theory})))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeUndefInstrException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(2,32)),qTy))),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        let'
                          (var_w("vect_offset",32),lw(4,32),
                           mb(call
                                ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                 lu,@{theory}),
                              close
                                (var_b"v",
                                 mb(ite(var_b"v",
                                        mb(call
                                             ("HaveSecurityExt",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.CP15",@{typ CP15},var("s",qTy),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ CP15}),
                                                        mb(mb(mu(call
                                                                   ("CP15.SCR",@{typ SCR},
                                                                    var("v",@{typ CP15}),@{theory}),
                                                                 qTy),
                                                              close
                                                                (var("v",@{typ SCR}),
                                                                 mu(call
                                                                      ("SCR.NS",HOLogic.boolT,
                                                                       var("v",@{typ SCR}),@{theory}),
                                                                    qTy))),
                                                           close
                                                             (var_b"b",
                                                              ite(var_b"b",
                                                                  mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.CPSR",
                                                                              @{typ PSR},
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var("v",@{typ PSR}),
                                                                        mb(mu(call
                                                                                ("PSR.M",
                                                                                 (Word_Lib.mk_wordT 5),
                                                                                 var("v",@{typ PSR}),
                                                                                 @{theory}),qTy),
                                                                           close
                                                                             (var_w("v",5),
                                                                              mu(eq(var_w("v",5),
                                                                                    lw(26,5)),qTy))))),
                                                                  mu(lf,qTy)))))),mu(lf,qTy)))),
                                        mu(lf,qTy)),
                                    close
                                      (var_b"take_to_hyp",
                                       mb(call
                                            ("HaveVirtExt",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_b"v",
                                             mb(ite(var_b"v",
                                                    mb(call
                                                         ("HaveSecurityExt",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(call
                                                                   ("IsSecure",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (bool \<times> state)"},lu,
                                                                    @{theory}),
                                                                 close
                                                                   (var_b"v",
                                                                    mb(mu(mop(Not,var_b"v"),qTy),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.CP15",
                                                                                          @{typ CP15},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ CP15}),
                                                                                    mb(mb(mu(call
                                                                                               ("CP15.HCR",
                                                                                                @{typ HCR},
                                                                                                var("v",
                                                                                                    @{typ CP15}),
                                                                                                @{theory}),
                                                                                             qTy),
                                                                                          close
                                                                                            (var("v",
                                                                                                 @{typ HCR}),
                                                                                             mu(call
                                                                                                  ("HCR.TGE",
                                                                                                   HOLogic.boolT,
                                                                                                   var("v",
                                                                                                       @{typ HCR}),
                                                                                                   @{theory}),
                                                                                                qTy))),
                                                                                       close
                                                                                         (var_b"b",
                                                                                          ite(var_b"b",
                                                                                              mb(mr(close
                                                                                                      (var("s",
                                                                                                           qTy),
                                                                                                       call
                                                                                                         ("state.CPSR",
                                                                                                          @{typ PSR},
                                                                                                          var("s",
                                                                                                              qTy),
                                                                                                          @{theory}))),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ PSR}),
                                                                                                    mb(mu(call
                                                                                                            ("PSR.M",
                                                                                                             (Word_Lib.mk_wordT 5),
                                                                                                             var("v",
                                                                                                                 @{typ PSR}),
                                                                                                             @{theory}),
                                                                                                          qTy),
                                                                                                       close
                                                                                                         (var_w("v",5),
                                                                                                          mu(eq(var_w("v",5),
                                                                                                                lw(16,
                                                                                                                   5)),
                                                                                                             qTy))))),
                                                                                              mu(lf,
                                                                                                 qTy)))))),
                                                                              mu(lf,qTy)))))),
                                                              mu(lf,qTy)))),mu(lf,qTy)),
                                                close
                                                  (var_b"route_to_hyp",
                                                   mb(mr(close
                                                           (var("s",qTy),
                                                            call
                                                              ("state.CPSR",@{typ PSR},var("s",qTy),
                                                               @{theory}))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mb(mb(mu(call
                                                                    ("PSR.T",HOLogic.boolT,
                                                                     var("v",@{typ PSR}),@{theory}),
                                                                  qTy),
                                                               close
                                                                 (var_b"b",
                                                                  mu(ite(var_b"b",lw(2,32),lw(4,32)),
                                                                     qTy))),
                                                            close
                                                              (var_w("return_offset",32),
                                                               let'
                                                                 (var_w("preferred_exceptn_return",32),
                                                                  bop(Sub,var_w("new_lr_value",32),
                                                                      var_w("return_offset",32)),
                                                                  itb([(var_b"take_to_hyp",
                                                                        call
                                                                          ("EnterHypMode",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("new_spsr_value",
                                                                                  @{typ PSR}),
                                                                              var_w("preferred_exceptn_return",32),
                                                                              var_w("vect_offset",32)],
                                                                           @{theory})),
                                                                       (var_b"route_to_hyp",
                                                                        call
                                                                          ("EnterHypMode",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("new_spsr_value",
                                                                                  @{typ PSR}),
                                                                              var_w("preferred_exceptn_return",32),
                                                                              lw(20,32)],@{theory}))],
                                                                      mb(mr(close
                                                                              (var("s",qTy),
                                                                               call
                                                                                 ("state.CPSR",
                                                                                  @{typ PSR},
                                                                                  var("s",qTy),
                                                                                  @{theory}))),
                                                                         close
                                                                           (var("v",@{typ PSR}),
                                                                            mb(mb(mb(mu(call
                                                                                          ("PSR.M",
                                                                                           (Word_Lib.mk_wordT 5),
                                                                                           var("v",
                                                                                               @{typ PSR}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var_w("v",5),
                                                                                        mu(eq(var_w("v",5),
                                                                                              lw(22,
                                                                                                 5)),
                                                                                           qTy))),
                                                                                  close
                                                                                    (var_b"b",
                                                                                     ite(var_b"b",
                                                                                         mb(mr(close
                                                                                                 (var("s",
                                                                                                      qTy),
                                                                                                  call
                                                                                                    ("state.CP15",
                                                                                                     @{typ CP15},
                                                                                                     var("s",
                                                                                                         qTy),
                                                                                                     @{theory}))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ CP15}),
                                                                                               mb(mu(call
                                                                                                       ("CP15.SCR",
                                                                                                        @{typ SCR},
                                                                                                        var("v",
                                                                                                            @{typ CP15}),
                                                                                                        @{theory}),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var("x0",
                                                                                                         @{typ SCR}),
                                                                                                     mb(mr(close
                                                                                                             (var("s",
                                                                                                                  qTy),
                                                                                                              call
                                                                                                                ("state.CP15",
                                                                                                                 @{typ CP15},
                                                                                                                 var("s",
                                                                                                                     qTy),
                                                                                                                 @{theory}))),
                                                                                                        close
                                                                                                          (var("v",
                                                                                                               @{typ CP15}),
                                                                                                           mb(mb(mu(tp[var("v",
                                                                                                                           @{typ CP15}),
                                                                                                                       rupd
                                                                                                                         ("SCR.NS",
                                                                                                                          tp[var("x0",
                                                                                                                                 @{typ SCR}),
                                                                                                                             lf],
                                                                                                                          @{theory})],
                                                                                                                    qTy),
                                                                                                                 close
                                                                                                                   (var("v",
                                                                                                                        @{typ
                                                                                                                        "CP15 \<times>
                                                                                                                         SCR"}),
                                                                                                                    mu(rupd
                                                                                                                         ("CP15.SCR",
                                                                                                                          var("v",
                                                                                                                              @{typ
                                                                                                                              "CP15 \<times>
                                                                                                                               SCR"}),
                                                                                                                          @{theory}),
                                                                                                                       qTy))),
                                                                                                              close
                                                                                                                (var("v",
                                                                                                                     @{typ CP15}),
                                                                                                                 mw(close
                                                                                                                      (var("s",
                                                                                                                           qTy),
                                                                                                                       rupd
                                                                                                                         ("state.CP15",
                                                                                                                          tp[var("s",
                                                                                                                                 qTy),
                                                                                                                             var("v",
                                                                                                                                 @{typ CP15})],
                                                                                                                          @{theory}))))))))))),
                                                                                         mu(lu,qTy)))),
                                                                               close
                                                                                 (var_a
                                                                                    HOLogic.unitT,
                                                                                  mb(mr(close
                                                                                          (var("s",
                                                                                               qTy),
                                                                                           call
                                                                                             ("state.CPSR",
                                                                                              @{typ PSR},
                                                                                              var("s",
                                                                                                  qTy),
                                                                                              @{theory}))),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ PSR}),
                                                                                        mb(mb(mb(mu(tp[var("v",
                                                                                                           @{typ PSR}),
                                                                                                       lw(27,
                                                                                                          5)],
                                                                                                    qTy),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ
                                                                                                        "PSR \<times>
                                                                                                         5 word"}),
                                                                                                    mu(rupd
                                                                                                         ("PSR.M",
                                                                                                          var("v",
                                                                                                              @{typ
                                                                                                              "PSR \<times>
                                                                                                               5 word"}),
                                                                                                          @{theory}),
                                                                                                       qTy))),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ PSR}),
                                                                                                 mw(close
                                                                                                      (var("s",
                                                                                                           qTy),
                                                                                                       rupd
                                                                                                         ("state.CPSR",
                                                                                                          tp[var("s",
                                                                                                                 qTy),
                                                                                                             var("v",
                                                                                                                 @{typ PSR})],
                                                                                                          @{theory}))))),
                                                                                           close
                                                                                             (var_a
                                                                                                HOLogic.unitT,
                                                                                              mb(call
                                                                                                   ("write'SPSR",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (unit \<times>
                                                                                                      state)"},
                                                                                                    var("new_spsr_value",
                                                                                                        @{typ PSR}),
                                                                                                    @{theory}),
                                                                                                 close
                                                                                                   (var_a
                                                                                                      HOLogic.unitT,
                                                                                                    mb(call
                                                                                                         ("write'R",
                                                                                                          @{typ
                                                                                                          "state \<Rightarrow>
                                                                                                           (unit \<times>
                                                                                                            state)"},
                                                                                                          tp[var_w("new_lr_value",32),
                                                                                                             lw(14,
                                                                                                                4)],
                                                                                                          @{theory}),
                                                                                                       close
                                                                                                         (var_a
                                                                                                            HOLogic.unitT,
                                                                                                          mb(mr(close
                                                                                                                  (var("s",
                                                                                                                       qTy),
                                                                                                                   call
                                                                                                                     ("state.CPSR",
                                                                                                                      @{typ PSR},
                                                                                                                      var("s",
                                                                                                                          qTy),
                                                                                                                      @{theory}))),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ PSR}),
                                                                                                                mb(mb(mb(mu(tp[var("v",
                                                                                                                                   @{typ PSR}),
                                                                                                                               lt],
                                                                                                                            qTy),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ
                                                                                                                                "PSR \<times>
                                                                                                                                 bool"}),
                                                                                                                            mu(rupd
                                                                                                                                 ("PSR.I",
                                                                                                                                  var("v",
                                                                                                                                      @{typ
                                                                                                                                      "PSR \<times>
                                                                                                                                       bool"}),
                                                                                                                                  @{theory}),
                                                                                                                               qTy))),
                                                                                                                      close
                                                                                                                        (var("v",
                                                                                                                             @{typ PSR}),
                                                                                                                         mw(close
                                                                                                                              (var("s",
                                                                                                                                   qTy),
                                                                                                                               rupd
                                                                                                                                 ("state.CPSR",
                                                                                                                                  tp[var("s",
                                                                                                                                         qTy),
                                                                                                                                     var("v",
                                                                                                                                         @{typ PSR})],
                                                                                                                                  @{theory}))))),
                                                                                                                   close
                                                                                                                     (var_a
                                                                                                                        HOLogic.unitT,
                                                                                                                      mb(mr(close
                                                                                                                              (var("s",
                                                                                                                                   qTy),
                                                                                                                               call
                                                                                                                                 ("state.CPSR",
                                                                                                                                  @{typ PSR},
                                                                                                                                  var("s",
                                                                                                                                      qTy),
                                                                                                                                  @{theory}))),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ PSR}),
                                                                                                                            mb(mb(mb(mu(tp[var("v",
                                                                                                                                               @{typ PSR}),
                                                                                                                                           lw(0,
                                                                                                                                              8)],
                                                                                                                                        qTy),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ
                                                                                                                                            "PSR \<times>
                                                                                                                                             8 word"}),
                                                                                                                                        mu(rupd
                                                                                                                                             ("PSR.IT",
                                                                                                                                              var("v",
                                                                                                                                                  @{typ
                                                                                                                                                  "PSR \<times>
                                                                                                                                                   8 word"}),
                                                                                                                                              @{theory}),
                                                                                                                                           qTy))),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ PSR}),
                                                                                                                                     mw(close
                                                                                                                                          (var("s",
                                                                                                                                               qTy),
                                                                                                                                           rupd
                                                                                                                                             ("state.CPSR",
                                                                                                                                              tp[var("s",
                                                                                                                                                     qTy),
                                                                                                                                                 var("v",
                                                                                                                                                     @{typ PSR})],
                                                                                                                                              @{theory}))))),
                                                                                                                               close
                                                                                                                                 (var_a
                                                                                                                                    HOLogic.unitT,
                                                                                                                                  mb(mr(close
                                                                                                                                          (var("s",
                                                                                                                                               qTy),
                                                                                                                                           call
                                                                                                                                             ("state.CPSR",
                                                                                                                                              @{typ PSR},
                                                                                                                                              var("s",
                                                                                                                                                  qTy),
                                                                                                                                              @{theory}))),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ PSR}),
                                                                                                                                        mb(mb(mb(mu(tp[var("v",
                                                                                                                                                           @{typ PSR}),
                                                                                                                                                       lf],
                                                                                                                                                    qTy),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ
                                                                                                                                                        "PSR \<times>
                                                                                                                                                         bool"}),
                                                                                                                                                    mu(rupd
                                                                                                                                                         ("PSR.J",
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ
                                                                                                                                                              "PSR \<times>
                                                                                                                                                               bool"}),
                                                                                                                                                          @{theory}),
                                                                                                                                                       qTy))),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ PSR}),
                                                                                                                                                 mw(close
                                                                                                                                                      (var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       rupd
                                                                                                                                                         ("state.CPSR",
                                                                                                                                                          tp[var("s",
                                                                                                                                                                 qTy),
                                                                                                                                                             var("v",
                                                                                                                                                                 @{typ PSR})],
                                                                                                                                                          @{theory}))))),
                                                                                                                                           close
                                                                                                                                             (var_a
                                                                                                                                                HOLogic.unitT,
                                                                                                                                              mb(mr(close
                                                                                                                                                      (var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       call
                                                                                                                                                         ("state.CPSR",
                                                                                                                                                          @{typ PSR},
                                                                                                                                                          var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          @{theory}))),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    mb(mb(mb(mb(mr(close
                                                                                                                                                                     (var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      call
                                                                                                                                                                        ("state.CP15",
                                                                                                                                                                         @{typ CP15},
                                                                                                                                                                         var("s",
                                                                                                                                                                             qTy),
                                                                                                                                                                         @{theory}))),
                                                                                                                                                                close
                                                                                                                                                                  (var("v0",
                                                                                                                                                                       @{typ CP15}),
                                                                                                                                                                   mb(mb(mu(call
                                                                                                                                                                              ("CP15.SCTLR",
                                                                                                                                                                               @{typ SCTLR},
                                                                                                                                                                               var("v0",
                                                                                                                                                                                   @{typ CP15}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v",
                                                                                                                                                                                @{typ SCTLR}),
                                                                                                                                                                            mu(call
                                                                                                                                                                                 ("SCTLR.TE",
                                                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ SCTLR}),
                                                                                                                                                                                  @{theory}),
                                                                                                                                                                               qTy))),
                                                                                                                                                                      close
                                                                                                                                                                        (var_b"v0",
                                                                                                                                                                         mu(tp[var("v",
                                                                                                                                                                                   @{typ PSR}),
                                                                                                                                                                               var_b"v0"],
                                                                                                                                                                            qTy))))),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ
                                                                                                                                                                    "PSR \<times>
                                                                                                                                                                     bool"}),
                                                                                                                                                                mu(rupd
                                                                                                                                                                     ("PSR.T",
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "PSR \<times>
                                                                                                                                                                           bool"}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ PSR}),
                                                                                                                                                             mw(close
                                                                                                                                                                  (var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   rupd
                                                                                                                                                                     ("state.CPSR",
                                                                                                                                                                      tp[var("s",
                                                                                                                                                                             qTy),
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ PSR})],
                                                                                                                                                                      @{theory}))))),
                                                                                                                                                       close
                                                                                                                                                         (var_a
                                                                                                                                                            HOLogic.unitT,
                                                                                                                                                          mb(mr(close
                                                                                                                                                                  (var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   call
                                                                                                                                                                     ("state.CPSR",
                                                                                                                                                                      @{typ PSR},
                                                                                                                                                                      var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      @{theory}))),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ PSR}),
                                                                                                                                                                mb(mb(mb(mb(mr(close
                                                                                                                                                                                 (var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  call
                                                                                                                                                                                    ("state.CP15",
                                                                                                                                                                                     @{typ CP15},
                                                                                                                                                                                     var("s",
                                                                                                                                                                                         qTy),
                                                                                                                                                                                     @{theory}))),
                                                                                                                                                                            close
                                                                                                                                                                              (var("v0",
                                                                                                                                                                                   @{typ CP15}),
                                                                                                                                                                               mb(mb(mu(call
                                                                                                                                                                                          ("CP15.SCTLR",
                                                                                                                                                                                           @{typ SCTLR},
                                                                                                                                                                                           var("v0",
                                                                                                                                                                                               @{typ CP15}),
                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                        qTy),
                                                                                                                                                                                     close
                                                                                                                                                                                       (var("v",
                                                                                                                                                                                            @{typ SCTLR}),
                                                                                                                                                                                        mu(call
                                                                                                                                                                                             ("SCTLR.EE",
                                                                                                                                                                                              HOLogic.boolT,
                                                                                                                                                                                              var("v",
                                                                                                                                                                                                  @{typ SCTLR}),
                                                                                                                                                                                              @{theory}),
                                                                                                                                                                                           qTy))),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var_b"v0",
                                                                                                                                                                                     mu(tp[var("v",
                                                                                                                                                                                               @{typ PSR}),
                                                                                                                                                                                           var_b"v0"],
                                                                                                                                                                                        qTy))))),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v",
                                                                                                                                                                                @{typ
                                                                                                                                                                                "PSR \<times>
                                                                                                                                                                                 bool"}),
                                                                                                                                                                            mu(rupd
                                                                                                                                                                                 ("PSR.E",
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ
                                                                                                                                                                                      "PSR \<times>
                                                                                                                                                                                       bool"}),
                                                                                                                                                                                  @{theory}),
                                                                                                                                                                               qTy))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ PSR}),
                                                                                                                                                                         mw(close
                                                                                                                                                                              (var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               rupd
                                                                                                                                                                                 ("state.CPSR",
                                                                                                                                                                                  tp[var("s",
                                                                                                                                                                                         qTy),
                                                                                                                                                                                     var("v",
                                                                                                                                                                                         @{typ PSR})],
                                                                                                                                                                                  @{theory}))))),
                                                                                                                                                                   close
                                                                                                                                                                     (var_a
                                                                                                                                                                        HOLogic.unitT,
                                                                                                                                                                      mb(call
                                                                                                                                                                           ("ExcVectorBase",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                                             (32 word \<times>
                                                                                                                                                                              state)"},
                                                                                                                                                                            lu,
                                                                                                                                                                            @{theory}),
                                                                                                                                                                         close
                                                                                                                                                                           (var_w("v",32),
                                                                                                                                                                            mb(mu(bop(Add,
                                                                                                                                                                                      var_w("v",32),
                                                                                                                                                                                      var_w("vect_offset",32)),
                                                                                                                                                                                  qTy),
                                                                                                                                                                               close
                                                                                                                                                                                 (var_w("v",32),
                                                                                                                                                                                  call
                                                                                                                                                                                    ("BranchTo",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "state \<Rightarrow>
                                                                                                                                                                                      (unit \<times>
                                                                                                                                                                                       state)"},
                                                                                                                                                                                     var_w("v",32),
                                                                                                                                                                                     @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeSVCException",
   close
     (var_a HOLogic.unitT,
      mb(call("ITAdvance",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ PSR}),
                  mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                        close
                          (var_b"b",
                           ite(var_b"b",
                               mb(const
                                    ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     @{theory}),
                                  close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(2,32)),qTy))),
                               mb(const
                                    ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     @{theory}),
                                  close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
                     close
                       (var_w("new_lr_value",32),
                        mb(mr(close
                                (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                           close
                             (var("new_spsr_value",@{typ PSR}),
                              let'
                                (var_w("vect_offset",32),lw(8,32),
                                 mb(call
                                      ("HaveVirtExt",
                                       @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_b"v",
                                       mb(ite(var_b"v",
                                              mb(call
                                                   ("HaveSecurityExt",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(mr(close
                                                                (var("s",qTy),
                                                                 call
                                                                   ("state.CP15",@{typ CP15},
                                                                    var("s",qTy),@{theory}))),
                                                           close
                                                             (var("v",@{typ CP15}),
                                                              mb(mb(mu(call
                                                                         ("CP15.SCR",@{typ SCR},
                                                                          var("v",@{typ CP15}),
                                                                          @{theory}),qTy),
                                                                    close
                                                                      (var("v",@{typ SCR}),
                                                                       mu(call
                                                                            ("SCR.NS",HOLogic.boolT,
                                                                             var("v",@{typ SCR}),
                                                                             @{theory}),qTy))),
                                                                 close
                                                                   (var_b"b",
                                                                    ite(var_b"b",
                                                                        mb(mr(close
                                                                                (var("s",qTy),
                                                                                 call
                                                                                   ("state.CPSR",
                                                                                    @{typ PSR},
                                                                                    var("s",qTy),
                                                                                    @{theory}))),
                                                                           close
                                                                             (var("v",@{typ PSR}),
                                                                              mb(mu(call
                                                                                      ("PSR.M",
                                                                                       (Word_Lib.mk_wordT 5),
                                                                                       var("v",
                                                                                           @{typ PSR}),
                                                                                       @{theory}),
                                                                                    qTy),
                                                                                 close
                                                                                   (var_w("v",5),
                                                                                    mu(eq(var_w("v",5),
                                                                                          lw(26,5)),
                                                                                       qTy))))),
                                                                        mu(lf,qTy)))))),mu(lf,qTy)))),
                                              mu(lf,qTy)),
                                          close
                                            (var_b"take_to_hyp",
                                             mb(call
                                                  ("HaveVirtExt",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close
                                                  (var_b"v",
                                                   mb(ite(var_b"v",
                                                          mb(call
                                                               ("HaveSecurityExt",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    mb(call
                                                                         ("IsSecure",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (bool \<times> state)"},
                                                                          lu,@{theory}),
                                                                       close
                                                                         (var_b"v",
                                                                          mb(mu(mop(Not,var_b"v"),
                                                                                qTy),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    mb(mr(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             call
                                                                                               ("state.CP15",
                                                                                                @{typ CP15},
                                                                                                var("s",
                                                                                                    qTy),
                                                                                                @{theory}))),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ CP15}),
                                                                                          mb(mb(mu(call
                                                                                                     ("CP15.HCR",
                                                                                                      @{typ HCR},
                                                                                                      var("v",
                                                                                                          @{typ CP15}),
                                                                                                      @{theory}),
                                                                                                   qTy),
                                                                                                close
                                                                                                  (var("v",
                                                                                                       @{typ HCR}),
                                                                                                   mu(call
                                                                                                        ("HCR.TGE",
                                                                                                         HOLogic.boolT,
                                                                                                         var("v",
                                                                                                             @{typ HCR}),
                                                                                                         @{theory}),
                                                                                                      qTy))),
                                                                                             close
                                                                                               (var_b"b",
                                                                                                ite(var_b"b",
                                                                                                    mb(mr(close
                                                                                                            (var("s",
                                                                                                                 qTy),
                                                                                                             call
                                                                                                               ("state.CPSR",
                                                                                                                @{typ PSR},
                                                                                                                var("s",
                                                                                                                    qTy),
                                                                                                                @{theory}))),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ PSR}),
                                                                                                          mb(mu(call
                                                                                                                  ("PSR.M",
                                                                                                                   (Word_Lib.mk_wordT 5),
                                                                                                                   var("v",
                                                                                                                       @{typ PSR}),
                                                                                                                   @{theory}),
                                                                                                                qTy),
                                                                                                             close
                                                                                                               (var_w("v",5),
                                                                                                                mu(eq(var_w("v",5),
                                                                                                                      lw(16,
                                                                                                                         5)),
                                                                                                                   qTy))))),
                                                                                                    mu(lf,
                                                                                                       qTy)))))),
                                                                                    mu(lf,qTy)))))),
                                                                    mu(lf,qTy)))),mu(lf,qTy)),
                                                      close
                                                        (var_b"route_to_hyp",
                                                         itb([(var_b"take_to_hyp",
                                                               call
                                                                 ("EnterHypMode",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("new_spsr_value",@{typ PSR}),
                                                                     var_w("new_lr_value",32),
                                                                     var_w("vect_offset",32)],
                                                                  @{theory})),
                                                              (var_b"route_to_hyp",
                                                               call
                                                                 ("EnterHypMode",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("new_spsr_value",@{typ PSR}),
                                                                     var_w("new_lr_value",32),
                                                                     lw(20,32)],@{theory}))],
                                                             mb(mr(close
                                                                     (var("s",qTy),
                                                                      call
                                                                        ("state.CPSR",@{typ PSR},
                                                                         var("s",qTy),@{theory}))),
                                                                close
                                                                  (var("v",@{typ PSR}),
                                                                   mb(mb(mb(mu(call
                                                                                 ("PSR.M",
                                                                                  (Word_Lib.mk_wordT 5),
                                                                                  var("v",@{typ PSR}),
                                                                                  @{theory}),qTy),
                                                                            close
                                                                              (var_w("v",5),
                                                                               mu(eq(var_w("v",5),
                                                                                     lw(22,5)),qTy))),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                mb(mr(close
                                                                                        (var("s",qTy),
                                                                                         call
                                                                                           ("state.CP15",
                                                                                            @{typ CP15},
                                                                                            var("s",
                                                                                                qTy),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ CP15}),
                                                                                      mb(mu(call
                                                                                              ("CP15.SCR",
                                                                                               @{typ SCR},
                                                                                               var("v",
                                                                                                   @{typ CP15}),
                                                                                               @{theory}),
                                                                                            qTy),
                                                                                         close
                                                                                           (var("x0",
                                                                                                @{typ SCR}),
                                                                                            mb(mr(close
                                                                                                    (var("s",
                                                                                                         qTy),
                                                                                                     call
                                                                                                       ("state.CP15",
                                                                                                        @{typ CP15},
                                                                                                        var("s",
                                                                                                            qTy),
                                                                                                        @{theory}))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ CP15}),
                                                                                                  mb(mb(mu(tp[var("v",
                                                                                                                  @{typ CP15}),
                                                                                                              rupd
                                                                                                                ("SCR.NS",
                                                                                                                 tp[var("x0",
                                                                                                                        @{typ SCR}),
                                                                                                                    lf],
                                                                                                                 @{theory})],
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var("v",
                                                                                                               @{typ
                                                                                                               "CP15 \<times>
                                                                                                                SCR"}),
                                                                                                           mu(rupd
                                                                                                                ("CP15.SCR",
                                                                                                                 var("v",
                                                                                                                     @{typ
                                                                                                                     "CP15 \<times>
                                                                                                                      SCR"}),
                                                                                                                 @{theory}),
                                                                                                              qTy))),
                                                                                                     close
                                                                                                       (var("v",
                                                                                                            @{typ CP15}),
                                                                                                        mw(close
                                                                                                             (var("s",
                                                                                                                  qTy),
                                                                                                              rupd
                                                                                                                ("state.CP15",
                                                                                                                 tp[var("s",
                                                                                                                        qTy),
                                                                                                                    var("v",
                                                                                                                        @{typ CP15})],
                                                                                                                 @{theory}))))))))))),
                                                                                mu(lu,qTy)))),
                                                                      close
                                                                        (var_a HOLogic.unitT,
                                                                         mb(mr(close
                                                                                 (var("s",qTy),
                                                                                  call
                                                                                    ("state.CPSR",
                                                                                     @{typ PSR},
                                                                                     var("s",qTy),
                                                                                     @{theory}))),
                                                                            close
                                                                              (var("v",@{typ PSR}),
                                                                               mb(mb(mb(mu(tp[var("v",
                                                                                                  @{typ PSR}),
                                                                                              lw(19,
                                                                                                 5)],
                                                                                           qTy),
                                                                                        close
                                                                                          (var("v",
                                                                                               @{typ
                                                                                               "PSR \<times>
                                                                                                5 word"}),
                                                                                           mu(rupd
                                                                                                ("PSR.M",
                                                                                                 var("v",
                                                                                                     @{typ
                                                                                                     "PSR \<times>
                                                                                                      5 word"}),
                                                                                                 @{theory}),
                                                                                              qTy))),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ PSR}),
                                                                                        mw(close
                                                                                             (var("s",
                                                                                                  qTy),
                                                                                              rupd
                                                                                                ("state.CPSR",
                                                                                                 tp[var("s",
                                                                                                        qTy),
                                                                                                    var("v",
                                                                                                        @{typ PSR})],
                                                                                                 @{theory}))))),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mb(call
                                                                                          ("write'SPSR",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           var("new_spsr_value",
                                                                                               @{typ PSR}),
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mb(call
                                                                                                ("write'R",
                                                                                                 @{typ
                                                                                                 "state \<Rightarrow>
                                                                                                  (unit \<times>
                                                                                                   state)"},
                                                                                                 tp[var_w("new_lr_value",32),
                                                                                                    lw(14,
                                                                                                       4)],
                                                                                                 @{theory}),
                                                                                              close
                                                                                                (var_a
                                                                                                   HOLogic.unitT,
                                                                                                 mb(mr(close
                                                                                                         (var("s",
                                                                                                              qTy),
                                                                                                          call
                                                                                                            ("state.CPSR",
                                                                                                             @{typ PSR},
                                                                                                             var("s",
                                                                                                                 qTy),
                                                                                                             @{theory}))),
                                                                                                    close
                                                                                                      (var("v",
                                                                                                           @{typ PSR}),
                                                                                                       mb(mb(mb(mu(tp[var("v",
                                                                                                                          @{typ PSR}),
                                                                                                                      lt],
                                                                                                                   qTy),
                                                                                                                close
                                                                                                                  (var("v",
                                                                                                                       @{typ
                                                                                                                       "PSR \<times>
                                                                                                                        bool"}),
                                                                                                                   mu(rupd
                                                                                                                        ("PSR.I",
                                                                                                                         var("v",
                                                                                                                             @{typ
                                                                                                                             "PSR \<times>
                                                                                                                              bool"}),
                                                                                                                         @{theory}),
                                                                                                                      qTy))),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ PSR}),
                                                                                                                mw(close
                                                                                                                     (var("s",
                                                                                                                          qTy),
                                                                                                                      rupd
                                                                                                                        ("state.CPSR",
                                                                                                                         tp[var("s",
                                                                                                                                qTy),
                                                                                                                            var("v",
                                                                                                                                @{typ PSR})],
                                                                                                                         @{theory}))))),
                                                                                                          close
                                                                                                            (var_a
                                                                                                               HOLogic.unitT,
                                                                                                             mb(mr(close
                                                                                                                     (var("s",
                                                                                                                          qTy),
                                                                                                                      call
                                                                                                                        ("state.CPSR",
                                                                                                                         @{typ PSR},
                                                                                                                         var("s",
                                                                                                                             qTy),
                                                                                                                         @{theory}))),
                                                                                                                close
                                                                                                                  (var("v",
                                                                                                                       @{typ PSR}),
                                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                                      @{typ PSR}),
                                                                                                                                  lw(0,
                                                                                                                                     8)],
                                                                                                                               qTy),
                                                                                                                            close
                                                                                                                              (var("v",
                                                                                                                                   @{typ
                                                                                                                                   "PSR \<times>
                                                                                                                                    8 word"}),
                                                                                                                               mu(rupd
                                                                                                                                    ("PSR.IT",
                                                                                                                                     var("v",
                                                                                                                                         @{typ
                                                                                                                                         "PSR \<times>
                                                                                                                                          8 word"}),
                                                                                                                                     @{theory}),
                                                                                                                                  qTy))),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ PSR}),
                                                                                                                            mw(close
                                                                                                                                 (var("s",
                                                                                                                                      qTy),
                                                                                                                                  rupd
                                                                                                                                    ("state.CPSR",
                                                                                                                                     tp[var("s",
                                                                                                                                            qTy),
                                                                                                                                        var("v",
                                                                                                                                            @{typ PSR})],
                                                                                                                                     @{theory}))))),
                                                                                                                      close
                                                                                                                        (var_a
                                                                                                                           HOLogic.unitT,
                                                                                                                         mb(mr(close
                                                                                                                                 (var("s",
                                                                                                                                      qTy),
                                                                                                                                  call
                                                                                                                                    ("state.CPSR",
                                                                                                                                     @{typ PSR},
                                                                                                                                     var("s",
                                                                                                                                         qTy),
                                                                                                                                     @{theory}))),
                                                                                                                            close
                                                                                                                              (var("v",
                                                                                                                                   @{typ PSR}),
                                                                                                                               mb(mb(mb(mu(tp[var("v",
                                                                                                                                                  @{typ PSR}),
                                                                                                                                              lf],
                                                                                                                                           qTy),
                                                                                                                                        close
                                                                                                                                          (var("v",
                                                                                                                                               @{typ
                                                                                                                                               "PSR \<times>
                                                                                                                                                bool"}),
                                                                                                                                           mu(rupd
                                                                                                                                                ("PSR.J",
                                                                                                                                                 var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "PSR \<times>
                                                                                                                                                      bool"}),
                                                                                                                                                 @{theory}),
                                                                                                                                              qTy))),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ PSR}),
                                                                                                                                        mw(close
                                                                                                                                             (var("s",
                                                                                                                                                  qTy),
                                                                                                                                              rupd
                                                                                                                                                ("state.CPSR",
                                                                                                                                                 tp[var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    var("v",
                                                                                                                                                        @{typ PSR})],
                                                                                                                                                 @{theory}))))),
                                                                                                                                  close
                                                                                                                                    (var_a
                                                                                                                                       HOLogic.unitT,
                                                                                                                                     mb(mr(close
                                                                                                                                             (var("s",
                                                                                                                                                  qTy),
                                                                                                                                              call
                                                                                                                                                ("state.CPSR",
                                                                                                                                                 @{typ PSR},
                                                                                                                                                 var("s",
                                                                                                                                                     qTy),
                                                                                                                                                 @{theory}))),
                                                                                                                                        close
                                                                                                                                          (var("v",
                                                                                                                                               @{typ PSR}),
                                                                                                                                           mb(mb(mb(mb(mr(close
                                                                                                                                                            (var("s",
                                                                                                                                                                 qTy),
                                                                                                                                                             call
                                                                                                                                                               ("state.CP15",
                                                                                                                                                                @{typ CP15},
                                                                                                                                                                var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                @{theory}))),
                                                                                                                                                       close
                                                                                                                                                         (var("v0",
                                                                                                                                                              @{typ CP15}),
                                                                                                                                                          mb(mb(mu(call
                                                                                                                                                                     ("CP15.SCTLR",
                                                                                                                                                                      @{typ SCTLR},
                                                                                                                                                                      var("v0",
                                                                                                                                                                          @{typ CP15}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var("v",
                                                                                                                                                                       @{typ SCTLR}),
                                                                                                                                                                   mu(call
                                                                                                                                                                        ("SCTLR.TE",
                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ SCTLR}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy))),
                                                                                                                                                             close
                                                                                                                                                               (var_b"v0",
                                                                                                                                                                mu(tp[var("v",
                                                                                                                                                                          @{typ PSR}),
                                                                                                                                                                      var_b"v0"],
                                                                                                                                                                   qTy))))),
                                                                                                                                                    close
                                                                                                                                                      (var("v",
                                                                                                                                                           @{typ
                                                                                                                                                           "PSR \<times>
                                                                                                                                                            bool"}),
                                                                                                                                                       mu(rupd
                                                                                                                                                            ("PSR.T",
                                                                                                                                                             var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "PSR \<times>
                                                                                                                                                                  bool"}),
                                                                                                                                                             @{theory}),
                                                                                                                                                          qTy))),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    mw(close
                                                                                                                                                         (var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          rupd
                                                                                                                                                            ("state.CPSR",
                                                                                                                                                             tp[var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                var("v",
                                                                                                                                                                    @{typ PSR})],
                                                                                                                                                             @{theory}))))),
                                                                                                                                              close
                                                                                                                                                (var_a
                                                                                                                                                   HOLogic.unitT,
                                                                                                                                                 mb(mr(close
                                                                                                                                                         (var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          call
                                                                                                                                                            ("state.CPSR",
                                                                                                                                                             @{typ PSR},
                                                                                                                                                             var("s",
                                                                                                                                                                 qTy),
                                                                                                                                                             @{theory}))),
                                                                                                                                                    close
                                                                                                                                                      (var("v",
                                                                                                                                                           @{typ PSR}),
                                                                                                                                                       mb(mb(mb(mb(mr(close
                                                                                                                                                                        (var("s",
                                                                                                                                                                             qTy),
                                                                                                                                                                         call
                                                                                                                                                                           ("state.CP15",
                                                                                                                                                                            @{typ CP15},
                                                                                                                                                                            var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            @{theory}))),
                                                                                                                                                                   close
                                                                                                                                                                     (var("v0",
                                                                                                                                                                          @{typ CP15}),
                                                                                                                                                                      mb(mb(mu(call
                                                                                                                                                                                 ("CP15.SCTLR",
                                                                                                                                                                                  @{typ SCTLR},
                                                                                                                                                                                  var("v0",
                                                                                                                                                                                      @{typ CP15}),
                                                                                                                                                                                  @{theory}),
                                                                                                                                                                               qTy),
                                                                                                                                                                            close
                                                                                                                                                                              (var("v",
                                                                                                                                                                                   @{typ SCTLR}),
                                                                                                                                                                               mu(call
                                                                                                                                                                                    ("SCTLR.EE",
                                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                                     var("v",
                                                                                                                                                                                         @{typ SCTLR}),
                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                  qTy))),
                                                                                                                                                                         close
                                                                                                                                                                           (var_b"v0",
                                                                                                                                                                            mu(tp[var("v",
                                                                                                                                                                                      @{typ PSR}),
                                                                                                                                                                                  var_b"v0"],
                                                                                                                                                                               qTy))))),
                                                                                                                                                                close
                                                                                                                                                                  (var("v",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "PSR \<times>
                                                                                                                                                                        bool"}),
                                                                                                                                                                   mu(rupd
                                                                                                                                                                        ("PSR.E",
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "PSR \<times>
                                                                                                                                                                              bool"}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy))),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ PSR}),
                                                                                                                                                                mw(close
                                                                                                                                                                     (var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      rupd
                                                                                                                                                                        ("state.CPSR",
                                                                                                                                                                         tp[var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            var("v",
                                                                                                                                                                                @{typ PSR})],
                                                                                                                                                                         @{theory}))))),
                                                                                                                                                          close
                                                                                                                                                            (var_a
                                                                                                                                                               HOLogic.unitT,
                                                                                                                                                             mb(call
                                                                                                                                                                  ("ExcVectorBase",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                    (32 word \<times>
                                                                                                                                                                     state)"},
                                                                                                                                                                   lu,
                                                                                                                                                                   @{theory}),
                                                                                                                                                                close
                                                                                                                                                                  (var_w("v",32),
                                                                                                                                                                   mb(mu(bop(Add,
                                                                                                                                                                             var_w("v",32),
                                                                                                                                                                             var_w("vect_offset",32)),
                                                                                                                                                                         qTy),
                                                                                                                                                                      close
                                                                                                                                                                        (var_w("v",32),
                                                                                                                                                                         call
                                                                                                                                                                           ("BranchTo",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                                             (unit \<times>
                                                                                                                                                                              state)"},
                                                                                                                                                                            var_w("v",32),
                                                                                                                                                                            @{theory})))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeSMCException",
   close
     (var_a HOLogic.unitT,
      mb(call("ITAdvance",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ PSR}),
                  mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                        close
                          (var_b"b",
                           ite(var_b"b",
                               const
                                 ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  @{theory}),
                               mb(const
                                    ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     @{theory}),
                                  close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
                     close
                       (var_w("new_lr_value",32),
                        mb(mr(close
                                (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                           close
                             (var("new_spsr_value",@{typ PSR}),
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mb(mu(call
                                                  ("PSR.M",(Word_Lib.mk_wordT 5),
                                                   var("v",@{typ PSR}),@{theory}),qTy),
                                             close(var_w("v",5),mu(eq(var_w("v",5),lw(22,5)),qTy))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(mr(close
                                                         (var("s",qTy),
                                                          call
                                                            ("state.CP15",@{typ CP15},var("s",qTy),
                                                             @{theory}))),
                                                    close
                                                      (var("v",@{typ CP15}),
                                                       mb(mu(call
                                                               ("CP15.SCR",@{typ SCR},
                                                                var("v",@{typ CP15}),@{theory}),qTy),
                                                          close
                                                            (var("x0",@{typ SCR}),
                                                             mb(mr(close
                                                                     (var("s",qTy),
                                                                      call
                                                                        ("state.CP15",@{typ CP15},
                                                                         var("s",qTy),@{theory}))),
                                                                close
                                                                  (var("v",@{typ CP15}),
                                                                   mb(mb(mu(tp[var("v",@{typ CP15}),
                                                                               rupd
                                                                                 ("SCR.NS",
                                                                                  tp[var("x0",
                                                                                         @{typ SCR}),
                                                                                     lf],@{theory})],
                                                                            qTy),
                                                                         close
                                                                           (var("v",
                                                                                @{typ
                                                                                "CP15 \<times> SCR"}),
                                                                            mu(rupd
                                                                                 ("CP15.SCR",
                                                                                  var("v",
                                                                                      @{typ
                                                                                      "CP15 \<times>
                                                                                       SCR"}),
                                                                                  @{theory}),qTy))),
                                                                      close
                                                                        (var("v",@{typ CP15}),
                                                                         mw(close
                                                                              (var("s",qTy),
                                                                               rupd
                                                                                 ("state.CP15",
                                                                                  tp[var("s",qTy),
                                                                                     var("v",
                                                                                         @{typ CP15})],
                                                                                  @{theory}))))))))))),
                                                 mu(lu,qTy)))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mb(mu(tp[var("v",@{typ PSR}),lw(22,5)],qTy),
                                                         close
                                                           (var("v",@{typ "PSR \<times> 5 word"}),
                                                            mu(rupd
                                                                 ("PSR.M",
                                                                  var("v",
                                                                      @{typ "PSR \<times> 5 word"}),
                                                                  @{theory}),qTy))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.CPSR",
                                                                  tp[var("s",qTy),
                                                                     var("v",@{typ PSR})],@{theory}))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      call
                                                        ("EnterMonitorMode",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("new_spsr_value",@{typ PSR}),
                                                            var_w("new_lr_value",32),lw(8,32)],
                                                         @{theory})))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeHVCException",
   close
     (var_a HOLogic.unitT,
      mb(call("ITAdvance",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ PSR}),
                  mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                        close
                          (var_b"b",
                           ite(var_b"b",
                               const
                                 ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  @{theory}),
                               mb(const
                                    ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     @{theory}),
                                  close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
                     close
                       (var_w("preferred_exceptn_return",32),
                        mb(mr(close
                                (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                           close
                             (var("new_spsr_value",@{typ PSR}),
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mu(call
                                               ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                                @{theory}),qTy),
                                          close(var_w("v",5),mu(eq(var_w("v",5),lw(26,5)),qTy))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              call
                                                ("EnterHypMode",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 tp[var("new_spsr_value",@{typ PSR}),
                                                    var_w("preferred_exceptn_return",32),lw(8,32)],
                                                 @{theory}),
                                              call
                                                ("EnterHypMode",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 tp[var("new_spsr_value",@{typ PSR}),
                                                    var_w("preferred_exceptn_return",32),lw(20,32)],
                                                 @{theory}))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeDataAbortException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Add,var_w("v",32),lw(4,32)),qTy))),
                         const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory})))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        let'
                          (var_w("vect_offset",32),lw(16,32),
                           mb(call
                                ("HaveSecurityExt",
                                 @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                              close
                                (var_b"v",
                                 mb(ite(var_b"v",
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                           close
                                             (var("v",@{typ CP15}),
                                              mb(mb(mu(call
                                                         ("CP15.SCR",@{typ SCR},
                                                          var("v",@{typ CP15}),@{theory}),qTy),
                                                    close
                                                      (var("v",@{typ SCR}),
                                                       mu(call
                                                            ("SCR.EA",HOLogic.boolT,
                                                             var("v",@{typ SCR}),@{theory}),qTy))),
                                                 close
                                                   (var_b"b",
                                                    mu(bop(And,var_b"b",
                                                           call
                                                             ("IsExternalAbort",HOLogic.boolT,lu,
                                                              @{theory})),qTy))))),mu(lf,qTy)),
                                    close
                                      (var_b"route_to_monitor",
                                       mb(call
                                            ("HaveVirtExt",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_b"v",
                                             mb(ite(var_b"v",
                                                    mb(call
                                                         ("HaveSecurityExt",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(mr(close
                                                                      (var("s",qTy),
                                                                       call
                                                                         ("state.CP15",@{typ CP15},
                                                                          var("s",qTy),@{theory}))),
                                                                 close
                                                                   (var("v",@{typ CP15}),
                                                                    mb(mb(mu(call
                                                                               ("CP15.SCR",
                                                                                @{typ SCR},
                                                                                var("v",@{typ CP15}),
                                                                                @{theory}),qTy),
                                                                          close
                                                                            (var("v",@{typ SCR}),
                                                                             mu(call
                                                                                  ("SCR.NS",
                                                                                   HOLogic.boolT,
                                                                                   var("v",
                                                                                       @{typ SCR}),
                                                                                   @{theory}),qTy))),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.CPSR",
                                                                                          @{typ PSR},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ PSR}),
                                                                                    mb(mu(call
                                                                                            ("PSR.M",
                                                                                             (Word_Lib.mk_wordT 5),
                                                                                             var("v",
                                                                                                 @{typ PSR}),
                                                                                             @{theory}),
                                                                                          qTy),
                                                                                       close
                                                                                         (var_w("v",5),
                                                                                          mu(eq(var_w("v",5),
                                                                                                lw(26,
                                                                                                   5)),
                                                                                             qTy))))),
                                                                              mu(lf,qTy)))))),
                                                              mu(lf,qTy)))),mu(lf,qTy)),
                                                close
                                                  (var_b"take_to_hyp",
                                                   itb([(var_b"route_to_monitor",
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CPSR",@{typ PSR},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mb(mb(mb(mu(call
                                                                             ("PSR.M",
                                                                              (Word_Lib.mk_wordT 5),
                                                                              var("v",@{typ PSR}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v",5),
                                                                           mu(eq(var_w("v",5),
                                                                                 lw(22,5)),qTy))),
                                                                     close
                                                                       (var_b"b",
                                                                        ite(var_b"b",
                                                                            mb(mr(close
                                                                                    (var("s",qTy),
                                                                                     call
                                                                                       ("state.CP15",
                                                                                        @{typ CP15},
                                                                                        var("s",qTy),
                                                                                        @{theory}))),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ CP15}),
                                                                                  mb(mu(call
                                                                                          ("CP15.SCR",
                                                                                           @{typ SCR},
                                                                                           var("v",
                                                                                               @{typ CP15}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var("x0",
                                                                                            @{typ SCR}),
                                                                                        mb(mr(close
                                                                                                (var("s",
                                                                                                     qTy),
                                                                                                 call
                                                                                                   ("state.CP15",
                                                                                                    @{typ CP15},
                                                                                                    var("s",
                                                                                                        qTy),
                                                                                                    @{theory}))),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ CP15}),
                                                                                              mb(mb(mu(tp[var("v",
                                                                                                              @{typ CP15}),
                                                                                                          rupd
                                                                                                            ("SCR.NS",
                                                                                                             tp[var("x0",
                                                                                                                    @{typ SCR}),
                                                                                                                lf],
                                                                                                             @{theory})],
                                                                                                       qTy),
                                                                                                    close
                                                                                                      (var("v",
                                                                                                           @{typ
                                                                                                           "CP15 \<times>
                                                                                                            SCR"}),
                                                                                                       mu(rupd
                                                                                                            ("CP15.SCR",
                                                                                                             var("v",
                                                                                                                 @{typ
                                                                                                                 "CP15 \<times>
                                                                                                                  SCR"}),
                                                                                                             @{theory}),
                                                                                                          qTy))),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ CP15}),
                                                                                                    mw(close
                                                                                                         (var("s",
                                                                                                              qTy),
                                                                                                          rupd
                                                                                                            ("state.CP15",
                                                                                                             tp[var("s",
                                                                                                                    qTy),
                                                                                                                var("v",
                                                                                                                    @{typ CP15})],
                                                                                                             @{theory}))))))))))),
                                                                            mu(lu,qTy)))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     call
                                                                       ("EnterMonitorMode",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("new_spsr_value",
                                                                               @{typ PSR}),
                                                                           var_w("new_lr_value",32),
                                                                           var_w("vect_offset",32)],
                                                                        @{theory})))))),
                                                        (var_b"take_to_hyp",
                                                         call
                                                           ("EnterHypMode",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("new_spsr_value",@{typ PSR}),
                                                               bop(Sub,var_w("new_lr_value",32),
                                                                   lw(8,32)),var_w("vect_offset",32)],
                                                            @{theory}))],
                                                       mb(call
                                                            ("HaveSecurityExt",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_b"v",
                                                             mb(mb(ite(var_b"v",
                                                                       mb(mr(close
                                                                               (var("s",qTy),
                                                                                call
                                                                                  ("state.CPSR",
                                                                                   @{typ PSR},
                                                                                   var("s",qTy),
                                                                                   @{theory}))),
                                                                          close
                                                                            (var("v",@{typ PSR}),
                                                                             mb(mu(call
                                                                                     ("PSR.M",
                                                                                      (Word_Lib.mk_wordT 5),
                                                                                      var("v",
                                                                                          @{typ PSR}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_w("v",5),
                                                                                   mu(eq(var_w("v",5),
                                                                                         lw(22,5)),
                                                                                      qTy))))),
                                                                       mu(lf,qTy)),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CP15",
                                                                                      @{typ CP15},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ CP15}),
                                                                                mb(mu(call
                                                                                        ("CP15.SCR",
                                                                                         @{typ SCR},
                                                                                         var("v",
                                                                                             @{typ CP15}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var("x0",
                                                                                          @{typ SCR}),
                                                                                      mb(mr(close
                                                                                              (var("s",
                                                                                                   qTy),
                                                                                               call
                                                                                                 ("state.CP15",
                                                                                                  @{typ CP15},
                                                                                                  var("s",
                                                                                                      qTy),
                                                                                                  @{theory}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ CP15}),
                                                                                            mb(mb(mu(tp[var("v",
                                                                                                            @{typ CP15}),
                                                                                                        rupd
                                                                                                          ("SCR.NS",
                                                                                                           tp[var("x0",
                                                                                                                  @{typ SCR}),
                                                                                                              lf],
                                                                                                           @{theory})],
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "CP15 \<times>
                                                                                                          SCR"}),
                                                                                                     mu(rupd
                                                                                                          ("CP15.SCR",
                                                                                                           var("v",
                                                                                                               @{typ
                                                                                                               "CP15 \<times>
                                                                                                                SCR"}),
                                                                                                           @{theory}),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ CP15}),
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            qTy),
                                                                                                        rupd
                                                                                                          ("state.CP15",
                                                                                                           tp[var("s",
                                                                                                                  qTy),
                                                                                                              var("v",
                                                                                                                  @{typ CP15})],
                                                                                                           @{theory}))))))))))),
                                                                          mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.CPSR",
                                                                               @{typ PSR},
                                                                               var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var("v",@{typ PSR}),
                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                            @{typ PSR}),
                                                                                        lw(23,5)],
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ
                                                                                         "PSR \<times>
                                                                                          5 word"}),
                                                                                     mu(rupd
                                                                                          ("PSR.M",
                                                                                           var("v",
                                                                                               @{typ
                                                                                               "PSR \<times>
                                                                                                5 word"}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var("v",@{typ PSR}),
                                                                                  mw(close
                                                                                       (var("s",qTy),
                                                                                        rupd
                                                                                          ("state.CPSR",
                                                                                           tp[var("s",
                                                                                                  qTy),
                                                                                              var("v",
                                                                                                  @{typ PSR})],
                                                                                           @{theory}))))),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mb(call
                                                                                    ("write'SPSR",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (unit \<times>
                                                                                       state)"},
                                                                                     var("new_spsr_value",
                                                                                         @{typ PSR}),
                                                                                     @{theory}),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mb(call
                                                                                          ("write'R",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var_w("new_lr_value",32),
                                                                                              lw(14,
                                                                                                 4)],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        qTy),
                                                                                                    call
                                                                                                      ("state.CPSR",
                                                                                                       @{typ PSR},
                                                                                                       var("s",
                                                                                                           qTy),
                                                                                                       @{theory}))),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ PSR}),
                                                                                                 mb(mb(mb(mu(tp[var("v",
                                                                                                                    @{typ PSR}),
                                                                                                                lt],
                                                                                                             qTy),
                                                                                                          close
                                                                                                            (var("v",
                                                                                                                 @{typ
                                                                                                                 "PSR \<times>
                                                                                                                  bool"}),
                                                                                                             mu(rupd
                                                                                                                  ("PSR.I",
                                                                                                                   var("v",
                                                                                                                       @{typ
                                                                                                                       "PSR \<times>
                                                                                                                        bool"}),
                                                                                                                   @{theory}),
                                                                                                                qTy))),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ PSR}),
                                                                                                          mw(close
                                                                                                               (var("s",
                                                                                                                    qTy),
                                                                                                                rupd
                                                                                                                  ("state.CPSR",
                                                                                                                   tp[var("s",
                                                                                                                          qTy),
                                                                                                                      var("v",
                                                                                                                          @{typ PSR})],
                                                                                                                   @{theory}))))),
                                                                                                    close
                                                                                                      (var_a
                                                                                                         HOLogic.unitT,
                                                                                                       mb(call
                                                                                                            ("HaveSecurityExt",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (bool \<times>
                                                                                                               state)"},
                                                                                                             lu,
                                                                                                             @{theory}),
                                                                                                          close
                                                                                                            (var_b"v",
                                                                                                             mb(mb(mb(mu(mop(Not,
                                                                                                                             var_b"v"),
                                                                                                                         qTy),
                                                                                                                      close
                                                                                                                        (var_b"b",
                                                                                                                         ite(var_b"b",
                                                                                                                             mu(lt,
                                                                                                                                qTy),
                                                                                                                             mb(call
                                                                                                                                  ("HaveVirtExt",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (bool \<times>
                                                                                                                                     state)"},
                                                                                                                                   lu,
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var_b"b",
                                                                                                                                   ite(var_b"b",
                                                                                                                                       mu(lt,
                                                                                                                                          qTy),
                                                                                                                                       mb(mr(close
                                                                                                                                               (var("s",
                                                                                                                                                    qTy),
                                                                                                                                                call
                                                                                                                                                  ("state.CP15",
                                                                                                                                                   @{typ CP15},
                                                                                                                                                   var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   @{theory}))),
                                                                                                                                          close
                                                                                                                                            (var("v",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             mb(mb(mb(mu(call
                                                                                                                                                           ("CP15.SCR",
                                                                                                                                                            @{typ SCR},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ CP15}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ SCR}),
                                                                                                                                                         mu(call
                                                                                                                                                              ("SCR.NS",
                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ SCR}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"v",
                                                                                                                                                      mu(mop(Not,
                                                                                                                                                             var_b"v"),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"b",
                                                                                                                                                   ite(var_b"b",
                                                                                                                                                       mu(lt,
                                                                                                                                                          qTy),
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CP15",
                                                                                                                                                                   @{typ CP15},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ CP15}),
                                                                                                                                                             mb(mu(call
                                                                                                                                                                     ("CP15.SCR",
                                                                                                                                                                      @{typ SCR},
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ CP15}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var("v",
                                                                                                                                                                       @{typ SCR}),
                                                                                                                                                                   mu(call
                                                                                                                                                                        ("SCR.AW",
                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ SCR}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy)))))))))))))))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          mb(mr(close
                                                                                                                                  (var("s",
                                                                                                                                       qTy),
                                                                                                                                   call
                                                                                                                                     ("state.CPSR",
                                                                                                                                      @{typ PSR},
                                                                                                                                      var("s",
                                                                                                                                          qTy),
                                                                                                                                      @{theory}))),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ PSR}),
                                                                                                                                mb(mb(mu(tp[var("v",
                                                                                                                                                @{typ PSR}),
                                                                                                                                            lt],
                                                                                                                                         qTy),
                                                                                                                                      close
                                                                                                                                        (var("v",
                                                                                                                                             @{typ
                                                                                                                                             "PSR \<times>
                                                                                                                                              bool"}),
                                                                                                                                         mu(rupd
                                                                                                                                              ("PSR.A",
                                                                                                                                               var("v",
                                                                                                                                                   @{typ
                                                                                                                                                   "PSR \<times>
                                                                                                                                                    bool"}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ PSR}),
                                                                                                                                      mw(close
                                                                                                                                           (var("s",
                                                                                                                                                qTy),
                                                                                                                                            rupd
                                                                                                                                              ("state.CPSR",
                                                                                                                                               tp[var("s",
                                                                                                                                                      qTy),
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ PSR})],
                                                                                                                                               @{theory}))))))),
                                                                                                                          mu(lu,
                                                                                                                             qTy)))),
                                                                                                                close
                                                                                                                  (var_a
                                                                                                                     HOLogic.unitT,
                                                                                                                   mb(mr(close
                                                                                                                           (var("s",
                                                                                                                                qTy),
                                                                                                                            call
                                                                                                                              ("state.CPSR",
                                                                                                                               @{typ PSR},
                                                                                                                               var("s",
                                                                                                                                   qTy),
                                                                                                                               @{theory}))),
                                                                                                                      close
                                                                                                                        (var("v",
                                                                                                                             @{typ PSR}),
                                                                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                                                                            @{typ PSR}),
                                                                                                                                        lw(0,
                                                                                                                                           8)],
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ
                                                                                                                                         "PSR \<times>
                                                                                                                                          8 word"}),
                                                                                                                                     mu(rupd
                                                                                                                                          ("PSR.IT",
                                                                                                                                           var("v",
                                                                                                                                               @{typ
                                                                                                                                               "PSR \<times>
                                                                                                                                                8 word"}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ PSR}),
                                                                                                                                  mw(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        rupd
                                                                                                                                          ("state.CPSR",
                                                                                                                                           tp[var("s",
                                                                                                                                                  qTy),
                                                                                                                                              var("v",
                                                                                                                                                  @{typ PSR})],
                                                                                                                                           @{theory}))))),
                                                                                                                            close
                                                                                                                              (var_a
                                                                                                                                 HOLogic.unitT,
                                                                                                                               mb(mr(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        call
                                                                                                                                          ("state.CPSR",
                                                                                                                                           @{typ PSR},
                                                                                                                                           var("s",
                                                                                                                                               qTy),
                                                                                                                                           @{theory}))),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ PSR}),
                                                                                                                                     mb(mb(mb(mu(tp[var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    lf],
                                                                                                                                                 qTy),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "PSR \<times>
                                                                                                                                                      bool"}),
                                                                                                                                                 mu(rupd
                                                                                                                                                      ("PSR.J",
                                                                                                                                                       var("v",
                                                                                                                                                           @{typ
                                                                                                                                                           "PSR \<times>
                                                                                                                                                            bool"}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    qTy))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ PSR}),
                                                                                                                                              mw(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    rupd
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       tp[var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ PSR})],
                                                                                                                                                       @{theory}))))),
                                                                                                                                        close
                                                                                                                                          (var_a
                                                                                                                                             HOLogic.unitT,
                                                                                                                                           mb(mr(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    call
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       @{typ PSR},
                                                                                                                                                       var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       @{theory}))),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ PSR}),
                                                                                                                                                 mb(mb(mb(mb(mr(close
                                                                                                                                                                  (var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   call
                                                                                                                                                                     ("state.CP15",
                                                                                                                                                                      @{typ CP15},
                                                                                                                                                                      var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      @{theory}))),
                                                                                                                                                             close
                                                                                                                                                               (var("v0",
                                                                                                                                                                    @{typ CP15}),
                                                                                                                                                                mb(mb(mu(call
                                                                                                                                                                           ("CP15.SCTLR",
                                                                                                                                                                            @{typ SCTLR},
                                                                                                                                                                            var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            @{theory}),
                                                                                                                                                                         qTy),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ SCTLR}),
                                                                                                                                                                         mu(call
                                                                                                                                                                              ("SCTLR.TE",
                                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ SCTLR}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var_b"v0",
                                                                                                                                                                      mu(tp[var("v",
                                                                                                                                                                                @{typ PSR}),
                                                                                                                                                                            var_b"v0"],
                                                                                                                                                                         qTy))))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "PSR \<times>
                                                                                                                                                                  bool"}),
                                                                                                                                                             mu(rupd
                                                                                                                                                                  ("PSR.T",
                                                                                                                                                                   var("v",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "PSR \<times>
                                                                                                                                                                        bool"}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                qTy))),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ PSR}),
                                                                                                                                                          mw(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                rupd
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   tp[var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ PSR})],
                                                                                                                                                                   @{theory}))))),
                                                                                                                                                    close
                                                                                                                                                      (var_a
                                                                                                                                                         HOLogic.unitT,
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   @{typ PSR},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ PSR}),
                                                                                                                                                             mb(mb(mb(mb(mr(close
                                                                                                                                                                              (var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               call
                                                                                                                                                                                 ("state.CP15",
                                                                                                                                                                                  @{typ CP15},
                                                                                                                                                                                  var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  @{theory}))),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            mb(mb(mu(call
                                                                                                                                                                                       ("CP15.SCTLR",
                                                                                                                                                                                        @{typ SCTLR},
                                                                                                                                                                                        var("v0",
                                                                                                                                                                                            @{typ CP15}),
                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                     qTy),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var("v",
                                                                                                                                                                                         @{typ SCTLR}),
                                                                                                                                                                                     mu(call
                                                                                                                                                                                          ("SCTLR.EE",
                                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                                           var("v",
                                                                                                                                                                                               @{typ SCTLR}),
                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                        qTy))),
                                                                                                                                                                               close
                                                                                                                                                                                 (var_b"v0",
                                                                                                                                                                                  mu(tp[var("v",
                                                                                                                                                                                            @{typ PSR}),
                                                                                                                                                                                        var_b"v0"],
                                                                                                                                                                                     qTy))))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "PSR \<times>
                                                                                                                                                                              bool"}),
                                                                                                                                                                         mu(rupd
                                                                                                                                                                              ("PSR.E",
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ
                                                                                                                                                                                   "PSR \<times>
                                                                                                                                                                                    bool"}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var("v",
                                                                                                                                                                          @{typ PSR}),
                                                                                                                                                                      mw(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            rupd
                                                                                                                                                                              ("state.CPSR",
                                                                                                                                                                               tp[var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ PSR})],
                                                                                                                                                                               @{theory}))))),
                                                                                                                                                                close
                                                                                                                                                                  (var_a
                                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                                   mb(call
                                                                                                                                                                        ("ExcVectorBase",
                                                                                                                                                                         @{typ
                                                                                                                                                                         "state \<Rightarrow>
                                                                                                                                                                          (32 word \<times>
                                                                                                                                                                           state)"},
                                                                                                                                                                         lu,
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      close
                                                                                                                                                                        (var_w("v",32),
                                                                                                                                                                         mb(mu(bop(Add,
                                                                                                                                                                                   var_w("v",32),
                                                                                                                                                                                   var_w("vect_offset",32)),
                                                                                                                                                                               qTy),
                                                                                                                                                                            close
                                                                                                                                                                              (var_w("v",32),
                                                                                                                                                                               call
                                                                                                                                                                                 ("BranchTo",
                                                                                                                                                                                  @{typ
                                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                                   (unit \<times>
                                                                                                                                                                                    state)"},
                                                                                                                                                                                  var_w("v",32),
                                                                                                                                                                                  @{theory})))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakePrefetchAbortException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        let'
                          (var_w("vect_offset",32),lw(12,32),
                           mb(call
                                ("HaveSecurityExt",
                                 @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                              close
                                (var_b"v",
                                 mb(ite(var_b"v",
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                           close
                                             (var("v",@{typ CP15}),
                                              mb(mb(mu(call
                                                         ("CP15.SCR",@{typ SCR},
                                                          var("v",@{typ CP15}),@{theory}),qTy),
                                                    close
                                                      (var("v",@{typ SCR}),
                                                       mu(call
                                                            ("SCR.EA",HOLogic.boolT,
                                                             var("v",@{typ SCR}),@{theory}),qTy))),
                                                 close
                                                   (var_b"b",
                                                    mu(bop(And,var_b"b",
                                                           call
                                                             ("IsExternalAbort",HOLogic.boolT,lu,
                                                              @{theory})),qTy))))),mu(lf,qTy)),
                                    close
                                      (var_b"route_to_monitor",
                                       mb(call
                                            ("HaveVirtExt",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_b"v",
                                             mb(ite(var_b"v",
                                                    mb(call
                                                         ("HaveSecurityExt",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(mr(close
                                                                      (var("s",qTy),
                                                                       call
                                                                         ("state.CP15",@{typ CP15},
                                                                          var("s",qTy),@{theory}))),
                                                                 close
                                                                   (var("v",@{typ CP15}),
                                                                    mb(mb(mu(call
                                                                               ("CP15.SCR",
                                                                                @{typ SCR},
                                                                                var("v",@{typ CP15}),
                                                                                @{theory}),qTy),
                                                                          close
                                                                            (var("v",@{typ SCR}),
                                                                             mu(call
                                                                                  ("SCR.NS",
                                                                                   HOLogic.boolT,
                                                                                   var("v",
                                                                                       @{typ SCR}),
                                                                                   @{theory}),qTy))),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.CPSR",
                                                                                          @{typ PSR},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ PSR}),
                                                                                    mb(mu(call
                                                                                            ("PSR.M",
                                                                                             (Word_Lib.mk_wordT 5),
                                                                                             var("v",
                                                                                                 @{typ PSR}),
                                                                                             @{theory}),
                                                                                          qTy),
                                                                                       close
                                                                                         (var_w("v",5),
                                                                                          mu(eq(var_w("v",5),
                                                                                                lw(26,
                                                                                                   5)),
                                                                                             qTy))))),
                                                                              mu(lf,qTy)))))),
                                                              mu(lf,qTy)))),mu(lf,qTy)),
                                                close
                                                  (var_b"take_to_hyp",
                                                   itb([(var_b"route_to_monitor",
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CPSR",@{typ PSR},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mb(mb(mb(mu(call
                                                                             ("PSR.M",
                                                                              (Word_Lib.mk_wordT 5),
                                                                              var("v",@{typ PSR}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v",5),
                                                                           mu(eq(var_w("v",5),
                                                                                 lw(22,5)),qTy))),
                                                                     close
                                                                       (var_b"b",
                                                                        ite(var_b"b",
                                                                            mb(mr(close
                                                                                    (var("s",qTy),
                                                                                     call
                                                                                       ("state.CP15",
                                                                                        @{typ CP15},
                                                                                        var("s",qTy),
                                                                                        @{theory}))),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ CP15}),
                                                                                  mb(mu(call
                                                                                          ("CP15.SCR",
                                                                                           @{typ SCR},
                                                                                           var("v",
                                                                                               @{typ CP15}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var("x0",
                                                                                            @{typ SCR}),
                                                                                        mb(mr(close
                                                                                                (var("s",
                                                                                                     qTy),
                                                                                                 call
                                                                                                   ("state.CP15",
                                                                                                    @{typ CP15},
                                                                                                    var("s",
                                                                                                        qTy),
                                                                                                    @{theory}))),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ CP15}),
                                                                                              mb(mb(mu(tp[var("v",
                                                                                                              @{typ CP15}),
                                                                                                          rupd
                                                                                                            ("SCR.NS",
                                                                                                             tp[var("x0",
                                                                                                                    @{typ SCR}),
                                                                                                                lf],
                                                                                                             @{theory})],
                                                                                                       qTy),
                                                                                                    close
                                                                                                      (var("v",
                                                                                                           @{typ
                                                                                                           "CP15 \<times>
                                                                                                            SCR"}),
                                                                                                       mu(rupd
                                                                                                            ("CP15.SCR",
                                                                                                             var("v",
                                                                                                                 @{typ
                                                                                                                 "CP15 \<times>
                                                                                                                  SCR"}),
                                                                                                             @{theory}),
                                                                                                          qTy))),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ CP15}),
                                                                                                    mw(close
                                                                                                         (var("s",
                                                                                                              qTy),
                                                                                                          rupd
                                                                                                            ("state.CP15",
                                                                                                             tp[var("s",
                                                                                                                    qTy),
                                                                                                                var("v",
                                                                                                                    @{typ CP15})],
                                                                                                             @{theory}))))))))))),
                                                                            mu(lu,qTy)))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     call
                                                                       ("EnterMonitorMode",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("new_spsr_value",
                                                                               @{typ PSR}),
                                                                           var_w("new_lr_value",32),
                                                                           var_w("vect_offset",32)],
                                                                        @{theory})))))),
                                                        (var_b"take_to_hyp",
                                                         call
                                                           ("EnterHypMode",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("new_spsr_value",@{typ PSR}),
                                                               bop(Sub,var_w("new_lr_value",32),
                                                                   lw(4,32)),var_w("vect_offset",32)],
                                                            @{theory}))],
                                                       mb(call
                                                            ("HaveSecurityExt",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_b"v",
                                                             mb(mb(ite(var_b"v",
                                                                       mb(mr(close
                                                                               (var("s",qTy),
                                                                                call
                                                                                  ("state.CPSR",
                                                                                   @{typ PSR},
                                                                                   var("s",qTy),
                                                                                   @{theory}))),
                                                                          close
                                                                            (var("v",@{typ PSR}),
                                                                             mb(mu(call
                                                                                     ("PSR.M",
                                                                                      (Word_Lib.mk_wordT 5),
                                                                                      var("v",
                                                                                          @{typ PSR}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_w("v",5),
                                                                                   mu(eq(var_w("v",5),
                                                                                         lw(22,5)),
                                                                                      qTy))))),
                                                                       mu(lf,qTy)),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CP15",
                                                                                      @{typ CP15},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ CP15}),
                                                                                mb(mu(call
                                                                                        ("CP15.SCR",
                                                                                         @{typ SCR},
                                                                                         var("v",
                                                                                             @{typ CP15}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var("x0",
                                                                                          @{typ SCR}),
                                                                                      mb(mr(close
                                                                                              (var("s",
                                                                                                   qTy),
                                                                                               call
                                                                                                 ("state.CP15",
                                                                                                  @{typ CP15},
                                                                                                  var("s",
                                                                                                      qTy),
                                                                                                  @{theory}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ CP15}),
                                                                                            mb(mb(mu(tp[var("v",
                                                                                                            @{typ CP15}),
                                                                                                        rupd
                                                                                                          ("SCR.NS",
                                                                                                           tp[var("x0",
                                                                                                                  @{typ SCR}),
                                                                                                              lf],
                                                                                                           @{theory})],
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "CP15 \<times>
                                                                                                          SCR"}),
                                                                                                     mu(rupd
                                                                                                          ("CP15.SCR",
                                                                                                           var("v",
                                                                                                               @{typ
                                                                                                               "CP15 \<times>
                                                                                                                SCR"}),
                                                                                                           @{theory}),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ CP15}),
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            qTy),
                                                                                                        rupd
                                                                                                          ("state.CP15",
                                                                                                           tp[var("s",
                                                                                                                  qTy),
                                                                                                              var("v",
                                                                                                                  @{typ CP15})],
                                                                                                           @{theory}))))))))))),
                                                                          mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.CPSR",
                                                                               @{typ PSR},
                                                                               var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var("v",@{typ PSR}),
                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                            @{typ PSR}),
                                                                                        lw(23,5)],
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ
                                                                                         "PSR \<times>
                                                                                          5 word"}),
                                                                                     mu(rupd
                                                                                          ("PSR.M",
                                                                                           var("v",
                                                                                               @{typ
                                                                                               "PSR \<times>
                                                                                                5 word"}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var("v",@{typ PSR}),
                                                                                  mw(close
                                                                                       (var("s",qTy),
                                                                                        rupd
                                                                                          ("state.CPSR",
                                                                                           tp[var("s",
                                                                                                  qTy),
                                                                                              var("v",
                                                                                                  @{typ PSR})],
                                                                                           @{theory}))))),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mb(call
                                                                                    ("write'SPSR",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (unit \<times>
                                                                                       state)"},
                                                                                     var("new_spsr_value",
                                                                                         @{typ PSR}),
                                                                                     @{theory}),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mb(call
                                                                                          ("write'R",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var_w("new_lr_value",32),
                                                                                              lw(14,
                                                                                                 4)],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        qTy),
                                                                                                    call
                                                                                                      ("state.CPSR",
                                                                                                       @{typ PSR},
                                                                                                       var("s",
                                                                                                           qTy),
                                                                                                       @{theory}))),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ PSR}),
                                                                                                 mb(mb(mb(mu(tp[var("v",
                                                                                                                    @{typ PSR}),
                                                                                                                lt],
                                                                                                             qTy),
                                                                                                          close
                                                                                                            (var("v",
                                                                                                                 @{typ
                                                                                                                 "PSR \<times>
                                                                                                                  bool"}),
                                                                                                             mu(rupd
                                                                                                                  ("PSR.I",
                                                                                                                   var("v",
                                                                                                                       @{typ
                                                                                                                       "PSR \<times>
                                                                                                                        bool"}),
                                                                                                                   @{theory}),
                                                                                                                qTy))),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ PSR}),
                                                                                                          mw(close
                                                                                                               (var("s",
                                                                                                                    qTy),
                                                                                                                rupd
                                                                                                                  ("state.CPSR",
                                                                                                                   tp[var("s",
                                                                                                                          qTy),
                                                                                                                      var("v",
                                                                                                                          @{typ PSR})],
                                                                                                                   @{theory}))))),
                                                                                                    close
                                                                                                      (var_a
                                                                                                         HOLogic.unitT,
                                                                                                       mb(call
                                                                                                            ("HaveSecurityExt",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (bool \<times>
                                                                                                               state)"},
                                                                                                             lu,
                                                                                                             @{theory}),
                                                                                                          close
                                                                                                            (var_b"v",
                                                                                                             mb(mb(mb(mu(mop(Not,
                                                                                                                             var_b"v"),
                                                                                                                         qTy),
                                                                                                                      close
                                                                                                                        (var_b"b",
                                                                                                                         ite(var_b"b",
                                                                                                                             mu(lt,
                                                                                                                                qTy),
                                                                                                                             mb(call
                                                                                                                                  ("HaveVirtExt",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (bool \<times>
                                                                                                                                     state)"},
                                                                                                                                   lu,
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var_b"b",
                                                                                                                                   ite(var_b"b",
                                                                                                                                       mu(lt,
                                                                                                                                          qTy),
                                                                                                                                       mb(mr(close
                                                                                                                                               (var("s",
                                                                                                                                                    qTy),
                                                                                                                                                call
                                                                                                                                                  ("state.CP15",
                                                                                                                                                   @{typ CP15},
                                                                                                                                                   var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   @{theory}))),
                                                                                                                                          close
                                                                                                                                            (var("v",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             mb(mb(mb(mu(call
                                                                                                                                                           ("CP15.SCR",
                                                                                                                                                            @{typ SCR},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ CP15}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ SCR}),
                                                                                                                                                         mu(call
                                                                                                                                                              ("SCR.NS",
                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ SCR}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"v",
                                                                                                                                                      mu(mop(Not,
                                                                                                                                                             var_b"v"),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"b",
                                                                                                                                                   ite(var_b"b",
                                                                                                                                                       mu(lt,
                                                                                                                                                          qTy),
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CP15",
                                                                                                                                                                   @{typ CP15},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ CP15}),
                                                                                                                                                             mb(mu(call
                                                                                                                                                                     ("CP15.SCR",
                                                                                                                                                                      @{typ SCR},
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ CP15}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var("v",
                                                                                                                                                                       @{typ SCR}),
                                                                                                                                                                   mu(call
                                                                                                                                                                        ("SCR.AW",
                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ SCR}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy)))))))))))))))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          mb(mr(close
                                                                                                                                  (var("s",
                                                                                                                                       qTy),
                                                                                                                                   call
                                                                                                                                     ("state.CPSR",
                                                                                                                                      @{typ PSR},
                                                                                                                                      var("s",
                                                                                                                                          qTy),
                                                                                                                                      @{theory}))),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ PSR}),
                                                                                                                                mb(mb(mu(tp[var("v",
                                                                                                                                                @{typ PSR}),
                                                                                                                                            lt],
                                                                                                                                         qTy),
                                                                                                                                      close
                                                                                                                                        (var("v",
                                                                                                                                             @{typ
                                                                                                                                             "PSR \<times>
                                                                                                                                              bool"}),
                                                                                                                                         mu(rupd
                                                                                                                                              ("PSR.A",
                                                                                                                                               var("v",
                                                                                                                                                   @{typ
                                                                                                                                                   "PSR \<times>
                                                                                                                                                    bool"}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ PSR}),
                                                                                                                                      mw(close
                                                                                                                                           (var("s",
                                                                                                                                                qTy),
                                                                                                                                            rupd
                                                                                                                                              ("state.CPSR",
                                                                                                                                               tp[var("s",
                                                                                                                                                      qTy),
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ PSR})],
                                                                                                                                               @{theory}))))))),
                                                                                                                          mu(lu,
                                                                                                                             qTy)))),
                                                                                                                close
                                                                                                                  (var_a
                                                                                                                     HOLogic.unitT,
                                                                                                                   mb(mr(close
                                                                                                                           (var("s",
                                                                                                                                qTy),
                                                                                                                            call
                                                                                                                              ("state.CPSR",
                                                                                                                               @{typ PSR},
                                                                                                                               var("s",
                                                                                                                                   qTy),
                                                                                                                               @{theory}))),
                                                                                                                      close
                                                                                                                        (var("v",
                                                                                                                             @{typ PSR}),
                                                                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                                                                            @{typ PSR}),
                                                                                                                                        lw(0,
                                                                                                                                           8)],
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ
                                                                                                                                         "PSR \<times>
                                                                                                                                          8 word"}),
                                                                                                                                     mu(rupd
                                                                                                                                          ("PSR.IT",
                                                                                                                                           var("v",
                                                                                                                                               @{typ
                                                                                                                                               "PSR \<times>
                                                                                                                                                8 word"}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ PSR}),
                                                                                                                                  mw(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        rupd
                                                                                                                                          ("state.CPSR",
                                                                                                                                           tp[var("s",
                                                                                                                                                  qTy),
                                                                                                                                              var("v",
                                                                                                                                                  @{typ PSR})],
                                                                                                                                           @{theory}))))),
                                                                                                                            close
                                                                                                                              (var_a
                                                                                                                                 HOLogic.unitT,
                                                                                                                               mb(mr(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        call
                                                                                                                                          ("state.CPSR",
                                                                                                                                           @{typ PSR},
                                                                                                                                           var("s",
                                                                                                                                               qTy),
                                                                                                                                           @{theory}))),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ PSR}),
                                                                                                                                     mb(mb(mb(mu(tp[var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    lf],
                                                                                                                                                 qTy),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "PSR \<times>
                                                                                                                                                      bool"}),
                                                                                                                                                 mu(rupd
                                                                                                                                                      ("PSR.J",
                                                                                                                                                       var("v",
                                                                                                                                                           @{typ
                                                                                                                                                           "PSR \<times>
                                                                                                                                                            bool"}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    qTy))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ PSR}),
                                                                                                                                              mw(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    rupd
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       tp[var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ PSR})],
                                                                                                                                                       @{theory}))))),
                                                                                                                                        close
                                                                                                                                          (var_a
                                                                                                                                             HOLogic.unitT,
                                                                                                                                           mb(mr(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    call
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       @{typ PSR},
                                                                                                                                                       var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       @{theory}))),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ PSR}),
                                                                                                                                                 mb(mb(mb(mb(mr(close
                                                                                                                                                                  (var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   call
                                                                                                                                                                     ("state.CP15",
                                                                                                                                                                      @{typ CP15},
                                                                                                                                                                      var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      @{theory}))),
                                                                                                                                                             close
                                                                                                                                                               (var("v0",
                                                                                                                                                                    @{typ CP15}),
                                                                                                                                                                mb(mb(mu(call
                                                                                                                                                                           ("CP15.SCTLR",
                                                                                                                                                                            @{typ SCTLR},
                                                                                                                                                                            var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            @{theory}),
                                                                                                                                                                         qTy),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ SCTLR}),
                                                                                                                                                                         mu(call
                                                                                                                                                                              ("SCTLR.TE",
                                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ SCTLR}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var_b"v0",
                                                                                                                                                                      mu(tp[var("v",
                                                                                                                                                                                @{typ PSR}),
                                                                                                                                                                            var_b"v0"],
                                                                                                                                                                         qTy))))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "PSR \<times>
                                                                                                                                                                  bool"}),
                                                                                                                                                             mu(rupd
                                                                                                                                                                  ("PSR.T",
                                                                                                                                                                   var("v",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "PSR \<times>
                                                                                                                                                                        bool"}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                qTy))),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ PSR}),
                                                                                                                                                          mw(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                rupd
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   tp[var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ PSR})],
                                                                                                                                                                   @{theory}))))),
                                                                                                                                                    close
                                                                                                                                                      (var_a
                                                                                                                                                         HOLogic.unitT,
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   @{typ PSR},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ PSR}),
                                                                                                                                                             mb(mb(mb(mb(mr(close
                                                                                                                                                                              (var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               call
                                                                                                                                                                                 ("state.CP15",
                                                                                                                                                                                  @{typ CP15},
                                                                                                                                                                                  var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  @{theory}))),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            mb(mb(mu(call
                                                                                                                                                                                       ("CP15.SCTLR",
                                                                                                                                                                                        @{typ SCTLR},
                                                                                                                                                                                        var("v0",
                                                                                                                                                                                            @{typ CP15}),
                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                     qTy),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var("v",
                                                                                                                                                                                         @{typ SCTLR}),
                                                                                                                                                                                     mu(call
                                                                                                                                                                                          ("SCTLR.EE",
                                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                                           var("v",
                                                                                                                                                                                               @{typ SCTLR}),
                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                        qTy))),
                                                                                                                                                                               close
                                                                                                                                                                                 (var_b"v0",
                                                                                                                                                                                  mu(tp[var("v",
                                                                                                                                                                                            @{typ PSR}),
                                                                                                                                                                                        var_b"v0"],
                                                                                                                                                                                     qTy))))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "PSR \<times>
                                                                                                                                                                              bool"}),
                                                                                                                                                                         mu(rupd
                                                                                                                                                                              ("PSR.E",
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ
                                                                                                                                                                                   "PSR \<times>
                                                                                                                                                                                    bool"}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var("v",
                                                                                                                                                                          @{typ PSR}),
                                                                                                                                                                      mw(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            rupd
                                                                                                                                                                              ("state.CPSR",
                                                                                                                                                                               tp[var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ PSR})],
                                                                                                                                                                               @{theory}))))),
                                                                                                                                                                close
                                                                                                                                                                  (var_a
                                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                                   mb(call
                                                                                                                                                                        ("ExcVectorBase",
                                                                                                                                                                         @{typ
                                                                                                                                                                         "state \<Rightarrow>
                                                                                                                                                                          (32 word \<times>
                                                                                                                                                                           state)"},
                                                                                                                                                                         lu,
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      close
                                                                                                                                                                        (var_w("v",32),
                                                                                                                                                                         mb(mu(bop(Add,
                                                                                                                                                                                   var_w("v",32),
                                                                                                                                                                                   var_w("vect_offset",32)),
                                                                                                                                                                               qTy),
                                                                                                                                                                            close
                                                                                                                                                                              (var_w("v",32),
                                                                                                                                                                               call
                                                                                                                                                                                 ("BranchTo",
                                                                                                                                                                                  @{typ
                                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                                   (unit \<times>
                                                                                                                                                                                    state)"},
                                                                                                                                                                                  var_w("v",32),
                                                                                                                                                                                  @{theory})))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakePhysicalIRQException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        let'
                          (var_w("vect_offset",32),lw(24,32),
                           mb(call
                                ("HaveSecurityExt",
                                 @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                              close
                                (var_b"v",
                                 mb(ite(var_b"v",
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                           close
                                             (var("v",@{typ CP15}),
                                              mb(mu(call
                                                      ("CP15.SCR",@{typ SCR},var("v",@{typ CP15}),
                                                       @{theory}),qTy),
                                                 close
                                                   (var("v",@{typ SCR}),
                                                    mu(call
                                                         ("SCR.IRQ",HOLogic.boolT,
                                                          var("v",@{typ SCR}),@{theory}),qTy))))),
                                        mu(lf,qTy)),
                                    close
                                      (var_b"route_to_monitor",
                                       mb(call
                                            ("HaveVirtExt",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_b"v",
                                             mb(mb(ite(var_b"v",
                                                       mb(call
                                                            ("HaveSecurityExt",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(mr(close
                                                                         (var("s",qTy),
                                                                          call
                                                                            ("state.CP15",
                                                                             @{typ CP15},
                                                                             var("s",qTy),@{theory}))),
                                                                    close
                                                                      (var("v",@{typ CP15}),
                                                                       mb(mb(mb(mu(call
                                                                                     ("CP15.SCR",
                                                                                      @{typ SCR},
                                                                                      var("v",
                                                                                          @{typ CP15}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ SCR}),
                                                                                   mu(call
                                                                                        ("SCR.IRQ",
                                                                                         HOLogic.boolT,
                                                                                         var("v",
                                                                                             @{typ SCR}),
                                                                                         @{theory}),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(mop(Not,var_b"v"),
                                                                                   qTy))),
                                                                          close
                                                                            (var_b"b",
                                                                             ite(var_b"b",
                                                                                 mb(mr(close
                                                                                         (var("s",
                                                                                              qTy),
                                                                                          call
                                                                                            ("state.CP15",
                                                                                             @{typ CP15},
                                                                                             var("s",
                                                                                                 qTy),
                                                                                             @{theory}))),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ CP15}),
                                                                                       mb(mb(mu(call
                                                                                                  ("CP15.HCR",
                                                                                                   @{typ HCR},
                                                                                                   var("v",
                                                                                                       @{typ CP15}),
                                                                                                   @{theory}),
                                                                                                qTy),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ HCR}),
                                                                                                mu(call
                                                                                                     ("HCR.IMO",
                                                                                                      HOLogic.boolT,
                                                                                                      var("v",
                                                                                                          @{typ HCR}),
                                                                                                      @{theory}),
                                                                                                   qTy))),
                                                                                          close
                                                                                            (var_b"b",
                                                                                             ite(var_b"b",
                                                                                                 mb(call
                                                                                                      ("IsSecure",
                                                                                                       @{typ
                                                                                                       "state \<Rightarrow>
                                                                                                        (bool \<times>
                                                                                                         state)"},
                                                                                                       lu,
                                                                                                       @{theory}),
                                                                                                    close
                                                                                                      (var_b"v",
                                                                                                       mu(mop(Not,
                                                                                                              var_b"v"),
                                                                                                          qTy))),
                                                                                                 mu(lf,
                                                                                                    qTy)))))),
                                                                                 mu(lf,qTy)))))),
                                                                 mu(lf,qTy)))),mu(lf,qTy)),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",mu(lt,qTy),
                                                          mb(mr(close
                                                                  (var("s",qTy),
                                                                   call
                                                                     ("state.CPSR",@{typ PSR},
                                                                      var("s",qTy),@{theory}))),
                                                             close
                                                               (var("v",@{typ PSR}),
                                                                mb(mu(call
                                                                        ("PSR.M",
                                                                         (Word_Lib.mk_wordT 5),
                                                                         var("v",@{typ PSR}),
                                                                         @{theory}),qTy),
                                                                   close
                                                                     (var_w("v",5),
                                                                      mu(eq(var_w("v",5),lw(26,5)),
                                                                         qTy)))))))),
                                                close
                                                  (var_b"route_to_hyp",
                                                   itb([(var_b"route_to_monitor",
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CPSR",@{typ PSR},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mb(mb(mb(mu(call
                                                                             ("PSR.M",
                                                                              (Word_Lib.mk_wordT 5),
                                                                              var("v",@{typ PSR}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v",5),
                                                                           mu(eq(var_w("v",5),
                                                                                 lw(22,5)),qTy))),
                                                                     close
                                                                       (var_b"b",
                                                                        ite(var_b"b",
                                                                            mb(mr(close
                                                                                    (var("s",qTy),
                                                                                     call
                                                                                       ("state.CP15",
                                                                                        @{typ CP15},
                                                                                        var("s",qTy),
                                                                                        @{theory}))),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ CP15}),
                                                                                  mb(mu(call
                                                                                          ("CP15.SCR",
                                                                                           @{typ SCR},
                                                                                           var("v",
                                                                                               @{typ CP15}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var("x0",
                                                                                            @{typ SCR}),
                                                                                        mb(mr(close
                                                                                                (var("s",
                                                                                                     qTy),
                                                                                                 call
                                                                                                   ("state.CP15",
                                                                                                    @{typ CP15},
                                                                                                    var("s",
                                                                                                        qTy),
                                                                                                    @{theory}))),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ CP15}),
                                                                                              mb(mb(mu(tp[var("v",
                                                                                                              @{typ CP15}),
                                                                                                          rupd
                                                                                                            ("SCR.NS",
                                                                                                             tp[var("x0",
                                                                                                                    @{typ SCR}),
                                                                                                                lf],
                                                                                                             @{theory})],
                                                                                                       qTy),
                                                                                                    close
                                                                                                      (var("v",
                                                                                                           @{typ
                                                                                                           "CP15 \<times>
                                                                                                            SCR"}),
                                                                                                       mu(rupd
                                                                                                            ("CP15.SCR",
                                                                                                             var("v",
                                                                                                                 @{typ
                                                                                                                 "CP15 \<times>
                                                                                                                  SCR"}),
                                                                                                             @{theory}),
                                                                                                          qTy))),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ CP15}),
                                                                                                    mw(close
                                                                                                         (var("s",
                                                                                                              qTy),
                                                                                                          rupd
                                                                                                            ("state.CP15",
                                                                                                             tp[var("s",
                                                                                                                    qTy),
                                                                                                                var("v",
                                                                                                                    @{typ CP15})],
                                                                                                             @{theory}))))))))))),
                                                                            mu(lu,qTy)))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     call
                                                                       ("EnterMonitorMode",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("new_spsr_value",
                                                                               @{typ PSR}),
                                                                           var_w("new_lr_value",32),
                                                                           var_w("vect_offset",32)],
                                                                        @{theory})))))),
                                                        (var_b"route_to_hyp",
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CP15",@{typ CP15},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v",@{typ CP15}),
                                                               mb(mb(mb(mu(tp[var("v",@{typ CP15}),
                                                                              lx @{typ HSR}],qTy),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "CP15 \<times> HSR"}),
                                                                           mu(rupd
                                                                                ("CP15.HSR",
                                                                                 var("v",
                                                                                     @{typ
                                                                                     "CP15 \<times>
                                                                                      HSR"}),
                                                                                 @{theory}),qTy))),
                                                                     close
                                                                       (var("v",@{typ CP15}),
                                                                        mw(close
                                                                             (var("s",qTy),
                                                                              rupd
                                                                                ("state.CP15",
                                                                                 tp[var("s",qTy),
                                                                                    var("v",
                                                                                        @{typ CP15})],
                                                                                 @{theory}))))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     call
                                                                       ("EnterHypMode",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("new_spsr_value",
                                                                               @{typ PSR}),
                                                                           bop(Sub,
                                                                               var_w("new_lr_value",32),
                                                                               lw(4,32)),
                                                                           var_w("vect_offset",32)],
                                                                        @{theory}))))))],
                                                       mb(mr(close
                                                               (var("s",qTy),
                                                                call
                                                                  ("state.CPSR",@{typ PSR},
                                                                   var("s",qTy),@{theory}))),
                                                          close
                                                            (var("v",@{typ PSR}),
                                                             mb(mb(mb(mu(call
                                                                           ("PSR.M",
                                                                            (Word_Lib.mk_wordT 5),
                                                                            var("v",@{typ PSR}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_w("v",5),
                                                                         mu(eq(var_w("v",5),lw(22,5)),
                                                                            qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CP15",
                                                                                      @{typ CP15},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ CP15}),
                                                                                mb(mu(call
                                                                                        ("CP15.SCR",
                                                                                         @{typ SCR},
                                                                                         var("v",
                                                                                             @{typ CP15}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var("x0",
                                                                                          @{typ SCR}),
                                                                                      mb(mr(close
                                                                                              (var("s",
                                                                                                   qTy),
                                                                                               call
                                                                                                 ("state.CP15",
                                                                                                  @{typ CP15},
                                                                                                  var("s",
                                                                                                      qTy),
                                                                                                  @{theory}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ CP15}),
                                                                                            mb(mb(mu(tp[var("v",
                                                                                                            @{typ CP15}),
                                                                                                        rupd
                                                                                                          ("SCR.NS",
                                                                                                           tp[var("x0",
                                                                                                                  @{typ SCR}),
                                                                                                              lf],
                                                                                                           @{theory})],
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "CP15 \<times>
                                                                                                          SCR"}),
                                                                                                     mu(rupd
                                                                                                          ("CP15.SCR",
                                                                                                           var("v",
                                                                                                               @{typ
                                                                                                               "CP15 \<times>
                                                                                                                SCR"}),
                                                                                                           @{theory}),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ CP15}),
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            qTy),
                                                                                                        rupd
                                                                                                          ("state.CP15",
                                                                                                           tp[var("s",
                                                                                                                  qTy),
                                                                                                              var("v",
                                                                                                                  @{typ CP15})],
                                                                                                           @{theory}))))))))))),
                                                                          mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.CPSR",
                                                                               @{typ PSR},
                                                                               var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var("v",@{typ PSR}),
                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                            @{typ PSR}),
                                                                                        lw(18,5)],
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ
                                                                                         "PSR \<times>
                                                                                          5 word"}),
                                                                                     mu(rupd
                                                                                          ("PSR.M",
                                                                                           var("v",
                                                                                               @{typ
                                                                                               "PSR \<times>
                                                                                                5 word"}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var("v",@{typ PSR}),
                                                                                  mw(close
                                                                                       (var("s",qTy),
                                                                                        rupd
                                                                                          ("state.CPSR",
                                                                                           tp[var("s",
                                                                                                  qTy),
                                                                                              var("v",
                                                                                                  @{typ PSR})],
                                                                                           @{theory}))))),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mb(call
                                                                                    ("write'SPSR",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (unit \<times>
                                                                                       state)"},
                                                                                     var("new_spsr_value",
                                                                                         @{typ PSR}),
                                                                                     @{theory}),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mb(call
                                                                                          ("write'R",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var_w("new_lr_value",32),
                                                                                              lw(14,
                                                                                                 4)],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        qTy),
                                                                                                    call
                                                                                                      ("state.CPSR",
                                                                                                       @{typ PSR},
                                                                                                       var("s",
                                                                                                           qTy),
                                                                                                       @{theory}))),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ PSR}),
                                                                                                 mb(mb(mb(mu(tp[var("v",
                                                                                                                    @{typ PSR}),
                                                                                                                lt],
                                                                                                             qTy),
                                                                                                          close
                                                                                                            (var("v",
                                                                                                                 @{typ
                                                                                                                 "PSR \<times>
                                                                                                                  bool"}),
                                                                                                             mu(rupd
                                                                                                                  ("PSR.I",
                                                                                                                   var("v",
                                                                                                                       @{typ
                                                                                                                       "PSR \<times>
                                                                                                                        bool"}),
                                                                                                                   @{theory}),
                                                                                                                qTy))),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ PSR}),
                                                                                                          mw(close
                                                                                                               (var("s",
                                                                                                                    qTy),
                                                                                                                rupd
                                                                                                                  ("state.CPSR",
                                                                                                                   tp[var("s",
                                                                                                                          qTy),
                                                                                                                      var("v",
                                                                                                                          @{typ PSR})],
                                                                                                                   @{theory}))))),
                                                                                                    close
                                                                                                      (var_a
                                                                                                         HOLogic.unitT,
                                                                                                       mb(call
                                                                                                            ("HaveSecurityExt",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (bool \<times>
                                                                                                               state)"},
                                                                                                             lu,
                                                                                                             @{theory}),
                                                                                                          close
                                                                                                            (var_b"v",
                                                                                                             mb(mb(mb(mu(mop(Not,
                                                                                                                             var_b"v"),
                                                                                                                         qTy),
                                                                                                                      close
                                                                                                                        (var_b"b",
                                                                                                                         ite(var_b"b",
                                                                                                                             mu(lt,
                                                                                                                                qTy),
                                                                                                                             mb(call
                                                                                                                                  ("HaveVirtExt",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (bool \<times>
                                                                                                                                     state)"},
                                                                                                                                   lu,
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var_b"b",
                                                                                                                                   ite(var_b"b",
                                                                                                                                       mu(lt,
                                                                                                                                          qTy),
                                                                                                                                       mb(mr(close
                                                                                                                                               (var("s",
                                                                                                                                                    qTy),
                                                                                                                                                call
                                                                                                                                                  ("state.CP15",
                                                                                                                                                   @{typ CP15},
                                                                                                                                                   var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   @{theory}))),
                                                                                                                                          close
                                                                                                                                            (var("v",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             mb(mb(mb(mu(call
                                                                                                                                                           ("CP15.SCR",
                                                                                                                                                            @{typ SCR},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ CP15}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ SCR}),
                                                                                                                                                         mu(call
                                                                                                                                                              ("SCR.NS",
                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ SCR}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"v",
                                                                                                                                                      mu(mop(Not,
                                                                                                                                                             var_b"v"),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"b",
                                                                                                                                                   ite(var_b"b",
                                                                                                                                                       mu(lt,
                                                                                                                                                          qTy),
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CP15",
                                                                                                                                                                   @{typ CP15},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ CP15}),
                                                                                                                                                             mb(mu(call
                                                                                                                                                                     ("CP15.SCR",
                                                                                                                                                                      @{typ SCR},
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ CP15}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var("v",
                                                                                                                                                                       @{typ SCR}),
                                                                                                                                                                   mu(call
                                                                                                                                                                        ("SCR.AW",
                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ SCR}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy)))))))))))))))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          mb(mr(close
                                                                                                                                  (var("s",
                                                                                                                                       qTy),
                                                                                                                                   call
                                                                                                                                     ("state.CPSR",
                                                                                                                                      @{typ PSR},
                                                                                                                                      var("s",
                                                                                                                                          qTy),
                                                                                                                                      @{theory}))),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ PSR}),
                                                                                                                                mb(mb(mu(tp[var("v",
                                                                                                                                                @{typ PSR}),
                                                                                                                                            lt],
                                                                                                                                         qTy),
                                                                                                                                      close
                                                                                                                                        (var("v",
                                                                                                                                             @{typ
                                                                                                                                             "PSR \<times>
                                                                                                                                              bool"}),
                                                                                                                                         mu(rupd
                                                                                                                                              ("PSR.A",
                                                                                                                                               var("v",
                                                                                                                                                   @{typ
                                                                                                                                                   "PSR \<times>
                                                                                                                                                    bool"}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ PSR}),
                                                                                                                                      mw(close
                                                                                                                                           (var("s",
                                                                                                                                                qTy),
                                                                                                                                            rupd
                                                                                                                                              ("state.CPSR",
                                                                                                                                               tp[var("s",
                                                                                                                                                      qTy),
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ PSR})],
                                                                                                                                               @{theory}))))))),
                                                                                                                          mu(lu,
                                                                                                                             qTy)))),
                                                                                                                close
                                                                                                                  (var_a
                                                                                                                     HOLogic.unitT,
                                                                                                                   mb(mr(close
                                                                                                                           (var("s",
                                                                                                                                qTy),
                                                                                                                            call
                                                                                                                              ("state.CPSR",
                                                                                                                               @{typ PSR},
                                                                                                                               var("s",
                                                                                                                                   qTy),
                                                                                                                               @{theory}))),
                                                                                                                      close
                                                                                                                        (var("v",
                                                                                                                             @{typ PSR}),
                                                                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                                                                            @{typ PSR}),
                                                                                                                                        lw(0,
                                                                                                                                           8)],
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ
                                                                                                                                         "PSR \<times>
                                                                                                                                          8 word"}),
                                                                                                                                     mu(rupd
                                                                                                                                          ("PSR.IT",
                                                                                                                                           var("v",
                                                                                                                                               @{typ
                                                                                                                                               "PSR \<times>
                                                                                                                                                8 word"}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ PSR}),
                                                                                                                                  mw(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        rupd
                                                                                                                                          ("state.CPSR",
                                                                                                                                           tp[var("s",
                                                                                                                                                  qTy),
                                                                                                                                              var("v",
                                                                                                                                                  @{typ PSR})],
                                                                                                                                           @{theory}))))),
                                                                                                                            close
                                                                                                                              (var_a
                                                                                                                                 HOLogic.unitT,
                                                                                                                               mb(mr(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        call
                                                                                                                                          ("state.CPSR",
                                                                                                                                           @{typ PSR},
                                                                                                                                           var("s",
                                                                                                                                               qTy),
                                                                                                                                           @{theory}))),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ PSR}),
                                                                                                                                     mb(mb(mb(mu(tp[var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    lf],
                                                                                                                                                 qTy),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "PSR \<times>
                                                                                                                                                      bool"}),
                                                                                                                                                 mu(rupd
                                                                                                                                                      ("PSR.J",
                                                                                                                                                       var("v",
                                                                                                                                                           @{typ
                                                                                                                                                           "PSR \<times>
                                                                                                                                                            bool"}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    qTy))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ PSR}),
                                                                                                                                              mw(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    rupd
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       tp[var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ PSR})],
                                                                                                                                                       @{theory}))))),
                                                                                                                                        close
                                                                                                                                          (var_a
                                                                                                                                             HOLogic.unitT,
                                                                                                                                           mb(mr(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    call
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       @{typ PSR},
                                                                                                                                                       var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       @{theory}))),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ PSR}),
                                                                                                                                                 mb(mb(mb(mb(mr(close
                                                                                                                                                                  (var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   call
                                                                                                                                                                     ("state.CP15",
                                                                                                                                                                      @{typ CP15},
                                                                                                                                                                      var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      @{theory}))),
                                                                                                                                                             close
                                                                                                                                                               (var("v0",
                                                                                                                                                                    @{typ CP15}),
                                                                                                                                                                mb(mb(mu(call
                                                                                                                                                                           ("CP15.SCTLR",
                                                                                                                                                                            @{typ SCTLR},
                                                                                                                                                                            var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            @{theory}),
                                                                                                                                                                         qTy),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ SCTLR}),
                                                                                                                                                                         mu(call
                                                                                                                                                                              ("SCTLR.TE",
                                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ SCTLR}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var_b"v0",
                                                                                                                                                                      mu(tp[var("v",
                                                                                                                                                                                @{typ PSR}),
                                                                                                                                                                            var_b"v0"],
                                                                                                                                                                         qTy))))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "PSR \<times>
                                                                                                                                                                  bool"}),
                                                                                                                                                             mu(rupd
                                                                                                                                                                  ("PSR.T",
                                                                                                                                                                   var("v",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "PSR \<times>
                                                                                                                                                                        bool"}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                qTy))),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ PSR}),
                                                                                                                                                          mw(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                rupd
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   tp[var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ PSR})],
                                                                                                                                                                   @{theory}))))),
                                                                                                                                                    close
                                                                                                                                                      (var_a
                                                                                                                                                         HOLogic.unitT,
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   @{typ PSR},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ PSR}),
                                                                                                                                                             mb(mb(mb(mb(mr(close
                                                                                                                                                                              (var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               call
                                                                                                                                                                                 ("state.CP15",
                                                                                                                                                                                  @{typ CP15},
                                                                                                                                                                                  var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  @{theory}))),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            mb(mb(mu(call
                                                                                                                                                                                       ("CP15.SCTLR",
                                                                                                                                                                                        @{typ SCTLR},
                                                                                                                                                                                        var("v0",
                                                                                                                                                                                            @{typ CP15}),
                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                     qTy),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var("v",
                                                                                                                                                                                         @{typ SCTLR}),
                                                                                                                                                                                     mu(call
                                                                                                                                                                                          ("SCTLR.EE",
                                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                                           var("v",
                                                                                                                                                                                               @{typ SCTLR}),
                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                        qTy))),
                                                                                                                                                                               close
                                                                                                                                                                                 (var_b"v0",
                                                                                                                                                                                  mu(tp[var("v",
                                                                                                                                                                                            @{typ PSR}),
                                                                                                                                                                                        var_b"v0"],
                                                                                                                                                                                     qTy))))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "PSR \<times>
                                                                                                                                                                              bool"}),
                                                                                                                                                                         mu(rupd
                                                                                                                                                                              ("PSR.E",
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ
                                                                                                                                                                                   "PSR \<times>
                                                                                                                                                                                    bool"}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var("v",
                                                                                                                                                                          @{typ PSR}),
                                                                                                                                                                      mw(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            rupd
                                                                                                                                                                              ("state.CPSR",
                                                                                                                                                                               tp[var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ PSR})],
                                                                                                                                                                               @{theory}))))),
                                                                                                                                                                close
                                                                                                                                                                  (var_a
                                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                                   mb(mr(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            call
                                                                                                                                                                              ("state.CP15",
                                                                                                                                                                               @{typ CP15},
                                                                                                                                                                               var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               @{theory}))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ CP15}),
                                                                                                                                                                         mb(mb(mu(call
                                                                                                                                                                                    ("CP15.SCTLR",
                                                                                                                                                                                     @{typ SCTLR},
                                                                                                                                                                                     var("v",
                                                                                                                                                                                         @{typ CP15}),
                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                  qTy),
                                                                                                                                                                               close
                                                                                                                                                                                 (var("v",
                                                                                                                                                                                      @{typ SCTLR}),
                                                                                                                                                                                  mu(call
                                                                                                                                                                                       ("SCTLR.VE",
                                                                                                                                                                                        HOLogic.boolT,
                                                                                                                                                                                        var("v",
                                                                                                                                                                                            @{typ SCTLR}),
                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                     qTy))),
                                                                                                                                                                            close
                                                                                                                                                                              (var_b"b",
                                                                                                                                                                               ite(var_b"b",
                                                                                                                                                                                   call
                                                                                                                                                                                     ("raise'exception",
                                                                                                                                                                                      @{typ
                                                                                                                                                                                      "state \<Rightarrow>
                                                                                                                                                                                       (unit \<times>
                                                                                                                                                                                        state)"},
                                                                                                                                                                                      call
                                                                                                                                                                                        ("exception.IMPLEMENTATION_DEFINED",
                                                                                                                                                                                         @{typ exception},
                                                                                                                                                                                         ls
                                                                                                                                                                                          "branch to an IRQ vector",
                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                      @{theory}),
                                                                                                                                                                                   mb(call
                                                                                                                                                                                        ("ExcVectorBase",
                                                                                                                                                                                         @{typ
                                                                                                                                                                                         "state \<Rightarrow>
                                                                                                                                                                                          (32 word \<times>
                                                                                                                                                                                           state)"},
                                                                                                                                                                                         lu,
                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                      close
                                                                                                                                                                                        (var_w("v",32),
                                                                                                                                                                                         mb(mu(bop(Add,
                                                                                                                                                                                                   var_w("v",32),
                                                                                                                                                                                                   var_w("vect_offset",32)),
                                                                                                                                                                                               qTy),
                                                                                                                                                                                            close
                                                                                                                                                                                              (var_w("v",32),
                                                                                                                                                                                               call
                                                                                                                                                                                                 ("BranchTo",
                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                                                   (unit \<times>
                                                                                                                                                                                                    state)"},
                                                                                                                                                                                                  var_w("v",32),
                                                                                                                                                                                                  @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeVirtualIRQException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        mb(mr(close
                                (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                           close
                             (var("v",@{typ PSR}),
                              mb(mb(mb(mu(tp[var("v",@{typ PSR}),lw(18,5)],qTy),
                                       close
                                         (var("v",@{typ "PSR \<times> 5 word"}),
                                          mu(rupd
                                               ("PSR.M",var("v",@{typ "PSR \<times> 5 word"}),
                                                @{theory}),qTy))),
                                    close
                                      (var("v",@{typ PSR}),
                                       mw(close
                                            (var("s",qTy),
                                             rupd
                                               ("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],
                                                @{theory}))))),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(call
                                         ("write'SPSR",
                                          @{typ "state \<Rightarrow> (unit \<times> state)"},
                                          var("new_spsr_value",@{typ PSR}),@{theory}),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(call
                                               ("write'R",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                tp[var_w("new_lr_value",32),lw(14,4)],@{theory}),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(mr(close
                                                        (var("s",qTy),
                                                         call
                                                           ("state.CPSR",@{typ PSR},var("s",qTy),
                                                            @{theory}))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mb(mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                               close
                                                                 (var("v",@{typ "PSR \<times> bool"}),
                                                                  mu(rupd
                                                                       ("PSR.I",
                                                                        var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        @{theory}),qTy))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mw(close
                                                                    (var("s",qTy),
                                                                     rupd
                                                                       ("state.CPSR",
                                                                        tp[var("s",qTy),
                                                                           var("v",@{typ PSR})],
                                                                        @{theory}))))),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(mr(close
                                                                    (var("s",qTy),
                                                                     call
                                                                       ("state.CPSR",@{typ PSR},
                                                                        var("s",qTy),@{theory}))),
                                                               close
                                                                 (var("v",@{typ PSR}),
                                                                  mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                                 lt],qTy),
                                                                           close
                                                                             (var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              mu(rupd
                                                                                   ("PSR.A",
                                                                                    var("v",
                                                                                        @{typ
                                                                                        "PSR \<times>
                                                                                         bool"}),
                                                                                    @{theory}),qTy))),
                                                                        close
                                                                          (var("v",@{typ PSR}),
                                                                           mw(close
                                                                                (var("s",qTy),
                                                                                 rupd
                                                                                   ("state.CPSR",
                                                                                    tp[var("s",qTy),
                                                                                       var("v",
                                                                                           @{typ PSR})],
                                                                                    @{theory}))))),
                                                                     close
                                                                       (var_a HOLogic.unitT,
                                                                        mb(mr(close
                                                                                (var("s",qTy),
                                                                                 call
                                                                                   ("state.CPSR",
                                                                                    @{typ PSR},
                                                                                    var("s",qTy),
                                                                                    @{theory}))),
                                                                           close
                                                                             (var("v",@{typ PSR}),
                                                                              mb(mb(mb(mu(tp[var("v",
                                                                                                 @{typ PSR}),
                                                                                             lw(0,8)],
                                                                                          qTy),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ
                                                                                              "PSR \<times>
                                                                                               8 word"}),
                                                                                          mu(rupd
                                                                                               ("PSR.IT",
                                                                                                var("v",
                                                                                                    @{typ
                                                                                                    "PSR \<times>
                                                                                                     8 word"}),
                                                                                                @{theory}),
                                                                                             qTy))),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ PSR}),
                                                                                       mw(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             rupd
                                                                                               ("state.CPSR",
                                                                                                tp[var("s",
                                                                                                       qTy),
                                                                                                   var("v",
                                                                                                       @{typ PSR})],
                                                                                                @{theory}))))),
                                                                                 close
                                                                                   (var_a
                                                                                      HOLogic.unitT,
                                                                                    mb(mr(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             call
                                                                                               ("state.CPSR",
                                                                                                @{typ PSR},
                                                                                                var("s",
                                                                                                    qTy),
                                                                                                @{theory}))),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ PSR}),
                                                                                          mb(mb(mb(mu(tp[var("v",
                                                                                                             @{typ PSR}),
                                                                                                         lf],
                                                                                                      qTy),
                                                                                                   close
                                                                                                     (var("v",
                                                                                                          @{typ
                                                                                                          "PSR \<times>
                                                                                                           bool"}),
                                                                                                      mu(rupd
                                                                                                           ("PSR.J",
                                                                                                            var("v",
                                                                                                                @{typ
                                                                                                                "PSR \<times>
                                                                                                                 bool"}),
                                                                                                            @{theory}),
                                                                                                         qTy))),
                                                                                                close
                                                                                                  (var("v",
                                                                                                       @{typ PSR}),
                                                                                                   mw(close
                                                                                                        (var("s",
                                                                                                             qTy),
                                                                                                         rupd
                                                                                                           ("state.CPSR",
                                                                                                            tp[var("s",
                                                                                                                   qTy),
                                                                                                               var("v",
                                                                                                                   @{typ PSR})],
                                                                                                            @{theory}))))),
                                                                                             close
                                                                                               (var_a
                                                                                                  HOLogic.unitT,
                                                                                                mb(mr(close
                                                                                                        (var("s",
                                                                                                             qTy),
                                                                                                         call
                                                                                                           ("state.CPSR",
                                                                                                            @{typ PSR},
                                                                                                            var("s",
                                                                                                                qTy),
                                                                                                            @{theory}))),
                                                                                                   close
                                                                                                     (var("v",
                                                                                                          @{typ PSR}),
                                                                                                      mb(mb(mb(mb(mr(close
                                                                                                                       (var("s",
                                                                                                                            qTy),
                                                                                                                        call
                                                                                                                          ("state.CP15",
                                                                                                                           @{typ CP15},
                                                                                                                           var("s",
                                                                                                                               qTy),
                                                                                                                           @{theory}))),
                                                                                                                  close
                                                                                                                    (var("v0",
                                                                                                                         @{typ CP15}),
                                                                                                                     mb(mb(mu(call
                                                                                                                                ("CP15.SCTLR",
                                                                                                                                 @{typ SCTLR},
                                                                                                                                 var("v0",
                                                                                                                                     @{typ CP15}),
                                                                                                                                 @{theory}),
                                                                                                                              qTy),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ SCTLR}),
                                                                                                                              mu(call
                                                                                                                                   ("SCTLR.TE",
                                                                                                                                    HOLogic.boolT,
                                                                                                                                    var("v",
                                                                                                                                        @{typ SCTLR}),
                                                                                                                                    @{theory}),
                                                                                                                                 qTy))),
                                                                                                                        close
                                                                                                                          (var_b"v0",
                                                                                                                           mu(tp[var("v",
                                                                                                                                     @{typ PSR}),
                                                                                                                                 var_b"v0"],
                                                                                                                              qTy))))),
                                                                                                               close
                                                                                                                 (var("v",
                                                                                                                      @{typ
                                                                                                                      "PSR \<times>
                                                                                                                       bool"}),
                                                                                                                  mu(rupd
                                                                                                                       ("PSR.T",
                                                                                                                        var("v",
                                                                                                                            @{typ
                                                                                                                            "PSR \<times>
                                                                                                                             bool"}),
                                                                                                                        @{theory}),
                                                                                                                     qTy))),
                                                                                                            close
                                                                                                              (var("v",
                                                                                                                   @{typ PSR}),
                                                                                                               mw(close
                                                                                                                    (var("s",
                                                                                                                         qTy),
                                                                                                                     rupd
                                                                                                                       ("state.CPSR",
                                                                                                                        tp[var("s",
                                                                                                                               qTy),
                                                                                                                           var("v",
                                                                                                                               @{typ PSR})],
                                                                                                                        @{theory}))))),
                                                                                                         close
                                                                                                           (var_a
                                                                                                              HOLogic.unitT,
                                                                                                            mb(mr(close
                                                                                                                    (var("s",
                                                                                                                         qTy),
                                                                                                                     call
                                                                                                                       ("state.CPSR",
                                                                                                                        @{typ PSR},
                                                                                                                        var("s",
                                                                                                                            qTy),
                                                                                                                        @{theory}))),
                                                                                                               close
                                                                                                                 (var("v",
                                                                                                                      @{typ PSR}),
                                                                                                                  mb(mb(mb(mb(mr(close
                                                                                                                                   (var("s",
                                                                                                                                        qTy),
                                                                                                                                    call
                                                                                                                                      ("state.CP15",
                                                                                                                                       @{typ CP15},
                                                                                                                                       var("s",
                                                                                                                                           qTy),
                                                                                                                                       @{theory}))),
                                                                                                                              close
                                                                                                                                (var("v0",
                                                                                                                                     @{typ CP15}),
                                                                                                                                 mb(mb(mu(call
                                                                                                                                            ("CP15.SCTLR",
                                                                                                                                             @{typ SCTLR},
                                                                                                                                             var("v0",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             @{theory}),
                                                                                                                                          qTy),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ SCTLR}),
                                                                                                                                          mu(call
                                                                                                                                               ("SCTLR.EE",
                                                                                                                                                HOLogic.boolT,
                                                                                                                                                var("v",
                                                                                                                                                    @{typ SCTLR}),
                                                                                                                                                @{theory}),
                                                                                                                                             qTy))),
                                                                                                                                    close
                                                                                                                                      (var_b"v0",
                                                                                                                                       mu(tp[var("v",
                                                                                                                                                 @{typ PSR}),
                                                                                                                                             var_b"v0"],
                                                                                                                                          qTy))))),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ
                                                                                                                                  "PSR \<times>
                                                                                                                                   bool"}),
                                                                                                                              mu(rupd
                                                                                                                                   ("PSR.E",
                                                                                                                                    var("v",
                                                                                                                                        @{typ
                                                                                                                                        "PSR \<times>
                                                                                                                                         bool"}),
                                                                                                                                    @{theory}),
                                                                                                                                 qTy))),
                                                                                                                        close
                                                                                                                          (var("v",
                                                                                                                               @{typ PSR}),
                                                                                                                           mw(close
                                                                                                                                (var("s",
                                                                                                                                     qTy),
                                                                                                                                 rupd
                                                                                                                                   ("state.CPSR",
                                                                                                                                    tp[var("s",
                                                                                                                                           qTy),
                                                                                                                                       var("v",
                                                                                                                                           @{typ PSR})],
                                                                                                                                    @{theory}))))),
                                                                                                                     close
                                                                                                                       (var_a
                                                                                                                          HOLogic.unitT,
                                                                                                                        mb(mr(close
                                                                                                                                (var("s",
                                                                                                                                     qTy),
                                                                                                                                 call
                                                                                                                                   ("state.CP15",
                                                                                                                                    @{typ CP15},
                                                                                                                                    var("s",
                                                                                                                                        qTy),
                                                                                                                                    @{theory}))),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ CP15}),
                                                                                                                              mb(mb(mu(call
                                                                                                                                         ("CP15.SCTLR",
                                                                                                                                          @{typ SCTLR},
                                                                                                                                          var("v",
                                                                                                                                              @{typ CP15}),
                                                                                                                                          @{theory}),
                                                                                                                                       qTy),
                                                                                                                                    close
                                                                                                                                      (var("v",
                                                                                                                                           @{typ SCTLR}),
                                                                                                                                       mu(call
                                                                                                                                            ("SCTLR.VE",
                                                                                                                                             HOLogic.boolT,
                                                                                                                                             var("v",
                                                                                                                                                 @{typ SCTLR}),
                                                                                                                                             @{theory}),
                                                                                                                                          qTy))),
                                                                                                                                 close
                                                                                                                                   (var_b"b",
                                                                                                                                    ite(var_b"b",
                                                                                                                                        call
                                                                                                                                          ("raise'exception",
                                                                                                                                           @{typ
                                                                                                                                           "state \<Rightarrow>
                                                                                                                                            (unit \<times>
                                                                                                                                             state)"},
                                                                                                                                           call
                                                                                                                                             ("exception.IMPLEMENTATION_DEFINED",
                                                                                                                                              @{typ exception},
                                                                                                                                              ls
                                                                                                                                               "branch to an IRQ vector",
                                                                                                                                              @{theory}),
                                                                                                                                           @{theory}),
                                                                                                                                        mb(call
                                                                                                                                             ("ExcVectorBase",
                                                                                                                                              @{typ
                                                                                                                                              "state \<Rightarrow>
                                                                                                                                               (32 word \<times>
                                                                                                                                                state)"},
                                                                                                                                              lu,
                                                                                                                                              @{theory}),
                                                                                                                                           close
                                                                                                                                             (var_w("v",32),
                                                                                                                                              mb(mu(bop(Add,
                                                                                                                                                        var_w("v",32),
                                                                                                                                                        lw(24,
                                                                                                                                                           32)),
                                                                                                                                                    qTy),
                                                                                                                                                 close
                                                                                                                                                   (var_w("v",32),
                                                                                                                                                    call
                                                                                                                                                      ("BranchTo",
                                                                                                                                                       @{typ
                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                        (unit \<times>
                                                                                                                                                         state)"},
                                                                                                                                                       var_w("v",32),
                                                                                                                                                       @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakePhysicalFIQException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        let'
                          (var_w("vect_offset",32),lw(28,32),
                           mb(call
                                ("HaveSecurityExt",
                                 @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                              close
                                (var_b"v",
                                 mb(ite(var_b"v",
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                           close
                                             (var("v",@{typ CP15}),
                                              mb(mu(call
                                                      ("CP15.SCR",@{typ SCR},var("v",@{typ CP15}),
                                                       @{theory}),qTy),
                                                 close
                                                   (var("v",@{typ SCR}),
                                                    mu(call
                                                         ("SCR.FIQ",HOLogic.boolT,
                                                          var("v",@{typ SCR}),@{theory}),qTy))))),
                                        mu(lf,qTy)),
                                    close
                                      (var_b"route_to_monitor",
                                       mb(call
                                            ("HaveVirtExt",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_b"v",
                                             mb(mb(ite(var_b"v",
                                                       mb(call
                                                            ("HaveSecurityExt",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(mr(close
                                                                         (var("s",qTy),
                                                                          call
                                                                            ("state.CP15",
                                                                             @{typ CP15},
                                                                             var("s",qTy),@{theory}))),
                                                                    close
                                                                      (var("v",@{typ CP15}),
                                                                       mb(mb(mb(mu(call
                                                                                     ("CP15.SCR",
                                                                                      @{typ SCR},
                                                                                      var("v",
                                                                                          @{typ CP15}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ SCR}),
                                                                                   mu(call
                                                                                        ("SCR.FIQ",
                                                                                         HOLogic.boolT,
                                                                                         var("v",
                                                                                             @{typ SCR}),
                                                                                         @{theory}),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(mop(Not,var_b"v"),
                                                                                   qTy))),
                                                                          close
                                                                            (var_b"b",
                                                                             ite(var_b"b",
                                                                                 mb(mr(close
                                                                                         (var("s",
                                                                                              qTy),
                                                                                          call
                                                                                            ("state.CP15",
                                                                                             @{typ CP15},
                                                                                             var("s",
                                                                                                 qTy),
                                                                                             @{theory}))),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ CP15}),
                                                                                       mb(mb(mu(call
                                                                                                  ("CP15.HCR",
                                                                                                   @{typ HCR},
                                                                                                   var("v",
                                                                                                       @{typ CP15}),
                                                                                                   @{theory}),
                                                                                                qTy),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ HCR}),
                                                                                                mu(call
                                                                                                     ("HCR.FMO",
                                                                                                      HOLogic.boolT,
                                                                                                      var("v",
                                                                                                          @{typ HCR}),
                                                                                                      @{theory}),
                                                                                                   qTy))),
                                                                                          close
                                                                                            (var_b"b",
                                                                                             ite(var_b"b",
                                                                                                 mb(call
                                                                                                      ("IsSecure",
                                                                                                       @{typ
                                                                                                       "state \<Rightarrow>
                                                                                                        (bool \<times>
                                                                                                         state)"},
                                                                                                       lu,
                                                                                                       @{theory}),
                                                                                                    close
                                                                                                      (var_b"v",
                                                                                                       mu(mop(Not,
                                                                                                              var_b"v"),
                                                                                                          qTy))),
                                                                                                 mu(lf,
                                                                                                    qTy)))))),
                                                                                 mu(lf,qTy)))))),
                                                                 mu(lf,qTy)))),mu(lf,qTy)),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",mu(lt,qTy),
                                                          mb(mr(close
                                                                  (var("s",qTy),
                                                                   call
                                                                     ("state.CPSR",@{typ PSR},
                                                                      var("s",qTy),@{theory}))),
                                                             close
                                                               (var("v",@{typ PSR}),
                                                                mb(mu(call
                                                                        ("PSR.M",
                                                                         (Word_Lib.mk_wordT 5),
                                                                         var("v",@{typ PSR}),
                                                                         @{theory}),qTy),
                                                                   close
                                                                     (var_w("v",5),
                                                                      mu(eq(var_w("v",5),lw(26,5)),
                                                                         qTy)))))))),
                                                close
                                                  (var_b"route_to_hyp",
                                                   itb([(var_b"route_to_monitor",
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CPSR",@{typ PSR},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mb(mb(mb(mu(call
                                                                             ("PSR.M",
                                                                              (Word_Lib.mk_wordT 5),
                                                                              var("v",@{typ PSR}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v",5),
                                                                           mu(eq(var_w("v",5),
                                                                                 lw(22,5)),qTy))),
                                                                     close
                                                                       (var_b"b",
                                                                        ite(var_b"b",
                                                                            mb(mr(close
                                                                                    (var("s",qTy),
                                                                                     call
                                                                                       ("state.CP15",
                                                                                        @{typ CP15},
                                                                                        var("s",qTy),
                                                                                        @{theory}))),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ CP15}),
                                                                                  mb(mu(call
                                                                                          ("CP15.SCR",
                                                                                           @{typ SCR},
                                                                                           var("v",
                                                                                               @{typ CP15}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var("x0",
                                                                                            @{typ SCR}),
                                                                                        mb(mr(close
                                                                                                (var("s",
                                                                                                     qTy),
                                                                                                 call
                                                                                                   ("state.CP15",
                                                                                                    @{typ CP15},
                                                                                                    var("s",
                                                                                                        qTy),
                                                                                                    @{theory}))),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ CP15}),
                                                                                              mb(mb(mu(tp[var("v",
                                                                                                              @{typ CP15}),
                                                                                                          rupd
                                                                                                            ("SCR.NS",
                                                                                                             tp[var("x0",
                                                                                                                    @{typ SCR}),
                                                                                                                lf],
                                                                                                             @{theory})],
                                                                                                       qTy),
                                                                                                    close
                                                                                                      (var("v",
                                                                                                           @{typ
                                                                                                           "CP15 \<times>
                                                                                                            SCR"}),
                                                                                                       mu(rupd
                                                                                                            ("CP15.SCR",
                                                                                                             var("v",
                                                                                                                 @{typ
                                                                                                                 "CP15 \<times>
                                                                                                                  SCR"}),
                                                                                                             @{theory}),
                                                                                                          qTy))),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ CP15}),
                                                                                                    mw(close
                                                                                                         (var("s",
                                                                                                              qTy),
                                                                                                          rupd
                                                                                                            ("state.CP15",
                                                                                                             tp[var("s",
                                                                                                                    qTy),
                                                                                                                var("v",
                                                                                                                    @{typ CP15})],
                                                                                                             @{theory}))))))))))),
                                                                            mu(lu,qTy)))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     call
                                                                       ("EnterMonitorMode",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("new_spsr_value",
                                                                               @{typ PSR}),
                                                                           var_w("new_lr_value",32),
                                                                           var_w("vect_offset",32)],
                                                                        @{theory})))))),
                                                        (var_b"route_to_hyp",
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.CP15",@{typ CP15},
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var("v",@{typ CP15}),
                                                               mb(mb(mb(mu(tp[var("v",@{typ CP15}),
                                                                              lx @{typ HSR}],qTy),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "CP15 \<times> HSR"}),
                                                                           mu(rupd
                                                                                ("CP15.HSR",
                                                                                 var("v",
                                                                                     @{typ
                                                                                     "CP15 \<times>
                                                                                      HSR"}),
                                                                                 @{theory}),qTy))),
                                                                     close
                                                                       (var("v",@{typ CP15}),
                                                                        mw(close
                                                                             (var("s",qTy),
                                                                              rupd
                                                                                ("state.CP15",
                                                                                 tp[var("s",qTy),
                                                                                    var("v",
                                                                                        @{typ CP15})],
                                                                                 @{theory}))))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     call
                                                                       ("EnterHypMode",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("new_spsr_value",
                                                                               @{typ PSR}),
                                                                           bop(Sub,
                                                                               var_w("new_lr_value",32),
                                                                               lw(4,32)),
                                                                           var_w("vect_offset",32)],
                                                                        @{theory}))))))],
                                                       mb(mr(close
                                                               (var("s",qTy),
                                                                call
                                                                  ("state.CPSR",@{typ PSR},
                                                                   var("s",qTy),@{theory}))),
                                                          close
                                                            (var("v",@{typ PSR}),
                                                             mb(mb(mb(mu(call
                                                                           ("PSR.M",
                                                                            (Word_Lib.mk_wordT 5),
                                                                            var("v",@{typ PSR}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_w("v",5),
                                                                         mu(eq(var_w("v",5),lw(22,5)),
                                                                            qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CP15",
                                                                                      @{typ CP15},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ CP15}),
                                                                                mb(mu(call
                                                                                        ("CP15.SCR",
                                                                                         @{typ SCR},
                                                                                         var("v",
                                                                                             @{typ CP15}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var("x0",
                                                                                          @{typ SCR}),
                                                                                      mb(mr(close
                                                                                              (var("s",
                                                                                                   qTy),
                                                                                               call
                                                                                                 ("state.CP15",
                                                                                                  @{typ CP15},
                                                                                                  var("s",
                                                                                                      qTy),
                                                                                                  @{theory}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ CP15}),
                                                                                            mb(mb(mu(tp[var("v",
                                                                                                            @{typ CP15}),
                                                                                                        rupd
                                                                                                          ("SCR.NS",
                                                                                                           tp[var("x0",
                                                                                                                  @{typ SCR}),
                                                                                                              lf],
                                                                                                           @{theory})],
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "CP15 \<times>
                                                                                                          SCR"}),
                                                                                                     mu(rupd
                                                                                                          ("CP15.SCR",
                                                                                                           var("v",
                                                                                                               @{typ
                                                                                                               "CP15 \<times>
                                                                                                                SCR"}),
                                                                                                           @{theory}),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ CP15}),
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            qTy),
                                                                                                        rupd
                                                                                                          ("state.CP15",
                                                                                                           tp[var("s",
                                                                                                                  qTy),
                                                                                                              var("v",
                                                                                                                  @{typ CP15})],
                                                                                                           @{theory}))))))))))),
                                                                          mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.CPSR",
                                                                               @{typ PSR},
                                                                               var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var("v",@{typ PSR}),
                                                                         mb(mb(mb(mu(tp[var("v",
                                                                                            @{typ PSR}),
                                                                                        lw(17,5)],
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ
                                                                                         "PSR \<times>
                                                                                          5 word"}),
                                                                                     mu(rupd
                                                                                          ("PSR.M",
                                                                                           var("v",
                                                                                               @{typ
                                                                                               "PSR \<times>
                                                                                                5 word"}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var("v",@{typ PSR}),
                                                                                  mw(close
                                                                                       (var("s",qTy),
                                                                                        rupd
                                                                                          ("state.CPSR",
                                                                                           tp[var("s",
                                                                                                  qTy),
                                                                                              var("v",
                                                                                                  @{typ PSR})],
                                                                                           @{theory}))))),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mb(call
                                                                                    ("write'SPSR",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (unit \<times>
                                                                                       state)"},
                                                                                     var("new_spsr_value",
                                                                                         @{typ PSR}),
                                                                                     @{theory}),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mb(call
                                                                                          ("write'R",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var_w("new_lr_value",32),
                                                                                              lw(14,
                                                                                                 4)],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        qTy),
                                                                                                    call
                                                                                                      ("state.CPSR",
                                                                                                       @{typ PSR},
                                                                                                       var("s",
                                                                                                           qTy),
                                                                                                       @{theory}))),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ PSR}),
                                                                                                 mb(mb(mb(mu(tp[var("v",
                                                                                                                    @{typ PSR}),
                                                                                                                lt],
                                                                                                             qTy),
                                                                                                          close
                                                                                                            (var("v",
                                                                                                                 @{typ
                                                                                                                 "PSR \<times>
                                                                                                                  bool"}),
                                                                                                             mu(rupd
                                                                                                                  ("PSR.I",
                                                                                                                   var("v",
                                                                                                                       @{typ
                                                                                                                       "PSR \<times>
                                                                                                                        bool"}),
                                                                                                                   @{theory}),
                                                                                                                qTy))),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ PSR}),
                                                                                                          mw(close
                                                                                                               (var("s",
                                                                                                                    qTy),
                                                                                                                rupd
                                                                                                                  ("state.CPSR",
                                                                                                                   tp[var("s",
                                                                                                                          qTy),
                                                                                                                      var("v",
                                                                                                                          @{typ PSR})],
                                                                                                                   @{theory}))))),
                                                                                                    close
                                                                                                      (var_a
                                                                                                         HOLogic.unitT,
                                                                                                       mb(call
                                                                                                            ("HaveSecurityExt",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (bool \<times>
                                                                                                               state)"},
                                                                                                             lu,
                                                                                                             @{theory}),
                                                                                                          close
                                                                                                            (var_b"v",
                                                                                                             mb(mb(mb(mu(mop(Not,
                                                                                                                             var_b"v"),
                                                                                                                         qTy),
                                                                                                                      close
                                                                                                                        (var_b"b",
                                                                                                                         ite(var_b"b",
                                                                                                                             mu(lt,
                                                                                                                                qTy),
                                                                                                                             mb(call
                                                                                                                                  ("HaveVirtExt",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (bool \<times>
                                                                                                                                     state)"},
                                                                                                                                   lu,
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var_b"b",
                                                                                                                                   ite(var_b"b",
                                                                                                                                       mu(lt,
                                                                                                                                          qTy),
                                                                                                                                       mb(mr(close
                                                                                                                                               (var("s",
                                                                                                                                                    qTy),
                                                                                                                                                call
                                                                                                                                                  ("state.CP15",
                                                                                                                                                   @{typ CP15},
                                                                                                                                                   var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   @{theory}))),
                                                                                                                                          close
                                                                                                                                            (var("v",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             mb(mb(mb(mu(call
                                                                                                                                                           ("CP15.SCR",
                                                                                                                                                            @{typ SCR},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ CP15}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ SCR}),
                                                                                                                                                         mu(call
                                                                                                                                                              ("SCR.NS",
                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ SCR}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"v",
                                                                                                                                                      mu(mop(Not,
                                                                                                                                                             var_b"v"),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"b",
                                                                                                                                                   ite(var_b"b",
                                                                                                                                                       mu(lt,
                                                                                                                                                          qTy),
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CP15",
                                                                                                                                                                   @{typ CP15},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ CP15}),
                                                                                                                                                             mb(mu(call
                                                                                                                                                                     ("CP15.SCR",
                                                                                                                                                                      @{typ SCR},
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ CP15}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var("v",
                                                                                                                                                                       @{typ SCR}),
                                                                                                                                                                   mu(call
                                                                                                                                                                        ("SCR.FW",
                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ SCR}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy)))))))))))))))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          mb(mr(close
                                                                                                                                  (var("s",
                                                                                                                                       qTy),
                                                                                                                                   call
                                                                                                                                     ("state.CPSR",
                                                                                                                                      @{typ PSR},
                                                                                                                                      var("s",
                                                                                                                                          qTy),
                                                                                                                                      @{theory}))),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ PSR}),
                                                                                                                                mb(mb(mu(tp[var("v",
                                                                                                                                                @{typ PSR}),
                                                                                                                                            lt],
                                                                                                                                         qTy),
                                                                                                                                      close
                                                                                                                                        (var("v",
                                                                                                                                             @{typ
                                                                                                                                             "PSR \<times>
                                                                                                                                              bool"}),
                                                                                                                                         mu(rupd
                                                                                                                                              ("PSR.F",
                                                                                                                                               var("v",
                                                                                                                                                   @{typ
                                                                                                                                                   "PSR \<times>
                                                                                                                                                    bool"}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ PSR}),
                                                                                                                                      mw(close
                                                                                                                                           (var("s",
                                                                                                                                                qTy),
                                                                                                                                            rupd
                                                                                                                                              ("state.CPSR",
                                                                                                                                               tp[var("s",
                                                                                                                                                      qTy),
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ PSR})],
                                                                                                                                               @{theory}))))))),
                                                                                                                          mu(lu,
                                                                                                                             qTy)))),
                                                                                                                close
                                                                                                                  (var_a
                                                                                                                     HOLogic.unitT,
                                                                                                                   mb(call
                                                                                                                        ("HaveSecurityExt",
                                                                                                                         @{typ
                                                                                                                         "state \<Rightarrow>
                                                                                                                          (bool \<times>
                                                                                                                           state)"},
                                                                                                                         lu,
                                                                                                                         @{theory}),
                                                                                                                      close
                                                                                                                        (var_b"v",
                                                                                                                         mb(mb(mb(mu(mop(Not,
                                                                                                                                         var_b"v"),
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var_b"b",
                                                                                                                                     ite(var_b"b",
                                                                                                                                         mu(lt,
                                                                                                                                            qTy),
                                                                                                                                         mb(call
                                                                                                                                              ("HaveVirtExt",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (bool \<times>
                                                                                                                                                 state)"},
                                                                                                                                               lu,
                                                                                                                                               @{theory}),
                                                                                                                                            close
                                                                                                                                              (var_b"b",
                                                                                                                                               ite(var_b"b",
                                                                                                                                                   mu(lt,
                                                                                                                                                      qTy),
                                                                                                                                                   mb(mr(close
                                                                                                                                                           (var("s",
                                                                                                                                                                qTy),
                                                                                                                                                            call
                                                                                                                                                              ("state.CP15",
                                                                                                                                                               @{typ CP15},
                                                                                                                                                               var("s",
                                                                                                                                                                   qTy),
                                                                                                                                                               @{theory}))),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ CP15}),
                                                                                                                                                         mb(mb(mb(mu(call
                                                                                                                                                                       ("CP15.SCR",
                                                                                                                                                                        @{typ SCR},
                                                                                                                                                                        var("v",
                                                                                                                                                                            @{typ CP15}),
                                                                                                                                                                        @{theory}),
                                                                                                                                                                     qTy),
                                                                                                                                                                  close
                                                                                                                                                                    (var("v",
                                                                                                                                                                         @{typ SCR}),
                                                                                                                                                                     mu(call
                                                                                                                                                                          ("SCR.NS",
                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                           var("v",
                                                                                                                                                                               @{typ SCR}),
                                                                                                                                                                           @{theory}),
                                                                                                                                                                        qTy))),
                                                                                                                                                               close
                                                                                                                                                                 (var_b"v",
                                                                                                                                                                  mu(mop(Not,
                                                                                                                                                                         var_b"v"),
                                                                                                                                                                     qTy))),
                                                                                                                                                            close
                                                                                                                                                              (var_b"b",
                                                                                                                                                               ite(var_b"b",
                                                                                                                                                                   mu(lt,
                                                                                                                                                                      qTy),
                                                                                                                                                                   mb(mr(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            call
                                                                                                                                                                              ("state.CP15",
                                                                                                                                                                               @{typ CP15},
                                                                                                                                                                               var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               @{theory}))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ CP15}),
                                                                                                                                                                         mb(mu(call
                                                                                                                                                                                 ("CP15.SCR",
                                                                                                                                                                                  @{typ SCR},
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ CP15}),
                                                                                                                                                                                  @{theory}),
                                                                                                                                                                               qTy),
                                                                                                                                                                            close
                                                                                                                                                                              (var("v",
                                                                                                                                                                                   @{typ SCR}),
                                                                                                                                                                               mu(call
                                                                                                                                                                                    ("SCR.AW",
                                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                                     var("v",
                                                                                                                                                                                         @{typ SCR}),
                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                  qTy)))))))))))))))),
                                                                                                                               close
                                                                                                                                 (var_b"b",
                                                                                                                                  ite(var_b"b",
                                                                                                                                      mb(mr(close
                                                                                                                                              (var("s",
                                                                                                                                                   qTy),
                                                                                                                                               call
                                                                                                                                                 ("state.CPSR",
                                                                                                                                                  @{typ PSR},
                                                                                                                                                  var("s",
                                                                                                                                                      qTy),
                                                                                                                                                  @{theory}))),
                                                                                                                                         close
                                                                                                                                           (var("v",
                                                                                                                                                @{typ PSR}),
                                                                                                                                            mb(mb(mu(tp[var("v",
                                                                                                                                                            @{typ PSR}),
                                                                                                                                                        lt],
                                                                                                                                                     qTy),
                                                                                                                                                  close
                                                                                                                                                    (var("v",
                                                                                                                                                         @{typ
                                                                                                                                                         "PSR \<times>
                                                                                                                                                          bool"}),
                                                                                                                                                     mu(rupd
                                                                                                                                                          ("PSR.A",
                                                                                                                                                           var("v",
                                                                                                                                                               @{typ
                                                                                                                                                               "PSR \<times>
                                                                                                                                                                bool"}),
                                                                                                                                                           @{theory}),
                                                                                                                                                        qTy))),
                                                                                                                                               close
                                                                                                                                                 (var("v",
                                                                                                                                                      @{typ PSR}),
                                                                                                                                                  mw(close
                                                                                                                                                       (var("s",
                                                                                                                                                            qTy),
                                                                                                                                                        rupd
                                                                                                                                                          ("state.CPSR",
                                                                                                                                                           tp[var("s",
                                                                                                                                                                  qTy),
                                                                                                                                                              var("v",
                                                                                                                                                                  @{typ PSR})],
                                                                                                                                                           @{theory}))))))),
                                                                                                                                      mu(lu,
                                                                                                                                         qTy)))),
                                                                                                                            close
                                                                                                                              (var_a
                                                                                                                                 HOLogic.unitT,
                                                                                                                               mb(mr(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        call
                                                                                                                                          ("state.CPSR",
                                                                                                                                           @{typ PSR},
                                                                                                                                           var("s",
                                                                                                                                               qTy),
                                                                                                                                           @{theory}))),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ PSR}),
                                                                                                                                     mb(mb(mb(mu(tp[var("v",
                                                                                                                                                        @{typ PSR}),
                                                                                                                                                    lw(0,
                                                                                                                                                       8)],
                                                                                                                                                 qTy),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "PSR \<times>
                                                                                                                                                      8 word"}),
                                                                                                                                                 mu(rupd
                                                                                                                                                      ("PSR.IT",
                                                                                                                                                       var("v",
                                                                                                                                                           @{typ
                                                                                                                                                           "PSR \<times>
                                                                                                                                                            8 word"}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    qTy))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ PSR}),
                                                                                                                                              mw(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    rupd
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       tp[var("s",
                                                                                                                                                              qTy),
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ PSR})],
                                                                                                                                                       @{theory}))))),
                                                                                                                                        close
                                                                                                                                          (var_a
                                                                                                                                             HOLogic.unitT,
                                                                                                                                           mb(mr(close
                                                                                                                                                   (var("s",
                                                                                                                                                        qTy),
                                                                                                                                                    call
                                                                                                                                                      ("state.CPSR",
                                                                                                                                                       @{typ PSR},
                                                                                                                                                       var("s",
                                                                                                                                                           qTy),
                                                                                                                                                       @{theory}))),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ PSR}),
                                                                                                                                                 mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                    @{typ PSR}),
                                                                                                                                                                lf],
                                                                                                                                                             qTy),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "PSR \<times>
                                                                                                                                                                  bool"}),
                                                                                                                                                             mu(rupd
                                                                                                                                                                  ("PSR.J",
                                                                                                                                                                   var("v",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "PSR \<times>
                                                                                                                                                                        bool"}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                qTy))),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ PSR}),
                                                                                                                                                          mw(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                rupd
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   tp[var("s",
                                                                                                                                                                          qTy),
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ PSR})],
                                                                                                                                                                   @{theory}))))),
                                                                                                                                                    close
                                                                                                                                                      (var_a
                                                                                                                                                         HOLogic.unitT,
                                                                                                                                                       mb(mr(close
                                                                                                                                                               (var("s",
                                                                                                                                                                    qTy),
                                                                                                                                                                call
                                                                                                                                                                  ("state.CPSR",
                                                                                                                                                                   @{typ PSR},
                                                                                                                                                                   var("s",
                                                                                                                                                                       qTy),
                                                                                                                                                                   @{theory}))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ PSR}),
                                                                                                                                                             mb(mb(mb(mb(mr(close
                                                                                                                                                                              (var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               call
                                                                                                                                                                                 ("state.CP15",
                                                                                                                                                                                  @{typ CP15},
                                                                                                                                                                                  var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  @{theory}))),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v0",
                                                                                                                                                                                @{typ CP15}),
                                                                                                                                                                            mb(mb(mu(call
                                                                                                                                                                                       ("CP15.SCTLR",
                                                                                                                                                                                        @{typ SCTLR},
                                                                                                                                                                                        var("v0",
                                                                                                                                                                                            @{typ CP15}),
                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                     qTy),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var("v",
                                                                                                                                                                                         @{typ SCTLR}),
                                                                                                                                                                                     mu(call
                                                                                                                                                                                          ("SCTLR.TE",
                                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                                           var("v",
                                                                                                                                                                                               @{typ SCTLR}),
                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                        qTy))),
                                                                                                                                                                               close
                                                                                                                                                                                 (var_b"v0",
                                                                                                                                                                                  mu(tp[var("v",
                                                                                                                                                                                            @{typ PSR}),
                                                                                                                                                                                        var_b"v0"],
                                                                                                                                                                                     qTy))))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "PSR \<times>
                                                                                                                                                                              bool"}),
                                                                                                                                                                         mu(rupd
                                                                                                                                                                              ("PSR.T",
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ
                                                                                                                                                                                   "PSR \<times>
                                                                                                                                                                                    bool"}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var("v",
                                                                                                                                                                          @{typ PSR}),
                                                                                                                                                                      mw(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            rupd
                                                                                                                                                                              ("state.CPSR",
                                                                                                                                                                               tp[var("s",
                                                                                                                                                                                      qTy),
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ PSR})],
                                                                                                                                                                               @{theory}))))),
                                                                                                                                                                close
                                                                                                                                                                  (var_a
                                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                                   mb(mr(close
                                                                                                                                                                           (var("s",
                                                                                                                                                                                qTy),
                                                                                                                                                                            call
                                                                                                                                                                              ("state.CPSR",
                                                                                                                                                                               @{typ PSR},
                                                                                                                                                                               var("s",
                                                                                                                                                                                   qTy),
                                                                                                                                                                               @{theory}))),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v",
                                                                                                                                                                             @{typ PSR}),
                                                                                                                                                                         mb(mb(mb(mb(mr(close
                                                                                                                                                                                          (var("s",
                                                                                                                                                                                               qTy),
                                                                                                                                                                                           call
                                                                                                                                                                                             ("state.CP15",
                                                                                                                                                                                              @{typ CP15},
                                                                                                                                                                                              var("s",
                                                                                                                                                                                                  qTy),
                                                                                                                                                                                              @{theory}))),
                                                                                                                                                                                     close
                                                                                                                                                                                       (var("v0",
                                                                                                                                                                                            @{typ CP15}),
                                                                                                                                                                                        mb(mb(mu(call
                                                                                                                                                                                                   ("CP15.SCTLR",
                                                                                                                                                                                                    @{typ SCTLR},
                                                                                                                                                                                                    var("v0",
                                                                                                                                                                                                        @{typ CP15}),
                                                                                                                                                                                                    @{theory}),
                                                                                                                                                                                                 qTy),
                                                                                                                                                                                              close
                                                                                                                                                                                                (var("v",
                                                                                                                                                                                                     @{typ SCTLR}),
                                                                                                                                                                                                 mu(call
                                                                                                                                                                                                      ("SCTLR.EE",
                                                                                                                                                                                                       HOLogic.boolT,
                                                                                                                                                                                                       var("v",
                                                                                                                                                                                                           @{typ SCTLR}),
                                                                                                                                                                                                       @{theory}),
                                                                                                                                                                                                    qTy))),
                                                                                                                                                                                           close
                                                                                                                                                                                             (var_b"v0",
                                                                                                                                                                                              mu(tp[var("v",
                                                                                                                                                                                                        @{typ PSR}),
                                                                                                                                                                                                    var_b"v0"],
                                                                                                                                                                                                 qTy))))),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var("v",
                                                                                                                                                                                         @{typ
                                                                                                                                                                                         "PSR \<times>
                                                                                                                                                                                          bool"}),
                                                                                                                                                                                     mu(rupd
                                                                                                                                                                                          ("PSR.E",
                                                                                                                                                                                           var("v",
                                                                                                                                                                                               @{typ
                                                                                                                                                                                               "PSR \<times>
                                                                                                                                                                                                bool"}),
                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                        qTy))),
                                                                                                                                                                               close
                                                                                                                                                                                 (var("v",
                                                                                                                                                                                      @{typ PSR}),
                                                                                                                                                                                  mw(close
                                                                                                                                                                                       (var("s",
                                                                                                                                                                                            qTy),
                                                                                                                                                                                        rupd
                                                                                                                                                                                          ("state.CPSR",
                                                                                                                                                                                           tp[var("s",
                                                                                                                                                                                                  qTy),
                                                                                                                                                                                              var("v",
                                                                                                                                                                                                  @{typ PSR})],
                                                                                                                                                                                           @{theory}))))),
                                                                                                                                                                            close
                                                                                                                                                                              (var_a
                                                                                                                                                                                 HOLogic.unitT,
                                                                                                                                                                               mb(mr(close
                                                                                                                                                                                       (var("s",
                                                                                                                                                                                            qTy),
                                                                                                                                                                                        call
                                                                                                                                                                                          ("state.CP15",
                                                                                                                                                                                           @{typ CP15},
                                                                                                                                                                                           var("s",
                                                                                                                                                                                               qTy),
                                                                                                                                                                                           @{theory}))),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var("v",
                                                                                                                                                                                         @{typ CP15}),
                                                                                                                                                                                     mb(mb(mu(call
                                                                                                                                                                                                ("CP15.SCTLR",
                                                                                                                                                                                                 @{typ SCTLR},
                                                                                                                                                                                                 var("v",
                                                                                                                                                                                                     @{typ CP15}),
                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                              qTy),
                                                                                                                                                                                           close
                                                                                                                                                                                             (var("v",
                                                                                                                                                                                                  @{typ SCTLR}),
                                                                                                                                                                                              mu(call
                                                                                                                                                                                                   ("SCTLR.VE",
                                                                                                                                                                                                    HOLogic.boolT,
                                                                                                                                                                                                    var("v",
                                                                                                                                                                                                        @{typ SCTLR}),
                                                                                                                                                                                                    @{theory}),
                                                                                                                                                                                                 qTy))),
                                                                                                                                                                                        close
                                                                                                                                                                                          (var_b"b",
                                                                                                                                                                                           ite(var_b"b",
                                                                                                                                                                                               call
                                                                                                                                                                                                 ("raise'exception",
                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                                                   (unit \<times>
                                                                                                                                                                                                    state)"},
                                                                                                                                                                                                  call
                                                                                                                                                                                                    ("exception.IMPLEMENTATION_DEFINED",
                                                                                                                                                                                                     @{typ exception},
                                                                                                                                                                                                     ls
                                                                                                                                                                                                      "branch to an FIQ vector",
                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                  @{theory}),
                                                                                                                                                                                               mb(call
                                                                                                                                                                                                    ("ExcVectorBase",
                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                     "state \<Rightarrow>
                                                                                                                                                                                                      (32 word \<times>
                                                                                                                                                                                                       state)"},
                                                                                                                                                                                                     lu,
                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                  close
                                                                                                                                                                                                    (var_w("v",32),
                                                                                                                                                                                                     mb(mu(bop(Add,
                                                                                                                                                                                                               var_w("v",32),
                                                                                                                                                                                                               var_w("vect_offset",32)),
                                                                                                                                                                                                           qTy),
                                                                                                                                                                                                        close
                                                                                                                                                                                                          (var_w("v",32),
                                                                                                                                                                                                           call
                                                                                                                                                                                                             ("BranchTo",
                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                                                                               (unit \<times>
                                                                                                                                                                                                                state)"},
                                                                                                                                                                                                              var_w("v",32),
                                                                                                                                                                                                              @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeVirtualFIQException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy)))))),
               close
                 (var_w("new_lr_value",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        mb(mr(close
                                (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                           close
                             (var("v",@{typ PSR}),
                              mb(mb(mb(mu(tp[var("v",@{typ PSR}),lw(17,5)],qTy),
                                       close
                                         (var("v",@{typ "PSR \<times> 5 word"}),
                                          mu(rupd
                                               ("PSR.M",var("v",@{typ "PSR \<times> 5 word"}),
                                                @{theory}),qTy))),
                                    close
                                      (var("v",@{typ PSR}),
                                       mw(close
                                            (var("s",qTy),
                                             rupd
                                               ("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],
                                                @{theory}))))),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(call
                                         ("write'SPSR",
                                          @{typ "state \<Rightarrow> (unit \<times> state)"},
                                          var("new_spsr_value",@{typ PSR}),@{theory}),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(call
                                               ("write'R",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                tp[var_w("new_lr_value",32),lw(14,4)],@{theory}),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(mr(close
                                                        (var("s",qTy),
                                                         call
                                                           ("state.CPSR",@{typ PSR},var("s",qTy),
                                                            @{theory}))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mb(mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                               close
                                                                 (var("v",@{typ "PSR \<times> bool"}),
                                                                  mu(rupd
                                                                       ("PSR.I",
                                                                        var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        @{theory}),qTy))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mw(close
                                                                    (var("s",qTy),
                                                                     rupd
                                                                       ("state.CPSR",
                                                                        tp[var("s",qTy),
                                                                           var("v",@{typ PSR})],
                                                                        @{theory}))))),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(mr(close
                                                                    (var("s",qTy),
                                                                     call
                                                                       ("state.CPSR",@{typ PSR},
                                                                        var("s",qTy),@{theory}))),
                                                               close
                                                                 (var("v",@{typ PSR}),
                                                                  mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                                 lt],qTy),
                                                                           close
                                                                             (var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              mu(rupd
                                                                                   ("PSR.F",
                                                                                    var("v",
                                                                                        @{typ
                                                                                        "PSR \<times>
                                                                                         bool"}),
                                                                                    @{theory}),qTy))),
                                                                        close
                                                                          (var("v",@{typ PSR}),
                                                                           mw(close
                                                                                (var("s",qTy),
                                                                                 rupd
                                                                                   ("state.CPSR",
                                                                                    tp[var("s",qTy),
                                                                                       var("v",
                                                                                           @{typ PSR})],
                                                                                    @{theory}))))),
                                                                     close
                                                                       (var_a HOLogic.unitT,
                                                                        mb(mr(close
                                                                                (var("s",qTy),
                                                                                 call
                                                                                   ("state.CPSR",
                                                                                    @{typ PSR},
                                                                                    var("s",qTy),
                                                                                    @{theory}))),
                                                                           close
                                                                             (var("v",@{typ PSR}),
                                                                              mb(mb(mb(mu(tp[var("v",
                                                                                                 @{typ PSR}),
                                                                                             lt],qTy),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ
                                                                                              "PSR \<times>
                                                                                               bool"}),
                                                                                          mu(rupd
                                                                                               ("PSR.A",
                                                                                                var("v",
                                                                                                    @{typ
                                                                                                    "PSR \<times>
                                                                                                     bool"}),
                                                                                                @{theory}),
                                                                                             qTy))),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ PSR}),
                                                                                       mw(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             rupd
                                                                                               ("state.CPSR",
                                                                                                tp[var("s",
                                                                                                       qTy),
                                                                                                   var("v",
                                                                                                       @{typ PSR})],
                                                                                                @{theory}))))),
                                                                                 close
                                                                                   (var_a
                                                                                      HOLogic.unitT,
                                                                                    mb(mr(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             call
                                                                                               ("state.CPSR",
                                                                                                @{typ PSR},
                                                                                                var("s",
                                                                                                    qTy),
                                                                                                @{theory}))),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ PSR}),
                                                                                          mb(mb(mb(mu(tp[var("v",
                                                                                                             @{typ PSR}),
                                                                                                         lw(0,
                                                                                                            8)],
                                                                                                      qTy),
                                                                                                   close
                                                                                                     (var("v",
                                                                                                          @{typ
                                                                                                          "PSR \<times>
                                                                                                           8 word"}),
                                                                                                      mu(rupd
                                                                                                           ("PSR.IT",
                                                                                                            var("v",
                                                                                                                @{typ
                                                                                                                "PSR \<times>
                                                                                                                 8 word"}),
                                                                                                            @{theory}),
                                                                                                         qTy))),
                                                                                                close
                                                                                                  (var("v",
                                                                                                       @{typ PSR}),
                                                                                                   mw(close
                                                                                                        (var("s",
                                                                                                             qTy),
                                                                                                         rupd
                                                                                                           ("state.CPSR",
                                                                                                            tp[var("s",
                                                                                                                   qTy),
                                                                                                               var("v",
                                                                                                                   @{typ PSR})],
                                                                                                            @{theory}))))),
                                                                                             close
                                                                                               (var_a
                                                                                                  HOLogic.unitT,
                                                                                                mb(mr(close
                                                                                                        (var("s",
                                                                                                             qTy),
                                                                                                         call
                                                                                                           ("state.CPSR",
                                                                                                            @{typ PSR},
                                                                                                            var("s",
                                                                                                                qTy),
                                                                                                            @{theory}))),
                                                                                                   close
                                                                                                     (var("v",
                                                                                                          @{typ PSR}),
                                                                                                      mb(mb(mb(mu(tp[var("v",
                                                                                                                         @{typ PSR}),
                                                                                                                     lf],
                                                                                                                  qTy),
                                                                                                               close
                                                                                                                 (var("v",
                                                                                                                      @{typ
                                                                                                                      "PSR \<times>
                                                                                                                       bool"}),
                                                                                                                  mu(rupd
                                                                                                                       ("PSR.J",
                                                                                                                        var("v",
                                                                                                                            @{typ
                                                                                                                            "PSR \<times>
                                                                                                                             bool"}),
                                                                                                                        @{theory}),
                                                                                                                     qTy))),
                                                                                                            close
                                                                                                              (var("v",
                                                                                                                   @{typ PSR}),
                                                                                                               mw(close
                                                                                                                    (var("s",
                                                                                                                         qTy),
                                                                                                                     rupd
                                                                                                                       ("state.CPSR",
                                                                                                                        tp[var("s",
                                                                                                                               qTy),
                                                                                                                           var("v",
                                                                                                                               @{typ PSR})],
                                                                                                                        @{theory}))))),
                                                                                                         close
                                                                                                           (var_a
                                                                                                              HOLogic.unitT,
                                                                                                            mb(mr(close
                                                                                                                    (var("s",
                                                                                                                         qTy),
                                                                                                                     call
                                                                                                                       ("state.CPSR",
                                                                                                                        @{typ PSR},
                                                                                                                        var("s",
                                                                                                                            qTy),
                                                                                                                        @{theory}))),
                                                                                                               close
                                                                                                                 (var("v",
                                                                                                                      @{typ PSR}),
                                                                                                                  mb(mb(mb(mb(mr(close
                                                                                                                                   (var("s",
                                                                                                                                        qTy),
                                                                                                                                    call
                                                                                                                                      ("state.CP15",
                                                                                                                                       @{typ CP15},
                                                                                                                                       var("s",
                                                                                                                                           qTy),
                                                                                                                                       @{theory}))),
                                                                                                                              close
                                                                                                                                (var("v0",
                                                                                                                                     @{typ CP15}),
                                                                                                                                 mb(mb(mu(call
                                                                                                                                            ("CP15.SCTLR",
                                                                                                                                             @{typ SCTLR},
                                                                                                                                             var("v0",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             @{theory}),
                                                                                                                                          qTy),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ SCTLR}),
                                                                                                                                          mu(call
                                                                                                                                               ("SCTLR.TE",
                                                                                                                                                HOLogic.boolT,
                                                                                                                                                var("v",
                                                                                                                                                    @{typ SCTLR}),
                                                                                                                                                @{theory}),
                                                                                                                                             qTy))),
                                                                                                                                    close
                                                                                                                                      (var_b"v0",
                                                                                                                                       mu(tp[var("v",
                                                                                                                                                 @{typ PSR}),
                                                                                                                                             var_b"v0"],
                                                                                                                                          qTy))))),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ
                                                                                                                                  "PSR \<times>
                                                                                                                                   bool"}),
                                                                                                                              mu(rupd
                                                                                                                                   ("PSR.T",
                                                                                                                                    var("v",
                                                                                                                                        @{typ
                                                                                                                                        "PSR \<times>
                                                                                                                                         bool"}),
                                                                                                                                    @{theory}),
                                                                                                                                 qTy))),
                                                                                                                        close
                                                                                                                          (var("v",
                                                                                                                               @{typ PSR}),
                                                                                                                           mw(close
                                                                                                                                (var("s",
                                                                                                                                     qTy),
                                                                                                                                 rupd
                                                                                                                                   ("state.CPSR",
                                                                                                                                    tp[var("s",
                                                                                                                                           qTy),
                                                                                                                                       var("v",
                                                                                                                                           @{typ PSR})],
                                                                                                                                    @{theory}))))),
                                                                                                                     close
                                                                                                                       (var_a
                                                                                                                          HOLogic.unitT,
                                                                                                                        mb(mr(close
                                                                                                                                (var("s",
                                                                                                                                     qTy),
                                                                                                                                 call
                                                                                                                                   ("state.CPSR",
                                                                                                                                    @{typ PSR},
                                                                                                                                    var("s",
                                                                                                                                        qTy),
                                                                                                                                    @{theory}))),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ PSR}),
                                                                                                                              mb(mb(mb(mb(mr(close
                                                                                                                                               (var("s",
                                                                                                                                                    qTy),
                                                                                                                                                call
                                                                                                                                                  ("state.CP15",
                                                                                                                                                   @{typ CP15},
                                                                                                                                                   var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   @{theory}))),
                                                                                                                                          close
                                                                                                                                            (var("v0",
                                                                                                                                                 @{typ CP15}),
                                                                                                                                             mb(mb(mu(call
                                                                                                                                                        ("CP15.SCTLR",
                                                                                                                                                         @{typ SCTLR},
                                                                                                                                                         var("v0",
                                                                                                                                                             @{typ CP15}),
                                                                                                                                                         @{theory}),
                                                                                                                                                      qTy),
                                                                                                                                                   close
                                                                                                                                                     (var("v",
                                                                                                                                                          @{typ SCTLR}),
                                                                                                                                                      mu(call
                                                                                                                                                           ("SCTLR.EE",
                                                                                                                                                            HOLogic.boolT,
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ SCTLR}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"v0",
                                                                                                                                                   mu(tp[var("v",
                                                                                                                                                             @{typ PSR}),
                                                                                                                                                         var_b"v0"],
                                                                                                                                                      qTy))))),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ
                                                                                                                                              "PSR \<times>
                                                                                                                                               bool"}),
                                                                                                                                          mu(rupd
                                                                                                                                               ("PSR.E",
                                                                                                                                                var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "PSR \<times>
                                                                                                                                                     bool"}),
                                                                                                                                                @{theory}),
                                                                                                                                             qTy))),
                                                                                                                                    close
                                                                                                                                      (var("v",
                                                                                                                                           @{typ PSR}),
                                                                                                                                       mw(close
                                                                                                                                            (var("s",
                                                                                                                                                 qTy),
                                                                                                                                             rupd
                                                                                                                                               ("state.CPSR",
                                                                                                                                                tp[var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   var("v",
                                                                                                                                                       @{typ PSR})],
                                                                                                                                                @{theory}))))),
                                                                                                                                 close
                                                                                                                                   (var_a
                                                                                                                                      HOLogic.unitT,
                                                                                                                                    mb(mr(close
                                                                                                                                            (var("s",
                                                                                                                                                 qTy),
                                                                                                                                             call
                                                                                                                                               ("state.CP15",
                                                                                                                                                @{typ CP15},
                                                                                                                                                var("s",
                                                                                                                                                    qTy),
                                                                                                                                                @{theory}))),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ CP15}),
                                                                                                                                          mb(mb(mu(call
                                                                                                                                                     ("CP15.SCTLR",
                                                                                                                                                      @{typ SCTLR},
                                                                                                                                                      var("v",
                                                                                                                                                          @{typ CP15}),
                                                                                                                                                      @{theory}),
                                                                                                                                                   qTy),
                                                                                                                                                close
                                                                                                                                                  (var("v",
                                                                                                                                                       @{typ SCTLR}),
                                                                                                                                                   mu(call
                                                                                                                                                        ("SCTLR.VE",
                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                         var("v",
                                                                                                                                                             @{typ SCTLR}),
                                                                                                                                                         @{theory}),
                                                                                                                                                      qTy))),
                                                                                                                                             close
                                                                                                                                               (var_b"b",
                                                                                                                                                ite(var_b"b",
                                                                                                                                                    call
                                                                                                                                                      ("raise'exception",
                                                                                                                                                       @{typ
                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                        (unit \<times>
                                                                                                                                                         state)"},
                                                                                                                                                       call
                                                                                                                                                         ("exception.IMPLEMENTATION_DEFINED",
                                                                                                                                                          @{typ exception},
                                                                                                                                                          ls
                                                                                                                                                           "branch to an FIQ vector",
                                                                                                                                                          @{theory}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    mb(call
                                                                                                                                                         ("ExcVectorBase",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (32 word \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          lu,
                                                                                                                                                          @{theory}),
                                                                                                                                                       close
                                                                                                                                                         (var_w("v",32),
                                                                                                                                                          mb(mu(bop(Add,
                                                                                                                                                                    var_w("v",32),
                                                                                                                                                                    lw(28,
                                                                                                                                                                       32)),
                                                                                                                                                                qTy),
                                                                                                                                                             close
                                                                                                                                                               (var_w("v",32),
                                                                                                                                                                call
                                                                                                                                                                  ("BranchTo",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                    (unit \<times>
                                                                                                                                                                     state)"},
                                                                                                                                                                   var_w("v",32),
                                                                                                                                                                   @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TakeHypTrapException",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mu(call("PSR.T",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(4,32)),qTy))),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Sub,var_w("v",32),lw(8,32)),qTy)))))),
               close
                 (var_w("preferred_exceptn_return",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("new_spsr_value",@{typ PSR}),
                        call
                          ("EnterHypMode",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[var("new_spsr_value",@{typ PSR}),var_w("preferred_exceptn_return",32),
                              lw(20,32)],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("WriteHSR",
   close
     (tp[var_w("ec",6),var_w("HSRString",25)],
      mn(lw(0,32),
         mb(mr(close
                 (var("s",@{typ "32 word \<times> state"}),
                  mop(Fst,var("s",@{typ "32 word \<times> state"})))),
            close
              (var_w("v",32),
               mb(mb(mu(bfi(ln 31,ln 26,var_w("ec",6),var_w("v",32)),@{typ "32 word \<times> state"}),
                     close
                       (var_w("v",32),
                        mw(close
                             (var("s",@{typ "32 word \<times> state"}),
                              tp[var_w("v",32),mop(Snd,var("s",@{typ "32 word \<times> state"}))])))),
                  close
                    (var_a HOLogic.unitT,
                     mb(ite(bop(Or,
                                mop(Not,
                                    eq(ex(var_w("ec",6),ln 5,ln 3,(Word_Lib.mk_wordT 3)),lw(4,3))),
                                bop(And,bop(Bit,var_w("ec",6),ln 2),
                                    bop(Bit,var_w("HSRString",25),ln 24))),
                            mb(mr(close
                                    (var("s",@{typ "32 word \<times> state"}),
                                     mop(Fst,var("s",@{typ "32 word \<times> state"})))),
                               close
                                 (var_w("v",32),
                                  mb(mb(md(call
                                             ("ThisInstrLength",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),w32),
                                        close
                                          (var_n"v0",
                                           mb(mb(mu(eq(var_n"v0",ln 32),
                                                    @{typ "32 word \<times> state"}),
                                                 close
                                                   (var_b"v",
                                                    mu(mop(Cast w1,var_b"v"),
                                                       @{typ "32 word \<times> state"}))),
                                              close
                                                (var_w("v0",1),
                                                 mu(bfi(ln 25,ln 25,var_w("v0",1),var_w("v",32)),
                                                    @{typ "32 word \<times> state"}))))),
                                     close
                                       (var_w("v",32),
                                        mw(close
                                             (var("s",@{typ "32 word \<times> state"}),
                                              tp[var_w("v",32),
                                                 mop(Snd,var("s",@{typ "32 word \<times> state"}))])))))),
                            mu(lu,@{typ "32 word \<times> state"})),
                        close
                          (var_a HOLogic.unitT,
                           mb(ite(bop(And,
                                      eq(ex(var_w("ec",6),ln 5,ln 4,(Word_Lib.mk_wordT 2)),lw(0,2)),
                                      mop(Not,eq(ex(var_w("ec",6),ln 3,ln 0,w4),lw(0,4)))),
                                  mb(md(call
                                          ("CurrentInstrSet",
                                           @{typ "state \<Rightarrow> (InstrSet \<times> state)"},
                                           lu,@{theory}),w32),
                                     close
                                       (var("v",@{typ InstrSet}),
                                        mb(mu(eq(var("v",@{typ InstrSet}),
                                                 lc("InstrSet_ARM","InstrSet",@{theory})),
                                              @{typ "32 word \<times> state"}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(mr(close
                                                          (var("s",@{typ "32 word \<times> state"}),
                                                           mop(Fst,
                                                               var("s",
                                                                   @{typ "32 word \<times> state"})))),
                                                     close
                                                       (var_w("v",32),
                                                        mb(mb(mu(bfi(ln 24,ln 24,mop(Cast w1,lt),
                                                                     var_w("v",32)),
                                                                 @{typ "32 word \<times> state"}),
                                                              close
                                                                (var_w("v",32),
                                                                 mw(close
                                                                      (var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"}),
                                                                       tp[var_w("v",32),
                                                                          mop(Snd,
                                                                              var("s",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   state"}))])))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mb(mr(close
                                                                      (var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"}),
                                                                       mop(Fst,
                                                                           var("s",
                                                                               @{typ
                                                                               "32 word \<times>
                                                                                state"})))),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mb(mb(md(call
                                                                               ("CurrentCond",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (4 word \<times>
                                                                                  state)"},lu,
                                                                                @{theory}),w32),
                                                                          close
                                                                            (var_w("v0",4),
                                                                             mu(bfi(ln 23,ln 20,
                                                                                    var_w("v0",4),
                                                                                    var_w("v",32)),
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}))),
                                                                       close
                                                                         (var_w("v",32),
                                                                          mw(close
                                                                               (var("s",
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     state"}),
                                                                                tp[var_w("v",32),
                                                                                   mop(Snd,
                                                                                       var("s",
                                                                                           @{typ
                                                                                           "32 word \<times>
                                                                                            state"}))])))))))))),
                                                  mb(mr(close
                                                          (var("s",@{typ "32 word \<times> state"}),
                                                           mop(Fst,
                                                               var("s",
                                                                   @{typ "32 word \<times> state"})))),
                                                     close
                                                       (var_w("v",32),
                                                        mb(mb(mu(bfi(ln 24,ln 24,
                                                                     mop(Cast w1,lx HOLogic.boolT),
                                                                     var_w("v",32)),
                                                                 @{typ "32 word \<times> state"}),
                                                              close
                                                                (var_w("v",32),
                                                                 mw(close
                                                                      (var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"}),
                                                                       tp[var_w("v",32),
                                                                          mop(Snd,
                                                                              var("s",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   state"}))])))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mb(mr(close
                                                                      (var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"}),
                                                                       mop(Fst,
                                                                           var("s",
                                                                               @{typ
                                                                               "32 word \<times>
                                                                                state"})))),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mb(mb(mu(bop(Bit,var_w("v",32),
                                                                                 ln 24),
                                                                             @{typ
                                                                             "32 word \<times> state"}),
                                                                          close
                                                                            (var_b"b",
                                                                             ite(var_b"b",
                                                                                 mb(md(call
                                                                                         ("ConditionPassed",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (bool \<times>
                                                                                            state)"},
                                                                                          lu,
                                                                                          @{theory}),
                                                                                       w32),
                                                                                    close
                                                                                      (var_b"b",
                                                                                       ite(var_b"b",
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        @{typ
                                                                                                        "32 word \<times>
                                                                                                         state"}),
                                                                                                    mop(Fst,
                                                                                                        var("s",
                                                                                                            @{typ
                                                                                                            "32 word \<times>
                                                                                                             state"})))),
                                                                                              close
                                                                                                (var_w("v",32),
                                                                                                 mb(mb(ite(lx HOLogic.boolT,
                                                                                                           md(call
                                                                                                                ("CurrentCond",
                                                                                                                 @{typ
                                                                                                                 "state \<Rightarrow>
                                                                                                                  (4 word \<times>
                                                                                                                   state)"},
                                                                                                                 lu,
                                                                                                                 @{theory}),
                                                                                                              w32),
                                                                                                           mu(lw(14,
                                                                                                                 4),
                                                                                                              @{typ
                                                                                                              "32 word \<times>
                                                                                                               state"})),
                                                                                                       close
                                                                                                         (var_w("v0",4),
                                                                                                          mu(bfi(ln
                                                                                                                  23,
                                                                                                                 ln
                                                                                                                  20,
                                                                                                                 var_w("v0",4),
                                                                                                                 var_w("v",32)),
                                                                                                             @{typ
                                                                                                             "32 word \<times>
                                                                                                              state"}))),
                                                                                                    close
                                                                                                      (var_w("v",32),
                                                                                                       mw(close
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "32 word \<times>
                                                                                                                  state"}),
                                                                                                             tp[var_w("v",32),
                                                                                                                mop(Snd,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "32 word \<times>
                                                                                                                         state"}))])))))),
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        @{typ
                                                                                                        "32 word \<times>
                                                                                                         state"}),
                                                                                                    mop(Fst,
                                                                                                        var("s",
                                                                                                            @{typ
                                                                                                            "32 word \<times>
                                                                                                             state"})))),
                                                                                              close
                                                                                                (var_w("v",32),
                                                                                                 mb(mb(md(call
                                                                                                            ("CurrentCond",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (4 word \<times>
                                                                                                               state)"},
                                                                                                             lu,
                                                                                                             @{theory}),
                                                                                                          w32),
                                                                                                       close
                                                                                                         (var_w("v0",4),
                                                                                                          mu(bfi(ln
                                                                                                                  23,
                                                                                                                 ln
                                                                                                                  20,
                                                                                                                 var_w("v0",4),
                                                                                                                 var_w("v",32)),
                                                                                                             @{typ
                                                                                                             "32 word \<times>
                                                                                                              state"}))),
                                                                                                    close
                                                                                                      (var_w("v",32),
                                                                                                       mw(close
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "32 word \<times>
                                                                                                                  state"}),
                                                                                                             tp[var_w("v",32),
                                                                                                                mop(Snd,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "32 word \<times>
                                                                                                                         state"}))]))))))))),
                                                                                 mu(lu,
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     state"})))),
                                                                       close
                                                                         (var_a HOLogic.unitT,
                                                                          mb(mr(close
                                                                                  (var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"}),
                                                                                   mop(Fst,
                                                                                       var("s",
                                                                                           @{typ
                                                                                           "32 word \<times>
                                                                                            state"})))),
                                                                             close
                                                                               (var_w("v",32),
                                                                                mb(mu(bfi(ln 19,
                                                                                          ln 0,
                                                                                          ex(var_w("HSRString",25),
                                                                                             ln 19,
                                                                                             ln 0,
                                                                                             (Word_Lib.mk_wordT 20)),
                                                                                          var_w("v",32)),
                                                                                      @{typ
                                                                                      "32 word \<times>
                                                                                       state"}),
                                                                                   close
                                                                                     (var_w("v",32),
                                                                                      mw(close
                                                                                           (var("s",
                                                                                                @{typ
                                                                                                "32 word \<times>
                                                                                                 state"}),
                                                                                            tp[var_w("v",32),
                                                                                               mop(Snd,
                                                                                                   var("s",
                                                                                                       @{typ
                                                                                                       "32 word \<times>
                                                                                                        state"}))]))))))))))))))))))),
                                  mb(mr(close
                                          (var("s",@{typ "32 word \<times> state"}),
                                           mop(Fst,var("s",@{typ "32 word \<times> state"})))),
                                     close
                                       (var_w("v",32),
                                        mb(mu(bfi(ln 24,ln 0,var_w("HSRString",25),var_w("v",32)),
                                              @{typ "32 word \<times> state"}),
                                           close
                                             (var_w("v",32),
                                              mw(close
                                                   (var("s",@{typ "32 word \<times> state"}),
                                                    tp[var_w("v",32),
                                                       mop(Snd,
                                                           var("s",@{typ "32 word \<times> state"}))]))))))),
                              close
                                (var_a HOLogic.unitT,
                                 mb(mr(close
                                         (var("s",@{typ "32 word \<times> state"}),
                                          call
                                            ("state.CP15",@{typ CP15},
                                             mop(Snd,var("s",@{typ "32 word \<times> state"})),
                                             @{theory}))),
                                    close
                                      (var("v",@{typ CP15}),
                                       mb(mu(call
                                               ("CP15.HSR",@{typ HSR},var("v",@{typ CP15}),@{theory}),
                                             @{typ "32 word \<times> state"}),
                                          close
                                            (var("x0",@{typ HSR}),
                                             mb(mr(close
                                                     (var("s",@{typ "32 word \<times> state"}),
                                                      call
                                                        ("state.CP15",@{typ CP15},
                                                         mop(Snd,
                                                             var("s",@{typ "32 word \<times> state"})),
                                                         @{theory}))),
                                                close
                                                  (var("v",@{typ CP15}),
                                                   mb(mb(mb(mr(close
                                                                 (var("s",
                                                                      @{typ
                                                                      "32 word \<times> state"}),
                                                                  mop(Fst,
                                                                      var("s",
                                                                          @{typ
                                                                          "32 word \<times> state"})))),
                                                            close
                                                              (var_w("v0",32),
                                                               mb(mb(mu(tp[var("x0",@{typ HSR}),
                                                                           var_w("v0",32)],
                                                                        @{typ
                                                                        "32 word \<times> state"}),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "HSR \<times> 32 word"}),
                                                                        mu(call
                                                                             ("write'reg'HSR",
                                                                              @{typ HSR},
                                                                              var("v",
                                                                                  @{typ
                                                                                  "HSR \<times>
                                                                                   32 word"}),
                                                                              @{theory}),
                                                                           @{typ
                                                                           "32 word \<times> state"}))),
                                                                  close
                                                                    (var("v0",@{typ HSR}),
                                                                     mu(tp[var("v",@{typ CP15}),
                                                                           var("v0",@{typ HSR})],
                                                                        @{typ
                                                                        "32 word \<times> state"}))))),
                                                         close
                                                           (var("v",@{typ "CP15 \<times> HSR"}),
                                                            mu(rupd
                                                                 ("CP15.HSR",
                                                                  var("v",@{typ "CP15 \<times> HSR"}),
                                                                  @{theory}),
                                                               @{typ "32 word \<times> state"}))),
                                                      close
                                                        (var("v",@{typ CP15}),
                                                         mw(close
                                                              (var("s",
                                                                   @{typ "32 word \<times> state"}),
                                                               tp[mop(Fst,
                                                                      var("s",
                                                                          @{typ
                                                                          "32 word \<times> state"})),
                                                                  rupd
                                                                    ("state.CP15",
                                                                     tp[mop(Snd,
                                                                            var("s",
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"})),
                                                                        var("v",@{typ CP15})],
                                                                     @{theory})])))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CallSupervisor",
   close
     (var_w("immediate",16),
      mb(call("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mb(ite(var_b"v",mu(lt,qTy),
                      mb(call
                           ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                mb(call
                                     ("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                      lu,@{theory}),
                                   close
                                     (var_b"v",
                                      mb(mu(mop(Not,var_b"v"),qTy),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                mb(call
                                                     ("CurrentModeIsNotUser",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_b"v",
                                                      mb(mu(mop(Not,var_b"v"),qTy),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                mb(mr(close
                                                                        (var("s",qTy),
                                                                         call
                                                                           ("state.CP15",
                                                                            @{typ CP15},
                                                                            var("s",qTy),@{theory}))),
                                                                   close
                                                                     (var("v",@{typ CP15}),
                                                                      mb(mu(call
                                                                              ("CP15.HCR",
                                                                               @{typ HCR},
                                                                               var("v",@{typ CP15}),
                                                                               @{theory}),qTy),
                                                                         close
                                                                           (var("v",@{typ HCR}),
                                                                            mu(call
                                                                                 ("HCR.TGE",
                                                                                  HOLogic.boolT,
                                                                                  var("v",@{typ HCR}),
                                                                                  @{theory}),qTy))))),
                                                                mu(lf,qTy)))))),mu(lf,qTy)))))),
                                mu(lf,qTy))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mn(lw(0,25),
                            mb(mr(close
                                    (var("s",@{typ "25 word \<times> state"}),
                                     mop(Fst,var("s",@{typ "25 word \<times> state"})))),
                               close
                                 (var_w("v",25),
                                  mb(mb(mb(md(call
                                                ("CurrentCond",
                                                 @{typ
                                                 "state \<Rightarrow> (4 word \<times> state)"},lu,
                                                 @{theory}),(Word_Lib.mk_wordT 25)),
                                           close
                                             (var_w("v0",4),
                                              mb(mb(mu(eq(var_w("v0",4),lw(14,4)),
                                                       @{typ "25 word \<times> state"}),
                                                    close
                                                      (var_b"b",
                                                       mu(ite(var_b"b",var_w("immediate",16),lx w16),
                                                          @{typ "25 word \<times> state"}))),
                                                 close
                                                   (var_w("v0",16),
                                                    mu(bfi(ln 15,ln 0,var_w("v0",16),var_w("v",25)),
                                                       @{typ "25 word \<times> state"}))))),
                                        close
                                          (var_w("v",25),
                                           mw(close
                                                (var("s",@{typ "25 word \<times> state"}),
                                                 tp[var_w("v",25),
                                                    mop(Snd,var("s",@{typ "25 word \<times> state"}))])))),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(mr(close
                                                (var("s",@{typ "25 word \<times> state"}),
                                                 mop(Fst,var("s",@{typ "25 word \<times> state"})))),
                                           close
                                             (var_w("v",25),
                                              mb(mu(tp[lw(18,6),var_w("v",25)],
                                                    @{typ "25 word \<times> state"}),
                                                 close
                                                   (var("v",@{typ "6 word \<times> 25 word"}),
                                                    md(call
                                                         ("WriteHSR",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          var("v",@{typ "6 word \<times> 25 word"}),
                                                          @{theory}),(Word_Lib.mk_wordT 25))))))))))),
                         mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  call
                    ("TakeSVCException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                     @{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("CallHypervisor",
   close
     (var_w("immediate",16),
      mb(call
           ("WriteHSR",@{typ "state \<Rightarrow> (unit \<times> state)"},
            tp[lw(18,6),cc[var_w("immediate",16),lw(0,9)]],@{theory}),
         close
           (var_a HOLogic.unitT,
            call("TakeHVCException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BankedRegisterAccessValid",
   close
     (tp[var_w("SYSm",5),var_w("mode",5)],
      itb([(eq(ex(var_w("SYSm",5),ln 4,ln 3,(Word_Lib.mk_wordT 2)),lw(0,2)),
            itb([(eq(ex(var_w("SYSm",5),ln 2,ln 0,(Word_Lib.mk_wordT 3)),lw(7,3)),
                  call
                    ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     call
                       ("exception.UNPREDICTABLE",@{typ exception},ls"BankedRegisterAccessValid",
                        @{theory}),@{theory})),
                 (eq(ex(var_w("SYSm",5),ln 2,ln 0,(Word_Lib.mk_wordT 3)),lw(6,3)),
                  ite(bop(In,var_w("mode",5),sl[lw(26,5),lw(31,5)]),
                      call
                        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         call
                           ("exception.UNPREDICTABLE",@{typ exception},
                            ls"BankedRegisterAccessValid",@{theory}),@{theory}),mu(lu,qTy))),
                 (eq(ex(var_w("SYSm",5),ln 2,ln 0,(Word_Lib.mk_wordT 3)),lw(5,3)),
                  ite(eq(var_w("mode",5),lw(31,5)),
                      call
                        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         call
                           ("exception.UNPREDICTABLE",@{typ exception},
                            ls"BankedRegisterAccessValid",@{theory}),@{theory}),mu(lu,qTy))),
                 (mop(Not,eq(var_w("mode",5),lw(17,5))),
                  call
                    ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     call
                       ("exception.UNPREDICTABLE",@{typ exception},ls"BankedRegisterAccessValid",
                        @{theory}),@{theory}))],mu(lu,qTy))),
           (eq(ex(var_w("SYSm",5),ln 4,ln 3,(Word_Lib.mk_wordT 2)),lw(1,2)),
            mb(mr(close(var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ CP15}),
                  mb(mb(mb(mb(mb(mu(call("CP15.NSACR",@{typ NSACR},var("v",@{typ CP15}),@{theory}),
                                    qTy),
                                 close
                                   (var("v",@{typ NSACR}),
                                    mu(call
                                         ("NSACR.RFR",HOLogic.boolT,var("v",@{typ NSACR}),@{theory}),
                                       qTy))),
                              close
                                (var_b"b",
                                 ite(var_b"b",
                                     mb(call
                                          ("IsSecure",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                     mu(lf,qTy)))),
                           close(var_b"v",mu(bop(Or,eq(var_w("mode",5),lw(17,5)),var_b"v"),qTy))),
                        close
                          (var_b"v",
                           mu(bop(Or,
                                  eq(ex(var_w("SYSm",5),ln 2,ln 0,(Word_Lib.mk_wordT 3)),lw(7,3)),
                                  var_b"v"),qTy))),
                     close
                       (var_b"b",
                        ite(var_b"b",
                            call
                              ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},
                                  ls"BankedRegisterAccessValid",@{theory}),@{theory}),mu(lu,qTy))))))),
           (eq(ex(var_w("SYSm",5),ln 4,ln 3,(Word_Lib.mk_wordT 2)),lw(3,2)),
            itb([(mop(Not,bop(Bit,var_w("SYSm",5),ln 2)),
                  call
                    ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     call
                       ("exception.UNPREDICTABLE",@{typ exception},ls"BankedRegisterAccessValid",
                        @{theory}),@{theory})),
                 (mop(Not,bop(Bit,var_w("SYSm",5),ln 1)),
                  mb(call
                       ("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                     close
                       (var_b"v",
                        mb(mb(mu(mop(Not,var_b"v"),qTy),
                              close(var_b"b",mu(bop(Or,var_b"b",eq(var_w("mode",5),lw(22,5))),qTy))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  call
                                    ("raise'exception",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     call
                                       ("exception.UNPREDICTABLE",@{typ exception},
                                        ls"BankedRegisterAccessValid",@{theory}),@{theory}),
                                  mu(lu,qTy))))))),
                 (mop(Not,eq(var_w("mode",5),lw(22,5))),
                  call
                    ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     call
                       ("exception.UNPREDICTABLE",@{typ exception},ls"BankedRegisterAccessValid",
                        @{theory}),@{theory}))],mu(lu,qTy)))],mu(lu,qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SPSRAccessValid",
   close
     (tp[var_w("SYSm",5),var_w("mode",5)],
      itb([(eq(var_w("SYSm",5),lw(14,5)),
            mb(call("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
               close
                 (var_b"v",
                  mb(mb(mb(mu(mop(Not,var_b"v"),qTy),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(mr(close
                                          (var("s",qTy),
                                           call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                     close
                                       (var("v",@{typ CP15}),
                                        mb(mu(call
                                                ("CP15.NSACR",@{typ NSACR},var("v",@{typ CP15}),
                                                 @{theory}),qTy),
                                           close
                                             (var("v",@{typ NSACR}),
                                              mu(call
                                                   ("NSACR.RFR",HOLogic.boolT,var("v",@{typ NSACR}),
                                                    @{theory}),qTy))))),mu(lf,qTy)))),
                        close(var_b"b",mu(bop(Or,var_b"b",eq(var_w("mode",5),lw(17,5))),qTy))),
                     close
                       (var_b"b",
                        ite(var_b"b",
                            call
                              ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",
                                  @{theory}),@{theory}),mu(lu,qTy))))))),
           (eq(var_w("SYSm",5),lw(16,5)),
            ite(eq(var_w("mode",5),lw(18,5)),
                call
                  ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   call("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",@{theory}),
                   @{theory}),mu(lu,qTy))),
           (eq(var_w("SYSm",5),lw(18,5)),
            ite(eq(var_w("mode",5),lw(19,5)),
                call
                  ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   call("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",@{theory}),
                   @{theory}),mu(lu,qTy))),
           (eq(var_w("SYSm",5),lw(20,5)),
            ite(eq(var_w("mode",5),lw(23,5)),
                call
                  ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   call("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",@{theory}),
                   @{theory}),mu(lu,qTy))),
           (eq(var_w("SYSm",5),lw(22,5)),
            ite(eq(var_w("mode",5),lw(27,5)),
                call
                  ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   call("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",@{theory}),
                   @{theory}),mu(lu,qTy))),
           (eq(var_w("SYSm",5),lw(28,5)),
            mb(call("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
               close
                 (var_b"v",
                  mb(mb(mu(mop(Not,var_b"v"),qTy),
                        close(var_b"v",mu(bop(Or,eq(var_w("mode",5),lw(22,5)),var_b"v"),qTy))),
                     close
                       (var_b"b",
                        ite(var_b"b",
                            call
                              ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               call
                                 ("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",
                                  @{theory}),@{theory}),mu(lu,qTy))))))),
           (eq(var_w("SYSm",5),lw(30,5)),
            ite(mop(Not,eq(var_w("mode",5),lw(22,5))),
                call
                  ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   call("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",@{theory}),
                   @{theory}),mu(lu,qTy)))],
          call
            ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
             call("exception.UNPREDICTABLE",@{typ exception},ls"SPSRAccessValid",@{theory}),
             @{theory}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'FPSCR",
   close
     (var_w("x",32),
      record
        ("FPSCR",
         [bop(Bit,var_w("x",32),ln 26),bop(Bit,var_w("x",32),ln 29),bop(Bit,var_w("x",32),ln 25),
          bop(Bit,var_w("x",32),ln 1),bop(Bit,var_w("x",32),ln 9),bop(Bit,var_w("x",32),ln 24),
          bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 15),bop(Bit,var_w("x",32),ln 0),
          bop(Bit,var_w("x",32),ln 8),bop(Bit,var_w("x",32),ln 4),bop(Bit,var_w("x",32),ln 12),
          bop(Bit,var_w("x",32),ln 31),bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 10),
          bop(Bit,var_w("x",32),ln 27),ex(var_w("x",32),ln 23,ln 22,(Word_Lib.mk_wordT 2)),
          bop(Bit,var_w("x",32),ln 3),bop(Bit,var_w("x",32),ln 11),bop(Bit,var_w("x",32),ln 28),
          bop(Bit,var_w("x",32),ln 30),
          cc[ex(var_w("x",32),ln 6,ln 5,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 14,ln 13,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 21,ln 16,(Word_Lib.mk_wordT 6))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'FPSCR",
   close
     (var("x",@{typ FPSCR}),
      let'
        (var_w("fpscr'rst",10),
         call("FPSCR.fpscr'rst",(Word_Lib.mk_wordT 10),var("x",@{typ FPSCR}),@{theory}),
         cc[mop(Cast w1,call("FPSCR.N",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.Z",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.C",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.V",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.QC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.AHP",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.DN",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.FZ",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            call("FPSCR.RMode",(Word_Lib.mk_wordT 2),var("x",@{typ FPSCR}),@{theory}),
            ex(var_w("fpscr'rst",10),ln 5,ln 0,(Word_Lib.mk_wordT 6)),
            mop(Cast w1,call("FPSCR.IDE",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            ex(var_w("fpscr'rst",10),ln 7,ln 6,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("FPSCR.IXE",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.UFE",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.OFE",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.DZE",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.IOE",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.IDC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            ex(var_w("fpscr'rst",10),ln 9,ln 8,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("FPSCR.IXC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.UFC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.OFC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.DZC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory})),
            mop(Cast w1,call("FPSCR.IOC",HOLogic.boolT,var("x",@{typ FPSCR}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'FPSCR",
   close(tp[var_a w32,var("x",@{typ FPSCR})],call("reg'FPSCR",w32,var("x",@{typ FPSCR}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'FPSCR",
   close
     (tp[var_a @{typ FPSCR},var_w("x",32)],call("rec'FPSCR",@{typ FPSCR},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("RoundingMode",
   mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ FP}),
         mb(mb(mu(call("FP.FPSCR",@{typ FPSCR},var("v",@{typ FP}),@{theory}),qTy),
               close
                 (var("v",@{typ FPSCR}),
                  mu(call("FPSCR.RMode",(Word_Lib.mk_wordT 2),var("v",@{typ FPSCR}),@{theory}),qTy))),
            close
              (var_w("x",2),
               mu(itb([(eq(var_w("x",2),lw(0,2)),@{term roundTiesToEven}),
                       (eq(var_w("x",2),lw(1,2)),@{term roundTowardPositive}),
                       (eq(var_w("x",2),lw(2,2)),@{term roundTowardNegative}),
                       (eq(var_w("x",2),lw(3,2)),@{term roundTowardZero})],lx @{typ ieee_rounding}),
                  qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("FPAdd32",
   close
     (tp[var_w("op1",32),var_w("op2",32)],
      mb(const
           ("RoundingMode",@{typ "state \<Rightarrow> (L3_Lib.ieee_rounding \<times> state)"},
            @{theory}),
         close
           (var("v",@{typ ieee_rounding}),
            mb(mu(tp[var("v",@{typ ieee_rounding}),var_w("op1",32),var_w("op2",32)],qTy),
               close
                 (var("v",@{typ "L3_Lib.ieee_rounding \<times> 32 word \<times> 32 word"}),
                  mu(mop(FPAdd false,
                         var("v",@{typ "L3_Lib.ieee_rounding \<times> 32 word \<times> 32 word"})),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("FPSub32",
   close
     (tp[var_w("op1",32),var_w("op2",32)],
      mb(const
           ("RoundingMode",@{typ "state \<Rightarrow> (L3_Lib.ieee_rounding \<times> state)"},
            @{theory}),
         close
           (var("v",@{typ ieee_rounding}),
            mb(mu(tp[var("v",@{typ ieee_rounding}),var_w("op1",32),var_w("op2",32)],qTy),
               close
                 (var("v",@{typ "L3_Lib.ieee_rounding \<times> 32 word \<times> 32 word"}),
                  mu(mop(FPSub false,
                         var("v",@{typ "L3_Lib.ieee_rounding \<times> 32 word \<times> 32 word"})),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("FPMul32",
   close
     (tp[var_w("op1",32),var_w("op2",32)],
      mb(const
           ("RoundingMode",@{typ "state \<Rightarrow> (L3_Lib.ieee_rounding \<times> state)"},
            @{theory}),
         close
           (var("v",@{typ ieee_rounding}),
            mb(mu(tp[var("v",@{typ ieee_rounding}),var_w("op1",32),var_w("op2",32)],qTy),
               close
                 (var("v",@{typ "L3_Lib.ieee_rounding \<times> 32 word \<times> 32 word"}),
                  mu(mop(FPMul false,
                         var("v",@{typ "L3_Lib.ieee_rounding \<times> 32 word \<times> 32 word"})),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("FPAdd64",
   close
     (tp[var_w("op1",64),var_w("op2",64)],
      mb(const
           ("RoundingMode",@{typ "state \<Rightarrow> (L3_Lib.ieee_rounding \<times> state)"},
            @{theory}),
         close
           (var("v",@{typ ieee_rounding}),
            mb(mu(tp[var("v",@{typ ieee_rounding}),var_w("op1",64),var_w("op2",64)],qTy),
               close
                 (var("v",@{typ "L3_Lib.ieee_rounding \<times> 64 word \<times> 64 word"}),
                  mu(mop(FPAdd true,
                         var("v",@{typ "L3_Lib.ieee_rounding \<times> 64 word \<times> 64 word"})),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("FPSub64",
   close
     (tp[var_w("op1",64),var_w("op2",64)],
      mb(const
           ("RoundingMode",@{typ "state \<Rightarrow> (L3_Lib.ieee_rounding \<times> state)"},
            @{theory}),
         close
           (var("v",@{typ ieee_rounding}),
            mb(mu(tp[var("v",@{typ ieee_rounding}),var_w("op1",64),var_w("op2",64)],qTy),
               close
                 (var("v",@{typ "L3_Lib.ieee_rounding \<times> 64 word \<times> 64 word"}),
                  mu(mop(FPSub true,
                         var("v",@{typ "L3_Lib.ieee_rounding \<times> 64 word \<times> 64 word"})),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("FPMul64",
   close
     (tp[var_w("op1",64),var_w("op2",64)],
      mb(const
           ("RoundingMode",@{typ "state \<Rightarrow> (L3_Lib.ieee_rounding \<times> state)"},
            @{theory}),
         close
           (var("v",@{typ ieee_rounding}),
            mb(mu(tp[var("v",@{typ ieee_rounding}),var_w("op1",64),var_w("op2",64)],qTy),
               close
                 (var("v",@{typ "L3_Lib.ieee_rounding \<times> 64 word \<times> 64 word"}),
                  mu(mop(FPMul true,
                         var("v",@{typ "L3_Lib.ieee_rounding \<times> 64 word \<times> 64 word"})),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("D",
   close
     (var_w("n",5),
      mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ FP}),
            mb(mu(call("FP.REG",@{typ "5 word \<Rightarrow> 64 word"},var("v",@{typ FP}),@{theory}),
                  qTy),
               close
                 (var("v",@{typ "5 word \<Rightarrow> 64 word"}),
                  mu(apply(var("v",@{typ "5 word \<Rightarrow> 64 word"}),var_w("n",5)),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'D",
   close
     (tp[var_w("value",64),var_w("n",5)],
      mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ FP}),
            mb(mu(call("FP.REG",@{typ "5 word \<Rightarrow> 64 word"},var("v",@{typ FP}),@{theory}),
                  qTy),
               close
                 (var("f",@{typ "5 word \<Rightarrow> 64 word"}),
                  mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ FP}),
                        mb(mb(mu(tp[var("v",@{typ FP}),
                                    fupd
                                      (var("f",@{typ "5 word \<Rightarrow> 64 word"}),var_w("n",5),
                                       var_w("value",64))],qTy),
                              close
                                (var("v",@{typ "FP \<times> (5 word \<Rightarrow> 64 word)"}),
                                 mu(rupd
                                      ("FP.REG",
                                       var("v",@{typ "FP \<times> (5 word \<Rightarrow> 64 word)"}),
                                       @{theory}),qTy))),
                           close
                             (var("v",@{typ FP}),
                              mw(close
                                   (var("s",qTy),
                                    rupd("state.FP",tp[var("s",qTy),var("v",@{typ FP})],@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("S",
   close
     (var_w("n",5),
      ite(bop(Bit,var_w("n",5),ln 0),
          mb(call
               ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                bop(Div,var_w("n",5),lw(2,5)),@{theory}),
             close(var_w("v",64),mu(ex(var_w("v",64),ln 63,ln 32,w32),qTy))),
          mb(call
               ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                bop(Div,var_w("n",5),lw(2,5)),@{theory}),
             close(var_w("v",64),mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'S",
   close
     (tp[var_w("value",32),var_w("n",5)],
      ite(bop(Bit,var_w("n",5),ln 0),
          let'
            (var_w("x",5),bop(Div,var_w("n",5),lw(2,5)),
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("x",5),@{theory}),
                close
                  (var_w("w",64),
                   call
                     ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      tp[bfi(ln 63,ln 32,var_w("value",32),var_w("w",64)),var_w("x",5)],@{theory})))),
          let'
            (var_w("x",5),bop(Div,var_w("n",5),lw(2,5)),
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("x",5),@{theory}),
                close
                  (var_w("w",64),
                   call
                     ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      tp[bfi(ln 31,ln 0,var_w("value",32),var_w("w",64)),var_w("x",5)],@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("VFPExpandImm",
   close
     (tp[var_w("imm8",8),var_b"single"],
      ite(var_b"single",
          mop(Cast w64,
              cc[ex(var_w("imm8",8),ln 7,ln 7,w1),mop(BNot,ex(var_w("imm8",8),ln 6,ln 6,w1)),
                 rep(ex(var_w("imm8",8),ln 6,ln 6,w1),ln 5,(Word_Lib.mk_wordT 5)),
                 ex(var_w("imm8",8),ln 5,ln 0,(Word_Lib.mk_wordT 6)),
                 rep(lw(0,1),ln 19,(Word_Lib.mk_wordT 19))]),
          cc[ex(var_w("imm8",8),ln 7,ln 7,w1),mop(BNot,ex(var_w("imm8",8),ln 6,ln 6,w1)),
             rep(ex(var_w("imm8",8),ln 6,ln 6,w1),ln 8,w8),
             ex(var_w("imm8",8),ln 5,ln 0,(Word_Lib.mk_wordT 6)),
             rep(lw(0,1),ln 48,(Word_Lib.mk_wordT 48))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("FPCompare32",
   close
     (tp[var_w("op1",32),var_w("op2",32)],
      itb([(bop(Or,mop(FPIsNan false,var_w("op1",32)),mop(FPIsNan false,var_w("op2",32))),lw(3,4)),
           (mop(FPEqual false,tp[var_w("op1",32),var_w("op2",32)]),lw(6,4)),
           (mop(FPLessThan false,tp[var_w("op1",32),var_w("op2",32)]),lw(8,4))],lw(2,4))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("FPCompare64",
   close
     (tp[var_w("op1",64),var_w("op2",64)],
      itb([(bop(Or,mop(FPIsNan true,var_w("op1",64)),mop(FPIsNan true,var_w("op2",64))),lw(3,4)),
           (mop(FPEqual true,tp[var_w("op1",64),var_w("op2",64)]),lw(6,4)),
           (mop(FPLessThan true,tp[var_w("op1",64),var_w("op2",64)]),lw(8,4))],lw(2,4))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("FPZero32",close(var_w("sign",1),cc[var_w("sign",1),lw(0,31)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("FPZero64",close(var_w("sign",1),cc[var_w("sign",1),lw(0,63)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'vmov_imm",
   close
     (tp[var_b"single_register",var_w("d",5),var_w("imm64",64)],
      mb(ite(var_b"single_register",
             call
               ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                tp[ex(var_w("imm64",64),ln 31,ln 0,w32),var_w("d",5)],@{theory}),
             call
               ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                tp[var_w("imm64",64),var_w("d",5)],@{theory})),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vmov",
   close
     (tp[var_b"single_register",var_w("d",5),var_w("m",5)],
      mb(ite(var_b"single_register",
             mb(call
                  ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",5),@{theory}),
                close
                  (var_w("v",32),
                   mb(mu(tp[var_w("v",32),var_w("d",5)],qTy),
                      close
                        (var("v",@{typ "32 word \<times> 5 word"}),
                         call
                           ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 5 word"}),@{theory}))))),
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("m",5),@{theory}),
                close
                  (var_w("v",64),
                   mb(mu(tp[var_w("v",64),var_w("d",5)],qTy),
                      close
                        (var("v",@{typ "64 word \<times> 5 word"}),
                         call
                           ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vcmp",
   close
     (tp[var_b"dp_operation",var_w("d",5),var("m_with_zero",@{typ "5 word option"})],
      mb(ite(var_b"dp_operation",
             mb(cs(var("m_with_zero",@{typ "5 word option"}),
                   [(mop(Some,var_w("m",5)),
                     call
                       ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("m",5),
                        @{theory})),
                    (lo (Word_Lib.mk_wordT 5),mu(call("FPZero64",w64,lw(0,1),@{theory}),qTy))],
                   @{context}),
                close
                  (var_w("op2",64),
                   mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ FP}),
                         mb(mu(call("FP.FPSCR",@{typ FPSCR},var("v",@{typ FP}),@{theory}),qTy),
                            close
                              (var("x0",@{typ FPSCR}),
                               mb(mr(close
                                       (var("s",qTy),
                                        call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                                  close
                                    (var("v",@{typ FP}),
                                     mb(mb(mb(call
                                                ("D",
                                                 @{typ
                                                 "state \<Rightarrow> (64 word \<times> state)"},
                                                 var_w("d",5),@{theory}),
                                              close
                                                (var_w("v0",64),
                                                 mb(mb(mb(mb(mb(mu(tp[var_w("v0",64),var_w("op2",64)],
                                                                   qTy),
                                                                close
                                                                  (var("v",
                                                                       @{typ
                                                                       "64 word \<times> 64 word"}),
                                                                   mu(call
                                                                        ("FPCompare64",w4,
                                                                         var("v",
                                                                             @{typ
                                                                             "64 word \<times>
                                                                              64 word"}),@{theory}),
                                                                      qTy))),
                                                             close
                                                               (var_w("v",4),
                                                                mu(bfi(ln 31,ln 28,var_w("v",4),
                                                                       call
                                                                         ("reg'FPSCR",w32,
                                                                          var("x0",@{typ FPSCR}),
                                                                          @{theory})),qTy))),
                                                          close
                                                            (var_w("v",32),
                                                             mu(tp[var("x0",@{typ FPSCR}),
                                                                   var_w("v",32)],qTy))),
                                                       close
                                                         (var("v",@{typ "FPSCR \<times> 32 word"}),
                                                          mu(call
                                                               ("write'reg'FPSCR",@{typ FPSCR},
                                                                var("v",
                                                                    @{typ "FPSCR \<times> 32 word"}),
                                                                @{theory}),qTy))),
                                                    close
                                                      (var("v0",@{typ FPSCR}),
                                                       mu(tp[var("v",@{typ FP}),
                                                             var("v0",@{typ FPSCR})],qTy))))),
                                           close
                                             (var("v",@{typ "FP \<times> FPSCR"}),
                                              mu(rupd
                                                   ("FP.FPSCR",var("v",@{typ "FP \<times> FPSCR"}),
                                                    @{theory}),qTy))),
                                        close
                                          (var("v",@{typ FP}),
                                           mw(close
                                                (var("s",qTy),
                                                 rupd
                                                   ("state.FP",tp[var("s",qTy),var("v",@{typ FP})],
                                                    @{theory}))))))))))))),
             mb(cs(var("m_with_zero",@{typ "5 word option"}),
                   [(mop(Some,var_w("m",5)),
                     call
                       ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",5),
                        @{theory})),
                    (lo (Word_Lib.mk_wordT 5),mu(call("FPZero32",w32,lw(0,1),@{theory}),qTy))],
                   @{context}),
                close
                  (var_w("op2",32),
                   mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ FP}),
                         mb(mu(call("FP.FPSCR",@{typ FPSCR},var("v",@{typ FP}),@{theory}),qTy),
                            close
                              (var("x0",@{typ FPSCR}),
                               mb(mr(close
                                       (var("s",qTy),
                                        call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                                  close
                                    (var("v",@{typ FP}),
                                     mb(mb(mb(call
                                                ("S",
                                                 @{typ
                                                 "state \<Rightarrow> (32 word \<times> state)"},
                                                 var_w("d",5),@{theory}),
                                              close
                                                (var_w("v0",32),
                                                 mb(mb(mb(mb(mb(mu(tp[var_w("v0",32),var_w("op2",32)],
                                                                   qTy),
                                                                close
                                                                  (var("v",
                                                                       @{typ
                                                                       "32 word \<times> 32 word"}),
                                                                   mu(call
                                                                        ("FPCompare32",w4,
                                                                         var("v",
                                                                             @{typ
                                                                             "32 word \<times>
                                                                              32 word"}),@{theory}),
                                                                      qTy))),
                                                             close
                                                               (var_w("v",4),
                                                                mu(bfi(ln 31,ln 28,var_w("v",4),
                                                                       call
                                                                         ("reg'FPSCR",w32,
                                                                          var("x0",@{typ FPSCR}),
                                                                          @{theory})),qTy))),
                                                          close
                                                            (var_w("v",32),
                                                             mu(tp[var("x0",@{typ FPSCR}),
                                                                   var_w("v",32)],qTy))),
                                                       close
                                                         (var("v",@{typ "FPSCR \<times> 32 word"}),
                                                          mu(call
                                                               ("write'reg'FPSCR",@{typ FPSCR},
                                                                var("v",
                                                                    @{typ "FPSCR \<times> 32 word"}),
                                                                @{theory}),qTy))),
                                                    close
                                                      (var("v0",@{typ FPSCR}),
                                                       mu(tp[var("v",@{typ FP}),
                                                             var("v0",@{typ FPSCR})],qTy))))),
                                           close
                                             (var("v",@{typ "FP \<times> FPSCR"}),
                                              mu(rupd
                                                   ("FP.FPSCR",var("v",@{typ "FP \<times> FPSCR"}),
                                                    @{theory}),qTy))),
                                        close
                                          (var("v",@{typ FP}),
                                           mw(close
                                                (var("s",qTy),
                                                 rupd
                                                   ("state.FP",tp[var("s",qTy),var("v",@{typ FP})],
                                                    @{theory})))))))))))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vmrs",
   close
     (var_w("t",4),
      mb(ite(mop(Not,eq(var_w("t",4),lw(15,4))),
             mb(mr(close(var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                close
                  (var("v",@{typ FP}),
                   mb(mb(mb(mu(call("FP.FPSCR",@{typ FPSCR},var("v",@{typ FP}),@{theory}),qTy),
                            close
                              (var("v",@{typ FPSCR}),
                               mu(call("reg'FPSCR",w32,var("v",@{typ FPSCR}),@{theory}),qTy))),
                         close(var_w("v",32),mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                      close
                        (var("v",@{typ "32 word \<times> 4 word"}),
                         call
                           ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 4 word"}),@{theory}))))),
             mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                close
                  (var("v",@{typ PSR}),
                   mb(mb(mb(mb(mr(close
                                    (var("s",qTy),call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                               close
                                 (var("v0",@{typ FP}),
                                  mb(mb(mu(call
                                             ("FP.FPSCR",@{typ FPSCR},var("v0",@{typ FP}),@{theory}),
                                           qTy),
                                        close
                                          (var("v",@{typ FPSCR}),
                                           mu(call
                                                ("FPSCR.N",HOLogic.boolT,var("v",@{typ FPSCR}),
                                                 @{theory}),qTy))),
                                     close(var_b"v0",mu(tp[var("v",@{typ PSR}),var_b"v0"],qTy))))),
                            close
                              (var("v",@{typ "PSR \<times> bool"}),
                               mu(rupd("PSR.N",var("v",@{typ "PSR \<times> bool"}),@{theory}),qTy))),
                         close
                           (var("v",@{typ PSR}),
                            mw(close
                                 (var("s",qTy),
                                  rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
                      close
                        (var_a HOLogic.unitT,
                         mb(mr(close
                                 (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ PSR}),
                               mb(mb(mb(mb(mr(close
                                                (var("s",qTy),
                                                 call("state.FP",@{typ FP},var("s",qTy),@{theory}))),
                                           close
                                             (var("v0",@{typ FP}),
                                              mb(mb(mu(call
                                                         ("FP.FPSCR",@{typ FPSCR},
                                                          var("v0",@{typ FP}),@{theory}),qTy),
                                                    close
                                                      (var("v",@{typ FPSCR}),
                                                       mu(call
                                                            ("FPSCR.Z",HOLogic.boolT,
                                                             var("v",@{typ FPSCR}),@{theory}),qTy))),
                                                 close
                                                   (var_b"v0",
                                                    mu(tp[var("v",@{typ PSR}),var_b"v0"],qTy))))),
                                        close
                                          (var("v",@{typ "PSR \<times> bool"}),
                                           mu(rupd
                                                ("PSR.Z",var("v",@{typ "PSR \<times> bool"}),
                                                 @{theory}),qTy))),
                                     close
                                       (var("v",@{typ PSR}),
                                        mw(close
                                             (var("s",qTy),
                                              rupd
                                                ("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],
                                                 @{theory}))))),
                                  close
                                    (var_a HOLogic.unitT,
                                     mb(mr(close
                                             (var("s",qTy),
                                              call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                        close
                                          (var("v",@{typ PSR}),
                                           mb(mb(mb(mb(mr(close
                                                            (var("s",qTy),
                                                             call
                                                               ("state.FP",@{typ FP},var("s",qTy),
                                                                @{theory}))),
                                                       close
                                                         (var("v0",@{typ FP}),
                                                          mb(mb(mu(call
                                                                     ("FP.FPSCR",@{typ FPSCR},
                                                                      var("v0",@{typ FP}),@{theory}),
                                                                   qTy),
                                                                close
                                                                  (var("v",@{typ FPSCR}),
                                                                   mu(call
                                                                        ("FPSCR.C",HOLogic.boolT,
                                                                         var("v",@{typ FPSCR}),
                                                                         @{theory}),qTy))),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var("v",@{typ PSR}),var_b"v0"],
                                                                   qTy))))),
                                                    close
                                                      (var("v",@{typ "PSR \<times> bool"}),
                                                       mu(rupd
                                                            ("PSR.C",
                                                             var("v",@{typ "PSR \<times> bool"}),
                                                             @{theory}),qTy))),
                                                 close
                                                   (var("v",@{typ PSR}),
                                                    mw(close
                                                         (var("s",qTy),
                                                          rupd
                                                            ("state.CPSR",
                                                             tp[var("s",qTy),var("v",@{typ PSR})],
                                                             @{theory}))))),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mb(mr(close
                                                         (var("s",qTy),
                                                          call
                                                            ("state.CPSR",@{typ PSR},var("s",qTy),
                                                             @{theory}))),
                                                    close
                                                      (var("v",@{typ PSR}),
                                                       mb(mb(mb(mr(close
                                                                     (var("s",qTy),
                                                                      call
                                                                        ("state.FP",@{typ FP},
                                                                         var("s",qTy),@{theory}))),
                                                                close
                                                                  (var("v0",@{typ FP}),
                                                                   mb(mb(mu(call
                                                                              ("FP.FPSCR",
                                                                               @{typ FPSCR},
                                                                               var("v0",@{typ FP}),
                                                                               @{theory}),qTy),
                                                                         close
                                                                           (var("v",@{typ FPSCR}),
                                                                            mu(call
                                                                                 ("FPSCR.V",
                                                                                  HOLogic.boolT,
                                                                                  var("v",
                                                                                      @{typ FPSCR}),
                                                                                  @{theory}),qTy))),
                                                                      close
                                                                        (var_b"v0",
                                                                         mu(tp[var("v",@{typ PSR}),
                                                                               var_b"v0"],qTy))))),
                                                             close
                                                               (var("v",@{typ "PSR \<times> bool"}),
                                                                mu(rupd
                                                                     ("PSR.V",
                                                                      var("v",
                                                                          @{typ "PSR \<times> bool"}),
                                                                      @{theory}),qTy))),
                                                          close
                                                            (var("v",@{typ PSR}),
                                                             mw(close
                                                                  (var("s",qTy),
                                                                   rupd
                                                                     ("state.CPSR",
                                                                      tp[var("s",qTy),
                                                                         var("v",@{typ PSR})],
                                                                      @{theory})))))))))))))))))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vadd",
   close
     (tp[var_b"dp_operation",var_w("d",5),var_w("n",5),var_w("m",5)],
      mb(ite(var_b"dp_operation",
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",64),
                   mb(mb(mb(mb(call
                                 ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("m",5),@{theory}),
                               close(var_w("v0",64),mu(tp[var_w("v",64),var_w("v0",64)],qTy))),
                            close
                              (var("v",@{typ "64 word \<times> 64 word"}),
                               call
                                 ("FPAdd64",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var("v",@{typ "64 word \<times> 64 word"}),@{theory}))),
                         close(var_w("v",64),mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                      close
                        (var("v",@{typ "64 word \<times> 5 word"}),
                         call
                           ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
             mb(call
                  ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",32),
                   mb(mb(mb(mb(call
                                 ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var_w("m",5),@{theory}),
                               close(var_w("v0",32),mu(tp[var_w("v",32),var_w("v0",32)],qTy))),
                            close
                              (var("v",@{typ "32 word \<times> 32 word"}),
                               call
                                 ("FPAdd32",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var("v",@{typ "32 word \<times> 32 word"}),@{theory}))),
                         close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",5)],qTy))),
                      close
                        (var("v",@{typ "32 word \<times> 5 word"}),
                         call
                           ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 5 word"}),@{theory})))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vsub",
   close
     (tp[var_b"dp_operation",var_w("d",5),var_w("n",5),var_w("m",5)],
      mb(ite(var_b"dp_operation",
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",64),
                   mb(mb(mb(mb(call
                                 ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("m",5),@{theory}),
                               close(var_w("v0",64),mu(tp[var_w("v",64),var_w("v0",64)],qTy))),
                            close
                              (var("v",@{typ "64 word \<times> 64 word"}),
                               call
                                 ("FPSub64",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var("v",@{typ "64 word \<times> 64 word"}),@{theory}))),
                         close(var_w("v",64),mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                      close
                        (var("v",@{typ "64 word \<times> 5 word"}),
                         call
                           ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
             mb(call
                  ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",32),
                   mb(mb(mb(mb(call
                                 ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var_w("m",5),@{theory}),
                               close(var_w("v0",32),mu(tp[var_w("v",32),var_w("v0",32)],qTy))),
                            close
                              (var("v",@{typ "32 word \<times> 32 word"}),
                               call
                                 ("FPSub32",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var("v",@{typ "32 word \<times> 32 word"}),@{theory}))),
                         close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",5)],qTy))),
                      close
                        (var("v",@{typ "32 word \<times> 5 word"}),
                         call
                           ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 5 word"}),@{theory})))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vmul",
   close
     (tp[var_b"dp_operation",var_w("d",5),var_w("n",5),var_w("m",5)],
      mb(ite(var_b"dp_operation",
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",64),
                   mb(mb(mb(mb(call
                                 ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("m",5),@{theory}),
                               close(var_w("v0",64),mu(tp[var_w("v",64),var_w("v0",64)],qTy))),
                            close
                              (var("v",@{typ "64 word \<times> 64 word"}),
                               call
                                 ("FPMul64",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var("v",@{typ "64 word \<times> 64 word"}),@{theory}))),
                         close(var_w("v",64),mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                      close
                        (var("v",@{typ "64 word \<times> 5 word"}),
                         call
                           ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
             mb(call
                  ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",32),
                   mb(mb(mb(mb(call
                                 ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var_w("m",5),@{theory}),
                               close(var_w("v0",32),mu(tp[var_w("v",32),var_w("v0",32)],qTy))),
                            close
                              (var("v",@{typ "32 word \<times> 32 word"}),
                               call
                                 ("FPMul32",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var("v",@{typ "32 word \<times> 32 word"}),@{theory}))),
                         close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",5)],qTy))),
                      close
                        (var("v",@{typ "32 word \<times> 5 word"}),
                         call
                           ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 5 word"}),@{theory})))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vmla_vmls",
   close
     (tp[var_b"dp_operation",var_b"add",var_w("d",5),var_w("n",5),var_w("m",5)],
      mb(ite(var_b"dp_operation",
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",64),
                   mb(mb(mb(call
                              ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                               var_w("m",5),@{theory}),
                            close(var_w("v0",64),mu(tp[var_w("v",64),var_w("v0",64)],qTy))),
                         close
                           (var("v",@{typ "64 word \<times> 64 word"}),
                            call
                              ("FPMul64",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                               var("v",@{typ "64 word \<times> 64 word"}),@{theory}))),
                      close
                        (var_w("product",64),
                         mb(call
                              ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                               var_w("n",5),@{theory}),
                            close
                              (var_w("v",64),
                               mb(mb(mb(mu(tp[var_w("v",64),
                                              ite(var_b"add",var_w("product",64),
                                                  mop(FPNeg (true, false),var_w("product",64)))],qTy),
                                        close
                                          (var("v",@{typ "64 word \<times> 64 word"}),
                                           call
                                             ("FPAdd64",
                                              @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                              var("v",@{typ "64 word \<times> 64 word"}),@{theory}))),
                                     close(var_w("v",64),mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                                  close
                                    (var("v",@{typ "64 word \<times> 5 word"}),
                                     call
                                       ("write'D",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))))))),
             mb(call
                  ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",32),
                   mb(mb(mb(call
                              ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                               var_w("m",5),@{theory}),
                            close(var_w("v0",32),mu(tp[var_w("v",32),var_w("v0",32)],qTy))),
                         close
                           (var("v",@{typ "32 word \<times> 32 word"}),
                            call
                              ("FPMul32",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                               var("v",@{typ "32 word \<times> 32 word"}),@{theory}))),
                      close
                        (var_w("product",32),
                         mb(call
                              ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                               var_w("n",5),@{theory}),
                            close
                              (var_w("v",32),
                               mb(mb(mb(mu(tp[var_w("v",32),
                                              ite(var_b"add",var_w("product",32),
                                                  mop(FPNeg (false, false),var_w("product",32)))],
                                           qTy),
                                        close
                                          (var("v",@{typ "32 word \<times> 32 word"}),
                                           call
                                             ("FPAdd32",
                                              @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                              var("v",@{typ "32 word \<times> 32 word"}),@{theory}))),
                                     close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",5)],qTy))),
                                  close
                                    (var("v",@{typ "32 word \<times> 5 word"}),
                                     call
                                       ("write'S",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ "32 word \<times> 5 word"}),@{theory})))))))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vneg_mul",
   close
     (tp[var_b"dp_operation",var("typ",@{typ VFPNegMul}),var_w("d",5),var_w("n",5),var_w("m",5)],
      mb(ite(var_b"dp_operation",
             mb(call
                  ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",64),
                   mb(mb(mb(call
                              ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                               var_w("m",5),@{theory}),
                            close(var_w("v0",64),mu(tp[var_w("v",64),var_w("v0",64)],qTy))),
                         close
                           (var("v",@{typ "64 word \<times> 64 word"}),
                            call
                              ("FPMul64",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                               var("v",@{typ "64 word \<times> 64 word"}),@{theory}))),
                      close
                        (var_w("product",64),
                         cs(var("typ",@{typ VFPNegMul}),
                            [(lc("VFPNegMul_VNMLA","VFPNegMul",@{theory}),
                              mb(call
                                   ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("d",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mb(mb(mb(mu(mop(FPNeg (true, false),var_w("v",64)),qTy),
                                                close
                                                  (var_w("v",64),
                                                   mu(tp[var_w("v",64),
                                                         mop(FPNeg (true, false),var_w("product",64))],
                                                      qTy))),
                                             close
                                               (var("v",@{typ "64 word \<times> 64 word"}),
                                                call
                                                  ("FPAdd64",
                                                   @{typ
                                                   "state \<Rightarrow> (64 word \<times> state)"},
                                                   var("v",@{typ "64 word \<times> 64 word"}),
                                                   @{theory}))),
                                          close
                                            (var_w("v",64),mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                                       close
                                         (var("v",@{typ "64 word \<times> 5 word"}),
                                          call
                                            ("write'D",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))),
                             (lc("VFPNegMul_VNMLS","VFPNegMul",@{theory}),
                              mb(call
                                   ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("d",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mb(mb(mb(mu(mop(FPNeg (true, false),var_w("v",64)),qTy),
                                                close
                                                  (var_w("v",64),
                                                   mu(tp[var_w("v",64),var_w("product",64)],qTy))),
                                             close
                                               (var("v",@{typ "64 word \<times> 64 word"}),
                                                call
                                                  ("FPAdd64",
                                                   @{typ
                                                   "state \<Rightarrow> (64 word \<times> state)"},
                                                   var("v",@{typ "64 word \<times> 64 word"}),
                                                   @{theory}))),
                                          close
                                            (var_w("v",64),mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                                       close
                                         (var("v",@{typ "64 word \<times> 5 word"}),
                                          call
                                            ("write'D",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))),
                             (lc("VFPNegMul_VNMUL","VFPNegMul",@{theory}),
                              call
                                ("write'D",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[mop(FPNeg (true, false),var_w("product",64)),var_w("d",5)],
                                 @{theory}))],@{context}))))),
             mb(call
                  ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",5),@{theory}),
                close
                  (var_w("v",32),
                   mb(mb(mb(call
                              ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                               var_w("m",5),@{theory}),
                            close(var_w("v0",32),mu(tp[var_w("v",32),var_w("v0",32)],qTy))),
                         close
                           (var("v",@{typ "32 word \<times> 32 word"}),
                            call
                              ("FPMul32",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                               var("v",@{typ "32 word \<times> 32 word"}),@{theory}))),
                      close
                        (var_w("product",32),
                         cs(var("typ",@{typ VFPNegMul}),
                            [(lc("VFPNegMul_VNMLA","VFPNegMul",@{theory}),
                              mb(call
                                   ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("d",5),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mb(mb(mu(mop(FPNeg (false, false),var_w("v",32)),qTy),
                                                close
                                                  (var_w("v",32),
                                                   mu(tp[var_w("v",32),
                                                         mop(FPNeg (false, false),
                                                             var_w("product",32))],qTy))),
                                             close
                                               (var("v",@{typ "32 word \<times> 32 word"}),
                                                call
                                                  ("FPAdd32",
                                                   @{typ
                                                   "state \<Rightarrow> (32 word \<times> state)"},
                                                   var("v",@{typ "32 word \<times> 32 word"}),
                                                   @{theory}))),
                                          close
                                            (var_w("v",32),mu(tp[var_w("v",32),var_w("d",5)],qTy))),
                                       close
                                         (var("v",@{typ "32 word \<times> 5 word"}),
                                          call
                                            ("write'S",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ "32 word \<times> 5 word"}),@{theory})))))),
                             (lc("VFPNegMul_VNMLS","VFPNegMul",@{theory}),
                              mb(call
                                   ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("d",5),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mb(mb(mu(mop(FPNeg (false, false),var_w("v",32)),qTy),
                                                close
                                                  (var_w("v",32),
                                                   mu(tp[var_w("v",32),var_w("product",32)],qTy))),
                                             close
                                               (var("v",@{typ "32 word \<times> 32 word"}),
                                                call
                                                  ("FPAdd32",
                                                   @{typ
                                                   "state \<Rightarrow> (32 word \<times> state)"},
                                                   var("v",@{typ "32 word \<times> 32 word"}),
                                                   @{theory}))),
                                          close
                                            (var_w("v",32),mu(tp[var_w("v",32),var_w("d",5)],qTy))),
                                       close
                                         (var("v",@{typ "32 word \<times> 5 word"}),
                                          call
                                            ("write'S",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ "32 word \<times> 5 word"}),@{theory})))))),
                             (lc("VFPNegMul_VNMUL","VFPNegMul",@{theory}),
                              call
                                ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[mop(FPNeg (false, false),var_w("product",32)),var_w("d",5)],
                                 @{theory}))],@{context})))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vldr",
   close
     (tp[var_b"single_reg",var_b"add",var_w("d",5),var_w("n",4),var_w("imm32",32)],
      mb(ite(eq(var_w("n",4),lw(15,4)),
             mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                close
                  (var_w("v",32),
                   mb(mu(tp[var_w("v",32),ln 4],qTy),
                      close
                        (var("v",@{typ "32 word \<times> nat"}),
                         mu(call("Align",w32,var("v",@{typ "32 word \<times> nat"}),@{theory}),qTy))))),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("base",32),
            let'
              (var_w("address",32),
               ite(var_b"add",bop(Add,var_w("base",32),var_w("imm32",32)),
                   bop(Sub,var_w("base",32),var_w("imm32",32))),
               mb(ite(var_b"single_reg",
                      mb(call
                           ("MemA",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                            tp[var_w("address",32),ln 4],@{theory}),
                         close
                           (var_w("v",32),
                            mb(mu(tp[var_w("v",32),var_w("d",5)],qTy),
                               close
                                 (var("v",@{typ "32 word \<times> 5 word"}),
                                  call
                                    ("write'S",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "32 word \<times> 5 word"}),@{theory}))))),
                      mb(call
                           ("MemA",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                            tp[var_w("address",32),ln 4],@{theory}),
                         close
                           (var_w("word1",32),
                            mb(call
                                 ("MemA",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  tp[bop(Add,var_w("address",32),lw(4,32)),ln 4],@{theory}),
                               close
                                 (var_w("word2",32),
                                  mb(call
                                       ("BigEndian",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(ite(var_b"v",
                                                     cc[var_w("word1",32),var_w("word2",32)],
                                                     cc[var_w("word2",32),var_w("word1",32)]),qTy),
                                              close
                                                (var_w("v",64),
                                                 mu(tp[var_w("v",64),var_w("d",5)],qTy))),
                                           close
                                             (var("v",@{typ "64 word \<times> 5 word"}),
                                              call
                                                ("write'D",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))),
                  close
                    (var_a HOLogic.unitT,
                     call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'vstr",
   close
     (tp[var_b"single_reg",var_b"add",var_w("d",5),var_w("n",4),var_w("imm32",32)],
      mb(ite(var_b"add",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(bop(Sub,var_w("v",32),var_w("imm32",32)),qTy)))),
         close
           (var_w("address",32),
            mb(ite(var_b"single_reg",
                   mb(call
                        ("S",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("d",5),
                         @{theory}),
                      close
                        (var_w("v",32),
                         mb(mu(tp[var_w("v",32),var_w("address",32),ln 4],qTy),
                            close
                              (var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                               call
                                 ("write'MemA",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  var("v",@{typ "32 word \<times> 32 word \<times> nat"}),@{theory}))))),
                   mb(call
                        ("D",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("d",5),
                         @{theory}),
                      close
                        (var_w("word",64),
                         mb(mb(call
                                 ("BigEndian",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                  @{theory}),
                               close
                                 (var_b"v",
                                  mb(mb(mu(ite(var_b"v",ex(var_w("word",64),ln 63,ln 32,w32),
                                               ex(var_w("word",64),ln 31,ln 0,w32)),qTy),
                                        close
                                          (var_w("v",32),
                                           mu(tp[var_w("v",32),var_w("address",32),ln 4],qTy))),
                                     close
                                       (var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                                        call
                                          ("write'MemA",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                                           @{theory}))))),
                            close
                              (var_a HOLogic.unitT,
                               mb(call
                                    ("BigEndian",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                     lu,@{theory}),
                                  close
                                    (var_b"v",
                                     mb(mb(mu(ite(var_b"v",ex(var_w("word",64),ln 31,ln 0,w32),
                                                  ex(var_w("word",64),ln 63,ln 32,w32)),qTy),
                                           close
                                             (var_w("v",32),
                                              mu(tp[var_w("v",32),
                                                    bop(Add,var_w("address",32),lw(4,32)),ln 4],qTy))),
                                        close
                                          (var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                                           call
                                             ("write'MemA",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                                              @{theory})))))))))),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'UndefinedVFP",
   call("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BranchTarget",
   close
     (var_w("imm32",32),
      mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
         close
           (var_w("v",32),
            mb(mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy),
               close
                 (var_w("v",32),
                  call
                    ("BranchWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var_w("v",32),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'BranchExchange",
   close
     (var_w("m",4),
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            call
              ("BXWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v",32),
               @{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BranchLinkExchangeImmediate",
   close
     (tp[var("targetInstrSet",@{typ InstrSet}),var_w("imm32",32)],
      mb(call("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,@{theory}),
         close
           (var("v",@{typ InstrSet}),
            mb(mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ARM","InstrSet",@{theory})),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close
                              (var_w("v",32),
                               mb(mu(bop(Sub,var_w("v",32),lw(4,32)),qTy),
                                  close
                                    (var_w("v",32),
                                     call
                                       ("write'LR",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var_w("v",32),@{theory}))))),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close
                              (var_w("v",32),
                               mb(mb(mu(ex(var_w("v",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),qTy),
                                     close(var_w("v",31),mu(cc[var_w("v",31),lw(1,1)],qTy))),
                                  close
                                    (var_w("v",32),
                                     call
                                       ("write'LR",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var_w("v",32),@{theory})))))))),
               close
                 (var_a HOLogic.unitT,
                  mb(ite(eq(var("targetInstrSet",@{typ InstrSet}),
                            lc("InstrSet_ARM","InstrSet",@{theory})),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close
                              (var_w("v",32),
                               mb(mb(mu(tp[var_w("v",32),ln 4],qTy),
                                     close
                                       (var("v",@{typ "32 word \<times> nat"}),
                                        mu(call
                                             ("Align",w32,var("v",@{typ "32 word \<times> nat"}),
                                              @{theory}),qTy))),
                                  close
                                    (var_w("v",32),mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy))))),
                         mb(const
                              ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                            close(var_w("v",32),mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy)))),
                     close
                       (var_w("targetAddress",32),
                        mb(call
                             ("SelectInstrSet",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              var("targetInstrSet",@{typ InstrSet}),@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("BranchWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var_w("targetAddress",32),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BranchLinkExchangeRegister",
   close
     (var_w("m",4),
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("target",32),
            mb(call
                 ("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                  @{theory}),
               close
                 (var("v",@{typ InstrSet}),
                  mb(mb(mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ARM","InstrSet",@{theory})),qTy),
                        close
                          (var_b"b",
                           ite(var_b"b",
                               mb(const
                                    ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     @{theory}),
                                  close
                                    (var_w("v",32),
                                     mb(mu(bop(Sub,var_w("v",32),lw(4,32)),qTy),
                                        close
                                          (var_w("next_instr_addr",32),
                                           call
                                             ("write'LR",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              var_w("next_instr_addr",32),@{theory}))))),
                               mb(const
                                    ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     @{theory}),
                                  close
                                    (var_w("v",32),
                                     mb(mu(bop(Sub,var_w("v",32),lw(2,32)),qTy),
                                        close
                                          (var_w("next_instr_addr",32),
                                           call
                                             ("write'LR",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              cc[ex(var_w("next_instr_addr",32),ln 31,ln 1,
                                                    (Word_Lib.mk_wordT 31)),lw(1,1)],@{theory})))))))),
                     close
                       (var_a HOLogic.unitT,
                        call
                          ("BXWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           var_w("target",32),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CompareBranch",
   close
     (tp[var_b"nonzero",var_w("n",4),var_w("imm32",32)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mu(eq(var_w("v",32),lw(0,32)),qTy),
                     close(var_b"v",mu(eq(var_b"nonzero",var_b"v"),qTy))),
                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",32),
                            mb(mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy),
                               close
                                 (var_w("v",32),
                                  call
                                    ("BranchWritePC",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var_w("v",32),@{theory}))))),
                      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TableBranchByte",
   close
     (tp[var_b"is_tbh",var_w("m",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(ite(var_b"is_tbh",
                       mb(call
                            ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                             @{theory}),
                          close
                            (var_w("v",32),
                             mb(mb(mb(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("m",4),@{theory}),
                                      close
                                        (var_w("v0",32),
                                         mb(mb(mu(tp[var_w("v0",32),ln 1],qTy),
                                               close
                                                 (var("v",@{typ "32 word \<times> nat"}),
                                                  call
                                                    ("LSL",
                                                     @{typ
                                                     "state \<Rightarrow> (32 word \<times> state)"},
                                                     var("v",@{typ "32 word \<times> nat"}),
                                                     @{theory}))),
                                            close
                                              (var_w("v0",32),
                                               mu(bop(Add,var_w("v",32),var_w("v0",32)),qTy))))),
                                   close(var_w("v",32),mu(tp[var_w("v",32),ln 2],qTy))),
                                close
                                  (var("v",@{typ "32 word \<times> nat"}),
                                   call
                                     ("MemU",@{typ "state \<Rightarrow> (16 word \<times> state)"},
                                      var("v",@{typ "32 word \<times> nat"}),@{theory}))))),
                       mb(call
                            ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                             @{theory}),
                          close
                            (var_w("v",32),
                             mb(mb(mb(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("m",4),@{theory}),
                                      close
                                        (var_w("v0",32),
                                         mu(bop(Add,var_w("v",32),var_w("v0",32)),qTy))),
                                   close(var_w("v",32),mu(tp[var_w("v",32),ln 1],qTy))),
                                close
                                  (var("v",@{typ "32 word \<times> nat"}),
                                   call
                                     ("MemU",@{typ "state \<Rightarrow> (16 word \<times> state)"},
                                      var("v",@{typ "32 word \<times> nat"}),@{theory})))))),
                   close
                     (var_w("halfwords",16),
                      mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",32),
                            mb(mu(bop(Add,var_w("v",32),
                                      bop(Mul,lw(2,32),mop(Cast w32,var_w("halfwords",16)))),qTy),
                               close
                                 (var_w("v",32),
                                  call
                                    ("BranchWritePC",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var_w("v",32),@{theory}))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CheckArray",
   close
     (tp[var_w("m",4),var_w("n",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(call
                    ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                     @{theory}),close(var_w("v0",32),mu(bop(Ule,var_w("v",32),var_w("v0",32)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",32),
                            mb(mb(mb(mu(ex(var_w("v",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),qTy),
                                     close(var_w("v",31),mu(cc[var_w("v",31),lw(1,1)],qTy))),
                                  close
                                    (var_w("v",32),
                                     call
                                       ("write'LR",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var_w("v",32),@{theory}))),
                               close
                                 (var_a HOLogic.unitT,
                                  mb(call
                                       ("write'ITSTATE",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},lw(0,8),
                                        @{theory}),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.CP14",@{typ CP14},var("s",qTy),@{theory}))),
                                           close
                                             (var("v",@{typ CP14}),
                                              mb(mb(mu(call
                                                         ("CP14.TEEHBR",w32,var("v",@{typ CP14}),
                                                          @{theory}),qTy),
                                                    close
                                                      (var_w("v",32),
                                                       mu(bop(Sub,var_w("v",32),lw(8,32)),qTy))),
                                                 close
                                                   (var_w("v",32),
                                                    call
                                                      ("BranchWritePC",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       var_w("v",32),@{theory}))))))))))),
                      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'HandlerBranchLink",
   close
     (tp[var_b"generate_link",var_w("handler_offset",32)],
      mb(ite(var_b"generate_link",
             mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                close
                  (var_w("v",32),
                   mb(mu(bop(Sub,var_w("v",32),lw(2,32)),qTy),
                      close
                        (var_w("next_instr_addr",32),
                         call
                           ("write'LR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            cc[ex(var_w("next_instr_addr",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),
                               lw(1,1)],@{theory}))))),mu(lu,qTy)),
         close
           (var_a HOLogic.unitT,
            mb(mr(close(var("s",qTy),call("state.CP14",@{typ CP14},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ CP14}),
                  mb(mb(mu(call("CP14.TEEHBR",w32,var("v",@{typ CP14}),@{theory}),qTy),
                        close
                          (var_w("v",32),mu(bop(Add,var_w("v",32),var_w("handler_offset",32)),qTy))),
                     close
                       (var_w("v",32),
                        call
                          ("BranchWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           var_w("v",32),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'HandlerBranchLinkParameter",
   close
     (tp[var_w("imm32",32),var_w("handler_offset",32)],
      mb(call
           ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
            tp[var_w("imm32",32),lw(8,4)],@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
               close
                 (var_w("v",32),
                  mb(mu(bop(Sub,var_w("v",32),lw(2,32)),qTy),
                     close
                       (var_w("next_instr_addr",32),
                        mb(call
                             ("write'LR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              cc[ex(var_w("next_instr_addr",32),ln 31,ln 1,(Word_Lib.mk_wordT 31)),
                                 lw(1,1)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CP14",@{typ CP14},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ CP14}),
                                    mb(mb(mu(call("CP14.TEEHBR",w32,var("v",@{typ CP14}),@{theory}),
                                             qTy),
                                          close
                                            (var_w("v",32),
                                             mu(bop(Add,var_w("v",32),var_w("handler_offset",32)),
                                                qTy))),
                                       close
                                         (var_w("v",32),
                                          call
                                            ("BranchWritePC",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var_w("v",32),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'HandlerBranchParameter",
   close
     (tp[var_w("imm32",32),var_w("handler_offset",32)],
      mb(call
           ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
            tp[var_w("imm32",32),lw(8,4)],@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(mr(close(var("s",qTy),call("state.CP14",@{typ CP14},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ CP14}),
                  mb(mb(mu(call("CP14.TEEHBR",w32,var("v",@{typ CP14}),@{theory}),qTy),
                        close
                          (var_w("v",32),mu(bop(Add,var_w("v",32),var_w("handler_offset",32)),qTy))),
                     close
                       (var_w("v",32),
                        call
                          ("BranchWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           var_w("v",32),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'EnterxLeavex",
   close
     (var_b"is_enterx",
      ite(var_b"is_enterx",
          mb(call
               ("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
             close
               (var_b"b",
                ite(var_b"b",
                    call
                      ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       lu,@{theory}),
                    mb(call
                         ("SelectInstrSet",@{typ "state \<Rightarrow> (unit \<times> state)"},
                          lc("InstrSet_ThumbEE","InstrSet",@{theory}),@{theory}),
                       close
                         (var_a HOLogic.unitT,
                          call
                            ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))),
          mb(call
               ("SelectInstrSet",@{typ "state \<Rightarrow> (unit \<times> state)"},
                lc("InstrSet_Thumb","InstrSet",@{theory}),@{theory}),
             close
               (var_a HOLogic.unitT,
                call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'IfThen",
   close
     (tp[var_w("firstcond",4),var_w("mask",4)],
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(tp[var("v",@{typ PSR}),cc[var_w("firstcond",4),var_w("mask",4)]],qTy),
                     close
                       (var("v",@{typ "PSR \<times> 8 word"}),
                        mu(rupd("PSR.IT",var("v",@{typ "PSR \<times> 8 word"}),@{theory}),qTy))),
                  close
                    (var("v",@{typ PSR}),
                     mw(close
                          (var("s",qTy),
                           rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mw(close
                             (var("s",qTy),
                              rupd
                                ("state.Encoding",
                                 tp[var("s",qTy),lc("Encoding_ARM","Encoding",@{theory})],@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CountLeadingZeroes",
   close
     (tp[var_w("d",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mb(mu(call("CountLeadingZeroBits",HOLogic.natT,var_w("v",32),@{theory}),qTy),
                        close(var_n"v",mu(mop(Cast w32,var_n"v"),qTy))),
                     close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                  close
                    (var("v",@{typ "32 word \<times> 4 word"}),
                     call
                       ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'MoveHalfword",
   close
     (tp[var_b"high",var_w("d",4),var_w("imm16",16)],
      mb(ite(var_b"high",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("d",4),@{theory}),
                close
                  (var_w("w",32),
                   call
                     ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      tp[bfi(ln 31,ln 16,var_w("imm16",16),var_w("w",32)),var_w("d",4)],@{theory}))),
             call
               ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                tp[mop(Cast w32,var_w("imm16",16)),var_w("d",4)],@{theory})),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DataProcessing",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("imm32",32),var_b"C"],
      mb(itb([(bop(Or,eq(var_w("opc",4),lw(13,4)),
                   bop(And,eq(var_w("opc",4),lw(15,4)),eq(var_w("n",4),lw(15,4)))),mu(lw(0,32),qTy)),
              (bop(And,bop(In,var_w("opc",4),sl[lw(4,4),lw(2,4)]),
                   bop(And,eq(var_w("n",4),lw(15,4)),mop(Not,var_b"setflags"))),
               mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                  close
                    (var_w("v",32),
                     mb(mu(tp[var_w("v",32),ln 4],qTy),
                        close
                          (var("v",@{typ "32 word \<times> nat"}),
                           mu(call("Align",w32,var("v",@{typ "32 word \<times> nat"}),@{theory}),qTy))))))],
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("rn",32),
            mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ PSR}),
                  mb(mb(mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                                 close(var_b"v",mu(tp[var_w("imm32",32),var_b"v"],qTy))),
                              close
                                (var("v",@{typ "32 word \<times> bool"}),
                                 mu(tp[var_w("rn",32),var("v",@{typ "32 word \<times> bool"})],qTy))),
                           close
                             (var("v",@{typ "32 word \<times> 32 word \<times> bool"}),
                              mu(tp[var_w("opc",4),
                                    var("v",@{typ "32 word \<times> 32 word \<times> bool"})],qTy))),
                        close
                          (var("v",@{typ "4 word \<times> 32 word \<times> 32 word \<times> bool"}),
                           mu(call
                                ("DataProcessingALU",@{typ "32 word \<times> bool \<times> bool"},
                                 var("v",
                                     @{typ "4 word \<times> 32 word \<times> 32 word \<times> bool"}),
                                 @{theory}),qTy))),
                     close
                       (var("x",@{typ "32 word \<times> bool \<times> bool"}),
                        cs(var("x",@{typ "32 word \<times> bool \<times> bool"}),
                           [(tp[var_w("result",32),var_b"carry",var_b"overflow"],
                             mb(ite(mop(Not,
                                        eq(ex(var_w("opc",4),ln 3,ln 2,(Word_Lib.mk_wordT 2)),
                                           lw(2,2))),
                                    call
                                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                       tp[var_w("result",32),var_w("d",4)],@{theory}),mu(lu,qTy)),
                                close
                                  (var_a HOLogic.unitT,
                                   mb(ite(var_b"setflags",
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                               bop(Bit,var_w("result",32),ln 31)],
                                                            qTy),
                                                         close
                                                           (var("v",@{typ "PSR \<times> bool"}),
                                                            mu(rupd
                                                                 ("PSR.N",
                                                                  var("v",@{typ "PSR \<times> bool"}),
                                                                  @{theory}),qTy))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.CPSR",
                                                                  tp[var("s",qTy),
                                                                     var("v",@{typ PSR})],@{theory}))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.CPSR",@{typ PSR},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                           eq(var_w("result",32),
                                                                              lw(0,32))],qTy),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        mu(rupd
                                                                             ("PSR.Z",
                                                                              var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var("v",@{typ PSR}),
                                                                     mw(close
                                                                          (var("s",qTy),
                                                                           rupd
                                                                             ("state.CPSR",
                                                                              tp[var("s",qTy),
                                                                                 var("v",@{typ PSR})],
                                                                              @{theory}))))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  ite(call
                                                                        ("ArithmeticOpcode",
                                                                         HOLogic.boolT,
                                                                         var_w("opc",4),@{theory}),
                                                                      mb(mr(close
                                                                              (var("s",qTy),
                                                                               call
                                                                                 ("state.CPSR",
                                                                                  @{typ PSR},
                                                                                  var("s",qTy),
                                                                                  @{theory}))),
                                                                         close
                                                                           (var("v",@{typ PSR}),
                                                                            mb(mb(mb(mu(tp[var("v",
                                                                                               @{typ PSR}),
                                                                                           var_b"carry"],
                                                                                        qTy),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ
                                                                                            "PSR \<times>
                                                                                             bool"}),
                                                                                        mu(rupd
                                                                                             ("PSR.C",
                                                                                              var("v",
                                                                                                  @{typ
                                                                                                  "PSR \<times>
                                                                                                   bool"}),
                                                                                              @{theory}),
                                                                                           qTy))),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ PSR}),
                                                                                     mw(close
                                                                                          (var("s",
                                                                                               qTy),
                                                                                           rupd
                                                                                             ("state.CPSR",
                                                                                              tp[var("s",
                                                                                                     qTy),
                                                                                                 var("v",
                                                                                                     @{typ PSR})],
                                                                                              @{theory}))))),
                                                                               close
                                                                                 (var_a
                                                                                    HOLogic.unitT,
                                                                                  mb(mr(close
                                                                                          (var("s",
                                                                                               qTy),
                                                                                           call
                                                                                             ("state.CPSR",
                                                                                              @{typ PSR},
                                                                                              var("s",
                                                                                                  qTy),
                                                                                              @{theory}))),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ PSR}),
                                                                                        mb(mb(mu(tp[var("v",
                                                                                                        @{typ PSR}),
                                                                                                    var_b"overflow"],
                                                                                                 qTy),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ
                                                                                                     "PSR \<times>
                                                                                                      bool"}),
                                                                                                 mu(rupd
                                                                                                      ("PSR.V",
                                                                                                       var("v",
                                                                                                           @{typ
                                                                                                           "PSR \<times>
                                                                                                            bool"}),
                                                                                                       @{theory}),
                                                                                                    qTy))),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ PSR}),
                                                                                              mw(close
                                                                                                   (var("s",
                                                                                                        qTy),
                                                                                                    rupd
                                                                                                      ("state.CPSR",
                                                                                                       tp[var("s",
                                                                                                              qTy),
                                                                                                          var("v",
                                                                                                              @{typ PSR})],
                                                                                                       @{theory}))))))))))),
                                                                      mb(mr(close
                                                                              (var("s",qTy),
                                                                               call
                                                                                 ("state.CPSR",
                                                                                  @{typ PSR},
                                                                                  var("s",qTy),
                                                                                  @{theory}))),
                                                                         close
                                                                           (var("v",@{typ PSR}),
                                                                            mb(mb(mu(tp[var("v",
                                                                                            @{typ PSR}),
                                                                                        var_b"C"],
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ
                                                                                         "PSR \<times>
                                                                                          bool"}),
                                                                                     mu(rupd
                                                                                          ("PSR.C",
                                                                                           var("v",
                                                                                               @{typ
                                                                                               "PSR \<times>
                                                                                                bool"}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var("v",@{typ PSR}),
                                                                                  mw(close
                                                                                       (var("s",qTy),
                                                                                        rupd
                                                                                          ("state.CPSR",
                                                                                           tp[var("s",
                                                                                                  qTy),
                                                                                              var("v",
                                                                                                  @{typ PSR})],
                                                                                           @{theory})))))))))))))))),
                                          mu(lu,qTy)),
                                      close
                                        (var_a HOLogic.unitT,
                                         call
                                           ("IncPC",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                            @{theory}))))))],@{context})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DataProcessingPC",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("n",4),var_w("imm32",32)],
      mb(itb([(bop(Or,eq(var_w("opc",4),lw(13,4)),
                   bop(And,eq(var_w("opc",4),lw(15,4)),eq(var_w("n",4),lw(15,4)))),mu(lw(0,32),qTy)),
              (bop(And,bop(In,var_w("opc",4),sl[lw(4,4),lw(2,4)]),
                   bop(And,eq(var_w("n",4),lw(15,4)),mop(Not,var_b"setflags"))),
               mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                  close
                    (var_w("v",32),
                     mb(mu(tp[var_w("v",32),ln 4],qTy),
                        close
                          (var("v",@{typ "32 word \<times> nat"}),
                           mu(call("Align",w32,var("v",@{typ "32 word \<times> nat"}),@{theory}),qTy))))))],
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("rn",32),
            mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
               close
                 (var("v",@{typ PSR}),
                  mb(mb(mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                                 close(var_b"v",mu(tp[var_w("imm32",32),var_b"v"],qTy))),
                              close
                                (var("v",@{typ "32 word \<times> bool"}),
                                 mu(tp[var_w("rn",32),var("v",@{typ "32 word \<times> bool"})],qTy))),
                           close
                             (var("v",@{typ "32 word \<times> 32 word \<times> bool"}),
                              mu(tp[var_w("opc",4),
                                    var("v",@{typ "32 word \<times> 32 word \<times> bool"})],qTy))),
                        close
                          (var("v",@{typ "4 word \<times> 32 word \<times> 32 word \<times> bool"}),
                           mu(call
                                ("DataProcessingALU",@{typ "32 word \<times> bool \<times> bool"},
                                 var("v",
                                     @{typ "4 word \<times> 32 word \<times> 32 word \<times> bool"}),
                                 @{theory}),qTy))),
                     close
                       (var("x",@{typ "32 word \<times> bool \<times> bool"}),
                        cs(var("x",@{typ "32 word \<times> bool \<times> bool"}),
                           [(tp[var_w("result",32),var_a HOLogic.boolT,var_a HOLogic.boolT],
                             ite(var_b"setflags",
                                 mb(call
                                      ("CurrentModeIsHyp",
                                       @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           call
                                             ("TakeUndefInstrException",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                              @{theory}),
                                           mb(call
                                                ("CurrentModeIsUserOrSystem",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     call
                                                       ("raise'exception",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        call
                                                          ("exception.UNPREDICTABLE",
                                                           @{typ exception},ls"DataProcessingPC",
                                                           @{theory}),@{theory}),
                                                     mb(const
                                                          ("SPSR",
                                                           @{typ
                                                           "state \<Rightarrow> (PSR \<times> state)"},
                                                           @{theory}),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(mu(call
                                                                         ("reg'PSR",w32,
                                                                          var("v",@{typ PSR}),
                                                                          @{theory}),qTy),
                                                                    close
                                                                      (var_w("v",32),
                                                                       mu(tp[var_w("v",32),lw(15,4),
                                                                             lt],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "32 word \<times>
                                                                         4 word \<times> bool"}),
                                                                    call
                                                                      ("CPSRWriteByInstr",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       var("v",
                                                                           @{typ
                                                                           "32 word \<times>
                                                                            4 word \<times> bool"}),
                                                                       @{theory}))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mb(mr(close
                                                                         (var("s",qTy),
                                                                          call
                                                                            ("state.CPSR",
                                                                             @{typ PSR},
                                                                             var("s",qTy),@{theory}))),
                                                                    close
                                                                      (var("v",@{typ PSR}),
                                                                       mb(mb(mb(mu(call
                                                                                     ("PSR.M",
                                                                                      (Word_Lib.mk_wordT 5),
                                                                                      var("v",
                                                                                          @{typ PSR}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_w("v",5),
                                                                                   mu(eq(var_w("v",5),
                                                                                         lw(26,5)),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    mb(call
                                                                                         ("CurrentInstrSet",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (InstrSet \<times>
                                                                                            state)"},
                                                                                          lu,
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ InstrSet}),
                                                                                          mu(eq(var("v",
                                                                                                    @{typ InstrSet}),
                                                                                                lc("InstrSet_ThumbEE",
                                                                                                   "InstrSet",
                                                                                                   @{theory})),
                                                                                             qTy))),
                                                                                    mu(lf,qTy)))),
                                                                          close
                                                                            (var_b"b",
                                                                             ite(var_b"b",
                                                                                 call
                                                                                   ("raise'exception",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (unit \<times>
                                                                                      state)"},
                                                                                    call
                                                                                      ("exception.UNPREDICTABLE",
                                                                                       @{typ exception},
                                                                                       ls
                                                                                        "DataProcessingPC",
                                                                                       @{theory}),
                                                                                    @{theory}),
                                                                                 call
                                                                                   ("BranchWritePC",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (unit \<times>
                                                                                      state)"},
                                                                                    var_w("result",32),
                                                                                    @{theory})))))))))))))))),
                                 call
                                   ("ALUWritePC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    var_w("result",32),@{theory})))],@{context})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Move",
   close
     (tp[var_b"setflags",var_b"negate",var_w("d",4),var_w("imm12",12)],
      let'
        (var_w("opc",4),cc[lw(3,2),mop(Cast w1,var_b"negate"),lw(1,1)],
         mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
            close
              (var("v",@{typ PSR}),
               mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                        close(var_b"v",mu(tp[var_w("imm12",12),var_b"v"],qTy))),
                     close
                       (var("v",@{typ "12 word \<times> bool"}),
                        call
                          ("ExpandImm_C",
                           @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                           var("v",@{typ "12 word \<times> bool"}),@{theory}))),
                  close
                    (var("x",@{typ "32 word \<times> bool"}),
                     cs(var("x",@{typ "32 word \<times> bool"}),
                        [(tp[var_w("imm32",32),var_b"carry"],
                          ite(eq(var_w("d",4),lw(15,4)),
                              call
                                ("DataProcessingPC",
                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[var_w("opc",4),var_b"setflags",lw(15,4),var_w("imm32",32)],
                                 @{theory}),
                              call
                                ("DataProcessing",
                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[var_w("opc",4),var_b"setflags",var_w("d",4),lw(15,4),
                                    var_w("imm32",32),var_b"carry"],@{theory})))],@{context}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TestCompareImmediate",
   close
     (tp[var_w("op",2),var_w("n",4),var_w("imm12",12)],
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                     close(var_b"v",mu(tp[var_w("imm12",12),var_b"v"],qTy))),
                  close
                    (var("v",@{typ "12 word \<times> bool"}),
                     call
                       ("ExpandImm_C",
                        @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                        var("v",@{typ "12 word \<times> bool"}),@{theory}))),
               close
                 (var("x",@{typ "32 word \<times> bool"}),
                  cs(var("x",@{typ "32 word \<times> bool"}),
                     [(tp[var_w("imm32",32),var_b"carry"],
                       call
                         ("DataProcessing",@{typ "state \<Rightarrow> (unit \<times> state)"},
                          tp[cc[lw(2,2),var_w("op",2)],lt,lx w4,var_w("n",4),var_w("imm32",32),
                             var_b"carry"],@{theory}))],@{context})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ArithLogicImmediate",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("imm12",12)],
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v",@{typ PSR}),@{theory}),qTy),
                     close(var_b"v",mu(tp[var_w("imm12",12),var_b"v"],qTy))),
                  close
                    (var("v",@{typ "12 word \<times> bool"}),
                     call
                       ("ExpandImm_C",
                        @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                        var("v",@{typ "12 word \<times> bool"}),@{theory}))),
               close
                 (var("x",@{typ "32 word \<times> bool"}),
                  cs(var("x",@{typ "32 word \<times> bool"}),
                     [(tp[var_w("imm32",32),var_b"carry"],
                       ite(eq(var_w("d",4),lw(15,4)),
                           call
                             ("DataProcessingPC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[var_w("opc",4),var_b"setflags",var_w("n",4),var_w("imm32",32)],
                              @{theory}),
                           call
                             ("DataProcessing",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),
                                 var_w("imm32",32),var_b"carry"],@{theory})))],@{context})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("doRegister",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),
         var("shift_t",@{typ SRType}),var_n"shift_n"],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v0",@{typ PSR}),
                        mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v0",@{typ PSR}),@{theory}),qTy),
                                 close(var_b"v",mu(tp[var_n"shift_n",var_b"v"],qTy))),
                              close
                                (var("v",@{typ "nat \<times> bool"}),
                                 mu(tp[var("shift_t",@{typ SRType}),
                                       var("v",@{typ "nat \<times> bool"})],qTy))),
                           close
                             (var("v0",@{typ "SRType \<times> nat \<times> bool"}),
                              mu(tp[var_w("v",32),
                                    var("v0",@{typ "SRType \<times> nat \<times> bool"})],qTy))))),
                  close
                    (var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                     call
                       ("Shift_C",
                        @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                        var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                        @{theory}))),
               close
                 (var("x",@{typ "32 word \<times> bool"}),
                  cs(var("x",@{typ "32 word \<times> bool"}),
                     [(tp[var_w("shifted",32),var_b"carry"],
                       ite(eq(var_w("d",4),lw(15,4)),
                           call
                             ("DataProcessingPC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[var_w("opc",4),var_b"setflags",var_w("n",4),var_w("shifted",32)],
                              @{theory}),
                           call
                             ("DataProcessing",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),
                                 var_w("shifted",32),var_b"carry"],@{theory})))],@{context})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'Register",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),
         var("shift_t",@{typ SRType}),var_n"shift_n"],
      call
        ("doRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),
            var("shift_t",@{typ SRType}),var_n"shift_n"],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'TestCompareRegister",
   close
     (tp[var_w("opc",2),var_w("n",4),var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
      call
        ("doRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[cc[lw(2,2),var_w("opc",2)],lt,lw(0,4),var_w("n",4),var_w("m",4),
            var("shift_t",@{typ SRType}),var_n"shift_n"],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ShiftImmediate",
   close
     (tp[var_b"negate",var_b"setflags",var_w("d",4),var_w("m",4),var("shift_t",@{typ SRType}),
         var_n"shift_n"],
      ite(var_b"negate",
          call
            ("doRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
             tp[lw(15,4),var_b"setflags",var_w("d",4),lw(15,4),var_w("m",4),
                var("shift_t",@{typ SRType}),var_n"shift_n"],@{theory}),
          call
            ("doRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
             tp[lw(13,4),var_b"setflags",var_w("d",4),lx w4,var_w("m",4),
                var("shift_t",@{typ SRType}),var_n"shift_n"],@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("doRegisterShiftedRegister",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),
         var("shift_t",@{typ SRType}),var_w("s",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("s",4),
                        @{theory}),
                     close
                       (var_w("v0",32),
                        mb(mb(mb(mb(mu(ex(var_w("v0",32),ln 7,ln 0,w8),qTy),
                                    close(var_w("v",8),mu(mop(Cast HOLogic.natT,var_w("v",8)),qTy))),
                                 close
                                   (var_n"v",
                                    mb(mr(close
                                            (var("s",qTy),
                                             call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                       close
                                         (var("v0",@{typ PSR}),
                                          mb(mu(call
                                                  ("PSR.C",HOLogic.boolT,var("v0",@{typ PSR}),
                                                   @{theory}),qTy),
                                             close(var_b"v0",mu(tp[var_n"v",var_b"v0"],qTy))))))),
                              close
                                (var("v",@{typ "nat \<times> bool"}),
                                 mu(tp[var("shift_t",@{typ SRType}),
                                       var("v",@{typ "nat \<times> bool"})],qTy))),
                           close
                             (var("v0",@{typ "SRType \<times> nat \<times> bool"}),
                              mu(tp[var_w("v",32),
                                    var("v0",@{typ "SRType \<times> nat \<times> bool"})],qTy))))),
                  close
                    (var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                     call
                       ("Shift_C",
                        @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                        var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                        @{theory}))),
               close
                 (var("x",@{typ "32 word \<times> bool"}),
                  cs(var("x",@{typ "32 word \<times> bool"}),
                     [(tp[var_w("shifted",32),var_b"carry"],
                       call
                         ("DataProcessing",@{typ "state \<Rightarrow> (unit \<times> state)"},
                          tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),
                             var_w("shifted",32),var_b"carry"],@{theory}))],@{context})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'RegisterShiftedRegister",
   close
     (tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),
         var("shift_t",@{typ SRType}),var_w("s",4)],
      call
        ("doRegisterShiftedRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("opc",4),var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),
            var("shift_t",@{typ SRType}),var_w("s",4)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ShiftRegister",
   close
     (tp[var_b"negate",var_b"setflags",var_w("d",4),var_w("n",4),var("shift_t",@{typ SRType}),
         var_w("m",4)],
      ite(var_b"negate",
          call
            ("doRegisterShiftedRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
             tp[lw(15,4),var_b"setflags",var_w("d",4),lw(15,4),var_w("n",4),
                var("shift_t",@{typ SRType}),var_w("m",4)],@{theory}),
          call
            ("doRegisterShiftedRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
             tp[lw(13,4),var_b"setflags",var_w("d",4),lx w4,var_w("n",4),
                var("shift_t",@{typ SRType}),var_w("m",4)],@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'AddSub",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("imm12",12)],
      call
        ("DataProcessing",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[ite(var_b"sub",lw(2,4),lw(4,4)),lf,var_w("d",4),var_w("n",4),
            mop(Cast w32,var_w("imm12",12)),lx HOLogic.boolT],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'SaturatingAddSubtract",
   close
     (tp[var_w("opc",2),var_w("d",4),var_w("m",4),var_w("n",4)],
      mn(lx w32,
         mn(lx HOLogic.boolT,
            mb(itb([(eq(var_w("opc",2),lw(0,2)),
                     mb(md(md(call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory}),w32),HOLogic.boolT),
                        close
                          (var_w("v",32),
                           mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),
                                          @{typ "bool \<times> 32 word \<times> state"}),
                                       close
                                         (var_i"v",
                                          mb(md(md(call
                                                     ("R",
                                                      @{typ
                                                      "state \<Rightarrow> (32 word \<times> state)"},
                                                      var_w("n",4),@{theory}),w32),HOLogic.boolT),
                                             close
                                               (var_w("v0",32),
                                                mb(mu(mop(Cast HOLogic.intT,var_w("v0",32)),
                                                      @{typ "bool \<times> 32 word \<times> state"}),
                                                   close
                                                     (var_i"v0",
                                                      mu(bop(Add,var_i"v",var_i"v0"),
                                                         @{typ
                                                         "bool \<times> 32 word \<times> state"}))))))),
                                    close
                                      (var_i"v",
                                       mu(tp[var_i"v",ln 32],
                                          @{typ "bool \<times> 32 word \<times> state"}))),
                                 close
                                   (var("v",@{typ "int \<times> nat"}),
                                    md(md(call
                                            ("SignedSatQ",
                                             @{typ
                                             "state \<Rightarrow>
                                              ((32 word \<times> bool) \<times> state)"},
                                             var("v",@{typ "int \<times> nat"}),@{theory}),w32),
                                       HOLogic.boolT))),
                              close
                                (var("x",@{typ "32 word \<times> bool"}),
                                 cs(var("x",@{typ "32 word \<times> bool"}),
                                    [(tp[var_w("r",32),var_b"s"],
                                      mb(mw(close
                                              (var("s",@{typ "bool \<times> 32 word \<times> state"}),
                                               tp[mop(Fst,
                                                      var("s",
                                                          @{typ
                                                          "bool \<times> 32 word \<times> state"})),
                                                  var_w("r",32),
                                                  mop(Snd,
                                                      mop(Snd,
                                                          var("s",
                                                              @{typ
                                                              "bool \<times> 32 word \<times> state"})))])),
                                         close
                                           (var_a HOLogic.unitT,
                                            mw(close
                                                 (var("s0",
                                                      @{typ "bool \<times> 32 word \<times> state"}),
                                                  tp[var_b"s",
                                                     mop(Snd,
                                                         var("s0",
                                                             @{typ
                                                             "bool \<times> 32 word \<times> state"}))])))))],
                                    @{context})))))),
                    (eq(var_w("opc",2),lw(1,2)),
                     mb(md(md(call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory}),w32),HOLogic.boolT),
                        close
                          (var_w("v",32),
                           mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),
                                          @{typ "bool \<times> 32 word \<times> state"}),
                                       close
                                         (var_i"v",
                                          mb(md(md(call
                                                     ("R",
                                                      @{typ
                                                      "state \<Rightarrow> (32 word \<times> state)"},
                                                      var_w("n",4),@{theory}),w32),HOLogic.boolT),
                                             close
                                               (var_w("v0",32),
                                                mb(mu(mop(Cast HOLogic.intT,var_w("v0",32)),
                                                      @{typ "bool \<times> 32 word \<times> state"}),
                                                   close
                                                     (var_i"v0",
                                                      mu(bop(Sub,var_i"v",var_i"v0"),
                                                         @{typ
                                                         "bool \<times> 32 word \<times> state"}))))))),
                                    close
                                      (var_i"v",
                                       mu(tp[var_i"v",ln 32],
                                          @{typ "bool \<times> 32 word \<times> state"}))),
                                 close
                                   (var("v",@{typ "int \<times> nat"}),
                                    md(md(call
                                            ("SignedSatQ",
                                             @{typ
                                             "state \<Rightarrow>
                                              ((32 word \<times> bool) \<times> state)"},
                                             var("v",@{typ "int \<times> nat"}),@{theory}),w32),
                                       HOLogic.boolT))),
                              close
                                (var("x",@{typ "32 word \<times> bool"}),
                                 cs(var("x",@{typ "32 word \<times> bool"}),
                                    [(tp[var_w("r",32),var_b"s"],
                                      mb(mw(close
                                              (var("s",@{typ "bool \<times> 32 word \<times> state"}),
                                               tp[mop(Fst,
                                                      var("s",
                                                          @{typ
                                                          "bool \<times> 32 word \<times> state"})),
                                                  var_w("r",32),
                                                  mop(Snd,
                                                      mop(Snd,
                                                          var("s",
                                                              @{typ
                                                              "bool \<times> 32 word \<times> state"})))])),
                                         close
                                           (var_a HOLogic.unitT,
                                            mw(close
                                                 (var("s0",
                                                      @{typ "bool \<times> 32 word \<times> state"}),
                                                  tp[var_b"s",
                                                     mop(Snd,
                                                         var("s0",
                                                             @{typ
                                                             "bool \<times> 32 word \<times> state"}))])))))],
                                    @{context})))))),
                    (eq(var_w("opc",2),lw(2,2)),
                     mb(md(md(call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("n",4),@{theory}),w32),HOLogic.boolT),
                        close
                          (var_w("v",32),
                           mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),
                                          @{typ "bool \<times> 32 word \<times> state"}),
                                       close
                                         (var_i"v",
                                          mu(bop(Mul,li 2,var_i"v"),
                                             @{typ "bool \<times> 32 word \<times> state"}))),
                                    close
                                      (var_i"v",
                                       mu(tp[var_i"v",ln 32],
                                          @{typ "bool \<times> 32 word \<times> state"}))),
                                 close
                                   (var("v",@{typ "int \<times> nat"}),
                                    md(md(call
                                            ("SignedSatQ",
                                             @{typ
                                             "state \<Rightarrow>
                                              ((32 word \<times> bool) \<times> state)"},
                                             var("v",@{typ "int \<times> nat"}),@{theory}),w32),
                                       HOLogic.boolT))),
                              close
                                (var("x",@{typ "32 word \<times> bool"}),
                                 cs(var("x",@{typ "32 word \<times> bool"}),
                                    [(tp[var_w("doubled",32),var_b"sat1"],
                                      mb(md(md(call
                                                 ("R",
                                                  @{typ
                                                  "state \<Rightarrow> (32 word \<times> state)"},
                                                  var_w("m",4),@{theory}),w32),HOLogic.boolT),
                                         close
                                           (var_w("v",32),
                                            mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),
                                                           @{typ
                                                           "bool \<times> 32 word \<times> state"}),
                                                        close
                                                          (var_i"v",
                                                           mu(bop(Add,var_i"v",
                                                                  mop(Cast HOLogic.intT,
                                                                      var_w("doubled",32))),
                                                              @{typ
                                                              "bool \<times> 32 word \<times> state"}))),
                                                     close
                                                       (var_i"v",
                                                        mu(tp[var_i"v",ln 32],
                                                           @{typ
                                                           "bool \<times> 32 word \<times> state"}))),
                                                  close
                                                    (var("v",@{typ "int \<times> nat"}),
                                                     md(md(call
                                                             ("SignedSatQ",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               ((32 word \<times> bool) \<times>
                                                                state)"},
                                                              var("v",@{typ "int \<times> nat"}),
                                                              @{theory}),w32),HOLogic.boolT))),
                                               close
                                                 (var("x",@{typ "32 word \<times> bool"}),
                                                  cs(var("x",@{typ "32 word \<times> bool"}),
                                                     [(tp[var_w("r",32),var_b"sat2"],
                                                       mb(mw(close
                                                               (var("s",
                                                                    @{typ
                                                                    "bool \<times>
                                                                     32 word \<times> state"}),
                                                                tp[mop(Fst,
                                                                       var("s",
                                                                           @{typ
                                                                           "bool \<times>
                                                                            32 word \<times> state"})),
                                                                   var_w("r",32),
                                                                   mop(Snd,
                                                                       mop(Snd,
                                                                           var("s",
                                                                               @{typ
                                                                               "bool \<times>
                                                                                32 word \<times>
                                                                                state"})))])),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mw(close
                                                                  (var("s",
                                                                       @{typ
                                                                       "bool \<times>
                                                                        32 word \<times> state"}),
                                                                   tp[bop(Or,var_b"sat1",var_b"sat2"),
                                                                      mop(Snd,
                                                                          var("s",
                                                                              @{typ
                                                                              "bool \<times>
                                                                               32 word \<times>
                                                                               state"}))])))))],
                                                     @{context}))))))],@{context})))))),
                    (eq(var_w("opc",2),lw(3,2)),
                     mb(md(md(call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("n",4),@{theory}),w32),HOLogic.boolT),
                        close
                          (var_w("v",32),
                           mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),
                                          @{typ "bool \<times> 32 word \<times> state"}),
                                       close
                                         (var_i"v",
                                          mu(bop(Mul,li 2,var_i"v"),
                                             @{typ "bool \<times> 32 word \<times> state"}))),
                                    close
                                      (var_i"v",
                                       mu(tp[var_i"v",ln 32],
                                          @{typ "bool \<times> 32 word \<times> state"}))),
                                 close
                                   (var("v",@{typ "int \<times> nat"}),
                                    md(md(call
                                            ("SignedSatQ",
                                             @{typ
                                             "state \<Rightarrow>
                                              ((32 word \<times> bool) \<times> state)"},
                                             var("v",@{typ "int \<times> nat"}),@{theory}),w32),
                                       HOLogic.boolT))),
                              close
                                (var("x",@{typ "32 word \<times> bool"}),
                                 cs(var("x",@{typ "32 word \<times> bool"}),
                                    [(tp[var_w("doubled",32),var_b"sat1"],
                                      mb(md(md(call
                                                 ("R",
                                                  @{typ
                                                  "state \<Rightarrow> (32 word \<times> state)"},
                                                  var_w("m",4),@{theory}),w32),HOLogic.boolT),
                                         close
                                           (var_w("v",32),
                                            mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),
                                                           @{typ
                                                           "bool \<times> 32 word \<times> state"}),
                                                        close
                                                          (var_i"v",
                                                           mu(bop(Sub,var_i"v",
                                                                  mop(Cast HOLogic.intT,
                                                                      var_w("doubled",32))),
                                                              @{typ
                                                              "bool \<times> 32 word \<times> state"}))),
                                                     close
                                                       (var_i"v",
                                                        mu(tp[var_i"v",ln 32],
                                                           @{typ
                                                           "bool \<times> 32 word \<times> state"}))),
                                                  close
                                                    (var("v",@{typ "int \<times> nat"}),
                                                     md(md(call
                                                             ("SignedSatQ",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               ((32 word \<times> bool) \<times>
                                                                state)"},
                                                              var("v",@{typ "int \<times> nat"}),
                                                              @{theory}),w32),HOLogic.boolT))),
                                               close
                                                 (var("x",@{typ "32 word \<times> bool"}),
                                                  cs(var("x",@{typ "32 word \<times> bool"}),
                                                     [(tp[var_w("r",32),var_b"sat2"],
                                                       mb(mw(close
                                                               (var("s",
                                                                    @{typ
                                                                    "bool \<times>
                                                                     32 word \<times> state"}),
                                                                tp[mop(Fst,
                                                                       var("s",
                                                                           @{typ
                                                                           "bool \<times>
                                                                            32 word \<times> state"})),
                                                                   var_w("r",32),
                                                                   mop(Snd,
                                                                       mop(Snd,
                                                                           var("s",
                                                                               @{typ
                                                                               "bool \<times>
                                                                                32 word \<times>
                                                                                state"})))])),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mw(close
                                                                  (var("s",
                                                                       @{typ
                                                                       "bool \<times>
                                                                        32 word \<times> state"}),
                                                                   tp[bop(Or,var_b"sat1",var_b"sat2"),
                                                                      mop(Snd,
                                                                          var("s",
                                                                              @{typ
                                                                              "bool \<times>
                                                                               32 word \<times>
                                                                               state"}))])))))],
                                                     @{context}))))))],@{context}))))))],
                   lx(@{typ
                      "(bool \<times> 32 word \<times> state) \<Rightarrow>
                       (unit \<times> bool \<times> 32 word \<times> state)"})),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close
                          (var("s",@{typ "bool \<times> 32 word \<times> state"}),
                           mop(Fst,mop(Snd,var("s",@{typ "bool \<times> 32 word \<times> state"}))))),
                     close
                       (var_w("v",32),
                        mb(mb(mu(tp[var_w("v",32),var_w("d",4)],
                                 @{typ "bool \<times> 32 word \<times> state"}),
                              close
                                (var("v",@{typ "32 word \<times> 4 word"}),
                                 md(md(call
                                         ("write'R",
                                          @{typ "state \<Rightarrow> (unit \<times> state)"},
                                          var("v",@{typ "32 word \<times> 4 word"}),@{theory}),w32),
                                    HOLogic.boolT))),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",@{typ "bool \<times> 32 word \<times> state"}),
                                       mop(Fst,
                                           var("s",@{typ "bool \<times> 32 word \<times> state"})))),
                                 close
                                   (var_b"v",
                                    mb(ite(var_b"v",
                                           mb(mr(close
                                                   (var("s",
                                                        @{typ
                                                        "bool \<times> 32 word \<times> state"}),
                                                    call
                                                      ("state.CPSR",@{typ PSR},
                                                       mop(Snd,
                                                           mop(Snd,
                                                               var("s",
                                                                   @{typ
                                                                   "bool \<times>
                                                                    32 word \<times> state"}))),
                                                       @{theory}))),
                                              close
                                                (var("v",@{typ PSR}),
                                                 mb(mb(mu(tp[var("v",@{typ PSR}),lt],
                                                          @{typ
                                                          "bool \<times> 32 word \<times> state"}),
                                                       close
                                                         (var("v",@{typ "PSR \<times> bool"}),
                                                          mu(rupd
                                                               ("PSR.Q",
                                                                var("v",@{typ "PSR \<times> bool"}),
                                                                @{theory}),
                                                             @{typ
                                                             "bool \<times> 32 word \<times> state"}))),
                                                    close
                                                      (var("v",@{typ PSR}),
                                                       mw(close
                                                            (var("s",
                                                                 @{typ
                                                                 "bool \<times>
                                                                  32 word \<times> state"}),
                                                             tp[mop(Fst,
                                                                    var("s",
                                                                        @{typ
                                                                        "bool \<times>
                                                                         32 word \<times> state"})),
                                                                let'
                                                                  (var("s",
                                                                       @{typ
                                                                       "32 word \<times> state"}),
                                                                   mop(Snd,
                                                                       var("s",
                                                                           @{typ
                                                                           "bool \<times>
                                                                            32 word \<times> state"})),
                                                                   tp[mop(Fst,
                                                                          var("s",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               state"})),
                                                                      rupd
                                                                        ("state.CPSR",
                                                                         tp[mop(Snd,
                                                                                var("s",
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     state"})),
                                                                            var("v",@{typ PSR})],
                                                                         @{theory})])])))))),
                                           mu(lu,@{typ "bool \<times> 32 word \<times> state"})),
                                       close
                                         (var_a HOLogic.unitT,
                                          md(md(call
                                                  ("IncPC",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},lu,
                                                   @{theory}),w32),HOLogic.boolT)))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Multiply32",
   close
     (tp[var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("rm",32),
                  let'
                    (var_w("result",32),bop(Mul,var_w("rn",32),var_w("rm",32)),
                     mb(call
                          ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[var_w("result",32),var_w("d",4)],@{theory}),
                        close
                          (var_a HOLogic.unitT,
                           mb(ite(var_b"setflags",
                                  mb(mr(close
                                          (var("s",qTy),
                                           call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                     close
                                       (var("v",@{typ PSR}),
                                        mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                       bop(Bit,var_w("result",32),ln 31)],qTy),
                                                 close
                                                   (var("v",@{typ "PSR \<times> bool"}),
                                                    mu(rupd
                                                         ("PSR.N",
                                                          var("v",@{typ "PSR \<times> bool"}),
                                                          @{theory}),qTy))),
                                              close
                                                (var("v",@{typ PSR}),
                                                 mw(close
                                                      (var("s",qTy),
                                                       rupd
                                                         ("state.CPSR",
                                                          tp[var("s",qTy),var("v",@{typ PSR})],
                                                          @{theory}))))),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(mr(close
                                                      (var("s",qTy),
                                                       call
                                                         ("state.CPSR",@{typ PSR},var("s",qTy),
                                                          @{theory}))),
                                                 close
                                                   (var("v",@{typ PSR}),
                                                    mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                   eq(var_w("result",32),lw(0,32))],
                                                                qTy),
                                                             close
                                                               (var("v",@{typ "PSR \<times> bool"}),
                                                                mu(rupd
                                                                     ("PSR.Z",
                                                                      var("v",
                                                                          @{typ "PSR \<times> bool"}),
                                                                      @{theory}),qTy))),
                                                          close
                                                            (var("v",@{typ PSR}),
                                                             mw(close
                                                                  (var("s",qTy),
                                                                   rupd
                                                                     ("state.CPSR",
                                                                      tp[var("s",qTy),
                                                                         var("v",@{typ PSR})],
                                                                      @{theory}))))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mb(call
                                                               ("ArchVersion",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (nat \<times> state)"},lu,@{theory}),
                                                             close
                                                               (var_n"v",
                                                                mb(mu(eq(var_n"v",ln 4),qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CPSR",
                                                                                      @{typ PSR},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ PSR}),
                                                                                mb(mb(mb(mr(close
                                                                                              (var("s",
                                                                                                   qTy),
                                                                                               call
                                                                                                 ("state.CPSR",
                                                                                                  @{typ PSR},
                                                                                                  var("s",
                                                                                                      qTy),
                                                                                                  @{theory}))),
                                                                                         close
                                                                                           (var("v0",
                                                                                                @{typ PSR}),
                                                                                            mb(mb(mb(mb(mu(call
                                                                                                             ("PSR.C",
                                                                                                              HOLogic.boolT,
                                                                                                              var("v0",
                                                                                                                  @{typ PSR}),
                                                                                                              @{theory}),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var_b"v",
                                                                                                           mu(tp[var_w("rm",32),
                                                                                                                 var_b"v"],
                                                                                                              qTy))),
                                                                                                     close
                                                                                                       (var("v",
                                                                                                            @{typ
                                                                                                            "32 word \<times>
                                                                                                             bool"}),
                                                                                                        mu(tp[var_w("rn",32),
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "32 word \<times>
                                                                                                                   bool"})],
                                                                                                           qTy))),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "32 word \<times>
                                                                                                          32 word \<times>
                                                                                                          bool"}),
                                                                                                     mu(apply
                                                                                                          (lx(@{typ
                                                                                                              "(32 word \<times>
                                                                                                                32 word \<times>
                                                                                                                bool) \<Rightarrow>
                                                                                                               bool"}),
                                                                                                           var("v",
                                                                                                               @{typ
                                                                                                               "32 word \<times>
                                                                                                                32 word \<times>
                                                                                                                bool"})),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_b"v0",
                                                                                                  mu(tp[var("v",
                                                                                                            @{typ PSR}),
                                                                                                        var_b"v0"],
                                                                                                     qTy))))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "PSR \<times>
                                                                                              bool"}),
                                                                                         mu(rupd
                                                                                              ("PSR.C",
                                                                                               var("v",
                                                                                                   @{typ
                                                                                                   "PSR \<times>
                                                                                                    bool"}),
                                                                                               @{theory}),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ PSR}),
                                                                                      mw(close
                                                                                           (var("s",
                                                                                                qTy),
                                                                                            rupd
                                                                                              ("state.CPSR",
                                                                                               tp[var("s",
                                                                                                      qTy),
                                                                                                  var("v",
                                                                                                      @{typ PSR})],
                                                                                               @{theory}))))))),
                                                                          mu(lu,qTy)))))))))))))),
                                  mu(lu,qTy)),
                              close
                                (var_a HOLogic.unitT,
                                 call
                                   ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                    @{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MultiplyAccumulate",
   close
     (tp[var_b"setflags",var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("rm",32),
                  mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("a",4),
                        @{theory}),
                     close
                       (var_w("ra",32),
                        let'
                          (var_w("result",32),
                           bop(Add,bop(Mul,var_w("rn",32),var_w("rm",32)),var_w("ra",32)),
                           mb(call
                                ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[var_w("result",32),var_w("d",4)],@{theory}),
                              close
                                (var_a HOLogic.unitT,
                                 mb(ite(var_b"setflags",
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                           close
                                             (var("v",@{typ PSR}),
                                              mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                             bop(Bit,var_w("result",32),ln 31)],qTy),
                                                       close
                                                         (var("v",@{typ "PSR \<times> bool"}),
                                                          mu(rupd
                                                               ("PSR.N",
                                                                var("v",@{typ "PSR \<times> bool"}),
                                                                @{theory}),qTy))),
                                                    close
                                                      (var("v",@{typ PSR}),
                                                       mw(close
                                                            (var("s",qTy),
                                                             rupd
                                                               ("state.CPSR",
                                                                tp[var("s",qTy),var("v",@{typ PSR})],
                                                                @{theory}))))),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    mb(mr(close
                                                            (var("s",qTy),
                                                             call
                                                               ("state.CPSR",@{typ PSR},
                                                                var("s",qTy),@{theory}))),
                                                       close
                                                         (var("v",@{typ PSR}),
                                                          mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                         eq(var_w("result",32),
                                                                            lw(0,32))],qTy),
                                                                   close
                                                                     (var("v",
                                                                          @{typ "PSR \<times> bool"}),
                                                                      mu(rupd
                                                                           ("PSR.Z",
                                                                            var("v",
                                                                                @{typ
                                                                                "PSR \<times> bool"}),
                                                                            @{theory}),qTy))),
                                                                close
                                                                  (var("v",@{typ PSR}),
                                                                   mw(close
                                                                        (var("s",qTy),
                                                                         rupd
                                                                           ("state.CPSR",
                                                                            tp[var("s",qTy),
                                                                               var("v",@{typ PSR})],
                                                                            @{theory}))))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mb(call
                                                                     ("ArchVersion",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (nat \<times> state)"},lu,
                                                                      @{theory}),
                                                                   close
                                                                     (var_n"v",
                                                                      mb(mu(eq(var_n"v",ln 4),qTy),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                mb(mr(close
                                                                                        (var("s",qTy),
                                                                                         call
                                                                                           ("state.CPSR",
                                                                                            @{typ PSR},
                                                                                            var("s",
                                                                                                qTy),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ PSR}),
                                                                                      mb(mb(mb(mr(close
                                                                                                    (var("s",
                                                                                                         qTy),
                                                                                                     call
                                                                                                       ("state.CPSR",
                                                                                                        @{typ PSR},
                                                                                                        var("s",
                                                                                                            qTy),
                                                                                                        @{theory}))),
                                                                                               close
                                                                                                 (var("v0",
                                                                                                      @{typ PSR}),
                                                                                                  mb(mb(mb(mb(mb(mu(call
                                                                                                                      ("PSR.C",
                                                                                                                       HOLogic.boolT,
                                                                                                                       var("v0",
                                                                                                                           @{typ PSR}),
                                                                                                                       @{theory}),
                                                                                                                    qTy),
                                                                                                                 close
                                                                                                                   (var_b"v",
                                                                                                                    mu(tp[var_w("ra",32),
                                                                                                                          var_b"v"],
                                                                                                                       qTy))),
                                                                                                              close
                                                                                                                (var("v",
                                                                                                                     @{typ
                                                                                                                     "32 word \<times>
                                                                                                                      bool"}),
                                                                                                                 mu(tp[var_w("rm",32),
                                                                                                                       var("v",
                                                                                                                           @{typ
                                                                                                                           "32 word \<times>
                                                                                                                            bool"})],
                                                                                                                    qTy))),
                                                                                                           close
                                                                                                             (var("v",
                                                                                                                  @{typ
                                                                                                                  "32 word \<times>
                                                                                                                   32 word \<times>
                                                                                                                   bool"}),
                                                                                                              mu(tp[var_w("rn",32),
                                                                                                                    var("v",
                                                                                                                        @{typ
                                                                                                                        "32 word \<times>
                                                                                                                         32 word \<times>
                                                                                                                         bool"})],
                                                                                                                 qTy))),
                                                                                                        close
                                                                                                          (var("v",
                                                                                                               @{typ
                                                                                                               "32 word \<times>
                                                                                                                32 word \<times>
                                                                                                                32 word \<times>
                                                                                                                bool"}),
                                                                                                           mu(apply
                                                                                                                (lx(@{typ
                                                                                                                    "(32 word \<times>
                                                                                                                      32 word \<times>
                                                                                                                      32 word \<times>
                                                                                                                      bool) \<Rightarrow>
                                                                                                                     bool"}),
                                                                                                                 var("v",
                                                                                                                     @{typ
                                                                                                                     "32 word \<times>
                                                                                                                      32 word \<times>
                                                                                                                      32 word \<times>
                                                                                                                      bool"})),
                                                                                                              qTy))),
                                                                                                     close
                                                                                                       (var_b"v0",
                                                                                                        mu(tp[var("v",
                                                                                                                  @{typ PSR}),
                                                                                                              var_b"v0"],
                                                                                                           qTy))))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "PSR \<times>
                                                                                                    bool"}),
                                                                                               mu(rupd
                                                                                                    ("PSR.C",
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "PSR \<times>
                                                                                                          bool"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ PSR}),
                                                                                            mw(close
                                                                                                 (var("s",
                                                                                                      qTy),
                                                                                                  rupd
                                                                                                    ("state.CPSR",
                                                                                                     tp[var("s",
                                                                                                            qTy),
                                                                                                        var("v",
                                                                                                            @{typ PSR})],
                                                                                                     @{theory}))))))),
                                                                                mu(lu,qTy)))))))))))))),
                                        mu(lu,qTy)),
                                    close
                                      (var_a HOLogic.unitT,
                                       call
                                         ("IncPC",
                                          @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                          @{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MultiplyLong",
   close
     (tp[var_b"accumulate",var_b"signed",var_b"setflags",var_w("dhi",4),var_w("dlo",4),var_w("n",4),
         var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("rm",32),
                  mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("dhi",4),
                        @{theory}),
                     close
                       (var_w("rdhi",32),
                        mb(call
                             ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var_w("dlo",4),@{theory}),
                           close
                             (var_w("rdlo",32),
                              let'
                                (var_w("result",64),
                                 bop(Add,
                                     ite(var_b"signed",
                                         bop(Mul,mop(SE w64,var_w("rn",32)),
                                             mop(SE w64,var_w("rm",32))),
                                         bop(Mul,mop(Cast w64,var_w("rn",32)),
                                             mop(Cast w64,var_w("rm",32)))),
                                     ite(var_b"accumulate",cc[var_w("rdhi",32),var_w("rdlo",32)],
                                         lw(0,64))),
                                 mb(call
                                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                       tp[ex(var_w("result",64),ln 63,ln 32,w32),var_w("dhi",4)],
                                       @{theory}),
                                    close
                                      (var_a HOLogic.unitT,
                                       mb(call
                                            ("write'R",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[ex(var_w("result",64),ln 31,ln 0,w32),var_w("dlo",4)],
                                             @{theory}),
                                          close
                                            (var_a HOLogic.unitT,
                                             mb(ite(var_b"setflags",
                                                    mb(mr(close
                                                            (var("s",qTy),
                                                             call
                                                               ("state.CPSR",@{typ PSR},
                                                                var("s",qTy),@{theory}))),
                                                       close
                                                         (var("v",@{typ PSR}),
                                                          mb(mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                         bop(Bit,var_w("result",64),
                                                                             ln 63)],qTy),
                                                                   close
                                                                     (var("v",
                                                                          @{typ "PSR \<times> bool"}),
                                                                      mu(rupd
                                                                           ("PSR.N",
                                                                            var("v",
                                                                                @{typ
                                                                                "PSR \<times> bool"}),
                                                                            @{theory}),qTy))),
                                                                close
                                                                  (var("v",@{typ PSR}),
                                                                   mw(close
                                                                        (var("s",qTy),
                                                                         rupd
                                                                           ("state.CPSR",
                                                                            tp[var("s",qTy),
                                                                               var("v",@{typ PSR})],
                                                                            @{theory}))))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mb(mr(close
                                                                        (var("s",qTy),
                                                                         call
                                                                           ("state.CPSR",@{typ PSR},
                                                                            var("s",qTy),@{theory}))),
                                                                   close
                                                                     (var("v",@{typ PSR}),
                                                                      mb(mb(mb(mu(tp[var("v",
                                                                                         @{typ PSR}),
                                                                                     eq(var_w("result",64),
                                                                                        lw(0,64))],
                                                                                  qTy),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ
                                                                                      "PSR \<times>
                                                                                       bool"}),
                                                                                  mu(rupd
                                                                                       ("PSR.Z",
                                                                                        var("v",
                                                                                            @{typ
                                                                                            "PSR \<times>
                                                                                             bool"}),
                                                                                        @{theory}),
                                                                                     qTy))),
                                                                            close
                                                                              (var("v",@{typ PSR}),
                                                                               mw(close
                                                                                    (var("s",qTy),
                                                                                     rupd
                                                                                       ("state.CPSR",
                                                                                        tp[var("s",
                                                                                               qTy),
                                                                                           var("v",
                                                                                               @{typ PSR})],
                                                                                        @{theory}))))),
                                                                         close
                                                                           (var_a HOLogic.unitT,
                                                                            mb(call
                                                                                 ("ArchVersion",
                                                                                  @{typ
                                                                                  "state \<Rightarrow>
                                                                                   (nat \<times>
                                                                                    state)"},lu,
                                                                                  @{theory}),
                                                                               close
                                                                                 (var_n"v",
                                                                                  mb(mu(eq(var_n"v",
                                                                                           ln 4),qTy),
                                                                                     close
                                                                                       (var_b"b",
                                                                                        ite(var_b"b",
                                                                                            mb(mr(close
                                                                                                    (var("s",
                                                                                                         qTy),
                                                                                                     call
                                                                                                       ("state.CPSR",
                                                                                                        @{typ PSR},
                                                                                                        var("s",
                                                                                                            qTy),
                                                                                                        @{theory}))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ PSR}),
                                                                                                  mb(mb(mb(mb(mr(close
                                                                                                                   (var("s",
                                                                                                                        qTy),
                                                                                                                    call
                                                                                                                      ("state.CPSR",
                                                                                                                       @{typ PSR},
                                                                                                                       var("s",
                                                                                                                           qTy),
                                                                                                                       @{theory}))),
                                                                                                              close
                                                                                                                (var("v0",
                                                                                                                     @{typ PSR}),
                                                                                                                 mb(mb(mb(mb(mb(mb(mu(call
                                                                                                                                        ("PSR.C",
                                                                                                                                         HOLogic.boolT,
                                                                                                                                         var("v0",
                                                                                                                                             @{typ PSR}),
                                                                                                                                         @{theory}),
                                                                                                                                      qTy),
                                                                                                                                   close
                                                                                                                                     (var_b"v",
                                                                                                                                      mu(tp[var_w("rdlo",32),
                                                                                                                                            var_b"v"],
                                                                                                                                         qTy))),
                                                                                                                                close
                                                                                                                                  (var("v",
                                                                                                                                       @{typ
                                                                                                                                       "32 word \<times>
                                                                                                                                        bool"}),
                                                                                                                                   mu(tp[var_w("rdhi",32),
                                                                                                                                         var("v",
                                                                                                                                             @{typ
                                                                                                                                             "32 word \<times>
                                                                                                                                              bool"})],
                                                                                                                                      qTy))),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ
                                                                                                                                    "32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     bool"}),
                                                                                                                                mu(tp[var_w("rm",32),
                                                                                                                                      var("v",
                                                                                                                                          @{typ
                                                                                                                                          "32 word \<times>
                                                                                                                                           32 word \<times>
                                                                                                                                           bool"})],
                                                                                                                                   qTy))),
                                                                                                                          close
                                                                                                                            (var("v",
                                                                                                                                 @{typ
                                                                                                                                 "32 word \<times>
                                                                                                                                  32 word \<times>
                                                                                                                                  32 word \<times>
                                                                                                                                  bool"}),
                                                                                                                             mu(tp[var_w("rn",32),
                                                                                                                                   var("v",
                                                                                                                                       @{typ
                                                                                                                                       "32 word \<times>
                                                                                                                                        32 word \<times>
                                                                                                                                        32 word \<times>
                                                                                                                                        bool"})],
                                                                                                                                qTy))),
                                                                                                                       close
                                                                                                                         (var("v",
                                                                                                                              @{typ
                                                                                                                              "32 word \<times>
                                                                                                                               32 word \<times>
                                                                                                                               32 word \<times>
                                                                                                                               32 word \<times>
                                                                                                                               bool"}),
                                                                                                                          mu(apply
                                                                                                                               (lx(@{typ
                                                                                                                                   "(32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     bool) \<Rightarrow>
                                                                                                                                    bool"}),
                                                                                                                                var("v",
                                                                                                                                    @{typ
                                                                                                                                    "32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     32 word \<times>
                                                                                                                                     bool"})),
                                                                                                                             qTy))),
                                                                                                                    close
                                                                                                                      (var_b"v0",
                                                                                                                       mu(tp[var("v",
                                                                                                                                 @{typ PSR}),
                                                                                                                             var_b"v0"],
                                                                                                                          qTy))))),
                                                                                                           close
                                                                                                             (var("v",
                                                                                                                  @{typ
                                                                                                                  "PSR \<times>
                                                                                                                   bool"}),
                                                                                                              mu(rupd
                                                                                                                   ("PSR.C",
                                                                                                                    var("v",
                                                                                                                        @{typ
                                                                                                                        "PSR \<times>
                                                                                                                         bool"}),
                                                                                                                    @{theory}),
                                                                                                                 qTy))),
                                                                                                        close
                                                                                                          (var("v",
                                                                                                               @{typ PSR}),
                                                                                                           mw(close
                                                                                                                (var("s",
                                                                                                                     qTy),
                                                                                                                 rupd
                                                                                                                   ("state.CPSR",
                                                                                                                    tp[var("s",
                                                                                                                           qTy),
                                                                                                                       var("v",
                                                                                                                           @{typ PSR})],
                                                                                                                    @{theory}))))),
                                                                                                     close
                                                                                                       (var_a
                                                                                                          HOLogic.unitT,
                                                                                                        mb(mr(close
                                                                                                                (var("s",
                                                                                                                     qTy),
                                                                                                                 call
                                                                                                                   ("state.CPSR",
                                                                                                                    @{typ PSR},
                                                                                                                    var("s",
                                                                                                                        qTy),
                                                                                                                    @{theory}))),
                                                                                                           close
                                                                                                             (var("v",
                                                                                                                  @{typ PSR}),
                                                                                                              mb(mb(mb(mr(close
                                                                                                                            (var("s",
                                                                                                                                 qTy),
                                                                                                                             call
                                                                                                                               ("state.CPSR",
                                                                                                                                @{typ PSR},
                                                                                                                                var("s",
                                                                                                                                    qTy),
                                                                                                                                @{theory}))),
                                                                                                                       close
                                                                                                                         (var("v0",
                                                                                                                              @{typ PSR}),
                                                                                                                          mb(mb(mb(mb(mb(mb(mu(call
                                                                                                                                                 ("PSR.V",
                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                  var("v0",
                                                                                                                                                      @{typ PSR}),
                                                                                                                                                  @{theory}),
                                                                                                                                               qTy),
                                                                                                                                            close
                                                                                                                                              (var_b"v",
                                                                                                                                               mu(tp[var_w("rdlo",32),
                                                                                                                                                     var_b"v"],
                                                                                                                                                  qTy))),
                                                                                                                                         close
                                                                                                                                           (var("v",
                                                                                                                                                @{typ
                                                                                                                                                "32 word \<times>
                                                                                                                                                 bool"}),
                                                                                                                                            mu(tp[var_w("rdhi",32),
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ
                                                                                                                                                      "32 word \<times>
                                                                                                                                                       bool"})],
                                                                                                                                               qTy))),
                                                                                                                                      close
                                                                                                                                        (var("v",
                                                                                                                                             @{typ
                                                                                                                                             "32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              bool"}),
                                                                                                                                         mu(tp[var_w("rm",32),
                                                                                                                                               var("v",
                                                                                                                                                   @{typ
                                                                                                                                                   "32 word \<times>
                                                                                                                                                    32 word \<times>
                                                                                                                                                    bool"})],
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ
                                                                                                                                          "32 word \<times>
                                                                                                                                           32 word \<times>
                                                                                                                                           32 word \<times>
                                                                                                                                           bool"}),
                                                                                                                                      mu(tp[var_w("rn",32),
                                                                                                                                            var("v",
                                                                                                                                                @{typ
                                                                                                                                                "32 word \<times>
                                                                                                                                                 32 word \<times>
                                                                                                                                                 32 word \<times>
                                                                                                                                                 bool"})],
                                                                                                                                         qTy))),
                                                                                                                                close
                                                                                                                                  (var("v",
                                                                                                                                       @{typ
                                                                                                                                       "32 word \<times>
                                                                                                                                        32 word \<times>
                                                                                                                                        32 word \<times>
                                                                                                                                        32 word \<times>
                                                                                                                                        bool"}),
                                                                                                                                   mu(apply
                                                                                                                                        (lx(@{typ
                                                                                                                                            "(32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              bool) \<Rightarrow>
                                                                                                                                             bool"}),
                                                                                                                                         var("v",
                                                                                                                                             @{typ
                                                                                                                                             "32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              32 word \<times>
                                                                                                                                              bool"})),
                                                                                                                                      qTy))),
                                                                                                                             close
                                                                                                                               (var_b"v0",
                                                                                                                                mu(tp[var("v",
                                                                                                                                          @{typ PSR}),
                                                                                                                                      var_b"v0"],
                                                                                                                                   qTy))))),
                                                                                                                    close
                                                                                                                      (var("v",
                                                                                                                           @{typ
                                                                                                                           "PSR \<times>
                                                                                                                            bool"}),
                                                                                                                       mu(rupd
                                                                                                                            ("PSR.V",
                                                                                                                             var("v",
                                                                                                                                 @{typ
                                                                                                                                 "PSR \<times>
                                                                                                                                  bool"}),
                                                                                                                             @{theory}),
                                                                                                                          qTy))),
                                                                                                                 close
                                                                                                                   (var("v",
                                                                                                                        @{typ PSR}),
                                                                                                                    mw(close
                                                                                                                         (var("s",
                                                                                                                              qTy),
                                                                                                                          rupd
                                                                                                                            ("state.CPSR",
                                                                                                                             tp[var("s",
                                                                                                                                    qTy),
                                                                                                                                var("v",
                                                                                                                                    @{typ PSR})],
                                                                                                                             @{theory}))))))))))),
                                                                                            mu(lu,
                                                                                               qTy)))))))))))))),
                                                    mu(lu,qTy)),
                                                close
                                                  (var_a HOLogic.unitT,
                                                   call
                                                     ("IncPC",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      lu,@{theory}))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MultiplyAccumulateAccumulate",
   close
     (tp[var_w("dhi",4),var_w("dlo",4),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mb(mu(mop(Cast w64,var_w("v",32)),qTy),
                        close
                          (var_w("v",64),
                           mb(call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory}),
                              close
                                (var_w("v0",32),
                                 mb(mu(mop(Cast w64,var_w("v0",32)),qTy),
                                    close
                                      (var_w("v0",64),mu(bop(Mul,var_w("v",64),var_w("v0",64)),qTy))))))),
                     close
                       (var_w("v",64),
                        mb(call
                             ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var_w("dhi",4),@{theory}),
                           close
                             (var_w("v0",32),
                              mb(mu(mop(Cast w64,var_w("v0",32)),qTy),
                                 close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
                  close
                    (var_w("v",64),
                     mb(call
                          ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("dlo",4),
                           @{theory}),
                        close
                          (var_w("v0",32),
                           mb(mu(mop(Cast w64,var_w("v0",32)),qTy),
                              close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
               close
                 (var_w("result",64),
                  mb(call
                       ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        tp[ex(var_w("result",64),ln 63,ln 32,w32),var_w("dhi",4)],@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[ex(var_w("result",64),ln 31,ln 0,w32),var_w("dlo",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MultiplySubtract",
   close
     (tp[var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("a",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mb(call
                          ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                           @{theory}),
                        close
                          (var_w("v0",32),
                           mb(mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("n",4),@{theory}),
                                 close
                                   (var_w("v1",32),mu(bop(Mul,var_w("v0",32),var_w("v1",32)),qTy))),
                              close(var_w("v0",32),mu(bop(Sub,var_w("v",32),var_w("v0",32)),qTy))))),
                     close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                  close
                    (var("v",@{typ "32 word \<times> 4 word"}),
                     call
                       ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Signed16Multiply32Accumulate",
   close
     (tp[var_b"m_high",var_b"n_high",var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(ite(var_b"n_high",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
         close
           (var_w("operand1",16),
            mb(ite(var_b"m_high",
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
               close
                 (var_w("operand2",16),
                  mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("a",4),
                        @{theory}),
                     close
                       (var_w("v",32),
                        mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),qTy),
                              close
                                (var_i"v",
                                 mu(bop(Add,
                                        bop(Mul,mop(Cast HOLogic.intT,var_w("operand1",16)),
                                            mop(Cast HOLogic.intT,var_w("operand2",16))),var_i"v"),
                                    qTy))),
                           close
                             (var_i"result",
                              let'
                                (var_w("result32",32),mop(Cast w32,var_i"result"),
                                 mb(call
                                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                       tp[var_w("result32",32),var_w("d",4)],@{theory}),
                                    close
                                      (var_a HOLogic.unitT,
                                       mb(ite(mop(Not,
                                                  eq(var_i"result",
                                                     mop(Cast HOLogic.intT,var_w("result32",32)))),
                                              mb(mr(close
                                                      (var("s",qTy),
                                                       call
                                                         ("state.CPSR",@{typ PSR},var("s",qTy),
                                                          @{theory}))),
                                                 close
                                                   (var("v",@{typ PSR}),
                                                    mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                          close
                                                            (var("v",@{typ "PSR \<times> bool"}),
                                                             mu(rupd
                                                                  ("PSR.Q",
                                                                   var("v",
                                                                       @{typ "PSR \<times> bool"}),
                                                                   @{theory}),qTy))),
                                                       close
                                                         (var("v",@{typ PSR}),
                                                          mw(close
                                                               (var("s",qTy),
                                                                rupd
                                                                  ("state.CPSR",
                                                                   tp[var("s",qTy),
                                                                      var("v",@{typ PSR})],@{theory}))))))),
                                              mu(lu,qTy)),
                                          close
                                            (var_a HOLogic.unitT,
                                             call
                                               ("IncPC",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                lu,@{theory}))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Signed16Multiply32Result",
   close
     (tp[var_b"m_high",var_b"n_high",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(ite(var_b"n_high",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
         close
           (var_w("operand1",16),
            mb(ite(var_b"m_high",
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
               close
                 (var_w("operand2",16),
                  mb(call
                       ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        tp[mop(Cast w32,
                               bop(Mul,mop(Cast HOLogic.intT,var_w("operand1",16)),
                                   mop(Cast HOLogic.intT,var_w("operand2",16)))),var_w("d",4)],
                        @{theory}),
                     close
                       (var_a HOLogic.unitT,
                        call
                          ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Signed16x32Multiply32Accumulate",
   close
     (tp[var_b"m_high",var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(ite(var_b"m_high",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
         close
           (var_w("operand2",16),
            let'
              (var_i"sh16",bop(Exp,li 2,ln 16),
               mb(call
                    ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                     @{theory}),
                  close
                    (var_w("v",32),
                     mb(mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),qTy),
                                 close
                                   (var_i"v",
                                    mu(bop(Mul,var_i"v",mop(Cast HOLogic.intT,var_w("operand2",16))),
                                       qTy))),
                              close
                                (var_i"v",
                                 mb(call
                                      ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                       var_w("a",4),@{theory}),
                                    close
                                      (var_w("v0",32),
                                       mb(mb(mu(mop(Cast HOLogic.intT,var_w("v0",32)),qTy),
                                             close(var_i"v",mu(bop(Mul,var_i"v",var_i"sh16"),qTy))),
                                          close(var_i"v0",mu(bop(Add,var_i"v",var_i"v0"),qTy))))))),
                           close(var_i"v",mu(bop(Div,var_i"v",var_i"sh16"),qTy))),
                        close
                          (var_i"result",
                           let'
                             (var_w("result32",32),mop(Cast w32,var_i"result"),
                              mb(call
                                   ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    tp[var_w("result32",32),var_w("d",4)],@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(ite(mop(Not,
                                               eq(var_i"result",
                                                  mop(Cast HOLogic.intT,var_w("result32",32)))),
                                           mb(mr(close
                                                   (var("s",qTy),
                                                    call
                                                      ("state.CPSR",@{typ PSR},var("s",qTy),
                                                       @{theory}))),
                                              close
                                                (var("v",@{typ PSR}),
                                                 mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                       close
                                                         (var("v",@{typ "PSR \<times> bool"}),
                                                          mu(rupd
                                                               ("PSR.Q",
                                                                var("v",@{typ "PSR \<times> bool"}),
                                                                @{theory}),qTy))),
                                                    close
                                                      (var("v",@{typ PSR}),
                                                       mw(close
                                                            (var("s",qTy),
                                                             rupd
                                                               ("state.CPSR",
                                                                tp[var("s",qTy),var("v",@{typ PSR})],
                                                                @{theory}))))))),mu(lu,qTy)),
                                       close
                                         (var_a HOLogic.unitT,
                                          call
                                            ("IncPC",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                             @{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Signed16x32Multiply32Result",
   close
     (tp[var_b"m_high",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(ite(var_b"m_high",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
         close
           (var_w("operand2",16),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
               close
                 (var_w("v",32),
                  mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),qTy),
                           close
                             (var_i"v",
                              mu(bop(Mul,var_i"v",mop(Cast HOLogic.intT,var_w("operand2",16))),qTy))),
                        close(var_i"v",mu(bop(Div,var_i"v",bop(Exp,li 2,ln 16)),qTy))),
                     close
                       (var_i"result",
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[mop(Cast w32,var_i"result"),var_w("d",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Signed16Multiply64Accumulate",
   close
     (tp[var_b"m_high",var_b"n_high",var_w("dhi",4),var_w("dlo",4),var_w("n",4),var_w("m",4)],
      mb(ite(var_b"n_high",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
         close
           (var_w("operand1",16),
            mb(ite(var_b"m_high",
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
               close
                 (var_w("operand2",16),
                  mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("dhi",4),
                        @{theory}),
                     close
                       (var_w("v",32),
                        mb(mb(mb(mb(call
                                      ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                       var_w("dlo",4),@{theory}),
                                    close(var_w("v0",32),mu(cc[var_w("v",32),var_w("v0",32)],qTy))),
                                 close(var_w("v",64),mu(mop(Cast HOLogic.intT,var_w("v",64)),qTy))),
                              close
                                (var_i"v",
                                 mu(bop(Add,
                                        bop(Mul,mop(Cast HOLogic.intT,var_w("operand1",16)),
                                            mop(Cast HOLogic.intT,var_w("operand2",16))),var_i"v"),
                                    qTy))),
                           close
                             (var_i"result",
                              let'
                                (var_w("result64",64),mop(Cast w64,var_i"result"),
                                 mb(call
                                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                       tp[ex(var_w("result64",64),ln 63,ln 32,w32),var_w("dhi",4)],
                                       @{theory}),
                                    close
                                      (var_a HOLogic.unitT,
                                       mb(call
                                            ("write'R",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[ex(var_w("result64",64),ln 31,ln 0,w32),
                                                var_w("dlo",4)],@{theory}),
                                          close
                                            (var_a HOLogic.unitT,
                                             call
                                               ("IncPC",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                lu,@{theory}))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedMultiplyDual",
   close
     (tp[var_b"sub",var_b"m_swap",var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(ite(var_b"m_swap",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
                close
                  (var_w("v",32),
                   mb(mu(tp[var_w("v",32),ln 16],qTy),
                      close
                        (var("v",@{typ "32 word \<times> nat"}),
                         call
                           ("ROR",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                            var("v",@{typ "32 word \<times> nat"}),@{theory}))))),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory})),
         close
           (var_w("operand2",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
               close
                 (var_w("v",32),
                  mb(mb(mb(mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy),
                           close(var_w("v",16),mu(mop(Cast HOLogic.intT,var_w("v",16)),qTy))),
                        close
                          (var_i"v",
                           mu(bop(Mul,var_i"v",
                                  mop(Cast HOLogic.intT,ex(var_w("operand2",32),ln 15,ln 0,w16))),
                              qTy))),
                     close
                       (var_i"product1",
                        mb(call
                             ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var_w("n",4),@{theory}),
                           close
                             (var_w("v",32),
                              mb(mb(mb(mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy),
                                       close
                                         (var_w("v",16),mu(mop(Cast HOLogic.intT,var_w("v",16)),qTy))),
                                    close
                                      (var_i"v",
                                       mu(bop(Mul,var_i"v",
                                              mop(Cast HOLogic.intT,
                                                  ex(var_w("operand2",32),ln 31,ln 16,w16))),qTy))),
                                 close
                                   (var_i"product2",
                                    mb(ite(eq(var_w("a",4),lw(15,4)),mu(lw(0,32),qTy),
                                           call
                                             ("R",
                                              @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                              var_w("a",4),@{theory})),
                                       close
                                         (var_w("acc",32),
                                          let'
                                            (var_i"result",
                                             ite(var_b"sub",
                                                 bop(Add,bop(Sub,var_i"product1",var_i"product2"),
                                                     mop(Cast HOLogic.intT,var_w("acc",32))),
                                                 bop(Add,bop(Add,var_i"product1",var_i"product2"),
                                                     mop(Cast HOLogic.intT,var_w("acc",32)))),
                                             let'
                                               (var_w("result32",32),mop(Cast w32,var_i"result"),
                                                mb(call
                                                     ("write'R",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var_w("result32",32),var_w("d",4)],
                                                      @{theory}),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(ite(mop(Not,
                                                                 eq(var_i"result",
                                                                    mop(Cast HOLogic.intT,
                                                                        var_w("result32",32)))),
                                                             mb(mr(close
                                                                     (var("s",qTy),
                                                                      call
                                                                        ("state.CPSR",@{typ PSR},
                                                                         var("s",qTy),@{theory}))),
                                                                close
                                                                  (var("v",@{typ PSR}),
                                                                   mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                               lt],qTy),
                                                                         close
                                                                           (var("v",
                                                                                @{typ
                                                                                "PSR \<times> bool"}),
                                                                            mu(rupd
                                                                                 ("PSR.Q",
                                                                                  var("v",
                                                                                      @{typ
                                                                                      "PSR \<times>
                                                                                       bool"}),
                                                                                  @{theory}),qTy))),
                                                                      close
                                                                        (var("v",@{typ PSR}),
                                                                         mw(close
                                                                              (var("s",qTy),
                                                                               rupd
                                                                                 ("state.CPSR",
                                                                                  tp[var("s",qTy),
                                                                                     var("v",
                                                                                         @{typ PSR})],
                                                                                  @{theory}))))))),
                                                             mu(lu,qTy)),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            call
                                                              ("IncPC",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},lu,@{theory})))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedMultiplyLongDual",
   close
     (tp[var_b"sub",var_b"m_swap",var_w("dhi",4),var_w("dlo",4),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(ite(var_b"m_swap",
                   mb(call
                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                         @{theory}),
                      close
                        (var_w("v",32),
                         mb(mu(tp[var_w("v",32),ln 16],qTy),
                            close
                              (var("v",@{typ "32 word \<times> nat"}),
                               call
                                 ("ROR",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var("v",@{typ "32 word \<times> nat"}),@{theory}))))),
                   call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                      @{theory})),
               close
                 (var_w("operand2",32),
                  let'
                    (var_i"product1",
                     bop(Mul,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                         mop(Cast HOLogic.intT,ex(var_w("operand2",32),ln 15,ln 0,w16))),
                     let'
                       (var_i"product2",
                        bop(Mul,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                            mop(Cast HOLogic.intT,ex(var_w("operand2",32),ln 31,ln 16,w16))),
                        mb(call
                             ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var_w("dhi",4),@{theory}),
                           close
                             (var_w("v",32),
                              mb(mb(call
                                      ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                       var_w("dlo",4),@{theory}),
                                    close(var_w("v0",32),mu(cc[var_w("v",32),var_w("v0",32)],qTy))),
                                 close
                                   (var_w("acc",64),
                                    let'
                                      (var_w("result64",64),
                                       mop(Cast w64,
                                           ite(var_b"sub",
                                               bop(Add,bop(Sub,var_i"product1",var_i"product2"),
                                                   mop(Cast HOLogic.intT,var_w("acc",64))),
                                               bop(Add,bop(Add,var_i"product1",var_i"product2"),
                                                   mop(Cast HOLogic.intT,var_w("acc",64))))),
                                       mb(call
                                            ("write'R",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[ex(var_w("result64",64),ln 63,ln 32,w32),
                                                var_w("dhi",4)],@{theory}),
                                          close
                                            (var_a HOLogic.unitT,
                                             mb(call
                                                  ("write'R",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[ex(var_w("result64",64),ln 31,ln 0,w32),
                                                      var_w("dlo",4)],@{theory}),
                                                close
                                                  (var_a HOLogic.unitT,
                                                   call
                                                     ("IncPC",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      lu,@{theory}))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedMostSignificantMultiply",
   close
     (tp[var_b"round",var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(ite(eq(var_w("a",4),lw(15,4)),mu(lw(0,32),qTy),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("a",4),@{theory})),
         close
           (var_w("acc",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
               close
                 (var_w("v",32),
                  mb(mb(mb(mu(mop(Cast HOLogic.intT,var_w("v",32)),qTy),
                           close
                             (var_i"v",
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v0",32),
                                    mb(mu(mop(Cast HOLogic.intT,var_w("v0",32)),qTy),
                                       close(var_i"v0",mu(bop(Mul,var_i"v",var_i"v0"),qTy))))))),
                        close
                          (var_i"v",
                           mu(bop(Add,
                                  mop(Cast HOLogic.intT,bop(Lsl,mop(Cast w64,var_w("acc",32)),ln 32)),
                                  var_i"v"),qTy))),
                     close
                       (var_i"result",
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[ex(mop(Cast w64,
                                        ite(var_b"round",bop(Add,var_i"result",li 2147483648),
                                            var_i"result")),ln 63,ln 32,w32),var_w("d",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedMostSignificantMultiplySubtract",
   close
     (tp[var_b"round",var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("a",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mb(mu(mop(Cast w64,var_w("v",32)),qTy),
                        close(var_w("v",64),mu(bop(Lsl,var_w("v",64),ln 32),qTy))),
                     close(var_w("v",64),mu(mop(Cast HOLogic.intT,var_w("v",64)),qTy))),
                  close
                    (var_i"v",
                     mb(call
                          ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                           @{theory}),
                        close
                          (var_w("v0",32),
                           mb(mb(mu(mop(Cast HOLogic.intT,var_w("v0",32)),qTy),
                                 close
                                   (var_i"v",
                                    mb(call
                                         ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                          var_w("m",4),@{theory}),
                                       close
                                         (var_w("v0",32),
                                          mb(mu(mop(Cast HOLogic.intT,var_w("v0",32)),qTy),
                                             close(var_i"v0",mu(bop(Mul,var_i"v",var_i"v0"),qTy))))))),
                              close(var_i"v0",mu(bop(Sub,var_i"v",var_i"v0"),qTy))))))),
               close
                 (var_i"result",
                  mb(call
                       ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        tp[ex(mop(Cast w64,
                                  ite(var_b"round",bop(Add,var_i"result",li 2147483648),
                                      var_i"result")),ln 63,ln 32,w32),var_w("d",4)],@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        call
                          ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignedParallelAddSub16",
   close
     (tp[var_w("op",2),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("Rm",32),
                  mu(itb([(eq(var_w("op",2),lw(0,2)),
                           tp[bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16))),
                              bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16)))]),
                          (eq(var_w("op",2),lw(1,2)),
                           tp[bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16))),
                              bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16)))]),
                          (eq(var_w("op",2),lw(2,2)),
                           tp[bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16))),
                              bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16)))]),
                          (eq(var_w("op",2),lw(3,2)),
                           tp[bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16))),
                              bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                                  mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16)))])],
                         lx(@{typ "int \<times> int"})),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedAddSub16",
   close
     (tp[var_w("op",2),var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("SignedParallelAddSub16",
            @{typ "state \<Rightarrow> ((int \<times> int) \<times> state)"},
            tp[var_w("op",2),var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int"}),
            cs(var("x",@{typ "int \<times> int"}),
               [(tp[var_i"res1",var_i"res2"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w16,var_i"res2"),mop(Cast w16,var_i"res1")],var_w("d",4)],
                       @{theory}),
                    close
                      (var_a HOLogic.unitT,
                       mb(mr(close
                               (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                          close
                            (var("v",@{typ PSR}),
                             mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),qTy),
                                   close
                                     (var_w("w",4),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mb(mu(tp[var("v",@{typ PSR}),
                                                        bfi(ln 1,ln 0,
                                                            ite(bop(Ge,var_i"res1",li 0),lw(3,2),
                                                                lw(0,2)),var_w("w",4))],qTy),
                                                  close
                                                    (var("v",@{typ "PSR \<times> 4 word"}),
                                                     mu(rupd
                                                          ("PSR.GE",
                                                           var("v",@{typ "PSR \<times> 4 word"}),
                                                           @{theory}),qTy))),
                                               close
                                                 (var("v",@{typ PSR}),
                                                  mw(close
                                                       (var("s",qTy),
                                                        rupd
                                                          ("state.CPSR",
                                                           tp[var("s",qTy),var("v",@{typ PSR})],
                                                           @{theory}))))))))),
                                close
                                  (var_a HOLogic.unitT,
                                   mb(mr(close
                                           (var("s",qTy),
                                            call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                      close
                                        (var("v",@{typ PSR}),
                                         mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),
                                                  qTy),
                                               close
                                                 (var_w("w",4),
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.CPSR",@{typ PSR},var("s",qTy),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ PSR}),
                                                        mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                    bfi(ln 3,ln 2,
                                                                        ite(bop(Ge,var_i"res2",li 0),
                                                                            lw(3,2),lw(0,2)),
                                                                        var_w("w",4))],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ "PSR \<times> 4 word"}),
                                                                 mu(rupd
                                                                      ("PSR.GE",
                                                                       var("v",
                                                                           @{typ
                                                                           "PSR \<times> 4 word"}),
                                                                       @{theory}),qTy))),
                                                           close
                                                             (var("v",@{typ PSR}),
                                                              mw(close
                                                                   (var("s",qTy),
                                                                    rupd
                                                                      ("state.CPSR",
                                                                       tp[var("s",qTy),
                                                                          var("v",@{typ PSR})],
                                                                       @{theory}))))))))),
                                            close
                                              (var_a HOLogic.unitT,
                                               call
                                                 ("IncPC",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  lu,@{theory}))))))))))))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedSaturatingAddSub16",
   close
     (tp[var_w("op",2),var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("SignedParallelAddSub16",
            @{typ "state \<Rightarrow> ((int \<times> int) \<times> state)"},
            tp[var_w("op",2),var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int"}),
            cs(var("x",@{typ "int \<times> int"}),
               [(tp[var_i"res1",var_i"res2"],
                 mb(call
                      ("SignedSat",@{typ "state \<Rightarrow> (16 word \<times> state)"},
                       tp[var_i"res2",ln 16],@{theory}),
                    close
                      (var_w("v",16),
                       mb(mb(mb(mb(call
                                     ("SignedSat",
                                      @{typ "state \<Rightarrow> (16 word \<times> state)"},
                                      tp[var_i"res1",ln 16],@{theory}),
                                   close(var_w("v0",16),mu(cc[var_w("v",16),var_w("v0",16)],qTy))),
                                close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                             close
                               (var("v",@{typ "32 word \<times> 4 word"}),
                                call
                                  ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                   var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                          close
                            (var_a HOLogic.unitT,
                             call
                               ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                @{theory}))))))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'SignedHalvingAddSub16",
   close
     (tp[var_w("op",2),var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("SignedParallelAddSub16",
            @{typ "state \<Rightarrow> ((int \<times> int) \<times> state)"},
            tp[var_w("op",2),var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int"}),
            cs(var("x",@{typ "int \<times> int"}),
               [(tp[var_i"res1",var_i"res2"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w16,bop(Div,var_i"res2",li 2)),
                             mop(Cast w16,bop(Div,var_i"res1",li 2))],var_w("d",4)],@{theory}),
                    close
                      (var_a HOLogic.unitT,
                       call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignedParallelAddSub8",
   close
     (tp[var_b"sub",var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("Rm",32),
                  mu(ite(var_b"sub",
                         tp[bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 7,ln 0,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 7,ln 0,w8))),
                            bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 8,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 8,w8))),
                            bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 23,ln 16,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 23,ln 16,w8))),
                            bop(Sub,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 24,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 24,w8)))],
                         tp[bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 7,ln 0,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 7,ln 0,w8))),
                            bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 8,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 8,w8))),
                            bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 23,ln 16,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 23,ln 16,w8))),
                            bop(Add,mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 24,w8)),
                                mop(Cast HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 24,w8)))]),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedAddSub8",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("SignedParallelAddSub8",
            @{typ
            "state \<Rightarrow> ((int \<times> int \<times> int \<times> int) \<times> state)"},
            tp[var_b"sub",var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int \<times> int \<times> int"}),
            cs(var("x",@{typ "int \<times> int \<times> int \<times> int"}),
               [(tp[var_i"res1",var_i"res2",var_i"res3",var_i"res4"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w8,var_i"res4"),mop(Cast w8,var_i"res3"),
                             mop(Cast w8,var_i"res2"),mop(Cast w8,var_i"res1")],var_w("d",4)],
                       @{theory}),
                    close
                      (var_a HOLogic.unitT,
                       mb(mr(close
                               (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                          close
                            (var("v",@{typ PSR}),
                             mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),qTy),
                                   close
                                     (var_w("w",4),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mb(mu(tp[var("v",@{typ PSR}),
                                                        bfi(ln 0,ln 0,
                                                            mop(Cast w1,bop(Ge,var_i"res1",li 0)),
                                                            var_w("w",4))],qTy),
                                                  close
                                                    (var("v",@{typ "PSR \<times> 4 word"}),
                                                     mu(rupd
                                                          ("PSR.GE",
                                                           var("v",@{typ "PSR \<times> 4 word"}),
                                                           @{theory}),qTy))),
                                               close
                                                 (var("v",@{typ PSR}),
                                                  mw(close
                                                       (var("s",qTy),
                                                        rupd
                                                          ("state.CPSR",
                                                           tp[var("s",qTy),var("v",@{typ PSR})],
                                                           @{theory}))))))))),
                                close
                                  (var_a HOLogic.unitT,
                                   mb(mr(close
                                           (var("s",qTy),
                                            call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                      close
                                        (var("v",@{typ PSR}),
                                         mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),
                                                  qTy),
                                               close
                                                 (var_w("w",4),
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.CPSR",@{typ PSR},var("s",qTy),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ PSR}),
                                                        mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                    bfi(ln 1,ln 1,
                                                                        mop(Cast w1,
                                                                            bop(Ge,var_i"res2",li 0)),
                                                                        var_w("w",4))],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ "PSR \<times> 4 word"}),
                                                                 mu(rupd
                                                                      ("PSR.GE",
                                                                       var("v",
                                                                           @{typ
                                                                           "PSR \<times> 4 word"}),
                                                                       @{theory}),qTy))),
                                                           close
                                                             (var("v",@{typ PSR}),
                                                              mw(close
                                                                   (var("s",qTy),
                                                                    rupd
                                                                      ("state.CPSR",
                                                                       tp[var("s",qTy),
                                                                          var("v",@{typ PSR})],
                                                                       @{theory}))))))))),
                                            close
                                              (var_a HOLogic.unitT,
                                               mb(mr(close
                                                       (var("s",qTy),
                                                        call
                                                          ("state.CPSR",@{typ PSR},var("s",qTy),
                                                           @{theory}))),
                                                  close
                                                    (var("v",@{typ PSR}),
                                                     mb(mb(mu(call
                                                                ("PSR.GE",w4,var("v",@{typ PSR}),
                                                                 @{theory}),qTy),
                                                           close
                                                             (var_w("w",4),
                                                              mb(mr(close
                                                                      (var("s",qTy),
                                                                       call
                                                                         ("state.CPSR",@{typ PSR},
                                                                          var("s",qTy),@{theory}))),
                                                                 close
                                                                   (var("v",@{typ PSR}),
                                                                    mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                                bfi(ln 2,ln 2,
                                                                                    mop(Cast w1,
                                                                                        bop(Ge,
                                                                                            var_i"res3",
                                                                                            li 0)),
                                                                                    var_w("w",4))],
                                                                             qTy),
                                                                          close
                                                                            (var("v",
                                                                                 @{typ
                                                                                 "PSR \<times>
                                                                                  4 word"}),
                                                                             mu(rupd
                                                                                  ("PSR.GE",
                                                                                   var("v",
                                                                                       @{typ
                                                                                       "PSR \<times>
                                                                                        4 word"}),
                                                                                   @{theory}),qTy))),
                                                                       close
                                                                         (var("v",@{typ PSR}),
                                                                          mw(close
                                                                               (var("s",qTy),
                                                                                rupd
                                                                                  ("state.CPSR",
                                                                                   tp[var("s",qTy),
                                                                                      var("v",
                                                                                          @{typ PSR})],
                                                                                   @{theory}))))))))),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mb(mr(close
                                                                   (var("s",qTy),
                                                                    call
                                                                      ("state.CPSR",@{typ PSR},
                                                                       var("s",qTy),@{theory}))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mb(mb(mu(call
                                                                            ("PSR.GE",w4,
                                                                             var("v",@{typ PSR}),
                                                                             @{theory}),qTy),
                                                                       close
                                                                         (var_w("w",4),
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.CPSR",
                                                                                      @{typ PSR},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",@{typ PSR}),
                                                                                mb(mb(mu(tp[var("v",
                                                                                                @{typ PSR}),
                                                                                            bfi(ln 3,
                                                                                                ln 3,
                                                                                                mop(Cast
                                                                                                      w1,
                                                                                                    bop(Ge,
                                                                                                        var_i"res4",
                                                                                                        li
                                                                                                         0)),
                                                                                                var_w("w",4))],
                                                                                         qTy),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "PSR \<times>
                                                                                              4 word"}),
                                                                                         mu(rupd
                                                                                              ("PSR.GE",
                                                                                               var("v",
                                                                                                   @{typ
                                                                                                   "PSR \<times>
                                                                                                    4 word"}),
                                                                                               @{theory}),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ PSR}),
                                                                                      mw(close
                                                                                           (var("s",
                                                                                                qTy),
                                                                                            rupd
                                                                                              ("state.CPSR",
                                                                                               tp[var("s",
                                                                                                      qTy),
                                                                                                  var("v",
                                                                                                      @{typ PSR})],
                                                                                               @{theory}))))))))),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       call
                                                                         ("IncPC",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          lu,@{theory}))))))))))))))))))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SignedSaturatingAddSub8",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("SignedParallelAddSub8",
            @{typ
            "state \<Rightarrow> ((int \<times> int \<times> int \<times> int) \<times> state)"},
            tp[var_b"sub",var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int \<times> int \<times> int"}),
            cs(var("x",@{typ "int \<times> int \<times> int \<times> int"}),
               [(tp[var_i"res1",var_i"res2",var_i"res3",var_i"res4"],
                 mb(call
                      ("SignedSat",@{typ "state \<Rightarrow> (8 word \<times> state)"},
                       tp[var_i"res4",ln 8],@{theory}),
                    close
                      (var_w("v",8),
                       mb(mb(mb(mb(call
                                     ("SignedSat",
                                      @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                      tp[var_i"res3",ln 8],@{theory}),
                                   close
                                     (var_w("v0",8),
                                      mb(mb(call
                                              ("SignedSat",
                                               @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                               tp[var_i"res2",ln 8],@{theory}),
                                            close
                                              (var_w("v1",8),
                                               mb(mb(call
                                                       ("SignedSat",
                                                        @{typ
                                                        "state \<Rightarrow> (8 word \<times> state)"},
                                                        tp[var_i"res1",ln 8],@{theory}),
                                                     close
                                                       (var_w("v2",8),
                                                        mu(cc[var_w("v1",8),var_w("v2",8)],qTy))),
                                                  close
                                                    (var_w("v1",16),
                                                     mu(cc[var_w("v0",8),var_w("v1",16)],qTy))))),
                                         close
                                           (var_w("v0",24),mu(cc[var_w("v",8),var_w("v0",24)],qTy))))),
                                close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                             close
                               (var("v",@{typ "32 word \<times> 4 word"}),
                                call
                                  ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                   var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                          close
                            (var_a HOLogic.unitT,
                             call
                               ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                @{theory}))))))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'SignedHalvingAddSub8",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("SignedParallelAddSub8",
            @{typ
            "state \<Rightarrow> ((int \<times> int \<times> int \<times> int) \<times> state)"},
            tp[var_b"sub",var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int \<times> int \<times> int"}),
            cs(var("x",@{typ "int \<times> int \<times> int \<times> int"}),
               [(tp[var_i"res1",var_i"res2",var_i"res3",var_i"res4"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w8,bop(Div,var_i"res4",li 2)),
                             mop(Cast w8,bop(Div,var_i"res3",li 2)),
                             mop(Cast w8,bop(Div,var_i"res2",li 2)),
                             mop(Cast w8,bop(Div,var_i"res1",li 2))],var_w("d",4)],@{theory}),
                    close
                      (var_a HOLogic.unitT,
                       call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UnsignedParallelAddSub16",
   close
     (tp[var_w("op",2),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("Rm",32),
                  mu(itb([(eq(var_w("op",2),lw(0,2)),
                           tp[bop(Add,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16),@{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16),@{theory})),
                              bop(Add,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16),
                                     @{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16),
                                     @{theory}))]),
                          (eq(var_w("op",2),lw(1,2)),
                           tp[bop(Sub,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16),@{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16),
                                     @{theory})),
                              bop(Add,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16),
                                     @{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16),@{theory}))]),
                          (eq(var_w("op",2),lw(2,2)),
                           tp[bop(Add,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16),@{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16),
                                     @{theory})),
                              bop(Sub,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16),
                                     @{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16),@{theory}))]),
                          (eq(var_w("op",2),lw(3,2)),
                           tp[bop(Sub,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16),@{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 0,w16),@{theory})),
                              bop(Sub,
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16),
                                     @{theory}),
                                  call
                                    ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 16,w16),
                                     @{theory}))])],lx(@{typ "int \<times> int"})),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'UnsignedAddSub16",
   close
     (tp[var_w("op",2),var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("UnsignedParallelAddSub16",
            @{typ "state \<Rightarrow> ((int \<times> int) \<times> state)"},
            tp[var_w("op",2),var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int"}),
            cs(var("x",@{typ "int \<times> int"}),
               [(tp[var_i"res1",var_i"res2"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w16,var_i"res2"),mop(Cast w16,var_i"res1")],var_w("d",4)],
                       @{theory}),
                    close
                      (var_a HOLogic.unitT,
                       mb(mr(close
                               (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                          close
                            (var("v",@{typ PSR}),
                             mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),qTy),
                                   close
                                     (var_w("w",4),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mb(mu(tp[var("v",@{typ PSR}),
                                                        bfi(ln 1,ln 0,
                                                            ite(bop(Ge,var_i"res1",
                                                                    ite(bop(In,var_w("op",2),
                                                                            sl[lw(1,2),lw(3,2)]),
                                                                        li 0,li 65536)),lw(3,2),
                                                                lw(0,2)),var_w("w",4))],qTy),
                                                  close
                                                    (var("v",@{typ "PSR \<times> 4 word"}),
                                                     mu(rupd
                                                          ("PSR.GE",
                                                           var("v",@{typ "PSR \<times> 4 word"}),
                                                           @{theory}),qTy))),
                                               close
                                                 (var("v",@{typ PSR}),
                                                  mw(close
                                                       (var("s",qTy),
                                                        rupd
                                                          ("state.CPSR",
                                                           tp[var("s",qTy),var("v",@{typ PSR})],
                                                           @{theory}))))))))),
                                close
                                  (var_a HOLogic.unitT,
                                   mb(mr(close
                                           (var("s",qTy),
                                            call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                      close
                                        (var("v",@{typ PSR}),
                                         mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),
                                                  qTy),
                                               close
                                                 (var_w("w",4),
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.CPSR",@{typ PSR},var("s",qTy),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ PSR}),
                                                        mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                    bfi(ln 3,ln 2,
                                                                        ite(bop(Ge,var_i"res2",
                                                                                ite(bop(In,
                                                                                        var_w("op",2),
                                                                                        sl[lw(2,2),
                                                                                           lw(3,2)]),
                                                                                    li 0,li 65536)),
                                                                            lw(3,2),lw(0,2)),
                                                                        var_w("w",4))],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ "PSR \<times> 4 word"}),
                                                                 mu(rupd
                                                                      ("PSR.GE",
                                                                       var("v",
                                                                           @{typ
                                                                           "PSR \<times> 4 word"}),
                                                                       @{theory}),qTy))),
                                                           close
                                                             (var("v",@{typ PSR}),
                                                              mw(close
                                                                   (var("s",qTy),
                                                                    rupd
                                                                      ("state.CPSR",
                                                                       tp[var("s",qTy),
                                                                          var("v",@{typ PSR})],
                                                                       @{theory}))))))))),
                                            close
                                              (var_a HOLogic.unitT,
                                               call
                                                 ("IncPC",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  lu,@{theory}))))))))))))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'UnsignedSaturatingAddSub16",
   close
     (tp[var_w("op",2),var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("UnsignedParallelAddSub16",
            @{typ "state \<Rightarrow> ((int \<times> int) \<times> state)"},
            tp[var_w("op",2),var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int"}),
            cs(var("x",@{typ "int \<times> int"}),
               [(tp[var_i"res1",var_i"res2"],
                 mb(call
                      ("UnsignedSat",@{typ "state \<Rightarrow> (16 word \<times> state)"},
                       tp[var_i"res2",ln 16],@{theory}),
                    close
                      (var_w("v",16),
                       mb(mb(mb(mb(call
                                     ("UnsignedSat",
                                      @{typ "state \<Rightarrow> (16 word \<times> state)"},
                                      tp[var_i"res1",ln 16],@{theory}),
                                   close(var_w("v0",16),mu(cc[var_w("v",16),var_w("v0",16)],qTy))),
                                close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                             close
                               (var("v",@{typ "32 word \<times> 4 word"}),
                                call
                                  ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                   var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                          close
                            (var_a HOLogic.unitT,
                             call
                               ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                @{theory}))))))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'UnsignedHalvingAddSub16",
   close
     (tp[var_w("op",2),var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("UnsignedParallelAddSub16",
            @{typ "state \<Rightarrow> ((int \<times> int) \<times> state)"},
            tp[var_w("op",2),var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int"}),
            cs(var("x",@{typ "int \<times> int"}),
               [(tp[var_i"res1",var_i"res2"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w16,bop(Div,var_i"res2",li 2)),
                             mop(Cast w16,bop(Div,var_i"res1",li 2))],var_w("d",4)],@{theory}),
                    close
                      (var_a HOLogic.unitT,
                       call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UnsignedParallelAddSub8",
   close
     (tp[var_b"sub",var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("Rm",32),
                  mu(ite(var_b"sub",
                         tp[bop(Sub,
                                call("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 7,ln 0,w8),@{theory}),
                                call("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 7,ln 0,w8),@{theory})),
                            bop(Sub,
                                call("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 8,w8),@{theory}),
                                call("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 8,w8),@{theory})),
                            bop(Sub,
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 23,ln 16,w8),@{theory}),
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 23,ln 16,w8),@{theory})),
                            bop(Sub,
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 24,w8),@{theory}),
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 24,w8),@{theory}))],
                         tp[bop(Add,
                                call("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 7,ln 0,w8),@{theory}),
                                call("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 7,ln 0,w8),@{theory})),
                            bop(Add,
                                call("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 8,w8),@{theory}),
                                call("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 15,ln 8,w8),@{theory})),
                            bop(Add,
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 23,ln 16,w8),@{theory}),
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 23,ln 16,w8),@{theory})),
                            bop(Add,
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 24,w8),@{theory}),
                                call
                                  ("UInt",HOLogic.intT,ex(var_w("Rm",32),ln 31,ln 24,w8),@{theory}))]),
                     qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'UnsignedAddSub8",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("UnsignedParallelAddSub8",
            @{typ
            "state \<Rightarrow> ((int \<times> int \<times> int \<times> int) \<times> state)"},
            tp[var_b"sub",var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int \<times> int \<times> int"}),
            cs(var("x",@{typ "int \<times> int \<times> int \<times> int"}),
               [(tp[var_i"res1",var_i"res2",var_i"res3",var_i"res4"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w8,var_i"res4"),mop(Cast w8,var_i"res3"),
                             mop(Cast w8,var_i"res2"),mop(Cast w8,var_i"res1")],var_w("d",4)],
                       @{theory}),
                    close
                      (var_a HOLogic.unitT,
                       let'
                         (var_i"ge_lim",ite(var_b"sub",li 0,li 256),
                          mb(mr(close
                                  (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                             close
                               (var("v",@{typ PSR}),
                                mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),qTy),
                                      close
                                        (var_w("w",4),
                                         mb(mr(close
                                                 (var("s",qTy),
                                                  call
                                                    ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                            close
                                              (var("v",@{typ PSR}),
                                               mb(mb(mu(tp[var("v",@{typ PSR}),
                                                           bfi(ln 0,ln 0,
                                                               mop(Cast w1,
                                                                   bop(Ge,var_i"res1",var_i"ge_lim")),
                                                               var_w("w",4))],qTy),
                                                     close
                                                       (var("v",@{typ "PSR \<times> 4 word"}),
                                                        mu(rupd
                                                             ("PSR.GE",
                                                              var("v",@{typ "PSR \<times> 4 word"}),
                                                              @{theory}),qTy))),
                                                  close
                                                    (var("v",@{typ PSR}),
                                                     mw(close
                                                          (var("s",qTy),
                                                           rupd
                                                             ("state.CPSR",
                                                              tp[var("s",qTy),var("v",@{typ PSR})],
                                                              @{theory}))))))))),
                                   close
                                     (var_a HOLogic.unitT,
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ PSR}),
                                            mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),
                                                     qTy),
                                                  close
                                                    (var_w("w",4),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.CPSR",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                       bfi(ln 1,ln 1,
                                                                           mop(Cast w1,
                                                                               bop(Ge,var_i"res2",
                                                                                   var_i"ge_lim")),
                                                                           var_w("w",4))],qTy),
                                                                 close
                                                                   (var("v",
                                                                        @{typ "PSR \<times> 4 word"}),
                                                                    mu(rupd
                                                                         ("PSR.GE",
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 4 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.CPSR",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory}))))))))),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.CPSR",@{typ PSR},var("s",qTy),
                                                              @{theory}))),
                                                     close
                                                       (var("v",@{typ PSR}),
                                                        mb(mb(mu(call
                                                                   ("PSR.GE",w4,var("v",@{typ PSR}),
                                                                    @{theory}),qTy),
                                                              close
                                                                (var_w("w",4),
                                                                 mb(mr(close
                                                                         (var("s",qTy),
                                                                          call
                                                                            ("state.CPSR",
                                                                             @{typ PSR},
                                                                             var("s",qTy),@{theory}))),
                                                                    close
                                                                      (var("v",@{typ PSR}),
                                                                       mb(mb(mu(tp[var("v",
                                                                                       @{typ PSR}),
                                                                                   bfi(ln 2,ln 2,
                                                                                       mop(Cast w1,
                                                                                           bop(Ge,
                                                                                               var_i"res3",
                                                                                               var_i"ge_lim")),
                                                                                       var_w("w",4))],
                                                                                qTy),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ
                                                                                    "PSR \<times>
                                                                                     4 word"}),
                                                                                mu(rupd
                                                                                     ("PSR.GE",
                                                                                      var("v",
                                                                                          @{typ
                                                                                          "PSR \<times>
                                                                                           4 word"}),
                                                                                      @{theory}),qTy))),
                                                                          close
                                                                            (var("v",@{typ PSR}),
                                                                             mw(close
                                                                                  (var("s",qTy),
                                                                                   rupd
                                                                                     ("state.CPSR",
                                                                                      tp[var("s",qTy),
                                                                                         var("v",
                                                                                             @{typ PSR})],
                                                                                      @{theory}))))))))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mb(mr(close
                                                                      (var("s",qTy),
                                                                       call
                                                                         ("state.CPSR",@{typ PSR},
                                                                          var("s",qTy),@{theory}))),
                                                                 close
                                                                   (var("v",@{typ PSR}),
                                                                    mb(mb(mu(call
                                                                               ("PSR.GE",w4,
                                                                                var("v",@{typ PSR}),
                                                                                @{theory}),qTy),
                                                                          close
                                                                            (var_w("w",4),
                                                                             mb(mr(close
                                                                                     (var("s",qTy),
                                                                                      call
                                                                                        ("state.CPSR",
                                                                                         @{typ PSR},
                                                                                         var("s",qTy),
                                                                                         @{theory}))),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ PSR}),
                                                                                   mb(mb(mu(tp[var("v",
                                                                                                   @{typ PSR}),
                                                                                               bfi(ln
                                                                                                    3,
                                                                                                   ln
                                                                                                    3,
                                                                                                   mop(Cast
                                                                                                         w1,
                                                                                                       bop(Ge,
                                                                                                           var_i"res4",
                                                                                                           var_i"ge_lim")),
                                                                                                   var_w("w",4))],
                                                                                            qTy),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "PSR \<times>
                                                                                                 4 word"}),
                                                                                            mu(rupd
                                                                                                 ("PSR.GE",
                                                                                                  var("v",
                                                                                                      @{typ
                                                                                                      "PSR \<times>
                                                                                                       4 word"}),
                                                                                                  @{theory}),
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ PSR}),
                                                                                         mw(close
                                                                                              (var("s",
                                                                                                   qTy),
                                                                                               rupd
                                                                                                 ("state.CPSR",
                                                                                                  tp[var("s",
                                                                                                         qTy),
                                                                                                     var("v",
                                                                                                         @{typ PSR})],
                                                                                                  @{theory}))))))))),
                                                                       close
                                                                         (var_a HOLogic.unitT,
                                                                          call
                                                                            ("IncPC",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             lu,@{theory})))))))))))))))))))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'UnsignedSaturatingAddSub8",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("UnsignedParallelAddSub8",
            @{typ
            "state \<Rightarrow> ((int \<times> int \<times> int \<times> int) \<times> state)"},
            tp[var_b"sub",var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int \<times> int \<times> int"}),
            cs(var("x",@{typ "int \<times> int \<times> int \<times> int"}),
               [(tp[var_i"res1",var_i"res2",var_i"res3",var_i"res4"],
                 mb(call
                      ("UnsignedSat",@{typ "state \<Rightarrow> (8 word \<times> state)"},
                       tp[var_i"res4",ln 8],@{theory}),
                    close
                      (var_w("v",8),
                       mb(mb(mb(mb(call
                                     ("UnsignedSat",
                                      @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                      tp[var_i"res3",ln 8],@{theory}),
                                   close
                                     (var_w("v0",8),
                                      mb(mb(call
                                              ("UnsignedSat",
                                               @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                               tp[var_i"res2",ln 8],@{theory}),
                                            close
                                              (var_w("v1",8),
                                               mb(mb(call
                                                       ("UnsignedSat",
                                                        @{typ
                                                        "state \<Rightarrow> (8 word \<times> state)"},
                                                        tp[var_i"res1",ln 8],@{theory}),
                                                     close
                                                       (var_w("v2",8),
                                                        mu(cc[var_w("v1",8),var_w("v2",8)],qTy))),
                                                  close
                                                    (var_w("v1",16),
                                                     mu(cc[var_w("v0",8),var_w("v1",16)],qTy))))),
                                         close
                                           (var_w("v0",24),mu(cc[var_w("v",8),var_w("v0",24)],qTy))))),
                                close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                             close
                               (var("v",@{typ "32 word \<times> 4 word"}),
                                call
                                  ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                   var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                          close
                            (var_a HOLogic.unitT,
                             call
                               ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                @{theory}))))))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'UnsignedHalvingAddSub8",
   close
     (tp[var_b"sub",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call
           ("UnsignedParallelAddSub8",
            @{typ
            "state \<Rightarrow> ((int \<times> int \<times> int \<times> int) \<times> state)"},
            tp[var_b"sub",var_w("n",4),var_w("m",4)],@{theory}),
         close
           (var("x",@{typ "int \<times> int \<times> int \<times> int"}),
            cs(var("x",@{typ "int \<times> int \<times> int \<times> int"}),
               [(tp[var_i"res1",var_i"res2",var_i"res3",var_i"res4"],
                 mb(call
                      ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                       tp[cc[mop(Cast w8,bop(Div,var_i"res4",li 2)),
                             mop(Cast w8,bop(Div,var_i"res3",li 2)),
                             mop(Cast w8,bop(Div,var_i"res2",li 2)),
                             mop(Cast w8,bop(Div,var_i"res1",li 2))],var_w("d",4)],@{theory}),
                    close
                      (var_a HOLogic.unitT,
                       call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'UnsignedSumAbsoluteDifferences",
   close
     (tp[var_w("d",4),var_w("n",4),var_w("m",4),var_w("a",4)],
      mb(ite(eq(var_w("a",4),lw(15,4)),mu(lw(0,32),qTy),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("a",4),@{theory})),
         close
           (var_w("acc",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
               close
                 (var_w("Rn",32),
                  mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),
                        @{theory}),
                     close
                       (var_w("Rm",32),
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[mop(Cast w32,
                                     bop(Add,
                                         bop(Add,
                                             bop(Add,
                                                 bop(Add,
                                                     call
                                                       ("UInt",HOLogic.intT,var_w("acc",32),
                                                        @{theory}),
                                                     mop(Abs,
                                                         bop(Sub,
                                                             call
                                                               ("UInt",HOLogic.intT,
                                                                ex(var_w("Rn",32),ln 7,ln 0,w8),
                                                                @{theory}),
                                                             call
                                                               ("UInt",HOLogic.intT,
                                                                ex(var_w("Rm",32),ln 7,ln 0,w8),
                                                                @{theory})))),
                                                 mop(Abs,
                                                     bop(Sub,
                                                         call
                                                           ("UInt",HOLogic.intT,
                                                            ex(var_w("Rn",32),ln 15,ln 8,w8),
                                                            @{theory}),
                                                         call
                                                           ("UInt",HOLogic.intT,
                                                            ex(var_w("Rm",32),ln 15,ln 8,w8),
                                                            @{theory})))),
                                             mop(Abs,
                                                 bop(Sub,
                                                     call
                                                       ("UInt",HOLogic.intT,
                                                        ex(var_w("Rn",32),ln 23,ln 16,w8),@{theory}),
                                                     call
                                                       ("UInt",HOLogic.intT,
                                                        ex(var_w("Rm",32),ln 23,ln 16,w8),@{theory})))),
                                         mop(Abs,
                                             bop(Sub,
                                                 call
                                                   ("UInt",HOLogic.intT,
                                                    ex(var_w("Rn",32),ln 31,ln 24,w8),@{theory}),
                                                 call
                                                   ("UInt",HOLogic.intT,
                                                    ex(var_w("Rm",32),ln 31,ln 24,w8),@{theory}))))),
                                 var_w("d",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("GenerateIntegerZeroDivide",
   close
     (var_a HOLogic.unitT,
      call
        ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Divide",
   close
     (tp[var_b"unsigned",var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            mb(mu(eq(var_w("v",32),lw(0,32)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("IntegerZeroDivideTrappingEnabled",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("GenerateIntegerZeroDivide",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}),
                                mb(call
                                     ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                      tp[lw(0,32),var_w("d",4)],@{theory}),
                                   close
                                     (var_a HOLogic.unitT,
                                      call
                                        ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                         lu,@{theory})))))),
                      mb(ite(var_b"unsigned",
                             mb(call
                                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                   var_w("n",4),@{theory}),
                                close
                                  (var_w("v",32),
                                   mb(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("m",4),@{theory}),
                                      close
                                        (var_w("v0",32),
                                         mu(bop(Div,var_w("v",32),var_w("v0",32)),qTy))))),
                             mb(call
                                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                   var_w("n",4),@{theory}),
                                close
                                  (var_w("v",32),
                                   mb(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("m",4),@{theory}),
                                      close
                                        (var_w("v0",32),
                                         mu(bop(Quot,var_w("v",32),var_w("v0",32)),qTy)))))),
                         close
                           (var_w("v",32),
                            mb(mb(mu(tp[var_w("v",32),var_w("d",4)],qTy),
                                  close
                                    (var("v",@{typ "32 word \<times> 4 word"}),
                                     call
                                       ("write'R",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                     @{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'PackHalfword",
   close
     (tp[var("shift_t",@{typ SRType}),var_n"shift_n",var_b"tbform",var_w("d",4),var_w("n",4),
         var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v0",@{typ PSR}),
                        mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v0",@{typ PSR}),@{theory}),qTy),
                                 close(var_b"v",mu(tp[var_n"shift_n",var_b"v"],qTy))),
                              close
                                (var("v",@{typ "nat \<times> bool"}),
                                 mu(tp[var("shift_t",@{typ SRType}),
                                       var("v",@{typ "nat \<times> bool"})],qTy))),
                           close
                             (var("v0",@{typ "SRType \<times> nat \<times> bool"}),
                              mu(tp[var_w("v",32),
                                    var("v0",@{typ "SRType \<times> nat \<times> bool"})],qTy))))),
                  close
                    (var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                     call
                       ("Shift",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                        var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                        @{theory}))),
               close
                 (var_w("operand2",32),
                  mb(ite(var_b"tbform",mu(ex(var_w("operand2",32),ln 15,ln 0,w16),qTy),
                         mb(call
                              ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                               var_w("n",4),@{theory}),
                            close(var_w("v",32),mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy)))),
                     close
                       (var_w("bot",16),
                        mb(ite(var_b"tbform",
                               mb(call
                                    ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     var_w("n",4),@{theory}),
                                  close(var_w("v",32),mu(ex(var_w("v",32),ln 31,ln 16,w16),qTy))),
                               mu(ex(var_w("operand2",32),ln 31,ln 16,w16),qTy)),
                           close
                             (var_w("top",16),
                              mb(call
                                   ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    tp[cc[var_w("top",16),var_w("bot",16)],var_w("d",4)],@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                       lu,@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Saturate",
   close
     (tp[var("shift_t",@{typ SRType}),var_n"shift_n",var_n"saturate_to",var_b"unsigned",
         var_w("d",4),var_w("n",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v0",@{typ PSR}),
                        mb(mb(mb(mu(call("PSR.C",HOLogic.boolT,var("v0",@{typ PSR}),@{theory}),qTy),
                                 close(var_b"v",mu(tp[var_n"shift_n",var_b"v"],qTy))),
                              close
                                (var("v",@{typ "nat \<times> bool"}),
                                 mu(tp[var("shift_t",@{typ SRType}),
                                       var("v",@{typ "nat \<times> bool"})],qTy))),
                           close
                             (var("v0",@{typ "SRType \<times> nat \<times> bool"}),
                              mu(tp[var_w("v",32),
                                    var("v0",@{typ "SRType \<times> nat \<times> bool"})],qTy))))),
                  close
                    (var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                     call
                       ("Shift",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                        var("v",@{typ "32 word \<times> SRType \<times> nat \<times> bool"}),
                        @{theory}))),
               close
                 (var_w("operand",32),
                  mb(ite(var_b"unsigned",
                         call
                           ("UnsignedSatQ",
                            @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                            tp[mop(Cast HOLogic.intT,var_w("operand",32)),var_n"saturate_to"],
                            @{theory}),
                         call
                           ("SignedSatQ",
                            @{typ "state \<Rightarrow> ((32 word \<times> bool) \<times> state)"},
                            tp[mop(Cast HOLogic.intT,var_w("operand",32)),var_n"saturate_to"],
                            @{theory})),
                     close
                       (var("x",@{typ "32 word \<times> bool"}),
                        cs(var("x",@{typ "32 word \<times> bool"}),
                           [(tp[var_w("result",32),var_b"sat"],
                             mb(call
                                  ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[ite(var_b"unsigned",var_w("result",32),
                                          call
                                            ("SignExtendFrom",w32,
                                             tp[var_w("result",32),var_n"saturate_to"],@{theory})),
                                      var_w("d",4)],@{theory}),
                                close
                                  (var_a HOLogic.unitT,
                                   mb(ite(var_b"sat",
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                      close
                                                        (var("v",@{typ "PSR \<times> bool"}),
                                                         mu(rupd
                                                              ("PSR.Q",
                                                               var("v",@{typ "PSR \<times> bool"}),
                                                               @{theory}),qTy))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mw(close
                                                           (var("s",qTy),
                                                            rupd
                                                              ("state.CPSR",
                                                               tp[var("s",qTy),var("v",@{typ PSR})],
                                                               @{theory}))))))),mu(lu,qTy)),
                                      close
                                        (var_a HOLogic.unitT,
                                         call
                                           ("IncPC",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                            @{theory}))))))],@{context})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Saturate16",
   close
     (tp[var_n"saturate_to",var_b"unsigned",var_w("d",4),var_w("n",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(ite(var_b"unsigned",
                   mb(call
                        ("UnsignedSatQ",
                         @{typ "state \<Rightarrow> ((16 word \<times> bool) \<times> state)"},
                         tp[mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                            var_n"saturate_to"],@{theory}),
                      close
                        (var("v",@{typ "16 word \<times> bool"}),
                         mb(call
                              ("UnsignedSatQ",
                               @{typ "state \<Rightarrow> ((16 word \<times> bool) \<times> state)"},
                               tp[mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                                  var_n"saturate_to"],@{theory}),
                            close
                              (var("v0",@{typ "16 word \<times> bool"}),
                               mu(tp[var("v",@{typ "16 word \<times> bool"}),
                                     var("v0",@{typ "16 word \<times> bool"})],qTy))))),
                   mb(call
                        ("SignedSatQ",
                         @{typ "state \<Rightarrow> ((16 word \<times> bool) \<times> state)"},
                         tp[mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 15,ln 0,w16)),
                            var_n"saturate_to"],@{theory}),
                      close
                        (var("v",@{typ "16 word \<times> bool"}),
                         mb(call
                              ("SignedSatQ",
                               @{typ "state \<Rightarrow> ((16 word \<times> bool) \<times> state)"},
                               tp[mop(Cast HOLogic.intT,ex(var_w("Rn",32),ln 31,ln 16,w16)),
                                  var_n"saturate_to"],@{theory}),
                            close
                              (var("v0",@{typ "16 word \<times> bool"}),
                               mu(tp[var("v",@{typ "16 word \<times> bool"}),
                                     var("v0",@{typ "16 word \<times> bool"})],qTy)))))),
               close
                 (var("x",@{typ "(16 word \<times> bool) \<times> 16 word \<times> bool"}),
                  cs(var("x",@{typ "(16 word \<times> bool) \<times> 16 word \<times> bool"}),
                     [(tp[tp[var_w("result1",16),var_b"sat1"],var_w("result2",16),var_b"sat2"],
                       mb(call
                            ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             tp[ite(var_b"unsigned",cc[var_w("result2",16),var_w("result1",16)],
                                    cc[call
                                         ("SignExtendFrom",w16,
                                          tp[var_w("result2",16),var_n"saturate_to"],@{theory}),
                                       call
                                         ("SignExtendFrom",w16,
                                          tp[var_w("result1",16),var_n"saturate_to"],@{theory})]),
                                var_w("d",4)],@{theory}),
                          close
                            (var_a HOLogic.unitT,
                             mb(ite(bop(Or,var_b"sat1",var_b"sat2"),
                                    mb(mr(close
                                            (var("s",qTy),
                                             call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                       close
                                         (var("v",@{typ PSR}),
                                          mb(mb(mu(tp[var("v",@{typ PSR}),lt],qTy),
                                                close
                                                  (var("v",@{typ "PSR \<times> bool"}),
                                                   mu(rupd
                                                        ("PSR.Q",
                                                         var("v",@{typ "PSR \<times> bool"}),
                                                         @{theory}),qTy))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mw(close
                                                     (var("s",qTy),
                                                      rupd
                                                        ("state.CPSR",
                                                         tp[var("s",qTy),var("v",@{typ PSR})],
                                                         @{theory}))))))),mu(lu,qTy)),
                                close
                                  (var_a HOLogic.unitT,
                                   call
                                     ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                      @{theory}))))))],@{context})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ExtendByte",
   close
     (tp[var_b"unsigned",var_w("d",4),var_w("n",4),var_w("m",4),var_n"rotation"],
      mb(ite(eq(var_w("n",4),lw(15,4)),mu(lw(0,32),qTy),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("acc",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("v",32),
                  mb(mb(mu(tp[var_w("v",32),var_n"rotation"],qTy),
                        close
                          (var("v",@{typ "32 word \<times> nat"}),
                           call
                             ("ROR",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var("v",@{typ "32 word \<times> nat"}),@{theory}))),
                     close
                       (var_w("rotated",32),
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[bop(Add,var_w("acc",32),
                                     call
                                       ("Extend",w32,
                                        tp[var_b"unsigned",ex(var_w("rotated",32),ln 7,ln 0,w8)],
                                        @{theory})),var_w("d",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ExtendByte16",
   close
     (tp[var_b"unsigned",var_w("d",4),var_w("n",4),var_w("m",4),var_n"rotation"],
      mb(ite(eq(var_w("n",4),lw(15,4)),mu(lw(0,32),qTy),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("acc",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("v",32),
                  mb(mb(mu(tp[var_w("v",32),var_n"rotation"],qTy),
                        close
                          (var("v",@{typ "32 word \<times> nat"}),
                           call
                             ("ROR",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var("v",@{typ "32 word \<times> nat"}),@{theory}))),
                     close
                       (var_w("rotated",32),
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[cc[bop(Add,ex(var_w("acc",32),ln 31,ln 16,w16),
                                        call
                                          ("Extend",w16,
                                           tp[var_b"unsigned",ex(var_w("rotated",32),ln 23,ln 16,w8)],
                                           @{theory})),
                                    bop(Add,ex(var_w("acc",32),ln 15,ln 0,w16),
                                        call
                                          ("Extend",w16,
                                           tp[var_b"unsigned",ex(var_w("rotated",32),ln 7,ln 0,w8)],
                                           @{theory}))],var_w("d",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ExtendHalfword",
   close
     (tp[var_b"unsigned",var_w("d",4),var_w("n",4),var_w("m",4),var_n"rotation"],
      mb(ite(eq(var_w("n",4),lw(15,4)),mu(lw(0,32),qTy),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("acc",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("v",32),
                  mb(mb(mu(tp[var_w("v",32),var_n"rotation"],qTy),
                        close
                          (var("v",@{typ "32 word \<times> nat"}),
                           call
                             ("ROR",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                              var("v",@{typ "32 word \<times> nat"}),@{theory}))),
                     close
                       (var_w("rotated",32),
                        mb(call
                             ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              tp[bop(Add,var_w("acc",32),
                                     call
                                       ("Extend",w32,
                                        tp[var_b"unsigned",ex(var_w("rotated",32),ln 15,ln 0,w16)],
                                        @{theory})),var_w("d",4)],@{theory}),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                 @{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SelectBytes",
   close
     (tp[var_w("d",4),var_w("n",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(call
                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
               close
                 (var_w("Rm",32),
                  mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ PSR}),
                        mb(mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),qTy),
                                 close(var_w("v",4),mu(bop(Bit,var_w("v",4),ln 0),qTy))),
                              close
                                (var_b"b",
                                 mu(ite(var_b"b",ex(var_w("Rn",32),ln 7,ln 0,w8),
                                        ex(var_w("Rm",32),ln 7,ln 0,w8)),qTy))),
                           close
                             (var_w("r1",8),
                              mb(mr(close
                                      (var("s",qTy),
                                       call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ PSR}),
                                    mb(mb(mb(mu(call("PSR.GE",w4,var("v",@{typ PSR}),@{theory}),qTy),
                                             close(var_w("v",4),mu(bop(Bit,var_w("v",4),ln 1),qTy))),
                                          close
                                            (var_b"b",
                                             mu(ite(var_b"b",ex(var_w("Rn",32),ln 15,ln 8,w8),
                                                    ex(var_w("Rm",32),ln 15,ln 8,w8)),qTy))),
                                       close
                                         (var_w("r2",8),
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mb(mu(call
                                                              ("PSR.GE",w4,var("v",@{typ PSR}),
                                                               @{theory}),qTy),
                                                         close
                                                           (var_w("v",4),
                                                            mu(bop(Bit,var_w("v",4),ln 2),qTy))),
                                                      close
                                                        (var_b"b",
                                                         mu(ite(var_b"b",
                                                                ex(var_w("Rn",32),ln 23,ln 16,w8),
                                                                ex(var_w("Rm",32),ln 23,ln 16,w8)),
                                                            qTy))),
                                                   close
                                                     (var_w("r3",8),
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.CPSR",@{typ PSR},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mb(mb(mb(mu(call
                                                                          ("PSR.GE",w4,
                                                                           var("v",@{typ PSR}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var_w("v",4),
                                                                        mu(bop(Bit,var_w("v",4),ln 3),
                                                                           qTy))),
                                                                  close
                                                                    (var_b"b",
                                                                     mu(ite(var_b"b",
                                                                            ex(var_w("Rn",32),ln 31,
                                                                               ln 24,w8),
                                                                            ex(var_w("Rm",32),ln 31,
                                                                               ln 24,w8)),qTy))),
                                                               close
                                                                 (var_w("r4",8),
                                                                  mb(call
                                                                       ("write'R",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[cc[var_w("r4",8),
                                                                              var_w("r3",8),
                                                                              var_w("r2",8),
                                                                              var_w("r1",8)],
                                                                           var_w("d",4)],@{theory}),
                                                                     close
                                                                       (var_a HOLogic.unitT,
                                                                        call
                                                                          ("IncPC",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           lu,@{theory})))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ByteReverse",
   close
     (tp[var_w("d",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("Rm",32),
            mb(call
                 ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  tp[cc[ex(var_w("Rm",32),ln 7,ln 0,w8),ex(var_w("Rm",32),ln 15,ln 8,w8),
                        ex(var_w("Rm",32),ln 23,ln 16,w8),ex(var_w("Rm",32),ln 31,ln 24,w8)],
                     var_w("d",4)],@{theory}),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ByteReversePackedHalfword",
   close
     (tp[var_w("d",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("Rm",32),
            mb(call
                 ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  tp[cc[ex(var_w("Rm",32),ln 23,ln 16,w8),ex(var_w("Rm",32),ln 31,ln 24,w8),
                        ex(var_w("Rm",32),ln 7,ln 0,w8),ex(var_w("Rm",32),ln 15,ln 8,w8)],
                     var_w("d",4)],@{theory}),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ByteReverseSignedHalfword",
   close
     (tp[var_w("d",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("Rm",32),
            mb(call
                 ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  tp[cc[mop(SE (Word_Lib.mk_wordT 24),ex(var_w("Rm",32),ln 7,ln 0,w8)),
                        ex(var_w("Rm",32),ln 15,ln 8,w8)],var_w("d",4)],@{theory}),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ReverseBits",
   close
     (tp[var_w("d",4),var_w("m",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("m",4),@{theory}),
         close
           (var_w("v",32),
            mb(mb(mb(mu(mop(Rev,var_w("v",32)),qTy),
                     close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                  close
                    (var("v",@{typ "32 word \<times> 4 word"}),
                     call
                       ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BitFieldExtract",
   close
     (tp[var_b"unsigned",var_w("d",4),var_w("n",4),var_n"lsbit",var_n"widthminus1"],
      let'
        (var_n"msbit",bop(Add,var_n"lsbit",var_n"widthminus1"),
         mb(ite(var_b"unsigned",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close(var_w("v",32),mu(ex(var_w("v",32),var_n"msbit",var_n"lsbit",w32),qTy))),
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("v",32),
                      mb(mb(mu(ex(var_w("v",32),var_n"msbit",var_n"lsbit",w32),qTy),
                            close(var_w("v",32),mu(tp[var_w("v",32),var_n"widthminus1"],qTy))),
                         close
                           (var("v",@{typ "32 word \<times> nat"}),
                            mu(call
                                 ("SignExtendFrom",w32,var("v",@{typ "32 word \<times> nat"}),
                                  @{theory}),qTy)))))),
            close
              (var_w("v",32),
               mb(mb(mu(tp[var_w("v",32),var_w("d",4)],qTy),
                     close
                       (var("v",@{typ "32 word \<times> 4 word"}),
                        call
                          ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                  close
                    (var_a HOLogic.unitT,
                     call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BitFieldClearOrInsert",
   close
     (tp[var_w("d",4),var_w("n",4),var_n"lsbit",var_n"msbit"],
      mb(ite(eq(var_w("n",4),lw(15,4)),mu(lw(0,32),qTy),
             call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory})),
         close
           (var_w("v",32),
            mb(mu(mop(Cast(@{typ "bool list"}),var_w("v",32)),qTy),
               close
                 (var_v"field",
                  mb(call
                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("d",4),
                        @{theory}),
                     close
                       (var_w("v",32),
                        mb(mu(mop(Cast(@{typ "bool list"}),var_w("v",32)),qTy),
                           close
                             (var_v"v",
                              mn(var_v"v",
                                 mb(mr(close
                                         (var("s",@{typ "bool list \<times> state"}),
                                          mop(Fst,var("s",@{typ "bool list \<times> state"})))),
                                    close
                                      (var_v"v",
                                       mb(mb(mu(bfi(var_n"msbit",var_n"lsbit",
                                                    ex(var_v"field",
                                                       bop(Sub,var_n"msbit",var_n"lsbit"),ln 0,
                                                       @{typ "bool list"}),var_v"v"),
                                                @{typ "bool list \<times> state"}),
                                             close
                                               (var_v"v",
                                                mw(close
                                                     (var("s",@{typ "bool list \<times> state"}),
                                                      tp[var_v"v",
                                                         mop(Snd,
                                                             var("s",
                                                                 @{typ "bool list \<times> state"}))])))),
                                          close
                                            (var_a HOLogic.unitT,
                                             mb(mr(close
                                                     (var("s",@{typ "bool list \<times> state"}),
                                                      mop(Fst,
                                                          var("s",@{typ "bool list \<times> state"})))),
                                                close
                                                  (var_v"v",
                                                   mb(mb(mb(mu(mop(Cast w32,var_v"v"),
                                                               @{typ "bool list \<times> state"}),
                                                            close
                                                              (var_w("v",32),
                                                               mu(tp[var_w("v",32),var_w("d",4)],
                                                                  @{typ "bool list \<times> state"}))),
                                                         close
                                                           (var("v",@{typ "32 word \<times> 4 word"}),
                                                            md(call
                                                                 ("write'R",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  var("v",
                                                                      @{typ
                                                                      "32 word \<times> 4 word"}),
                                                                  @{theory}),@{typ "bool list"}))),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         md(call
                                                              ("IncPC",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},lu,@{theory}),
                                                            @{typ "bool list"}))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadWord",
   close
     (tp[var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                  mb(call
                                       ("MemU",
                                        @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                        tp[var_w("address",32),ln 4],@{theory}),
                                     close
                                       (var_w("data",32),
                                        mb(ite(var_b"wback",
                                               call
                                                 ("write'R",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[var_w("offset_addr",32),var_w("n",4)],@{theory}),
                                               mu(lu,qTy)),
                                           close
                                             (var_a HOLogic.unitT,
                                              ite(eq(var_w("t",4),lw(15,4)),
                                                  ite(call
                                                        ("Aligned",HOLogic.boolT,
                                                         tp[var_w("address",32),ln 4],@{theory}),
                                                      call
                                                        ("LoadWritePC",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         var_w("data",32),@{theory}),
                                                      call
                                                        ("raise'exception",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         call
                                                           ("exception.UNPREDICTABLE",
                                                            @{typ exception},ls"Load",@{theory}),
                                                         @{theory})),
                                                  mb(call
                                                       ("UnalignedSupport",
                                                        @{typ
                                                        "state \<Rightarrow> (bool \<times> state)"},
                                                        lu,@{theory}),
                                                     close
                                                       (var_b"v",
                                                        mb(mb(mb(mb(mu(bop(Or,var_b"v",
                                                                           call
                                                                             ("Aligned",
                                                                              HOLogic.boolT,
                                                                              tp[var_w("address",32),
                                                                                 ln 4],@{theory})),
                                                                       qTy),
                                                                    close
                                                                      (var_b"b",
                                                                       ite(var_b"b",
                                                                           mu(var_w("data",32),qTy),
                                                                           mb(mr(close
                                                                                   (var("s",qTy),
                                                                                    call
                                                                                      ("state.Encoding",
                                                                                       @{typ Encoding},
                                                                                       var("s",qTy),
                                                                                       @{theory}))),
                                                                              close
                                                                                (var("v",
                                                                                     @{typ Encoding}),
                                                                                 mb(mu(eq(var("v",
                                                                                              @{typ Encoding}),
                                                                                          lc("Encoding_ARM",
                                                                                             "Encoding",
                                                                                             @{theory})),
                                                                                       qTy),
                                                                                    close
                                                                                      (var_b"b",
                                                                                       ite(var_b"b",
                                                                                           call
                                                                                             ("ROR",
                                                                                              @{typ
                                                                                              "state \<Rightarrow>
                                                                                               (32 word \<times>
                                                                                                state)"},
                                                                                              tp[var_w("data",32),
                                                                                                 bop(Mul,
                                                                                                     ln
                                                                                                      8,
                                                                                                     mop(Cast
                                                                                                           HOLogic.natT,
                                                                                                         ex(var_w("address",32),
                                                                                                            ln
                                                                                                             1,
                                                                                                            ln
                                                                                                             0,
                                                                                                            (Word_Lib.mk_wordT 2))))],
                                                                                              @{theory}),
                                                                                           mu(lx w32,
                                                                                              qTy))))))))),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("t",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory}))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              call
                                                                ("IncPC",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},lu,
                                                                 @{theory})))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadLiteral",
   close
     (tp[var_b"add",var_w("t",4),var_w("imm32",32)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},lw(15,4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                   close
                     (var_w("v",32),
                      mb(mb(mu(tp[var_w("v",32),ln 4],qTy),
                            close
                              (var("v",@{typ "32 word \<times> nat"}),
                               mu(call("Align",w32,var("v",@{typ "32 word \<times> nat"}),@{theory}),
                                  qTy))),
                         close
                           (var_w("base",32),
                            let'
                              (var_w("address",32),
                               ite(var_b"add",bop(Add,var_w("base",32),var_w("imm32",32)),
                                   bop(Sub,var_w("base",32),var_w("imm32",32))),
                               mb(call
                                    ("MemU",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     tp[var_w("address",32),ln 4],@{theory}),
                                  close
                                    (var_w("data",32),
                                     ite(eq(var_w("t",4),lw(15,4)),
                                         ite(call
                                               ("Aligned",HOLogic.boolT,
                                                tp[var_w("address",32),ln 4],@{theory}),
                                             call
                                               ("LoadWritePC",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                var_w("data",32),@{theory}),
                                             call
                                               ("raise'exception",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                call
                                                  ("exception.UNPREDICTABLE",@{typ exception},
                                                   ls"LoadLiteral",@{theory}),@{theory})),
                                         mb(call
                                              ("UnalignedSupport",
                                               @{typ "state \<Rightarrow> (bool \<times> state)"},
                                               lu,@{theory}),
                                            close
                                              (var_b"v",
                                               mb(mb(mb(mb(mu(bop(Or,var_b"v",
                                                                  call
                                                                    ("Aligned",HOLogic.boolT,
                                                                     tp[var_w("address",32),ln 4],
                                                                     @{theory})),qTy),
                                                           close
                                                             (var_b"b",
                                                              ite(var_b"b",mu(var_w("data",32),qTy),
                                                                  mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.Encoding",
                                                                              @{typ Encoding},
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var("v",@{typ Encoding}),
                                                                        mb(mu(eq(var("v",
                                                                                     @{typ Encoding}),
                                                                                 lc("Encoding_ARM",
                                                                                    "Encoding",
                                                                                    @{theory})),qTy),
                                                                           close
                                                                             (var_b"b",
                                                                              ite(var_b"b",
                                                                                  call
                                                                                    ("ROR",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (32 word \<times>
                                                                                       state)"},
                                                                                     tp[var_w("data",32),
                                                                                        bop(Mul,
                                                                                            ln 8,
                                                                                            mop(Cast
                                                                                                  HOLogic.natT,
                                                                                                ex(var_w("address",32),
                                                                                                   ln
                                                                                                    1,
                                                                                                   ln
                                                                                                    0,
                                                                                                   (Word_Lib.mk_wordT 2))))],
                                                                                     @{theory}),
                                                                                  mu(lx w32,qTy))))))))),
                                                        close
                                                          (var_w("v",32),
                                                           mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                                     close
                                                       (var("v",@{typ "32 word \<times> 4 word"}),
                                                        call
                                                          ("write'R",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           var("v",@{typ "32 word \<times> 4 word"}),
                                                           @{theory}))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     call
                                                       ("IncPC",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        lu,@{theory}))))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadUnprivileged",
   close
     (tp[var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"postindex",var_w("Rn",32),var_w("offset_addr",32)),
                                  mb(call
                                       ("MemU_unpriv",
                                        @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                        tp[var_w("address",32),ln 4],@{theory}),
                                     close
                                       (var_w("data",32),
                                        mb(ite(var_b"postindex",
                                               call
                                                 ("write'R",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[var_w("offset_addr",32),var_w("n",4)],@{theory}),
                                               mu(lu,qTy)),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(call
                                                   ("UnalignedSupport",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"v",
                                                    mb(mb(mb(mb(mu(bop(Or,var_b"v",
                                                                       call
                                                                         ("Aligned",HOLogic.boolT,
                                                                          tp[var_w("address",32),
                                                                             ln 4],@{theory})),qTy),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",
                                                                       mu(var_w("data",32),qTy),
                                                                       mb(mr(close
                                                                               (var("s",qTy),
                                                                                call
                                                                                  ("state.Encoding",
                                                                                   @{typ Encoding},
                                                                                   var("s",qTy),
                                                                                   @{theory}))),
                                                                          close
                                                                            (var("v",@{typ Encoding}),
                                                                             mb(mu(eq(var("v",
                                                                                          @{typ Encoding}),
                                                                                      lc("Encoding_ARM",
                                                                                         "Encoding",
                                                                                         @{theory})),
                                                                                   qTy),
                                                                                close
                                                                                  (var_b"b",
                                                                                   ite(var_b"b",
                                                                                       call
                                                                                         ("ROR",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (32 word \<times>
                                                                                            state)"},
                                                                                          tp[var_w("data",32),
                                                                                             bop(Mul,
                                                                                                 ln
                                                                                                  8,
                                                                                                 mop(Cast
                                                                                                       HOLogic.natT,
                                                                                                     ex(var_w("address",32),
                                                                                                        ln
                                                                                                         1,
                                                                                                        ln
                                                                                                         0,
                                                                                                        (Word_Lib.mk_wordT 2))))],
                                                                                          @{theory}),
                                                                                       mu(lx w32,qTy))))))))),
                                                             close
                                                               (var_w("v",32),
                                                                mu(tp[var_w("v",32),var_w("t",4)],
                                                                   qTy))),
                                                          close
                                                            (var("v",
                                                                 @{typ "32 word \<times> 4 word"}),
                                                             call
                                                               ("write'R",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (unit \<times> state)"},
                                                                var("v",
                                                                    @{typ "32 word \<times> 4 word"}),
                                                                @{theory}))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          call
                                                            ("IncPC",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},lu,@{theory}))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadByte",
   close
     (tp[var_b"unsigned",var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("n",4),
         var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               mb(call
                                    ("MemU",@{typ "state \<Rightarrow> (8 word \<times> state)"},
                                     tp[ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                        ln 1],@{theory}),
                                  close
                                    (var_w("v",8),
                                     mb(mb(mb(mb(mu(tp[var_b"unsigned",var_w("v",8)],qTy),
                                                 close
                                                   (var("v",@{typ "bool \<times> 8 word"}),
                                                    mu(call
                                                         ("Extend",w32,
                                                          var("v",@{typ "bool \<times> 8 word"}),
                                                          @{theory}),qTy))),
                                              close
                                                (var_w("v",32),
                                                 mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                           close
                                             (var("v",@{typ "32 word \<times> 4 word"}),
                                              call
                                                ("write'R",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(ite(var_b"wback",
                                                  call
                                                    ("write'R",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[var_w("offset_addr",32),var_w("n",4)],
                                                     @{theory}),mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 call
                                                   ("IncPC",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},lu,
                                                    @{theory})))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadByteLiteral",
   close
     (tp[var_b"unsigned",var_b"add",var_w("t",4),var_w("imm32",32)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},lw(15,4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                   close
                     (var_w("v",32),
                      mb(mb(mu(tp[var_w("v",32),ln 4],qTy),
                            close
                              (var("v",@{typ "32 word \<times> nat"}),
                               mu(call("Align",w32,var("v",@{typ "32 word \<times> nat"}),@{theory}),
                                  qTy))),
                         close
                           (var_w("base",32),
                            mb(call
                                 ("MemU",@{typ "state \<Rightarrow> (8 word \<times> state)"},
                                  tp[ite(var_b"add",bop(Add,var_w("base",32),var_w("imm32",32)),
                                         bop(Sub,var_w("base",32),var_w("imm32",32))),ln 1],
                                  @{theory}),
                               close
                                 (var_w("v",8),
                                  mb(mb(mb(mb(mu(tp[var_b"unsigned",var_w("v",8)],qTy),
                                              close
                                                (var("v",@{typ "bool \<times> 8 word"}),
                                                 mu(call
                                                      ("Extend",w32,
                                                       var("v",@{typ "bool \<times> 8 word"}),
                                                       @{theory}),qTy))),
                                           close
                                             (var_w("v",32),mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                        close
                                          (var("v",@{typ "32 word \<times> 4 word"}),
                                           call
                                             ("write'R",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                                     close
                                       (var_a HOLogic.unitT,
                                        call
                                          ("IncPC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                           @{theory}))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadByteUnprivileged",
   close
     (tp[var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               mb(call
                                    ("MemU_unpriv",
                                     @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                     tp[ite(var_b"postindex",var_w("Rn",32),var_w("offset_addr",32)),
                                        ln 1],@{theory}),
                                  close
                                    (var_w("v",8),
                                     mb(mb(mb(mu(mop(Cast w32,var_w("v",8)),qTy),
                                              close
                                                (var_w("v",32),
                                                 mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                           close
                                             (var("v",@{typ "32 word \<times> 4 word"}),
                                              call
                                                ("write'R",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(ite(var_b"postindex",
                                                  call
                                                    ("write'R",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[var_w("offset_addr",32),var_w("n",4)],
                                                     @{theory}),mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 call
                                                   ("IncPC",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},lu,
                                                    @{theory})))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadSignedByteUnprivileged",
   close
     (tp[var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),var("m",@{typ offset2})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset2}),
                            [(call("offset2.register_form2",@{typ offset2},var_w("m",4),@{theory}),
                              call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory})),
                             (call
                                ("offset2.immediate_form2",@{typ offset2},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               mb(call
                                    ("MemU_unpriv",
                                     @{typ "state \<Rightarrow> (8 word \<times> state)"},
                                     tp[ite(var_b"postindex",var_w("Rn",32),var_w("offset_addr",32)),
                                        ln 1],@{theory}),
                                  close
                                    (var_w("v",8),
                                     mb(mb(mb(mu(mop(SE w32,var_w("v",8)),qTy),
                                              close
                                                (var_w("v",32),
                                                 mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                           close
                                             (var("v",@{typ "32 word \<times> 4 word"}),
                                              call
                                                ("write'R",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(ite(var_b"postindex",
                                                  call
                                                    ("write'R",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[var_w("offset_addr",32),var_w("n",4)],
                                                     @{theory}),mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 call
                                                   ("IncPC",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},lu,
                                                    @{theory})))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadHalf",
   close
     (tp[var_b"unsigned",var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("n",4),
         var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                  mb(call
                                       ("MemU",
                                        @{typ "state \<Rightarrow> (16 word \<times> state)"},
                                        tp[var_w("address",32),ln 2],@{theory}),
                                     close
                                       (var_w("data",16),
                                        mb(ite(var_b"wback",
                                               call
                                                 ("write'R",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[var_w("offset_addr",32),var_w("n",4)],@{theory}),
                                               mu(lu,qTy)),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(call
                                                   ("UnalignedSupport",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"v",
                                                    mb(mb(mb(mb(mu(bop(Or,var_b"v",
                                                                       call
                                                                         ("Aligned",HOLogic.boolT,
                                                                          tp[var_w("address",32),
                                                                             ln 2],@{theory})),qTy),
                                                                close
                                                                  (var_b"b",
                                                                   mu(ite(var_b"b",
                                                                          call
                                                                            ("Extend",w32,
                                                                             tp[var_b"unsigned",
                                                                                var_w("data",16)],
                                                                             @{theory}),lx w32),qTy))),
                                                             close
                                                               (var_w("v",32),
                                                                mu(tp[var_w("v",32),var_w("t",4)],
                                                                   qTy))),
                                                          close
                                                            (var("v",
                                                                 @{typ "32 word \<times> 4 word"}),
                                                             call
                                                               ("write'R",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (unit \<times> state)"},
                                                                var("v",
                                                                    @{typ "32 word \<times> 4 word"}),
                                                                @{theory}))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          call
                                                            ("IncPC",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},lu,@{theory}))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadHalfLiteral",
   close
     (tp[var_b"unsigned",var_b"add",var_w("t",4),var_w("imm32",32)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},lw(15,4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(const("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                   close
                     (var_w("v",32),
                      mb(mb(mu(tp[var_w("v",32),ln 4],qTy),
                            close
                              (var("v",@{typ "32 word \<times> nat"}),
                               mu(call("Align",w32,var("v",@{typ "32 word \<times> nat"}),@{theory}),
                                  qTy))),
                         close
                           (var_w("base",32),
                            let'
                              (var_w("address",32),
                               ite(var_b"add",bop(Add,var_w("base",32),var_w("imm32",32)),
                                   bop(Sub,var_w("base",32),var_w("imm32",32))),
                               mb(call
                                    ("MemU",@{typ "state \<Rightarrow> (16 word \<times> state)"},
                                     tp[var_w("address",32),ln 2],@{theory}),
                                  close
                                    (var_w("data",16),
                                     mb(call
                                          ("UnalignedSupport",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mb(mb(mu(bop(Or,var_b"v",
                                                              call
                                                                ("Aligned",HOLogic.boolT,
                                                                 tp[var_w("address",32),ln 2],
                                                                 @{theory})),qTy),
                                                       close
                                                         (var_b"b",
                                                          mu(ite(var_b"b",
                                                                 call
                                                                   ("Extend",w32,
                                                                    tp[var_b"unsigned",
                                                                       var_w("data",16)],@{theory}),
                                                                 lx w32),qTy))),
                                                    close
                                                      (var_w("v",32),
                                                       mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                                 close
                                                   (var("v",@{typ "32 word \<times> 4 word"}),
                                                    call
                                                      ("write'R",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       var("v",@{typ "32 word \<times> 4 word"}),
                                                       @{theory}))),
                                              close
                                                (var_a HOLogic.unitT,
                                                 call
                                                   ("IncPC",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},lu,
                                                    @{theory})))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadHalfUnprivileged",
   close
     (tp[var_b"unsigned",var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),
         var("m",@{typ offset2})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset2}),
                            [(call("offset2.register_form2",@{typ offset2},var_w("m",4),@{theory}),
                              call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory})),
                             (call
                                ("offset2.immediate_form2",@{typ offset2},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"postindex",var_w("Rn",32),var_w("offset_addr",32)),
                                  mb(call
                                       ("MemU_unpriv",
                                        @{typ "state \<Rightarrow> (16 word \<times> state)"},
                                        tp[var_w("address",32),ln 2],@{theory}),
                                     close
                                       (var_w("data",16),
                                        mb(ite(var_b"postindex",
                                               call
                                                 ("write'R",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[var_w("offset_addr",32),var_w("n",4)],@{theory}),
                                               mu(lu,qTy)),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(call
                                                   ("UnalignedSupport",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"v",
                                                    mb(mb(mb(mb(mu(bop(Or,var_b"v",
                                                                       call
                                                                         ("Aligned",HOLogic.boolT,
                                                                          tp[var_w("address",32),
                                                                             ln 2],@{theory})),qTy),
                                                                close
                                                                  (var_b"b",
                                                                   mu(ite(var_b"b",
                                                                          call
                                                                            ("Extend",w32,
                                                                             tp[var_b"unsigned",
                                                                                var_w("data",16)],
                                                                             @{theory}),lx w32),qTy))),
                                                             close
                                                               (var_w("v",32),
                                                                mu(tp[var_w("v",32),var_w("t",4)],
                                                                   qTy))),
                                                          close
                                                            (var("v",
                                                                 @{typ "32 word \<times> 4 word"}),
                                                             call
                                                               ("write'R",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (unit \<times> state)"},
                                                                var("v",
                                                                    @{typ "32 word \<times> 4 word"}),
                                                                @{theory}))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          call
                                                            ("IncPC",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},lu,@{theory}))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadMultiple",
   close
     (tp[var_b"increment",var_b"index",var_b"wback",var_w("n",4),var_w("registers",16)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(call
                           ("BitCount",@{typ "state \<Rightarrow> (nat \<times> state)"},
                            var_w("registers",16),@{theory}),
                         close
                           (var_n"v",
                            mb(mb(mu(mop(Cast w32,var_n"v"),qTy),
                                  close(var_w("v",32),mu(bop(Mul,lw(4,32),var_w("v",32)),qTy))),
                               close
                                 (var_w("length",32),
                                  mn(ite(var_b"increment",var_w("Rn",32),
                                         bop(Sub,var_w("Rn",32),var_w("length",32))),
                                     mb(ite(eq(var_b"index",var_b"increment"),
                                            mb(mr(close
                                                    (var("s",@{typ "32 word \<times> state"}),
                                                     mop(Fst,
                                                         var("s",@{typ "32 word \<times> state"})))),
                                               close
                                                 (var_w("v",32),
                                                  mb(mu(bop(Add,var_w("v",32),lw(4,32)),
                                                        @{typ "32 word \<times> state"}),
                                                     close
                                                       (var_w("v",32),
                                                        mw(close
                                                             (var("s",
                                                                  @{typ "32 word \<times> state"}),
                                                              tp[var_w("v",32),
                                                                 mop(Snd,
                                                                     var("s",
                                                                         @{typ
                                                                         "32 word \<times> state"}))])))))),
                                            mu(lu,@{typ "32 word \<times> state"})),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(forloop
                                                (tp[ln 0,ln 14,
                                                    close
                                                      (var_n"i",
                                                       ite(bop(Bit,var_w("registers",16),var_n"i"),
                                                           mb(mb(mr(close
                                                                      (var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"}),
                                                                       mop(Fst,
                                                                           var("s",
                                                                               @{typ
                                                                               "32 word \<times>
                                                                                state"})))),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mb(mb(mb(mu(tp[var_w("v",32),
                                                                                   ln 4],
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     nat"}),
                                                                                md(call
                                                                                     ("MemA",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (32 word \<times>
                                                                                        state)"},
                                                                                      var("v",
                                                                                          @{typ
                                                                                          "32 word \<times>
                                                                                           nat"}),
                                                                                      @{theory}),w32))),
                                                                          close
                                                                            (var_w("v",32),
                                                                             mu(tp[var_w("v",32),
                                                                                   mop(Cast w4,
                                                                                       var_n"i")],
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}))),
                                                                       close
                                                                         (var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               4 word"}),
                                                                          md(call
                                                                               ("write'R",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (unit \<times>
                                                                                  state)"},
                                                                                var("v",
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     4 word"}),
                                                                                @{theory}),w32))))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mb(mr(close
                                                                         (var("s",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               state"}),
                                                                          mop(Fst,
                                                                              var("s",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   state"})))),
                                                                    close
                                                                      (var_w("v",32),
                                                                       mb(mu(bop(Add,var_w("v",32),
                                                                                 lw(4,32)),
                                                                             @{typ
                                                                             "32 word \<times> state"}),
                                                                          close
                                                                            (var_w("v",32),
                                                                             mw(close
                                                                                  (var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"}),
                                                                                   tp[var_w("v",32),
                                                                                      mop(Snd,
                                                                                          var("s",
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}))])))))))),
                                                           mu(lu,@{typ "32 word \<times> state"})))]),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mb(ite(bop(Bit,var_w("registers",16),ln 15),
                                                        mb(mr(close
                                                                (var("s",
                                                                     @{typ "32 word \<times> state"}),
                                                                 mop(Fst,
                                                                     var("s",
                                                                         @{typ
                                                                         "32 word \<times> state"})))),
                                                           close
                                                             (var_w("v",32),
                                                              mb(mb(mu(tp[var_w("v",32),ln 4],
                                                                       @{typ
                                                                       "32 word \<times> state"}),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times> nat"}),
                                                                       md(call
                                                                            ("MemA",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (32 word \<times>
                                                                               state)"},
                                                                             var("v",
                                                                                 @{typ
                                                                                 "32 word \<times>
                                                                                  nat"}),@{theory}),
                                                                          w32))),
                                                                 close
                                                                   (var_w("v",32),
                                                                    md(call
                                                                         ("LoadWritePC",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var_w("v",32),@{theory}),
                                                                       w32))))),
                                                        md(call
                                                             ("IncPC",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},lu,@{theory}),
                                                           w32)),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       ite(var_b"wback",
                                                           ite(bop(Bit,var_w("registers",16),
                                                                   mop(Cast HOLogic.natT,
                                                                       var_w("n",4))),
                                                               md(call
                                                                    ("write'R",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[lx w32,var_w("n",4)],
                                                                     @{theory}),w32),
                                                               md(call
                                                                    ("write'R",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[ite(var_b"increment",
                                                                            bop(Add,var_w("Rn",32),
                                                                                var_w("length",32)),
                                                                            bop(Sub,var_w("Rn",32),
                                                                                var_w("length",32))),
                                                                        var_w("n",4)],@{theory}),w32)),
                                                           mu(lu,@{typ "32 word \<times> state"}))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadMultipleExceptionReturn",
   close
     (tp[var_b"increment",var_b"wordhigher",var_b"wback",var_w("n",4),var_w("registers",15)],
      mb(call("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   call
                     ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lu,@{theory}),mu(lu,qTy)),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("CurrentModeIsUserOrSystem",
                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                     close
                       (var_b"v",
                        mb(ite(var_b"v",
                               call
                                 ("raise'exception",
                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                  call
                                    ("exception.UNPREDICTABLE",@{typ exception},
                                     ls"LoadMultipleExceptionReturn",@{theory}),@{theory}),
                               mu(lu,qTy)),
                           close
                             (var_a HOLogic.unitT,
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("n",4),@{theory}),
                                 close
                                   (var_w("Rn",32),
                                    mb(call
                                         ("BitCount",
                                          @{typ "state \<Rightarrow> (nat \<times> state)"},
                                          var_w("registers",15),@{theory}),
                                       close
                                         (var_n"v",
                                          mb(mb(mb(mu(mop(Cast w32,var_n"v"),qTy),
                                                   close
                                                     (var_w("v",32),
                                                      mu(bop(Mul,lw(4,32),var_w("v",32)),qTy))),
                                                close
                                                  (var_w("v",32),
                                                   mu(bop(Add,var_w("v",32),lw(4,32)),qTy))),
                                             close
                                               (var_w("length",32),
                                                mn(ite(var_b"increment",var_w("Rn",32),
                                                       bop(Sub,var_w("Rn",32),var_w("length",32))),
                                                   mb(ite(var_b"wordhigher",
                                                          mb(mr(close
                                                                  (var("s",
                                                                       @{typ
                                                                       "32 word \<times> state"}),
                                                                   mop(Fst,
                                                                       var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"})))),
                                                             close
                                                               (var_w("v",32),
                                                                mb(mu(bop(Add,var_w("v",32),lw(4,32)),
                                                                      @{typ
                                                                      "32 word \<times> state"}),
                                                                   close
                                                                     (var_w("v",32),
                                                                      mw(close
                                                                           (var("s",
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}),
                                                                            tp[var_w("v",32),
                                                                               mop(Snd,
                                                                                   var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"}))])))))),
                                                          mu(lu,@{typ "32 word \<times> state"})),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         mb(forloop
                                                              (tp[ln 0,ln 14,
                                                                  close
                                                                    (var_n"i",
                                                                     ite(bop(Bit,
                                                                             var_w("registers",15),
                                                                             var_n"i"),
                                                                         mb(mb(mr(close
                                                                                    (var("s",
                                                                                         @{typ
                                                                                         "32 word \<times>
                                                                                          state"}),
                                                                                     mop(Fst,
                                                                                         var("s",
                                                                                             @{typ
                                                                                             "32 word \<times>
                                                                                              state"})))),
                                                                               close
                                                                                 (var_w("v",32),
                                                                                  mb(mb(mb(mu(tp[var_w("v",32),
                                                                                                 ln
                                                                                                  4],
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ
                                                                                                  "32 word \<times>
                                                                                                   nat"}),
                                                                                              md(call
                                                                                                   ("MemA",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (32 word \<times>
                                                                                                      state)"},
                                                                                                    var("v",
                                                                                                        @{typ
                                                                                                        "32 word \<times>
                                                                                                         nat"}),
                                                                                                    @{theory}),
                                                                                                 w32))),
                                                                                        close
                                                                                          (var_w("v",32),
                                                                                           mu(tp[var_w("v",32),
                                                                                                 mop(Cast
                                                                                                       w4,
                                                                                                     var_n"i")],
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}))),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ
                                                                                            "32 word \<times>
                                                                                             4 word"}),
                                                                                        md(call
                                                                                             ("write'R",
                                                                                              @{typ
                                                                                              "state \<Rightarrow>
                                                                                               (unit \<times>
                                                                                                state)"},
                                                                                              var("v",
                                                                                                  @{typ
                                                                                                  "32 word \<times>
                                                                                                   4 word"}),
                                                                                              @{theory}),
                                                                                           w32))))),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mb(mr(close
                                                                                       (var("s",
                                                                                            @{typ
                                                                                            "32 word \<times>
                                                                                             state"}),
                                                                                        mop(Fst,
                                                                                            var("s",
                                                                                                @{typ
                                                                                                "32 word \<times>
                                                                                                 state"})))),
                                                                                  close
                                                                                    (var_w("v",32),
                                                                                     mb(mu(bop(Add,
                                                                                               var_w("v",32),
                                                                                               lw(4,
                                                                                                  32)),
                                                                                           @{typ
                                                                                           "32 word \<times>
                                                                                            state"}),
                                                                                        close
                                                                                          (var_w("v",32),
                                                                                           mw(close
                                                                                                (var("s",
                                                                                                     @{typ
                                                                                                     "32 word \<times>
                                                                                                      state"}),
                                                                                                 tp[var_w("v",32),
                                                                                                    mop(Snd,
                                                                                                        var("s",
                                                                                                            @{typ
                                                                                                            "32 word \<times>
                                                                                                             state"}))])))))))),
                                                                         mu(lu,
                                                                            @{typ
                                                                            "32 word \<times> state"})))]),
                                                            close
                                                              (var_a HOLogic.unitT,
                                                               mb(mr(close
                                                                       (var("s",
                                                                            @{typ
                                                                            "32 word \<times> state"}),
                                                                        mop(Fst,
                                                                            var("s",
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"})))),
                                                                  close
                                                                    (var_w("v",32),
                                                                     mb(mb(mu(tp[var_w("v",32),ln 4],
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               state"}),
                                                                           close
                                                                             (var("v",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   nat"}),
                                                                              md(call
                                                                                   ("MemA",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (32 word \<times>
                                                                                      state)"},
                                                                                    var("v",
                                                                                        @{typ
                                                                                        "32 word \<times>
                                                                                         nat"}),
                                                                                    @{theory}),w32))),
                                                                        close
                                                                          (var_w("new_pc_value",32),
                                                                           mb(ite(var_b"wback",
                                                                                  ite(bop(Bit,
                                                                                          var_w("registers",15),
                                                                                          mop(Cast
                                                                                                HOLogic.natT,
                                                                                              var_w("n",4))),
                                                                                      md(call
                                                                                           ("write'R",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            tp[lx w32,
                                                                                               var_w("n",4)],
                                                                                            @{theory}),
                                                                                         w32),
                                                                                      md(call
                                                                                           ("write'R",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            tp[ite(var_b"increment",
                                                                                                   bop(Add,
                                                                                                       var_w("Rn",32),
                                                                                                       var_w("length",32)),
                                                                                                   bop(Sub,
                                                                                                       var_w("Rn",32),
                                                                                                       var_w("length",32))),
                                                                                               var_w("n",4)],
                                                                                            @{theory}),
                                                                                         w32)),
                                                                                  mu(lu,
                                                                                     @{typ
                                                                                     "32 word \<times>
                                                                                      state"})),
                                                                              close
                                                                                (var_a HOLogic.unitT,
                                                                                 mb(md(const
                                                                                         ("SPSR",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (PSR \<times>
                                                                                            state)"},
                                                                                          @{theory}),
                                                                                       w32),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ PSR}),
                                                                                       mb(mb(mb(mu(call
                                                                                                     ("reg'PSR",
                                                                                                      w32,
                                                                                                      var("v",
                                                                                                          @{typ PSR}),
                                                                                                      @{theory}),
                                                                                                   @{typ
                                                                                                   "32 word \<times>
                                                                                                    state"}),
                                                                                                close
                                                                                                  (var_w("v",32),
                                                                                                   mu(tp[var_w("v",32),
                                                                                                         lw(15,
                                                                                                            4),
                                                                                                         lt],
                                                                                                      @{typ
                                                                                                      "32 word \<times>
                                                                                                       state"}))),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ
                                                                                                    "32 word \<times>
                                                                                                     4 word \<times>
                                                                                                     bool"}),
                                                                                                md(call
                                                                                                     ("CPSRWriteByInstr",
                                                                                                      @{typ
                                                                                                      "state \<Rightarrow>
                                                                                                       (unit \<times>
                                                                                                        state)"},
                                                                                                      var("v",
                                                                                                          @{typ
                                                                                                          "32 word \<times>
                                                                                                           4 word \<times>
                                                                                                           bool"}),
                                                                                                      @{theory}),
                                                                                                   w32))),
                                                                                          close
                                                                                            (var_a
                                                                                               HOLogic.unitT,
                                                                                             md(call
                                                                                                  ("BranchWritePC",
                                                                                                   @{typ
                                                                                                   "state \<Rightarrow>
                                                                                                    (unit \<times>
                                                                                                     state)"},
                                                                                                   var_w("new_pc_value",32),
                                                                                                   @{theory}),
                                                                                                w32))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadMultipleUserRegisters",
   close
     (tp[var_b"increment",var_b"wordhigher",var_w("n",4),var_w("registers",15)],
      mb(call("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   call
                     ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lu,@{theory}),mu(lu,qTy)),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("CurrentModeIsUserOrSystem",
                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                     close
                       (var_b"v",
                        mb(ite(var_b"v",
                               call
                                 ("raise'exception",
                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                  call
                                    ("exception.UNPREDICTABLE",@{typ exception},
                                     ls"LoadMultipleUserRegisters",@{theory}),@{theory}),mu(lu,qTy)),
                           close
                             (var_a HOLogic.unitT,
                              mb(call
                                   ("BitCount",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                    var_w("registers",15),@{theory}),
                                 close
                                   (var_n"v",
                                    mb(mb(mu(mop(Cast w32,var_n"v"),qTy),
                                          close
                                            (var_w("v",32),mu(bop(Mul,lw(4,32),var_w("v",32)),qTy))),
                                       close
                                         (var_w("length",32),
                                          mb(ite(var_b"increment",
                                                 call
                                                   ("R",
                                                    @{typ
                                                    "state \<Rightarrow> (32 word \<times> state)"},
                                                    var_w("n",4),@{theory}),
                                                 mb(call
                                                      ("R",
                                                       @{typ
                                                       "state \<Rightarrow> (32 word \<times> state)"},
                                                       var_w("n",4),@{theory}),
                                                    close
                                                      (var_w("v",32),
                                                       mu(bop(Sub,var_w("v",32),var_w("length",32)),
                                                          qTy)))),
                                             close
                                               (var_w("v",32),
                                                mn(var_w("v",32),
                                                   mb(ite(var_b"wordhigher",
                                                          mb(mr(close
                                                                  (var("s",
                                                                       @{typ
                                                                       "32 word \<times> state"}),
                                                                   mop(Fst,
                                                                       var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"})))),
                                                             close
                                                               (var_w("v",32),
                                                                mb(mu(bop(Add,var_w("v",32),lw(4,32)),
                                                                      @{typ
                                                                      "32 word \<times> state"}),
                                                                   close
                                                                     (var_w("v",32),
                                                                      mw(close
                                                                           (var("s",
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}),
                                                                            tp[var_w("v",32),
                                                                               mop(Snd,
                                                                                   var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"}))])))))),
                                                          mu(lu,@{typ "32 word \<times> state"})),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         mb(forloop
                                                              (tp[ln 0,ln 14,
                                                                  close
                                                                    (var_n"i",
                                                                     ite(bop(Bit,
                                                                             var_w("registers",15),
                                                                             var_n"i"),
                                                                         mb(mb(mr(close
                                                                                    (var("s",
                                                                                         @{typ
                                                                                         "32 word \<times>
                                                                                          state"}),
                                                                                     mop(Fst,
                                                                                         var("s",
                                                                                             @{typ
                                                                                             "32 word \<times>
                                                                                              state"})))),
                                                                               close
                                                                                 (var_w("v",32),
                                                                                  mb(mb(mb(mu(tp[var_w("v",32),
                                                                                                 ln
                                                                                                  4],
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ
                                                                                                  "32 word \<times>
                                                                                                   nat"}),
                                                                                              md(call
                                                                                                   ("MemA",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (32 word \<times>
                                                                                                      state)"},
                                                                                                    var("v",
                                                                                                        @{typ
                                                                                                        "32 word \<times>
                                                                                                         nat"}),
                                                                                                    @{theory}),
                                                                                                 w32))),
                                                                                        close
                                                                                          (var_w("v",32),
                                                                                           mu(tp[var_w("v",32),
                                                                                                 mop(Cast
                                                                                                       w4,
                                                                                                     var_n"i"),
                                                                                                 lw(16,
                                                                                                    5)],
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}))),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ
                                                                                            "32 word \<times>
                                                                                             4 word \<times>
                                                                                             5 word"}),
                                                                                        md(call
                                                                                             ("write'Rmode",
                                                                                              @{typ
                                                                                              "state \<Rightarrow>
                                                                                               (unit \<times>
                                                                                                state)"},
                                                                                              var("v",
                                                                                                  @{typ
                                                                                                  "32 word \<times>
                                                                                                   4 word \<times>
                                                                                                   5 word"}),
                                                                                              @{theory}),
                                                                                           w32))))),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mb(mr(close
                                                                                       (var("s",
                                                                                            @{typ
                                                                                            "32 word \<times>
                                                                                             state"}),
                                                                                        mop(Fst,
                                                                                            var("s",
                                                                                                @{typ
                                                                                                "32 word \<times>
                                                                                                 state"})))),
                                                                                  close
                                                                                    (var_w("v",32),
                                                                                     mb(mu(bop(Add,
                                                                                               var_w("v",32),
                                                                                               lw(4,
                                                                                                  32)),
                                                                                           @{typ
                                                                                           "32 word \<times>
                                                                                            state"}),
                                                                                        close
                                                                                          (var_w("v",32),
                                                                                           mw(close
                                                                                                (var("s",
                                                                                                     @{typ
                                                                                                     "32 word \<times>
                                                                                                      state"}),
                                                                                                 tp[var_w("v",32),
                                                                                                    mop(Snd,
                                                                                                        var("s",
                                                                                                            @{typ
                                                                                                            "32 word \<times>
                                                                                                             state"}))])))))))),
                                                                         mu(lu,
                                                                            @{typ
                                                                            "32 word \<times> state"})))]),
                                                            close
                                                              (var_a HOLogic.unitT,
                                                               md(call
                                                                    ("IncPC",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},lu,
                                                                     @{theory}),w32))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadDual",
   close
     (tp[var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("t2",4),var_w("n",4),
         var("m",@{typ offset2})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset2}),
                            [(call("offset2.register_form2",@{typ offset2},var_w("m",4),@{theory}),
                              call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory})),
                             (call
                                ("offset2.immediate_form2",@{typ offset2},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                  mb(call
                                       ("MemA",
                                        @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                        tp[var_w("address",32),ln 4],@{theory}),
                                     close
                                       (var_w("v",32),
                                        mb(mb(mu(tp[var_w("v",32),var_w("t",4)],qTy),
                                              close
                                                (var("v",@{typ "32 word \<times> 4 word"}),
                                                 call
                                                   ("write'R",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},
                                                    var("v",@{typ "32 word \<times> 4 word"}),
                                                    @{theory}))),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(call
                                                   ("MemA",
                                                    @{typ
                                                    "state \<Rightarrow> (32 word \<times> state)"},
                                                    tp[bop(Add,var_w("address",32),lw(4,32)),ln 4],
                                                    @{theory}),
                                                 close
                                                   (var_w("v",32),
                                                    mb(mb(mu(tp[var_w("v",32),var_w("t2",4)],qTy),
                                                          close
                                                            (var("v",
                                                                 @{typ "32 word \<times> 4 word"}),
                                                             call
                                                               ("write'R",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (unit \<times> state)"},
                                                                var("v",
                                                                    @{typ "32 word \<times> 4 word"}),
                                                                @{theory}))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mb(ite(var_b"wback",
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[var_w("offset_addr",32),
                                                                       var_w("n",4)],@{theory}),
                                                                 mu(lu,qTy)),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                call
                                                                  ("IncPC",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},lu,
                                                                   @{theory}))))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadDualLiteral",
   close
     (tp[var_b"add",var_w("t",4),var_w("t2",4),var_w("imm32",32)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},lw(15,4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(ite(var_b"add",
                       mb(const
                            ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                          close
                            (var_w("v",32),
                             mb(mb(mu(tp[var_w("v",32),ln 4],qTy),
                                   close
                                     (var("v",@{typ "32 word \<times> nat"}),
                                      mu(call
                                           ("Align",w32,var("v",@{typ "32 word \<times> nat"}),
                                            @{theory}),qTy))),
                                close
                                  (var_w("v",32),mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy))))),
                       mb(const
                            ("PC",@{typ "state \<Rightarrow> (32 word \<times> state)"},@{theory}),
                          close
                            (var_w("v",32),
                             mb(mb(mu(tp[var_w("v",32),ln 4],qTy),
                                   close
                                     (var("v",@{typ "32 word \<times> nat"}),
                                      mu(call
                                           ("Align",w32,var("v",@{typ "32 word \<times> nat"}),
                                            @{theory}),qTy))),
                                close
                                  (var_w("v",32),mu(bop(Sub,var_w("v",32),var_w("imm32",32)),qTy)))))),
                   close
                     (var_w("address",32),
                      mb(call
                           ("MemA",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                            tp[var_w("address",32),ln 4],@{theory}),
                         close
                           (var_w("v",32),
                            mb(mb(mu(tp[var_w("v",32),var_w("t",4)],qTy),
                                  close
                                    (var("v",@{typ "32 word \<times> 4 word"}),
                                     call
                                       ("write'R",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                               close
                                 (var_a HOLogic.unitT,
                                  mb(call
                                       ("MemA",
                                        @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                        tp[bop(Add,var_w("address",32),lw(4,32)),ln 4],@{theory}),
                                     close
                                       (var_w("v",32),
                                        mb(mb(mu(tp[var_w("v",32),var_w("t2",4)],qTy),
                                              close
                                                (var("v",@{typ "32 word \<times> 4 word"}),
                                                 call
                                                   ("write'R",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},
                                                    var("v",@{typ "32 word \<times> 4 word"}),
                                                    @{theory}))),
                                           close
                                             (var_a HOLogic.unitT,
                                              call
                                                ("IncPC",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 lu,@{theory}))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadExclusive",
   close
     (tp[var_w("t",4),var_w("n",4),var_w("imm32",32)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("v",32),
                      mb(mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy),
                         close
                           (var_w("address",32),
                            mb(call
                                 ("MemA",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  tp[var_w("address",32),ln 4],@{theory}),
                               close
                                 (var_w("v",32),
                                  mb(mb(mu(tp[var_w("v",32),var_w("t",4)],qTy),
                                        close
                                          (var("v",@{typ "32 word \<times> 4 word"}),
                                           call
                                             ("write'R",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                                     close
                                       (var_a HOLogic.unitT,
                                        call
                                          ("IncPC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                           @{theory}))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadExclusiveByte",
   close
     (tp[var_w("t",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("address",32),
                      mb(call
                           ("MemA",@{typ "state \<Rightarrow> (8 word \<times> state)"},
                            tp[var_w("address",32),ln 1],@{theory}),
                         close
                           (var_w("v",8),
                            mb(mb(mb(mu(mop(Cast w32,var_w("v",8)),qTy),
                                     close(var_w("v",32),mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                  close
                                    (var("v",@{typ "32 word \<times> 4 word"}),
                                     call
                                       ("write'R",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                     @{theory}))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadExclusiveHalf",
   close
     (tp[var_w("t",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("address",32),
                      mb(call
                           ("MemA",@{typ "state \<Rightarrow> (16 word \<times> state)"},
                            tp[var_w("address",32),ln 2],@{theory}),
                         close
                           (var_w("v",16),
                            mb(mb(mb(mu(mop(Cast w32,var_w("v",16)),qTy),
                                     close(var_w("v",32),mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                  close
                                    (var("v",@{typ "32 word \<times> 4 word"}),
                                     call
                                       ("write'R",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                     @{theory}))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LoadExclusiveDoubleword",
   close
     (tp[var_w("t",4),var_w("t2",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("address",32),
                      mb(call
                           ("MemA",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            tp[var_w("address",32),ln 8],@{theory}),
                         close
                           (var_w("value",64),
                            mb(call
                                 ("BigEndian",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                  @{theory}),
                               close
                                 (var_b"v",
                                  mb(mb(mb(mu(ite(var_b"v",ex(var_w("value",64),ln 63,ln 32,w32),
                                                  ex(var_w("value",64),ln 31,ln 0,w32)),qTy),
                                           close
                                             (var_w("v",32),mu(tp[var_w("v",32),var_w("t",4)],qTy))),
                                        close
                                          (var("v",@{typ "32 word \<times> 4 word"}),
                                           call
                                             ("write'R",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              var("v",@{typ "32 word \<times> 4 word"}),@{theory}))),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(call
                                             ("BigEndian",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mb(mb(mu(ite(var_b"v",
                                                              ex(var_w("value",64),ln 31,ln 0,w32),
                                                              ex(var_w("value",64),ln 63,ln 32,w32)),
                                                          qTy),
                                                       close
                                                         (var_w("v",32),
                                                          mu(tp[var_w("v",32),var_w("t2",4)],qTy))),
                                                    close
                                                      (var("v",@{typ "32 word \<times> 4 word"}),
                                                       call
                                                         ("write'R",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          var("v",@{typ "32 word \<times> 4 word"}),
                                                          @{theory}))),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    call
                                                      ("IncPC",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       lu,@{theory}))))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreWord",
   close
     (tp[var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                  mb(ite(eq(var_w("t",4),lw(15,4)),
                                         call
                                           ("PCStoreValue",
                                            @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                            lu,@{theory}),
                                         call
                                           ("R",
                                            @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                            var_w("t",4),@{theory})),
                                     close
                                       (var_w("data",32),
                                        mb(call
                                             ("UnalignedSupport",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mb(ite(var_b"v",mu(lt,qTy),
                                                        mb(call
                                                             ("CurrentInstrSet",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (InstrSet \<times> state)"},lu,
                                                              @{theory}),
                                                           close
                                                             (var("v",@{typ InstrSet}),
                                                              mb(mu(eq(var("v",@{typ InstrSet}),
                                                                       lc("InstrSet_ARM","InstrSet",
                                                                          @{theory})),qTy),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           call
                                                                             ("Aligned",
                                                                              HOLogic.boolT,
                                                                              tp[var_w("address",32),
                                                                                 ln 4],@{theory}),
                                                                           var_b"v"),qTy)))))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           call
                                                             ("write'MemU",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var_w("data",32),
                                                                 var_w("address",32),ln 4],@{theory}),
                                                           call
                                                             ("write'MemU",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[lx w32,var_w("address",32),ln 4],
                                                              @{theory})))),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    mb(ite(var_b"wback",
                                                           call
                                                             ("write'R",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var_w("offset_addr",32),
                                                                 var_w("n",4)],@{theory}),mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          call
                                                            ("IncPC",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},lu,@{theory}))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreUnprivileged",
   close
     (tp[var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"postindex",var_w("Rn",32),var_w("offset_addr",32)),
                                  mb(ite(eq(var_w("t",4),lw(15,4)),
                                         call
                                           ("PCStoreValue",
                                            @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                            lu,@{theory}),
                                         call
                                           ("R",
                                            @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                            var_w("t",4),@{theory})),
                                     close
                                       (var_w("data",32),
                                        mb(call
                                             ("UnalignedSupport",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mb(ite(var_b"v",mu(lt,qTy),
                                                        mb(call
                                                             ("CurrentInstrSet",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (InstrSet \<times> state)"},lu,
                                                              @{theory}),
                                                           close
                                                             (var("v",@{typ InstrSet}),
                                                              mb(mu(eq(var("v",@{typ InstrSet}),
                                                                       lc("InstrSet_ARM","InstrSet",
                                                                          @{theory})),qTy),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           call
                                                                             ("Aligned",
                                                                              HOLogic.boolT,
                                                                              tp[var_w("address",32),
                                                                                 ln 4],@{theory}),
                                                                           var_b"v"),qTy)))))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           call
                                                             ("write'MemU_unpriv",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var_w("data",32),
                                                                 var_w("address",32),ln 4],@{theory}),
                                                           call
                                                             ("write'MemU_unpriv",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[lx w32,var_w("address",32),ln 4],
                                                              @{theory})))),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    mb(ite(var_b"postindex",
                                                           call
                                                             ("write'R",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var_w("offset_addr",32),
                                                                 var_w("n",4)],@{theory}),mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          call
                                                            ("IncPC",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},lu,@{theory}))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreByte",
   close
     (tp[var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               mb(mb(call
                                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                        var_w("t",4),@{theory}),
                                     close
                                       (var_w("v",32),
                                        mb(mb(mu(ex(var_w("v",32),ln 7,ln 0,w8),qTy),
                                              close
                                                (var_w("v",8),
                                                 mu(tp[var_w("v",8),
                                                       ite(var_b"index",var_w("offset_addr",32),
                                                           var_w("Rn",32)),ln 1],qTy))),
                                           close
                                             (var("v",@{typ "8 word \<times> 32 word \<times> nat"}),
                                              call
                                                ("write'MemU",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",
                                                     @{typ "8 word \<times> 32 word \<times> nat"}),
                                                 @{theory}))))),
                                  close
                                    (var_a HOLogic.unitT,
                                     mb(ite(var_b"wback",
                                            call
                                              ("write'R",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("offset_addr",32),var_w("n",4)],@{theory}),
                                            mu(lu,qTy)),
                                        close
                                          (var_a HOLogic.unitT,
                                           call
                                             ("IncPC",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                              @{theory})))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreByteUnprivileged",
   close
     (tp[var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               mb(mb(call
                                       ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                        var_w("t",4),@{theory}),
                                     close
                                       (var_w("v",32),
                                        mb(mb(mu(ex(var_w("v",32),ln 7,ln 0,w8),qTy),
                                              close
                                                (var_w("v",8),
                                                 mu(tp[var_w("v",8),
                                                       ite(var_b"postindex",var_w("Rn",32),
                                                           var_w("offset_addr",32)),ln 1],qTy))),
                                           close
                                             (var("v",@{typ "8 word \<times> 32 word \<times> nat"}),
                                              call
                                                ("write'MemU_unpriv",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",
                                                     @{typ "8 word \<times> 32 word \<times> nat"}),
                                                 @{theory}))))),
                                  close
                                    (var_a HOLogic.unitT,
                                     mb(ite(var_b"postindex",
                                            call
                                              ("write'R",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("offset_addr",32),var_w("n",4)],@{theory}),
                                            mu(lu,qTy)),
                                        close
                                          (var_a HOLogic.unitT,
                                           call
                                             ("IncPC",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                              @{theory})))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreHalf",
   close
     (tp[var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("n",4),var("m",@{typ offset1})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset1}),
                            [(call
                                ("offset1.register_form1",@{typ offset1},
                                 tp[var_w("m",4),var("shift_t",@{typ SRType}),var_n"shift_n"],
                                 @{theory}),
                              mb(call
                                   ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                    var_w("m",4),@{theory}),
                                 close
                                   (var_w("v",32),
                                    mb(mb(mr(close
                                               (var("s",qTy),
                                                call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                                          close
                                            (var("v0",@{typ PSR}),
                                             mb(mb(mb(mu(call
                                                           ("PSR.C",HOLogic.boolT,
                                                            var("v0",@{typ PSR}),@{theory}),qTy),
                                                      close
                                                        (var_b"v",
                                                         mu(tp[var_n"shift_n",var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "nat \<times> bool"}),
                                                      mu(tp[var("shift_t",@{typ SRType}),
                                                            var("v",@{typ "nat \<times> bool"})],qTy))),
                                                close
                                                  (var("v0",
                                                       @{typ "SRType \<times> nat \<times> bool"}),
                                                   mu(tp[var_w("v",32),
                                                         var("v0",
                                                             @{typ
                                                             "SRType \<times> nat \<times> bool"})],
                                                      qTy))))),
                                       close
                                         (var("v",
                                              @{typ
                                              "32 word \<times> SRType \<times> nat \<times> bool"}),
                                          call
                                            ("Shift",
                                             @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                             var("v",
                                                 @{typ
                                                 "32 word \<times> SRType \<times> nat \<times> bool"}),
                                             @{theory})))))),
                             (call
                                ("offset1.immediate_form1",@{typ offset1},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                  mb(call
                                       ("UnalignedSupport",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(bop(Or,var_b"v",
                                                     call
                                                       ("Aligned",HOLogic.boolT,
                                                        tp[var_w("address",32),ln 2],@{theory})),qTy),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(call
                                                          ("R",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (32 word \<times> state)"},var_w("t",4),
                                                           @{theory}),
                                                        close
                                                          (var_w("v",32),
                                                           mb(mb(mu(ex(var_w("v",32),ln 15,ln 0,w16),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",16),
                                                                    mu(tp[var_w("v",16),
                                                                          var_w("address",32),ln 2],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "16 word \<times>
                                                                      32 word \<times> nat"}),
                                                                 call
                                                                   ("write'MemU",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "16 word \<times>
                                                                         32 word \<times> nat"}),
                                                                    @{theory}))))),
                                                     call
                                                       ("write'MemU",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        tp[lx w16,var_w("address",32),ln 2],
                                                        @{theory})))),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(ite(var_b"wback",
                                                     call
                                                       ("write'R",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        tp[var_w("offset_addr",32),var_w("n",4)],
                                                        @{theory}),mu(lu,qTy)),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    call
                                                      ("IncPC",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       lu,@{theory}))))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreHalfUnprivileged",
   close
     (tp[var_b"add",var_b"postindex",var_w("t",4),var_w("n",4),var("m",@{typ offset2})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset2}),
                            [(call("offset2.register_form2",@{typ offset2},var_w("m",4),@{theory}),
                              call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory})),
                             (call
                                ("offset2.immediate_form2",@{typ offset2},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"postindex",var_w("Rn",32),var_w("offset_addr",32)),
                                  mb(call
                                       ("UnalignedSupport",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(bop(Or,var_b"v",
                                                     call
                                                       ("Aligned",HOLogic.boolT,
                                                        tp[var_w("address",32),ln 2],@{theory})),qTy),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(call
                                                          ("R",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (32 word \<times> state)"},var_w("t",4),
                                                           @{theory}),
                                                        close
                                                          (var_w("v",32),
                                                           mb(mb(mu(ex(var_w("v",32),ln 15,ln 0,w16),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",16),
                                                                    mu(tp[var_w("v",16),
                                                                          var_w("address",32),ln 2],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "16 word \<times>
                                                                      32 word \<times> nat"}),
                                                                 call
                                                                   ("write'MemU_unpriv",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "16 word \<times>
                                                                         32 word \<times> nat"}),
                                                                    @{theory}))))),
                                                     call
                                                       ("write'MemU_unpriv",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        tp[lx w16,var_w("address",32),ln 2],
                                                        @{theory})))),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(ite(var_b"postindex",
                                                     call
                                                       ("write'R",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        tp[var_w("offset_addr",32),var_w("n",4)],
                                                        @{theory}),mu(lu,qTy)),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    call
                                                      ("IncPC",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       lu,@{theory}))))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreMultiple",
   close
     (tp[var_b"increment",var_b"index",var_b"wback",var_w("n",4),var_w("registers",16)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(call
                           ("BitCount",@{typ "state \<Rightarrow> (nat \<times> state)"},
                            var_w("registers",16),@{theory}),
                         close
                           (var_n"v",
                            mb(mb(mu(mop(Cast w32,var_n"v"),qTy),
                                  close(var_w("v",32),mu(bop(Mul,lw(4,32),var_w("v",32)),qTy))),
                               close
                                 (var_w("length",32),
                                  mn(ite(var_b"increment",var_w("Rn",32),
                                         bop(Sub,var_w("Rn",32),var_w("length",32))),
                                     mb(ite(eq(var_b"index",var_b"increment"),
                                            mb(mr(close
                                                    (var("s",@{typ "32 word \<times> state"}),
                                                     mop(Fst,
                                                         var("s",@{typ "32 word \<times> state"})))),
                                               close
                                                 (var_w("v",32),
                                                  mb(mu(bop(Add,var_w("v",32),lw(4,32)),
                                                        @{typ "32 word \<times> state"}),
                                                     close
                                                       (var_w("v",32),
                                                        mw(close
                                                             (var("s",
                                                                  @{typ "32 word \<times> state"}),
                                                              tp[var_w("v",32),
                                                                 mop(Snd,
                                                                     var("s",
                                                                         @{typ
                                                                         "32 word \<times> state"}))])))))),
                                            mu(lu,@{typ "32 word \<times> state"})),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(forloop
                                                (tp[ln 0,ln 14,
                                                    close
                                                      (var_n"i",
                                                       ite(bop(Bit,var_w("registers",16),var_n"i"),
                                                           mb(ite(bop(And,
                                                                      eq(mop(Cast w4,var_n"i"),
                                                                         var_w("n",4)),
                                                                      bop(And,var_b"wback",
                                                                          mop(Not,
                                                                              eq(var_n"i",
                                                                                 call
                                                                                   ("LowestSetBit",
                                                                                    HOLogic.natT,
                                                                                    var_w("registers",16),
                                                                                    @{theory}))))),
                                                                  mb(mr(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "32 word \<times>
                                                                                state"}),
                                                                           mop(Fst,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "32 word \<times>
                                                                                    state"})))),
                                                                     close
                                                                       (var_w("v",32),
                                                                        mb(mu(tp[var_w("v",32),ln 4],
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               state"}),
                                                                           close
                                                                             (var("x",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   nat"}),
                                                                              md(call
                                                                                   ("write'MemA",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (unit \<times>
                                                                                      state)"},
                                                                                    tp[lx w32,
                                                                                       var("x",
                                                                                           @{typ
                                                                                           "32 word \<times>
                                                                                            nat"})],
                                                                                    @{theory}),w32))))),
                                                                  mb(mr(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "32 word \<times>
                                                                                state"}),
                                                                           mop(Fst,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "32 word \<times>
                                                                                    state"})))),
                                                                     close
                                                                       (var_w("v",32),
                                                                        mb(mu(tp[var_w("v",32),ln 4],
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               state"}),
                                                                           close
                                                                             (var("x",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   nat"}),
                                                                              mb(md(call
                                                                                      ("R",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (32 word \<times>
                                                                                         state)"},
                                                                                       mop(Cast w4,
                                                                                           var_n"i"),
                                                                                       @{theory}),
                                                                                    w32),
                                                                                 close
                                                                                   (var_w("v",32),
                                                                                    mb(mu(tp[var_w("v",32),
                                                                                             var("x",
                                                                                                 @{typ
                                                                                                 "32 word \<times>
                                                                                                  nat"})],
                                                                                          @{typ
                                                                                          "32 word \<times>
                                                                                           state"}),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               32 word \<times>
                                                                                               nat"}),
                                                                                          md(call
                                                                                               ("write'MemA",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (unit \<times>
                                                                                                  state)"},
                                                                                                var("v",
                                                                                                    @{typ
                                                                                                    "32 word \<times>
                                                                                                     32 word \<times>
                                                                                                     nat"}),
                                                                                                @{theory}),
                                                                                             w32)))))))))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mb(mr(close
                                                                         (var("s",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               state"}),
                                                                          mop(Fst,
                                                                              var("s",
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   state"})))),
                                                                    close
                                                                      (var_w("v",32),
                                                                       mb(mu(bop(Add,var_w("v",32),
                                                                                 lw(4,32)),
                                                                             @{typ
                                                                             "32 word \<times> state"}),
                                                                          close
                                                                            (var_w("v",32),
                                                                             mw(close
                                                                                  (var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"}),
                                                                                   tp[var_w("v",32),
                                                                                      mop(Snd,
                                                                                          var("s",
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}))])))))))),
                                                           mu(lu,@{typ "32 word \<times> state"})))]),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mb(ite(bop(Bit,var_w("registers",16),ln 15),
                                                        mb(mr(close
                                                                (var("s",
                                                                     @{typ "32 word \<times> state"}),
                                                                 mop(Fst,
                                                                     var("s",
                                                                         @{typ
                                                                         "32 word \<times> state"})))),
                                                           close
                                                             (var_w("v",32),
                                                              mb(mu(tp[var_w("v",32),ln 4],
                                                                    @{typ "32 word \<times> state"}),
                                                                 close
                                                                   (var("x",
                                                                        @{typ
                                                                        "32 word \<times> nat"}),
                                                                    mb(md(call
                                                                            ("PCStoreValue",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (32 word \<times>
                                                                               state)"},lu,@{theory}),
                                                                          w32),
                                                                       close
                                                                         (var_w("v",32),
                                                                          mb(mu(tp[var_w("v",32),
                                                                                   var("x",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        nat"})],
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     32 word \<times>
                                                                                     nat"}),
                                                                                md(call
                                                                                     ("write'MemA",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (unit \<times>
                                                                                        state)"},
                                                                                      var("v",
                                                                                          @{typ
                                                                                          "32 word \<times>
                                                                                           32 word \<times>
                                                                                           nat"}),
                                                                                      @{theory}),w32))))))))),
                                                        mu(lu,@{typ "32 word \<times> state"})),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       mb(ite(var_b"wback",
                                                              md(call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[ite(var_b"increment",
                                                                           bop(Add,var_w("Rn",32),
                                                                               var_w("length",32)),
                                                                           bop(Sub,var_w("Rn",32),
                                                                               var_w("length",32))),
                                                                       var_w("n",4)],@{theory}),w32),
                                                              mu(lu,@{typ "32 word \<times> state"})),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             md(call
                                                                  ("IncPC",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},lu,
                                                                   @{theory}),w32)))))))))))))))),
                mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreMultipleUserRegisters",
   close
     (tp[var_b"increment",var_b"wordhigher",var_w("n",4),var_w("registers",16)],
      mb(call("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   call
                     ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lu,@{theory}),mu(lu,qTy)),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("CurrentModeIsUserOrSystem",
                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                     close
                       (var_b"v",
                        mb(ite(var_b"v",
                               call
                                 ("raise'exception",
                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                  call
                                    ("exception.UNPREDICTABLE",@{typ exception},
                                     ls"StoreMultipleUserRegisters",@{theory}),@{theory}),mu(lu,qTy)),
                           close
                             (var_a HOLogic.unitT,
                              mb(call
                                   ("BitCount",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                    var_w("registers",16),@{theory}),
                                 close
                                   (var_n"v",
                                    mb(mb(mu(mop(Cast w32,var_n"v"),qTy),
                                          close
                                            (var_w("v",32),mu(bop(Mul,lw(4,32),var_w("v",32)),qTy))),
                                       close
                                         (var_w("length",32),
                                          mb(ite(var_b"increment",
                                                 call
                                                   ("R",
                                                    @{typ
                                                    "state \<Rightarrow> (32 word \<times> state)"},
                                                    var_w("n",4),@{theory}),
                                                 mb(call
                                                      ("R",
                                                       @{typ
                                                       "state \<Rightarrow> (32 word \<times> state)"},
                                                       var_w("n",4),@{theory}),
                                                    close
                                                      (var_w("v",32),
                                                       mu(bop(Sub,var_w("v",32),var_w("length",32)),
                                                          qTy)))),
                                             close
                                               (var_w("v",32),
                                                mn(var_w("v",32),
                                                   mb(ite(var_b"wordhigher",
                                                          mb(mr(close
                                                                  (var("s",
                                                                       @{typ
                                                                       "32 word \<times> state"}),
                                                                   mop(Fst,
                                                                       var("s",
                                                                           @{typ
                                                                           "32 word \<times> state"})))),
                                                             close
                                                               (var_w("v",32),
                                                                mb(mu(bop(Add,var_w("v",32),lw(4,32)),
                                                                      @{typ
                                                                      "32 word \<times> state"}),
                                                                   close
                                                                     (var_w("v",32),
                                                                      mw(close
                                                                           (var("s",
                                                                                @{typ
                                                                                "32 word \<times>
                                                                                 state"}),
                                                                            tp[var_w("v",32),
                                                                               mop(Snd,
                                                                                   var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"}))])))))),
                                                          mu(lu,@{typ "32 word \<times> state"})),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         mb(forloop
                                                              (tp[ln 0,ln 14,
                                                                  close
                                                                    (var_n"i",
                                                                     ite(bop(Bit,
                                                                             var_w("registers",16),
                                                                             var_n"i"),
                                                                         mb(mr(close
                                                                                 (var("s",
                                                                                      @{typ
                                                                                      "32 word \<times>
                                                                                       state"}),
                                                                                  mop(Fst,
                                                                                      var("s",
                                                                                          @{typ
                                                                                          "32 word \<times>
                                                                                           state"})))),
                                                                            close
                                                                              (var_w("v",32),
                                                                               mb(mb(mu(tp[var_w("v",32),
                                                                                           ln 4],
                                                                                        @{typ
                                                                                        "32 word \<times>
                                                                                         state"}),
                                                                                     close
                                                                                       (var("x",
                                                                                            @{typ
                                                                                            "32 word \<times>
                                                                                             nat"}),
                                                                                        mb(md(call
                                                                                                ("Rmode",
                                                                                                 @{typ
                                                                                                 "state \<Rightarrow>
                                                                                                  (32 word \<times>
                                                                                                   state)"},
                                                                                                 tp[mop(Cast
                                                                                                          w4,
                                                                                                        var_n"i"),
                                                                                                    lw(16,
                                                                                                       5)],
                                                                                                 @{theory}),
                                                                                              w32),
                                                                                           close
                                                                                             (var_w("v",32),
                                                                                              mb(mu(tp[var_w("v",32),
                                                                                                       var("x",
                                                                                                           @{typ
                                                                                                           "32 word \<times>
                                                                                                            nat"})],
                                                                                                    @{typ
                                                                                                    "32 word \<times>
                                                                                                     state"}),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ
                                                                                                        "32 word \<times>
                                                                                                         32 word \<times>
                                                                                                         nat"}),
                                                                                                    md(call
                                                                                                         ("write'MemA",
                                                                                                          @{typ
                                                                                                          "state \<Rightarrow>
                                                                                                           (unit \<times>
                                                                                                            state)"},
                                                                                                          var("v",
                                                                                                              @{typ
                                                                                                              "32 word \<times>
                                                                                                               32 word \<times>
                                                                                                               nat"}),
                                                                                                          @{theory}),
                                                                                                       w32))))))),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mb(mr(close
                                                                                             (var("s",
                                                                                                  @{typ
                                                                                                  "32 word \<times>
                                                                                                   state"}),
                                                                                              mop(Fst,
                                                                                                  var("s",
                                                                                                      @{typ
                                                                                                      "32 word \<times>
                                                                                                       state"})))),
                                                                                        close
                                                                                          (var_w("v",32),
                                                                                           mb(mu(bop(Add,
                                                                                                     var_w("v",32),
                                                                                                     lw(4,
                                                                                                        32)),
                                                                                                 @{typ
                                                                                                 "32 word \<times>
                                                                                                  state"}),
                                                                                              close
                                                                                                (var_w("v",32),
                                                                                                 mw(close
                                                                                                      (var("s",
                                                                                                           @{typ
                                                                                                           "32 word \<times>
                                                                                                            state"}),
                                                                                                       tp[var_w("v",32),
                                                                                                          mop(Snd,
                                                                                                              var("s",
                                                                                                                  @{typ
                                                                                                                  "32 word \<times>
                                                                                                                   state"}))])))))))))),
                                                                         mu(lu,
                                                                            @{typ
                                                                            "32 word \<times> state"})))]),
                                                            close
                                                              (var_a HOLogic.unitT,
                                                               mb(ite(bop(Bit,var_w("registers",16),
                                                                          ln 15),
                                                                      mb(mr(close
                                                                              (var("s",
                                                                                   @{typ
                                                                                   "32 word \<times>
                                                                                    state"}),
                                                                               mop(Fst,
                                                                                   var("s",
                                                                                       @{typ
                                                                                       "32 word \<times>
                                                                                        state"})))),
                                                                         close
                                                                           (var_w("v",32),
                                                                            mb(mu(tp[var_w("v",32),
                                                                                     ln 4],
                                                                                  @{typ
                                                                                  "32 word \<times>
                                                                                   state"}),
                                                                               close
                                                                                 (var("x",
                                                                                      @{typ
                                                                                      "32 word \<times>
                                                                                       nat"}),
                                                                                  mb(md(call
                                                                                          ("PCStoreValue",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (32 word \<times>
                                                                                             state)"},
                                                                                           lu,
                                                                                           @{theory}),
                                                                                        w32),
                                                                                     close
                                                                                       (var_w("v",32),
                                                                                        mb(mu(tp[var_w("v",32),
                                                                                                 var("x",
                                                                                                     @{typ
                                                                                                     "32 word \<times>
                                                                                                      nat"})],
                                                                                              @{typ
                                                                                              "32 word \<times>
                                                                                               state"}),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ
                                                                                                  "32 word \<times>
                                                                                                   32 word \<times>
                                                                                                   nat"}),
                                                                                              md(call
                                                                                                   ("write'MemA",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (unit \<times>
                                                                                                      state)"},
                                                                                                    var("v",
                                                                                                        @{typ
                                                                                                        "32 word \<times>
                                                                                                         32 word \<times>
                                                                                                         nat"}),
                                                                                                    @{theory}),
                                                                                                 w32))))))))),
                                                                      mu(lu,
                                                                         @{typ
                                                                         "32 word \<times> state"})),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     md(call
                                                                          ("IncPC",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           lu,@{theory}),w32))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreDual",
   close
     (tp[var_b"add",var_b"index",var_b"wback",var_w("t",4),var_w("t2",4),var_w("n",4),
         var("m",@{typ offset2})],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("Rn",32),
                      mb(cs(var("m",@{typ offset2}),
                            [(call("offset2.register_form2",@{typ offset2},var_w("m",4),@{theory}),
                              call
                                ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                 var_w("m",4),@{theory})),
                             (call
                                ("offset2.immediate_form2",@{typ offset2},var_w("imm32",32),
                                 @{theory}),mu(var_w("imm32",32),qTy))],@{context}),
                         close
                           (var_w("offset",32),
                            let'
                              (var_w("offset_addr",32),
                               ite(var_b"add",bop(Add,var_w("Rn",32),var_w("offset",32)),
                                   bop(Sub,var_w("Rn",32),var_w("offset",32))),
                               let'
                                 (var_w("address",32),
                                  ite(var_b"index",var_w("offset_addr",32),var_w("Rn",32)),
                                  mb(mb(call
                                          ("R",
                                           @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                           var_w("t",4),@{theory}),
                                        close
                                          (var_w("v",32),
                                           mb(mu(tp[var_w("v",32),var_w("address",32),ln 4],qTy),
                                              close
                                                (var("v",
                                                     @{typ "32 word \<times> 32 word \<times> nat"}),
                                                 call
                                                   ("write'MemA",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},
                                                    var("v",
                                                        @{typ
                                                        "32 word \<times> 32 word \<times> nat"}),
                                                    @{theory}))))),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(mb(call
                                                ("R",
                                                 @{typ
                                                 "state \<Rightarrow> (32 word \<times> state)"},
                                                 var_w("t2",4),@{theory}),
                                              close
                                                (var_w("v",32),
                                                 mb(mu(tp[var_w("v",32),
                                                          bop(Add,var_w("address",32),lw(4,32)),ln 4],
                                                       qTy),
                                                    close
                                                      (var("v",
                                                           @{typ
                                                           "32 word \<times> 32 word \<times> nat"}),
                                                       call
                                                         ("write'MemA",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          var("v",
                                                              @{typ
                                                              "32 word \<times> 32 word \<times> nat"}),
                                                          @{theory}))))),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(ite(var_b"wback",
                                                     call
                                                       ("write'R",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        tp[var_w("offset_addr",32),var_w("n",4)],
                                                        @{theory}),mu(lu,qTy)),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    call
                                                      ("IncPC",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       lu,@{theory}))))))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreExclusive",
   close
     (tp[var_w("d",4),var_w("t",4),var_w("n",4),var_w("imm32",32)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("v",32),
                      mb(mu(bop(Add,var_w("v",32),var_w("imm32",32)),qTy),
                         close
                           (var_w("address",32),
                            mb(ite(call
                                     ("ExclusiveMonitorsPass",HOLogic.boolT,
                                      tp[var_w("address",32),ln 4],@{theory}),
                                   mb(mb(call
                                           ("R",
                                            @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                            var_w("t",4),@{theory}),
                                         close
                                           (var_w("v",32),
                                            mb(mu(tp[var_w("v",32),var_w("address",32),ln 4],qTy),
                                               close
                                                 (var("v",
                                                      @{typ "32 word \<times> 32 word \<times> nat"}),
                                                  call
                                                    ("write'MemA",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     var("v",
                                                         @{typ
                                                         "32 word \<times> 32 word \<times> nat"}),
                                                     @{theory}))))),
                                      close
                                        (var_a HOLogic.unitT,
                                         call
                                           ("write'R",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},
                                            tp[lw(0,32),var_w("d",4)],@{theory}))),
                                   call
                                     ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                      tp[lw(1,32),var_w("d",4)],@{theory})),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                     @{theory}))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreExclusiveByte",
   close
     (tp[var_w("d",4),var_w("t",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("address",32),
                      mb(ite(call
                               ("ExclusiveMonitorsPass",HOLogic.boolT,tp[var_w("address",32),ln 1],
                                @{theory}),
                             mb(mb(call
                                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                      var_w("t",4),@{theory}),
                                   close
                                     (var_w("v",32),
                                      mb(mb(mu(ex(var_w("v",32),ln 7,ln 0,w8),qTy),
                                            close
                                              (var_w("v",8),
                                               mu(tp[var_w("v",8),var_w("address",32),ln 1],qTy))),
                                         close
                                           (var("v",@{typ "8 word \<times> 32 word \<times> nat"}),
                                            call
                                              ("write'MemA",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               var("v",@{typ "8 word \<times> 32 word \<times> nat"}),
                                               @{theory}))))),
                                close
                                  (var_a HOLogic.unitT,
                                   call
                                     ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                      tp[lw(0,32),var_w("d",4)],@{theory}))),
                             call
                               ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                tp[lw(1,32),var_w("d",4)],@{theory})),
                         close
                           (var_a HOLogic.unitT,
                            call
                              ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                               @{theory}))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreExclusiveHalf",
   close
     (tp[var_w("d",4),var_w("t",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("address",32),
                      mb(ite(call
                               ("ExclusiveMonitorsPass",HOLogic.boolT,tp[var_w("address",32),ln 2],
                                @{theory}),
                             mb(mb(call
                                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                      var_w("t",4),@{theory}),
                                   close
                                     (var_w("v",32),
                                      mb(mb(mu(ex(var_w("v",32),ln 15,ln 0,w16),qTy),
                                            close
                                              (var_w("v",16),
                                               mu(tp[var_w("v",16),var_w("address",32),ln 2],qTy))),
                                         close
                                           (var("v",@{typ "16 word \<times> 32 word \<times> nat"}),
                                            call
                                              ("write'MemA",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               var("v",
                                                   @{typ "16 word \<times> 32 word \<times> nat"}),
                                               @{theory}))))),
                                close
                                  (var_a HOLogic.unitT,
                                   call
                                     ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                      tp[lw(0,32),var_w("d",4)],@{theory}))),
                             call
                               ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                tp[lw(1,32),var_w("d",4)],@{theory})),
                         close
                           (var_a HOLogic.unitT,
                            call
                              ("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                               @{theory}))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreExclusiveDoubleword",
   close
     (tp[var_w("d",4),var_w("t",4),var_w("t2",4),var_w("n",4)],
      mb(call
           ("NullCheckIfThumbEE",@{typ "state \<Rightarrow> (bool \<times> state)"},var_w("n",4),
            @{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mb(call
                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),
                      @{theory}),
                   close
                     (var_w("address",32),
                      mb(call
                           ("BigEndian",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                            @{theory}),
                         close
                           (var_b"v",
                            mb(ite(var_b"v",
                                   mb(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("t",4),@{theory}),
                                      close
                                        (var_w("v",32),
                                         mb(call
                                              ("R",
                                               @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                               var_w("t2",4),@{theory}),
                                            close
                                              (var_w("v0",32),
                                               mu(cc[var_w("v",32),var_w("v0",32)],qTy))))),
                                   mb(call
                                        ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                         var_w("t2",4),@{theory}),
                                      close
                                        (var_w("v",32),
                                         mb(call
                                              ("R",
                                               @{typ "state \<Rightarrow> (32 word \<times> state)"},
                                               var_w("t",4),@{theory}),
                                            close
                                              (var_w("v0",32),
                                               mu(cc[var_w("v",32),var_w("v0",32)],qTy)))))),
                               close
                                 (var_w("value",64),
                                  mb(ite(call
                                           ("ExclusiveMonitorsPass",HOLogic.boolT,
                                            tp[var_w("address",32),ln 8],@{theory}),
                                         mb(call
                                              ("write'MemA",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("value",64),var_w("address",32),ln 8],
                                               @{theory}),
                                            close
                                              (var_a HOLogic.unitT,
                                               call
                                                 ("write'R",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[lw(0,32),var_w("d",4)],@{theory}))),
                                         call
                                           ("write'R",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},
                                            tp[lw(1,32),var_w("d",4)],@{theory})),
                                     close
                                       (var_a HOLogic.unitT,
                                        call
                                          ("IncPC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                           @{theory}))))))))),mu(lu,qTy))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ClearExclusive",
   call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Swap",
   close
     (tp[var_b"b",var_w("t",4),var_w("t2",4),var_w("n",4)],
      mb(call("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
         close
           (var_w("Rn",32),
            mb(ite(var_b"b",
                   mb(call
                        ("MemA",@{typ "state \<Rightarrow> (8 word \<times> state)"},
                         tp[var_w("Rn",32),ln 1],@{theory}),
                      close
                        (var_w("data",8),
                         mb(mb(call
                                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var_w("t2",4),@{theory}),
                               close
                                 (var_w("v",32),
                                  mb(mb(mu(ex(var_w("v",32),ln 7,ln 0,w8),qTy),
                                        close
                                          (var_w("v",8),mu(tp[var_w("v",8),var_w("Rn",32),ln 1],qTy))),
                                     close
                                       (var("v",@{typ "8 word \<times> 32 word \<times> nat"}),
                                        call
                                          ("write'MemA",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "8 word \<times> 32 word \<times> nat"}),
                                           @{theory}))))),
                            close
                              (var_a HOLogic.unitT,
                               call
                                 ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  tp[mop(Cast w32,var_w("data",8)),var_w("t",4)],@{theory}))))),
                   mb(call
                        ("MemA",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                         tp[var_w("Rn",32),ln 4],@{theory}),
                      close
                        (var_w("data",32),
                         mb(mb(call
                                 ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                  var_w("t2",4),@{theory}),
                               close
                                 (var_w("v",32),
                                  mb(mu(tp[var_w("v",32),var_w("Rn",32),ln 4],qTy),
                                     close
                                       (var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                                        call
                                          ("write'MemA",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "32 word \<times> 32 word \<times> nat"}),
                                           @{theory}))))),
                            close
                              (var_a HOLogic.unitT,
                               mb(call
                                    ("ROR",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                     tp[var_w("data",32),
                                        bop(Mul,ln 8,
                                            mop(Cast HOLogic.natT,
                                                ex(var_w("Rn",32),ln 1,ln 0,(Word_Lib.mk_wordT 2))))],
                                     @{theory}),
                                  close
                                    (var_w("v",32),
                                     mb(mu(tp[var_w("v",32),var_w("t",4)],qTy),
                                        close
                                          (var("v",@{typ "32 word \<times> 4 word"}),
                                           call
                                             ("write'R",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              var("v",@{typ "32 word \<times> 4 word"}),@{theory})))))))))),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ChangeProcessorState",
   close
     (tp[var_b"enable",var_b"disable",var_b"affectA",var_b"affectI",var_b"affectF",
         var("changemode",@{typ "5 word option"})],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ PSR}),
                         mn(var("v",@{typ PSR}),
                            mb(ite(var_b"enable",
                                   mb(ite(var_b"affectA",
                                          mb(mr(close
                                                  (var("s",@{typ "PSR \<times> state"}),
                                                   mop(Fst,var("s",@{typ "PSR \<times> state"})))),
                                             close
                                               (var("v",@{typ PSR}),
                                                mb(mb(mu(tp[var("v",@{typ PSR}),lf],
                                                         @{typ "PSR \<times> state"}),
                                                      close
                                                        (var("v",@{typ "PSR \<times> bool"}),
                                                         mu(rupd
                                                              ("PSR.A",
                                                               var("v",@{typ "PSR \<times> bool"}),
                                                               @{theory}),
                                                            @{typ "PSR \<times> state"}))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mw(close
                                                           (var("s",@{typ "PSR \<times> state"}),
                                                            tp[var("v",@{typ PSR}),
                                                               mop(Snd,
                                                                   var("s",
                                                                       @{typ "PSR \<times> state"}))])))))),
                                          mu(lu,@{typ "PSR \<times> state"})),
                                      close
                                        (var_a HOLogic.unitT,
                                         mb(ite(var_b"affectI",
                                                mb(mr(close
                                                        (var("s",@{typ "PSR \<times> state"}),
                                                         mop(Fst,
                                                             var("s",@{typ "PSR \<times> state"})))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mb(mb(mu(tp[var("v",@{typ PSR}),lf],
                                                               @{typ "PSR \<times> state"}),
                                                            close
                                                              (var("v",@{typ "PSR \<times> bool"}),
                                                               mu(rupd
                                                                    ("PSR.I",
                                                                     var("v",
                                                                         @{typ "PSR \<times> bool"}),
                                                                     @{theory}),
                                                                  @{typ "PSR \<times> state"}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mw(close
                                                                 (var("s",
                                                                      @{typ "PSR \<times> state"}),
                                                                  tp[var("v",@{typ PSR}),
                                                                     mop(Snd,
                                                                         var("s",
                                                                             @{typ
                                                                             "PSR \<times> state"}))])))))),
                                                mu(lu,@{typ "PSR \<times> state"})),
                                            close
                                              (var_a HOLogic.unitT,
                                               ite(var_b"affectF",
                                                   mb(mr(close
                                                           (var("s",@{typ "PSR \<times> state"}),
                                                            mop(Fst,
                                                                var("s",@{typ "PSR \<times> state"})))),
                                                      close
                                                        (var("v",@{typ PSR}),
                                                         mb(mb(mu(tp[var("v",@{typ PSR}),lf],
                                                                  @{typ "PSR \<times> state"}),
                                                               close
                                                                 (var("v",@{typ "PSR \<times> bool"}),
                                                                  mu(rupd
                                                                       ("PSR.F",
                                                                        var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        @{theory}),
                                                                     @{typ "PSR \<times> state"}))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mw(close
                                                                    (var("s",
                                                                         @{typ "PSR \<times> state"}),
                                                                     tp[var("v",@{typ PSR}),
                                                                        mop(Snd,
                                                                            var("s",
                                                                                @{typ
                                                                                "PSR \<times> state"}))])))))),
                                                   mu(lu,@{typ "PSR \<times> state"})))))),
                                   mu(lu,@{typ "PSR \<times> state"})),
                               close
                                 (var_a HOLogic.unitT,
                                  mb(ite(var_b"disable",
                                         mb(ite(var_b"affectA",
                                                mb(mr(close
                                                        (var("s",@{typ "PSR \<times> state"}),
                                                         mop(Fst,
                                                             var("s",@{typ "PSR \<times> state"})))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mb(mb(mu(tp[var("v",@{typ PSR}),lt],
                                                               @{typ "PSR \<times> state"}),
                                                            close
                                                              (var("v",@{typ "PSR \<times> bool"}),
                                                               mu(rupd
                                                                    ("PSR.A",
                                                                     var("v",
                                                                         @{typ "PSR \<times> bool"}),
                                                                     @{theory}),
                                                                  @{typ "PSR \<times> state"}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mw(close
                                                                 (var("s",
                                                                      @{typ "PSR \<times> state"}),
                                                                  tp[var("v",@{typ PSR}),
                                                                     mop(Snd,
                                                                         var("s",
                                                                             @{typ
                                                                             "PSR \<times> state"}))])))))),
                                                mu(lu,@{typ "PSR \<times> state"})),
                                            close
                                              (var_a HOLogic.unitT,
                                               mb(ite(var_b"affectI",
                                                      mb(mr(close
                                                              (var("s",@{typ "PSR \<times> state"}),
                                                               mop(Fst,
                                                                   var("s",
                                                                       @{typ "PSR \<times> state"})))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mb(mb(mu(tp[var("v",@{typ PSR}),lt],
                                                                     @{typ "PSR \<times> state"}),
                                                                  close
                                                                    (var("v",
                                                                         @{typ "PSR \<times> bool"}),
                                                                     mu(rupd
                                                                          ("PSR.I",
                                                                           var("v",
                                                                               @{typ
                                                                               "PSR \<times> bool"}),
                                                                           @{theory}),
                                                                        @{typ "PSR \<times> state"}))),
                                                               close
                                                                 (var("v",@{typ PSR}),
                                                                  mw(close
                                                                       (var("s",
                                                                            @{typ
                                                                            "PSR \<times> state"}),
                                                                        tp[var("v",@{typ PSR}),
                                                                           mop(Snd,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "PSR \<times>
                                                                                    state"}))])))))),
                                                      mu(lu,@{typ "PSR \<times> state"})),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     ite(var_b"affectF",
                                                         mb(mr(close
                                                                 (var("s",
                                                                      @{typ "PSR \<times> state"}),
                                                                  mop(Fst,
                                                                      var("s",
                                                                          @{typ
                                                                          "PSR \<times> state"})))),
                                                            close
                                                              (var("v",@{typ PSR}),
                                                               mb(mb(mu(tp[var("v",@{typ PSR}),lt],
                                                                        @{typ "PSR \<times> state"}),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "PSR \<times> bool"}),
                                                                        mu(rupd
                                                                             ("PSR.F",
                                                                              var("v",
                                                                                  @{typ
                                                                                  "PSR \<times> bool"}),
                                                                              @{theory}),
                                                                           @{typ
                                                                           "PSR \<times> state"}))),
                                                                  close
                                                                    (var("v",@{typ PSR}),
                                                                     mw(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "PSR \<times> state"}),
                                                                           tp[var("v",@{typ PSR}),
                                                                              mop(Snd,
                                                                                  var("s",
                                                                                      @{typ
                                                                                      "PSR \<times>
                                                                                       state"}))])))))),
                                                         mu(lu,@{typ "PSR \<times> state"})))))),
                                         mu(lu,@{typ "PSR \<times> state"})),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(cs(var("changemode",@{typ "5 word option"}),
                                              [(mop(Some,var_w("mode",5)),
                                                mb(mr(close
                                                        (var("s",@{typ "PSR \<times> state"}),
                                                         mop(Fst,
                                                             var("s",@{typ "PSR \<times> state"})))),
                                                   close
                                                     (var("v",@{typ PSR}),
                                                      mb(mb(mu(tp[var("v",@{typ PSR}),
                                                                  var_w("mode",5)],
                                                               @{typ "PSR \<times> state"}),
                                                            close
                                                              (var("v",@{typ "PSR \<times> 5 word"}),
                                                               mu(rupd
                                                                    ("PSR.M",
                                                                     var("v",
                                                                         @{typ
                                                                         "PSR \<times> 5 word"}),
                                                                     @{theory}),
                                                                  @{typ "PSR \<times> state"}))),
                                                         close
                                                           (var("v",@{typ PSR}),
                                                            mw(close
                                                                 (var("s",
                                                                      @{typ "PSR \<times> state"}),
                                                                  tp[var("v",@{typ PSR}),
                                                                     mop(Snd,
                                                                         var("s",
                                                                             @{typ
                                                                             "PSR \<times> state"}))]))))))),
                                               (lo (Word_Lib.mk_wordT 5),
                                                mu(lu,@{typ "PSR \<times> state"}))],@{context}),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(mr(close
                                                      (var("s",@{typ "PSR \<times> state"}),
                                                       mop(Fst,var("s",@{typ "PSR \<times> state"})))),
                                                 close
                                                   (var("v",@{typ PSR}),
                                                    mb(mb(mb(mu(call
                                                                  ("reg'PSR",w32,
                                                                   var("v",@{typ PSR}),@{theory}),
                                                                @{typ "PSR \<times> state"}),
                                                             close
                                                               (var_w("v",32),
                                                                mu(tp[var_w("v",32),lw(15,4),lf],
                                                                   @{typ "PSR \<times> state"}))),
                                                          close
                                                            (var("v",
                                                                 @{typ
                                                                 "32 word \<times>
                                                                  4 word \<times> bool"}),
                                                             md(call
                                                                  ("CPSRWriteByInstr",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   var("v",
                                                                       @{typ
                                                                       "32 word \<times>
                                                                        4 word \<times> bool"}),
                                                                   @{theory}),@{typ PSR}))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mb(mr(close
                                                                  (var("s",
                                                                       @{typ "PSR \<times> state"}),
                                                                   call
                                                                     ("state.CPSR",@{typ PSR},
                                                                      mop(Snd,
                                                                          var("s",
                                                                              @{typ
                                                                              "PSR \<times> state"})),
                                                                      @{theory}))),
                                                             close
                                                               (var("v",@{typ PSR}),
                                                                mb(mb(mb(mu(call
                                                                              ("PSR.M",
                                                                               (Word_Lib.mk_wordT 5),
                                                                               var("v",@{typ PSR}),
                                                                               @{theory}),
                                                                            @{typ
                                                                            "PSR \<times> state"}),
                                                                         close
                                                                           (var_w("v",5),
                                                                            mu(eq(var_w("v",5),
                                                                                  lw(26,5)),
                                                                               @{typ
                                                                               "PSR \<times> state"}))),
                                                                      close
                                                                        (var_b"b",
                                                                         ite(var_b"b",
                                                                             mb(md(call
                                                                                     ("CurrentInstrSet",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (InstrSet \<times>
                                                                                        state)"},lu,
                                                                                      @{theory}),
                                                                                   @{typ PSR}),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ InstrSet}),
                                                                                   mu(eq(var("v",
                                                                                             @{typ InstrSet}),
                                                                                         lc("InstrSet_ThumbEE",
                                                                                            "InstrSet",
                                                                                            @{theory})),
                                                                                      @{typ
                                                                                      "PSR \<times>
                                                                                       state"}))),
                                                                             mu(lf,
                                                                                @{typ
                                                                                "PSR \<times> state"})))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          md(call
                                                                               ("raise'exception",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (unit \<times>
                                                                                  state)"},
                                                                                call
                                                                                  ("exception.UNPREDICTABLE",
                                                                                   @{typ exception},
                                                                                   ls
                                                                                    "ChangeProcessorState",
                                                                                   @{theory}),
                                                                                @{theory}),
                                                                             @{typ PSR}),
                                                                          mu(lu,
                                                                             @{typ
                                                                             "PSR \<times> state"}))))))))))))))))))),
                   mu(lu,qTy)),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ExceptionReturn",
   mb(call
        ("CurrentModeIsUserOrSystem",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
      close
        (var_b"v",
         mb(ite(var_b"v",mu(lt,qTy),
                mb(call
                     ("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                      @{theory}),
                   close
                     (var("v",@{typ InstrSet}),
                      mu(eq(var("v",@{typ InstrSet}),lc("InstrSet_ThumbEE","InstrSet",@{theory})),
                         qTy)))),
            close
              (var_b"b",
               ite(var_b"b",
                   call
                     ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      call("exception.UNPREDICTABLE",@{typ exception},ls"ExceptionReturn",@{theory}),
                      @{theory}),
                   mb(call
                        ("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                         @{theory}),
                      close
                        (var_b"v",
                         mb(ite(var_b"v",
                                mr(close
                                     (var("s",qTy),call("state.ELR_hyp",w32,var("s",qTy),@{theory}))),
                                call
                                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                   lw(14,4),@{theory})),
                            close
                              (var_w("new_pc_value",32),
                               mb(const
                                    ("SPSR",@{typ "state \<Rightarrow> (PSR \<times> state)"},
                                     @{theory}),
                                  close
                                    (var("v",@{typ PSR}),
                                     mb(mb(mb(mu(call("reg'PSR",w32,var("v",@{typ PSR}),@{theory}),
                                                 qTy),
                                              close
                                                (var_w("v",32),mu(tp[var_w("v",32),lw(15,4),lt],qTy))),
                                           close
                                             (var("v",@{typ "32 word \<times> 4 word \<times> bool"}),
                                              call
                                                ("CPSRWriteByInstr",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var("v",
                                                     @{typ "32 word \<times> 4 word \<times> bool"}),
                                                 @{theory}))),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(mr(close
                                                   (var("s",qTy),
                                                    call
                                                      ("state.CPSR",@{typ PSR},var("s",qTy),
                                                       @{theory}))),
                                              close
                                                (var("v",@{typ PSR}),
                                                 mb(mb(mb(mu(call
                                                               ("PSR.M",(Word_Lib.mk_wordT 5),
                                                                var("v",@{typ PSR}),@{theory}),qTy),
                                                          close
                                                            (var_w("v",5),
                                                             mu(eq(var_w("v",5),lw(26,5)),qTy))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(call
                                                                   ("CurrentInstrSet",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (InstrSet \<times> state)"},lu,
                                                                    @{theory}),
                                                                 close
                                                                   (var("v",@{typ InstrSet}),
                                                                    mu(eq(var("v",@{typ InstrSet}),
                                                                          lc("InstrSet_ThumbEE",
                                                                             "InstrSet",@{theory})),
                                                                       qTy))),mu(lf,qTy)))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           call
                                                             ("raise'exception",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              call
                                                                ("exception.UNPREDICTABLE",
                                                                 @{typ exception},
                                                                 ls"ExceptionReturn",@{theory}),
                                                              @{theory}),
                                                           call
                                                             ("BranchWritePC",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              var_w("new_pc_value",32),@{theory}))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'HypervisorCall",
   close
     (var_w("imm16",16),
      mb(call("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mb(mu(mop(Not,var_b"v"),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         mb(call
                              ("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                               @{theory}),
                            close
                              (var_b"b",
                               ite(var_b"b",mu(lt,qTy),
                                   mb(call
                                        ("CurrentModeIsNotUser",
                                         @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                         @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))))))))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         call
                           ("exception.UNPREDICTABLE",@{typ exception},ls"HypervisorCall",@{theory}),
                         @{theory}),
                      mb(mr(close
                              (var("s",qTy),call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ CP15}),
                            mb(mb(mb(mu(call("CP15.SCR",@{typ SCR},var("v",@{typ CP15}),@{theory}),
                                        qTy),
                                     close
                                       (var("v",@{typ SCR}),
                                        mu(call
                                             ("SCR.HCE",HOLogic.boolT,var("v",@{typ SCR}),@{theory}),
                                           qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(call
                                           ("CurrentModeIsHyp",
                                            @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                            @{theory}),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                call
                                                  ("raise'exception",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   call
                                                     ("exception.UNPREDICTABLE",@{typ exception},
                                                      ls"HypervisorCall",@{theory}),@{theory}),
                                                call
                                                  ("TakeUndefInstrException",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},lu,
                                                   @{theory})))),
                                      call
                                        ("CallHypervisor",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         var_w("imm16",16),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MoveToRegisterFromSpecial",
   close
     (tp[var_b"read_spsr",var_w("d",4)],
      mb(ite(var_b"read_spsr",
             mb(call
                  ("CurrentModeIsUserOrSystem",@{typ "state \<Rightarrow> (bool \<times> state)"},
                   lu,@{theory}),
                close
                  (var_b"b",
                   ite(var_b"b",
                       call
                         ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                          call
                            ("exception.UNPREDICTABLE",@{typ exception},
                             ls"MoveToRegisterFromSpecial",@{theory}),@{theory}),
                       mb(const("SPSR",@{typ "state \<Rightarrow> (PSR \<times> state)"},@{theory}),
                          close
                            (var("v",@{typ PSR}),
                             mb(mb(mu(call("reg'PSR",w32,var("v",@{typ PSR}),@{theory}),qTy),
                                   close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                                close
                                  (var("v",@{typ "32 word \<times> 4 word"}),
                                   call
                                     ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                      var("v",@{typ "32 word \<times> 4 word"}),@{theory})))))))),
             mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                close
                  (var("v",@{typ PSR}),
                   mb(mb(mb(mu(call("reg'PSR",w32,var("v",@{typ PSR}),@{theory}),qTy),
                            close(var_w("v",32),mu(bop(BAnd,var_w("v",32),lw(4177462239,32)),qTy))),
                         close(var_w("v",32),mu(tp[var_w("v",32),var_w("d",4)],qTy))),
                      close
                        (var("v",@{typ "32 word \<times> 4 word"}),
                         call
                           ("write'R",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 4 word"}),@{theory})))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MoveToRegisterFromBankedOrSpecial",
   close
     (tp[var_b"read_spsr",var_w("SYSm",5),var_w("d",4)],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mu(mop(Not,var_b"v"),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         call
                           ("exception.UNPREDICTABLE",@{typ exception},
                            ls"MoveToRegisterFromBankedOrSpecial",@{theory}),@{theory}),
                      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ PSR}),
                            mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),
                                  qTy),
                               close
                                 (var_w("mode",5),
                                  mb(ite(var_b"read_spsr",
                                         mb(call
                                              ("SPSRAccessValid",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("SYSm",5),var_w("mode",5)],@{theory}),
                                            close
                                              (var_u"_0",
                                               itb([(eq(var_w("SYSm",5),lw(14,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_fiq",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(var_w("SYSm",5),lw(16,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_irq",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(var_w("SYSm",5),lw(18,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_svc",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(var_w("SYSm",5),lw(20,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_abt",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(var_w("SYSm",5),lw(22,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_und",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(var_w("SYSm",5),lw(28,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_mon",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(var_w("SYSm",5),lw(30,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_hyp",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mu(call
                                                                      ("reg'PSR",w32,
                                                                       var("v",@{typ PSR}),@{theory}),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v",32),
                                                                    mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory}))))))],mu(lu,qTy)))),
                                         mb(call
                                              ("BankedRegisterAccessValid",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("SYSm",5),var_w("mode",5)],@{theory}),
                                            close
                                              (var_a HOLogic.unitT,
                                               itb([(eq(ex(var_w("SYSm",5),ln 4,ln 3,
                                                           (Word_Lib.mk_wordT 2)),lw(0,2)),
                                                     mb(call
                                                          ("Rmode",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (32 word \<times> state)"},
                                                           tp[bop(Add,
                                                                  mop(Cast w4,
                                                                      ex(var_w("SYSm",5),ln 2,ln 0,
                                                                         (Word_Lib.mk_wordT 3))),
                                                                  lw(8,4)),lw(16,5)],@{theory}),
                                                        close
                                                          (var_w("v",32),
                                                           mb(mu(tp[var_w("v",32),var_w("d",4)],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(ex(var_w("SYSm",5),ln 4,ln 3,
                                                           (Word_Lib.mk_wordT 2)),lw(1,2)),
                                                     mb(call
                                                          ("Rmode",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (32 word \<times> state)"},
                                                           tp[bop(Add,
                                                                  mop(Cast w4,
                                                                      ex(var_w("SYSm",5),ln 2,ln 0,
                                                                         (Word_Lib.mk_wordT 3))),
                                                                  lw(8,4)),lw(17,5)],@{theory}),
                                                        close
                                                          (var_w("v",32),
                                                           mb(mu(tp[var_w("v",32),var_w("d",4)],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times> 4 word"}),
                                                                 call
                                                                   ("write'R",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times> 4 word"}),
                                                                    @{theory})))))),
                                                    (eq(ex(var_w("SYSm",5),ln 4,ln 3,
                                                           (Word_Lib.mk_wordT 2)),lw(3,2)),
                                                     itb([(mop(Not,bop(Bit,var_w("SYSm",5),ln 1)),
                                                           mb(call
                                                                ("Rmode",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (32 word \<times> state)"},
                                                                 tp[bop(Sub,lw(14,4),
                                                                        mop(Cast w4,
                                                                            bop(Bit,var_w("SYSm",5),
                                                                                ln 0))),lw(22,5)],
                                                                 @{theory}),
                                                              close
                                                                (var_w("v",32),
                                                                 mb(mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times> 4 word"}),
                                                                       call
                                                                         ("write'R",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               4 word"}),@{theory})))))),
                                                          (bop(Bit,var_w("SYSm",5),ln 0),
                                                           mb(call
                                                                ("Rmode",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (32 word \<times> state)"},
                                                                 tp[lw(13,4),lw(26,5)],@{theory}),
                                                              close
                                                                (var_w("v",32),
                                                                 mb(mu(tp[var_w("v",32),var_w("d",4)],
                                                                       qTy),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times> 4 word"}),
                                                                       call
                                                                         ("write'R",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               4 word"}),@{theory}))))))],
                                                         mb(mr(close
                                                                 (var("s",qTy),
                                                                  call
                                                                    ("state.ELR_hyp",w32,
                                                                     var("s",qTy),@{theory}))),
                                                            close
                                                              (var_w("v",32),
                                                               mb(mu(tp[var_w("v",32),var_w("d",4)],
                                                                     qTy),
                                                                  close
                                                                    (var("v",
                                                                         @{typ
                                                                         "32 word \<times> 4 word"}),
                                                                     call
                                                                       ("write'R",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        var("v",
                                                                            @{typ
                                                                            "32 word \<times> 4 word"}),
                                                                        @{theory})))))))],
                                                   mn(lx (Word_Lib.mk_wordT 5),
                                                      mb(mr(close
                                                              (var("s",
                                                                   @{typ "5 word \<times> state"}),
                                                               mop(Fst,
                                                                   var("s",
                                                                       @{typ
                                                                       "5 word \<times> state"})))),
                                                         close
                                                           (var_w("v",5),
                                                            mb(mb(mu(bfi(ln 0,ln 0,
                                                                         mop(Cast w1,
                                                                             bop(Or,
                                                                                 bop(Bit,
                                                                                     var_w("SYSm",5),
                                                                                     ln 2),
                                                                                 bop(Bit,
                                                                                     var_w("SYSm",5),
                                                                                     ln 1))),
                                                                         var_w("v",5)),
                                                                     @{typ "5 word \<times> state"}),
                                                                  close
                                                                    (var_w("v",5),
                                                                     mw(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "5 word \<times>
                                                                                state"}),
                                                                           tp[var_w("v",5),
                                                                              mop(Snd,
                                                                                  var("s",
                                                                                      @{typ
                                                                                      "5 word \<times>
                                                                                       state"}))])))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "5 word \<times>
                                                                                state"}),
                                                                           mop(Fst,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "5 word \<times>
                                                                                    state"})))),
                                                                     close
                                                                       (var_w("v",5),
                                                                        mb(mb(mu(bfi(ln 1,ln 1,
                                                                                     mop(Cast w1,lt),
                                                                                     var_w("v",5)),
                                                                                 @{typ
                                                                                 "5 word \<times>
                                                                                  state"}),
                                                                              close
                                                                                (var_w("v",5),
                                                                                 mw(close
                                                                                      (var("s",
                                                                                           @{typ
                                                                                           "5 word \<times>
                                                                                            state"}),
                                                                                       tp[var_w("v",5),
                                                                                          mop(Snd,
                                                                                              var("s",
                                                                                                  @{typ
                                                                                                  "5 word \<times>
                                                                                                   state"}))])))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mr(close
                                                                                      (var("s",
                                                                                           @{typ
                                                                                           "5 word \<times>
                                                                                            state"}),
                                                                                       mop(Fst,
                                                                                           var("s",
                                                                                               @{typ
                                                                                               "5 word \<times>
                                                                                                state"})))),
                                                                                 close
                                                                                   (var_w("v",5),
                                                                                    mb(mb(mu(bfi(ln
                                                                                                  2,
                                                                                                 ln
                                                                                                  2,
                                                                                                 mop(Cast
                                                                                                       w1,
                                                                                                     bop(And,
                                                                                                         bop(Bit,
                                                                                                             var_w("SYSm",5),
                                                                                                             ln
                                                                                                              2),
                                                                                                         mop(Not,
                                                                                                             bop(Bit,
                                                                                                                 var_w("SYSm",5),
                                                                                                                 ln
                                                                                                                  1)))),
                                                                                                 var_w("v",5)),
                                                                                             @{typ
                                                                                             "5 word \<times>
                                                                                              state"}),
                                                                                          close
                                                                                            (var_w("v",5),
                                                                                             mw(close
                                                                                                  (var("s",
                                                                                                       @{typ
                                                                                                       "5 word \<times>
                                                                                                        state"}),
                                                                                                   tp[var_w("v",5),
                                                                                                      mop(Snd,
                                                                                                          var("s",
                                                                                                              @{typ
                                                                                                              "5 word \<times>
                                                                                                               state"}))])))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(mr(close
                                                                                                  (var("s",
                                                                                                       @{typ
                                                                                                       "5 word \<times>
                                                                                                        state"}),
                                                                                                   mop(Fst,
                                                                                                       var("s",
                                                                                                           @{typ
                                                                                                           "5 word \<times>
                                                                                                            state"})))),
                                                                                             close
                                                                                               (var_w("v",5),
                                                                                                mb(mb(mu(bfi(ln
                                                                                                              3,
                                                                                                             ln
                                                                                                              3,
                                                                                                             mop(Cast
                                                                                                                   w1,
                                                                                                                 bop(And,
                                                                                                                     bop(Bit,
                                                                                                                         var_w("SYSm",5),
                                                                                                                         ln
                                                                                                                          2),
                                                                                                                     bop(Bit,
                                                                                                                         var_w("SYSm",5),
                                                                                                                         ln
                                                                                                                          1))),
                                                                                                             var_w("v",5)),
                                                                                                         @{typ
                                                                                                         "5 word \<times>
                                                                                                          state"}),
                                                                                                      close
                                                                                                        (var_w("v",5),
                                                                                                         mw(close
                                                                                                              (var("s",
                                                                                                                   @{typ
                                                                                                                   "5 word \<times>
                                                                                                                    state"}),
                                                                                                               tp[var_w("v",5),
                                                                                                                  mop(Snd,
                                                                                                                      var("s",
                                                                                                                          @{typ
                                                                                                                          "5 word \<times>
                                                                                                                           state"}))])))),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(mr(close
                                                                                                              (var("s",
                                                                                                                   @{typ
                                                                                                                   "5 word \<times>
                                                                                                                    state"}),
                                                                                                               mop(Fst,
                                                                                                                   var("s",
                                                                                                                       @{typ
                                                                                                                       "5 word \<times>
                                                                                                                        state"})))),
                                                                                                         close
                                                                                                           (var_w("v",5),
                                                                                                            mb(mb(mu(bfi(ln
                                                                                                                          4,
                                                                                                                         ln
                                                                                                                          4,
                                                                                                                         mop(Cast
                                                                                                                               w1,
                                                                                                                             lt),
                                                                                                                         var_w("v",5)),
                                                                                                                     @{typ
                                                                                                                     "5 word \<times>
                                                                                                                      state"}),
                                                                                                                  close
                                                                                                                    (var_w("v",5),
                                                                                                                     mw(close
                                                                                                                          (var("s",
                                                                                                                               @{typ
                                                                                                                               "5 word \<times>
                                                                                                                                state"}),
                                                                                                                           tp[var_w("v",5),
                                                                                                                              mop(Snd,
                                                                                                                                  var("s",
                                                                                                                                      @{typ
                                                                                                                                      "5 word \<times>
                                                                                                                                       state"}))])))),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(mr(close
                                                                                                                          (var("s",
                                                                                                                               @{typ
                                                                                                                               "5 word \<times>
                                                                                                                                state"}),
                                                                                                                           mop(Fst,
                                                                                                                               var("s",
                                                                                                                                   @{typ
                                                                                                                                   "5 word \<times>
                                                                                                                                    state"})))),
                                                                                                                     close
                                                                                                                       (var_w("v",5),
                                                                                                                        mb(mu(eq(var_w("mode",5),
                                                                                                                                 var_w("v",5)),
                                                                                                                              @{typ
                                                                                                                              "5 word \<times>
                                                                                                                               state"}),
                                                                                                                           close
                                                                                                                             (var_b"b",
                                                                                                                              ite(var_b"b",
                                                                                                                                  md(call
                                                                                                                                       ("raise'exception",
                                                                                                                                        @{typ
                                                                                                                                        "state \<Rightarrow>
                                                                                                                                         (unit \<times>
                                                                                                                                          state)"},
                                                                                                                                        call
                                                                                                                                          ("exception.UNPREDICTABLE",
                                                                                                                                           @{typ exception},
                                                                                                                                           ls
                                                                                                                                            "MoveToRegisterFromBankedOrSpecial",
                                                                                                                                           @{theory}),
                                                                                                                                        @{theory}),
                                                                                                                                     (Word_Lib.mk_wordT 5)),
                                                                                                                                  mb(mr(close
                                                                                                                                          (var("s",
                                                                                                                                               @{typ
                                                                                                                                               "5 word \<times>
                                                                                                                                                state"}),
                                                                                                                                           mop(Fst,
                                                                                                                                               var("s",
                                                                                                                                                   @{typ
                                                                                                                                                   "5 word \<times>
                                                                                                                                                    state"})))),
                                                                                                                                     close
                                                                                                                                       (var_w("v",5),
                                                                                                                                        mb(mb(mb(mu(tp[bop(Sub,
                                                                                                                                                           lw(14,
                                                                                                                                                              4),
                                                                                                                                                           mop(Cast
                                                                                                                                                                 w4,
                                                                                                                                                               bop(Bit,
                                                                                                                                                                   var_w("SYSm",5),
                                                                                                                                                                   ln
                                                                                                                                                                    0))),
                                                                                                                                                       var_w("v",5)],
                                                                                                                                                    @{typ
                                                                                                                                                    "5 word \<times>
                                                                                                                                                     state"}),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ
                                                                                                                                                        "4 word \<times>
                                                                                                                                                         5 word"}),
                                                                                                                                                    md(call
                                                                                                                                                         ("Rmode",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (32 word \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ
                                                                                                                                                              "4 word \<times>
                                                                                                                                                               5 word"}),
                                                                                                                                                          @{theory}),
                                                                                                                                                       (Word_Lib.mk_wordT 5)))),
                                                                                                                                              close
                                                                                                                                                (var_w("v",32),
                                                                                                                                                 mu(tp[var_w("v",32),
                                                                                                                                                       var_w("d",4)],
                                                                                                                                                    @{typ
                                                                                                                                                    "5 word \<times>
                                                                                                                                                     state"}))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ
                                                                                                                                                  "32 word \<times>
                                                                                                                                                   4 word"}),
                                                                                                                                              md(call
                                                                                                                                                   ("write'R",
                                                                                                                                                    @{typ
                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                     (unit \<times>
                                                                                                                                                      state)"},
                                                                                                                                                    var("v",
                                                                                                                                                        @{typ
                                                                                                                                                        "32 word \<times>
                                                                                                                                                         4 word"}),
                                                                                                                                                    @{theory}),
                                                                                                                                                 (Word_Lib.mk_wordT 5)))))))))))))))))))))))))))))))))))),
                                     close
                                       (var_a HOLogic.unitT,
                                        call
                                          ("IncPC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                           @{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MoveToSpecialFromImmediate",
   close
     (tp[var_b"write_spsr",var_w("imm32",32),var_w("mask",4)],
      mb(ite(var_b"write_spsr",
             call
               ("SPSRWriteByInstr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                tp[var_w("imm32",32),var_w("mask",4)],@{theory}),
             mb(call
                  ("CPSRWriteByInstr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   tp[var_w("imm32",32),var_w("mask",4),lf],@{theory}),
                close
                  (var_a HOLogic.unitT,
                   mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                      close
                        (var("v",@{typ PSR}),
                         mb(mb(mb(mu(call
                                       ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),
                                     qTy),close(var_w("v",5),mu(eq(var_w("v",5),lw(26,5)),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(call
                                           ("CurrentInstrSet",
                                            @{typ "state \<Rightarrow> (InstrSet \<times> state)"},
                                            lu,@{theory}),
                                         close
                                           (var("v",@{typ InstrSet}),
                                            mu(eq(var("v",@{typ InstrSet}),
                                                  lc("InstrSet_ThumbEE","InstrSet",@{theory})),qTy))),
                                      mu(lf,qTy)))),
                            close
                              (var_b"b",
                               ite(var_b"b",
                                   call
                                     ("raise'exception",
                                      @{typ "state \<Rightarrow> (unit \<times> state)"},
                                      call
                                        ("exception.UNPREDICTABLE",@{typ exception},
                                         ls"MoveToSpecialFromImmediate",@{theory}),@{theory}),
                                   mu(lu,qTy))))))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MoveToSpecialFromRegister",
   close
     (tp[var_b"write_spsr",var_w("n",4),var_w("mask",4)],
      mb(ite(var_b"write_spsr",
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close
                  (var_w("v",32),
                   mb(mu(tp[var_w("v",32),var_w("mask",4)],qTy),
                      close
                        (var("v",@{typ "32 word \<times> 4 word"}),
                         call
                           ("SPSRWriteByInstr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            var("v",@{typ "32 word \<times> 4 word"}),@{theory}))))),
             mb(call
                  ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},var_w("n",4),@{theory}),
                close
                  (var_w("v",32),
                   mb(mb(mu(tp[var_w("v",32),var_w("mask",4),lf],qTy),
                         close
                           (var("v",@{typ "32 word \<times> 4 word \<times> bool"}),
                            call
                              ("CPSRWriteByInstr",
                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                               var("v",@{typ "32 word \<times> 4 word \<times> bool"}),@{theory}))),
                      close
                        (var_a HOLogic.unitT,
                         mb(mr(close
                                 (var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ PSR}),
                               mb(mb(mb(mu(call
                                             ("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),
                                              @{theory}),qTy),
                                        close(var_w("v",5),mu(eq(var_w("v",5),lw(26,5)),qTy))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(call
                                                 ("CurrentInstrSet",
                                                  @{typ
                                                  "state \<Rightarrow> (InstrSet \<times> state)"},
                                                  lu,@{theory}),
                                               close
                                                 (var("v",@{typ InstrSet}),
                                                  mu(eq(var("v",@{typ InstrSet}),
                                                        lc("InstrSet_ThumbEE","InstrSet",@{theory})),
                                                     qTy))),mu(lf,qTy)))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         call
                                           ("raise'exception",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},
                                            call
                                              ("exception.UNPREDICTABLE",@{typ exception},
                                               ls"MoveToSpecialFromRegister",@{theory}),@{theory}),
                                         mu(lu,qTy))))))))))),
         close
           (var_a HOLogic.unitT,
            call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MoveToBankedOrSpecialRegister",
   close
     (tp[var_b"write_spsr",var_w("SYSm",5),var_w("n",4)],
      mb(call
           ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(mu(mop(Not,var_b"v"),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         call
                           ("exception.UNPREDICTABLE",@{typ exception},
                            ls"MoveToBankedOrSpecialRegister",@{theory}),@{theory}),
                      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
                         close
                           (var("v",@{typ PSR}),
                            mb(mu(call("PSR.M",(Word_Lib.mk_wordT 5),var("v",@{typ PSR}),@{theory}),
                                  qTy),
                               close
                                 (var_w("mode",5),
                                  mb(ite(var_b"write_spsr",
                                         mb(call
                                              ("SPSRAccessValid",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("SYSm",5),var_w("mode",5)],@{theory}),
                                            close
                                              (var_u"_0",
                                               itb([(eq(var_w("SYSm",5),lw(14,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_fiq",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_fiq",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory})))))))),
                                                    (eq(var_w("SYSm",5),lw(16,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_irq",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_irq",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory})))))))),
                                                    (eq(var_w("SYSm",5),lw(18,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_svc",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_svc",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory})))))))),
                                                    (eq(var_w("SYSm",5),lw(20,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_abt",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_abt",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory})))))))),
                                                    (eq(var_w("SYSm",5),lw(22,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_und",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_und",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory})))))))),
                                                    (eq(var_w("SYSm",5),lw(28,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_mon",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_mon",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory})))))))),
                                                    (eq(var_w("SYSm",5),lw(30,5)),
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.SPSR_hyp",@{typ PSR},
                                                                 var("s",qTy),@{theory}))),
                                                        close
                                                          (var("v",@{typ PSR}),
                                                           mb(mb(mb(call
                                                                      ("R",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (32 word \<times> state)"},
                                                                       var_w("n",4),@{theory}),
                                                                    close
                                                                      (var_w("v0",32),
                                                                       mu(tp[var("v",@{typ PSR}),
                                                                             var_w("v0",32)],qTy))),
                                                                 close
                                                                   (var("v",
                                                                        @{typ
                                                                        "PSR \<times> 32 word"}),
                                                                    mu(call
                                                                         ("write'reg'PSR",
                                                                          @{typ PSR},
                                                                          var("v",
                                                                              @{typ
                                                                              "PSR \<times> 32 word"}),
                                                                          @{theory}),qTy))),
                                                              close
                                                                (var("v",@{typ PSR}),
                                                                 mw(close
                                                                      (var("s",qTy),
                                                                       rupd
                                                                         ("state.SPSR_hyp",
                                                                          tp[var("s",qTy),
                                                                             var("v",@{typ PSR})],
                                                                          @{theory}))))))))],
                                                   mu(lu,qTy)))),
                                         mb(call
                                              ("BankedRegisterAccessValid",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[var_w("SYSm",5),var_w("mode",5)],@{theory}),
                                            close
                                              (var_a HOLogic.unitT,
                                               itb([(eq(ex(var_w("SYSm",5),ln 4,ln 3,
                                                           (Word_Lib.mk_wordT 2)),lw(0,2)),
                                                     mb(call
                                                          ("R",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (32 word \<times> state)"},var_w("n",4),
                                                           @{theory}),
                                                        close
                                                          (var_w("v",32),
                                                           mb(mu(tp[var_w("v",32),
                                                                    bop(Add,
                                                                        mop(Cast w4,
                                                                            ex(var_w("SYSm",5),ln 2,
                                                                               ln 0,
                                                                               (Word_Lib.mk_wordT 3))),
                                                                        lw(8,4)),lw(16,5)],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times>
                                                                      4 word \<times> 5 word"}),
                                                                 call
                                                                   ("write'Rmode",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times>
                                                                         4 word \<times> 5 word"}),
                                                                    @{theory})))))),
                                                    (eq(ex(var_w("SYSm",5),ln 4,ln 3,
                                                           (Word_Lib.mk_wordT 2)),lw(1,2)),
                                                     mb(call
                                                          ("R",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (32 word \<times> state)"},var_w("n",4),
                                                           @{theory}),
                                                        close
                                                          (var_w("v",32),
                                                           mb(mu(tp[var_w("v",32),
                                                                    bop(Add,
                                                                        mop(Cast w4,
                                                                            ex(var_w("SYSm",5),ln 2,
                                                                               ln 0,
                                                                               (Word_Lib.mk_wordT 3))),
                                                                        lw(8,4)),lw(17,5)],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "32 word \<times>
                                                                      4 word \<times> 5 word"}),
                                                                 call
                                                                   ("write'Rmode",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var("v",
                                                                        @{typ
                                                                        "32 word \<times>
                                                                         4 word \<times> 5 word"}),
                                                                    @{theory})))))),
                                                    (eq(ex(var_w("SYSm",5),ln 4,ln 3,
                                                           (Word_Lib.mk_wordT 2)),lw(3,2)),
                                                     itb([(mop(Not,bop(Bit,var_w("SYSm",5),ln 1)),
                                                           mb(call
                                                                ("R",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (32 word \<times> state)"},
                                                                 var_w("n",4),@{theory}),
                                                              close
                                                                (var_w("v",32),
                                                                 mb(mu(tp[var_w("v",32),
                                                                          bop(Sub,lw(14,4),
                                                                              mop(Cast w4,
                                                                                  bop(Bit,
                                                                                      var_w("SYSm",5),
                                                                                      ln 0))),
                                                                          lw(22,5)],qTy),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times>
                                                                            4 word \<times> 5 word"}),
                                                                       call
                                                                         ("write'Rmode",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               4 word \<times>
                                                                               5 word"}),@{theory})))))),
                                                          (bop(Bit,var_w("SYSm",5),ln 0),
                                                           mb(call
                                                                ("R",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (32 word \<times> state)"},
                                                                 var_w("n",4),@{theory}),
                                                              close
                                                                (var_w("v",32),
                                                                 mb(mu(tp[var_w("v",32),lw(13,4),
                                                                          lw(26,5)],qTy),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times>
                                                                            4 word \<times> 5 word"}),
                                                                       call
                                                                         ("write'Rmode",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               4 word \<times>
                                                                               5 word"}),@{theory}))))))],
                                                         mb(call
                                                              ("R",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (32 word \<times> state)"},
                                                               var_w("n",4),@{theory}),
                                                            close
                                                              (var_w("v",32),
                                                               mw(close
                                                                    (var("s",qTy),
                                                                     rupd
                                                                       ("state.ELR_hyp",
                                                                        tp[var("s",qTy),
                                                                           var_w("v",32)],@{theory})))))))],
                                                   mn(lx (Word_Lib.mk_wordT 5),
                                                      mb(mr(close
                                                              (var("s",
                                                                   @{typ "5 word \<times> state"}),
                                                               mop(Fst,
                                                                   var("s",
                                                                       @{typ
                                                                       "5 word \<times> state"})))),
                                                         close
                                                           (var_w("v",5),
                                                            mb(mb(mu(bfi(ln 0,ln 0,
                                                                         mop(Cast w1,
                                                                             bop(Or,
                                                                                 bop(Bit,
                                                                                     var_w("SYSm",5),
                                                                                     ln 2),
                                                                                 bop(Bit,
                                                                                     var_w("SYSm",5),
                                                                                     ln 1))),
                                                                         var_w("v",5)),
                                                                     @{typ "5 word \<times> state"}),
                                                                  close
                                                                    (var_w("v",5),
                                                                     mw(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "5 word \<times>
                                                                                state"}),
                                                                           tp[var_w("v",5),
                                                                              mop(Snd,
                                                                                  var("s",
                                                                                      @{typ
                                                                                      "5 word \<times>
                                                                                       state"}))])))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",
                                                                               @{typ
                                                                               "5 word \<times>
                                                                                state"}),
                                                                           mop(Fst,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "5 word \<times>
                                                                                    state"})))),
                                                                     close
                                                                       (var_w("v",5),
                                                                        mb(mb(mu(bfi(ln 1,ln 1,
                                                                                     mop(Cast w1,lt),
                                                                                     var_w("v",5)),
                                                                                 @{typ
                                                                                 "5 word \<times>
                                                                                  state"}),
                                                                              close
                                                                                (var_w("v",5),
                                                                                 mw(close
                                                                                      (var("s",
                                                                                           @{typ
                                                                                           "5 word \<times>
                                                                                            state"}),
                                                                                       tp[var_w("v",5),
                                                                                          mop(Snd,
                                                                                              var("s",
                                                                                                  @{typ
                                                                                                  "5 word \<times>
                                                                                                   state"}))])))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mr(close
                                                                                      (var("s",
                                                                                           @{typ
                                                                                           "5 word \<times>
                                                                                            state"}),
                                                                                       mop(Fst,
                                                                                           var("s",
                                                                                               @{typ
                                                                                               "5 word \<times>
                                                                                                state"})))),
                                                                                 close
                                                                                   (var_w("v",5),
                                                                                    mb(mb(mu(bfi(ln
                                                                                                  2,
                                                                                                 ln
                                                                                                  2,
                                                                                                 mop(Cast
                                                                                                       w1,
                                                                                                     bop(And,
                                                                                                         bop(Bit,
                                                                                                             var_w("SYSm",5),
                                                                                                             ln
                                                                                                              2),
                                                                                                         mop(Not,
                                                                                                             bop(Bit,
                                                                                                                 var_w("SYSm",5),
                                                                                                                 ln
                                                                                                                  1)))),
                                                                                                 var_w("v",5)),
                                                                                             @{typ
                                                                                             "5 word \<times>
                                                                                              state"}),
                                                                                          close
                                                                                            (var_w("v",5),
                                                                                             mw(close
                                                                                                  (var("s",
                                                                                                       @{typ
                                                                                                       "5 word \<times>
                                                                                                        state"}),
                                                                                                   tp[var_w("v",5),
                                                                                                      mop(Snd,
                                                                                                          var("s",
                                                                                                              @{typ
                                                                                                              "5 word \<times>
                                                                                                               state"}))])))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(mr(close
                                                                                                  (var("s",
                                                                                                       @{typ
                                                                                                       "5 word \<times>
                                                                                                        state"}),
                                                                                                   mop(Fst,
                                                                                                       var("s",
                                                                                                           @{typ
                                                                                                           "5 word \<times>
                                                                                                            state"})))),
                                                                                             close
                                                                                               (var_w("v",5),
                                                                                                mb(mb(mu(bfi(ln
                                                                                                              3,
                                                                                                             ln
                                                                                                              3,
                                                                                                             mop(Cast
                                                                                                                   w1,
                                                                                                                 bop(And,
                                                                                                                     bop(Bit,
                                                                                                                         var_w("SYSm",5),
                                                                                                                         ln
                                                                                                                          2),
                                                                                                                     bop(Bit,
                                                                                                                         var_w("SYSm",5),
                                                                                                                         ln
                                                                                                                          1))),
                                                                                                             var_w("v",5)),
                                                                                                         @{typ
                                                                                                         "5 word \<times>
                                                                                                          state"}),
                                                                                                      close
                                                                                                        (var_w("v",5),
                                                                                                         mw(close
                                                                                                              (var("s",
                                                                                                                   @{typ
                                                                                                                   "5 word \<times>
                                                                                                                    state"}),
                                                                                                               tp[var_w("v",5),
                                                                                                                  mop(Snd,
                                                                                                                      var("s",
                                                                                                                          @{typ
                                                                                                                          "5 word \<times>
                                                                                                                           state"}))])))),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(mr(close
                                                                                                              (var("s",
                                                                                                                   @{typ
                                                                                                                   "5 word \<times>
                                                                                                                    state"}),
                                                                                                               mop(Fst,
                                                                                                                   var("s",
                                                                                                                       @{typ
                                                                                                                       "5 word \<times>
                                                                                                                        state"})))),
                                                                                                         close
                                                                                                           (var_w("v",5),
                                                                                                            mb(mb(mu(bfi(ln
                                                                                                                          4,
                                                                                                                         ln
                                                                                                                          4,
                                                                                                                         mop(Cast
                                                                                                                               w1,
                                                                                                                             lt),
                                                                                                                         var_w("v",5)),
                                                                                                                     @{typ
                                                                                                                     "5 word \<times>
                                                                                                                      state"}),
                                                                                                                  close
                                                                                                                    (var_w("v",5),
                                                                                                                     mw(close
                                                                                                                          (var("s",
                                                                                                                               @{typ
                                                                                                                               "5 word \<times>
                                                                                                                                state"}),
                                                                                                                           tp[var_w("v",5),
                                                                                                                              mop(Snd,
                                                                                                                                  var("s",
                                                                                                                                      @{typ
                                                                                                                                      "5 word \<times>
                                                                                                                                       state"}))])))),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(mr(close
                                                                                                                          (var("s",
                                                                                                                               @{typ
                                                                                                                               "5 word \<times>
                                                                                                                                state"}),
                                                                                                                           mop(Fst,
                                                                                                                               var("s",
                                                                                                                                   @{typ
                                                                                                                                   "5 word \<times>
                                                                                                                                    state"})))),
                                                                                                                     close
                                                                                                                       (var_w("v",5),
                                                                                                                        mb(mu(eq(var_w("mode",5),
                                                                                                                                 var_w("v",5)),
                                                                                                                              @{typ
                                                                                                                              "5 word \<times>
                                                                                                                               state"}),
                                                                                                                           close
                                                                                                                             (var_b"b",
                                                                                                                              ite(var_b"b",
                                                                                                                                  md(call
                                                                                                                                       ("raise'exception",
                                                                                                                                        @{typ
                                                                                                                                        "state \<Rightarrow>
                                                                                                                                         (unit \<times>
                                                                                                                                          state)"},
                                                                                                                                        call
                                                                                                                                          ("exception.UNPREDICTABLE",
                                                                                                                                           @{typ exception},
                                                                                                                                           ls
                                                                                                                                            "MoveToBankedOrSpecialRegister",
                                                                                                                                           @{theory}),
                                                                                                                                        @{theory}),
                                                                                                                                     (Word_Lib.mk_wordT 5)),
                                                                                                                                  mb(mr(close
                                                                                                                                          (var("s",
                                                                                                                                               @{typ
                                                                                                                                               "5 word \<times>
                                                                                                                                                state"}),
                                                                                                                                           mop(Fst,
                                                                                                                                               var("s",
                                                                                                                                                   @{typ
                                                                                                                                                   "5 word \<times>
                                                                                                                                                    state"})))),
                                                                                                                                     close
                                                                                                                                       (var_w("v",5),
                                                                                                                                        mb(mu(tp[bop(Sub,
                                                                                                                                                     lw(14,
                                                                                                                                                        4),
                                                                                                                                                     mop(Cast
                                                                                                                                                           w4,
                                                                                                                                                         bop(Bit,
                                                                                                                                                             var_w("SYSm",5),
                                                                                                                                                             ln
                                                                                                                                                              0))),
                                                                                                                                                 var_w("v",5)],
                                                                                                                                              @{typ
                                                                                                                                              "5 word \<times>
                                                                                                                                               state"}),
                                                                                                                                           close
                                                                                                                                             (var("x",
                                                                                                                                                  @{typ
                                                                                                                                                  "4 word \<times>
                                                                                                                                                   5 word"}),
                                                                                                                                              mb(md(call
                                                                                                                                                      ("R",
                                                                                                                                                       @{typ
                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                        (32 word \<times>
                                                                                                                                                         state)"},
                                                                                                                                                       var_w("n",4),
                                                                                                                                                       @{theory}),
                                                                                                                                                    (Word_Lib.mk_wordT 5)),
                                                                                                                                                 close
                                                                                                                                                   (var_w("v",32),
                                                                                                                                                    mb(mu(tp[var_w("v",32),
                                                                                                                                                             var("x",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "4 word \<times>
                                                                                                                                                                  5 word"})],
                                                                                                                                                          @{typ
                                                                                                                                                          "5 word \<times>
                                                                                                                                                           state"}),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ
                                                                                                                                                              "32 word \<times>
                                                                                                                                                               4 word \<times>
                                                                                                                                                               5 word"}),
                                                                                                                                                          md(call
                                                                                                                                                               ("write'Rmode",
                                                                                                                                                                @{typ
                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                 (unit \<times>
                                                                                                                                                                  state)"},
                                                                                                                                                                var("v",
                                                                                                                                                                    @{typ
                                                                                                                                                                    "32 word \<times>
                                                                                                                                                                     4 word \<times>
                                                                                                                                                                     5 word"}),
                                                                                                                                                                @{theory}),
                                                                                                                                                             (Word_Lib.mk_wordT 5)))))))))))))))))))))))))))))))))))))))),
                                     close
                                       (var_a HOLogic.unitT,
                                        call
                                          ("IncPC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                                           @{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ReturnFromException",
   close
     (tp[var_b"increment",var_b"wordhigher",var_b"wback",var_w("n",4)],
      mb(call("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                call
                  ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                   @{theory}),
                mb(call
                     ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                      @{theory}),
                   close
                     (var_b"v",
                      mb(mb(mu(mop(Not,var_b"v"),qTy),
                            close
                              (var_b"b",
                               ite(var_b"b",mu(lt,qTy),
                                   mb(call
                                        ("CurrentInstrSet",
                                         @{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                                         @{theory}),
                                      close
                                        (var("v",@{typ InstrSet}),
                                         mu(eq(var("v",@{typ InstrSet}),
                                               lc("InstrSet_ThumbEE","InstrSet",@{theory})),qTy)))))),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("raise'exception",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   call
                                     ("exception.UNPREDICTABLE",@{typ exception},
                                      ls"ReturnFromException",@{theory}),@{theory}),
                                mb(call
                                     ("R",@{typ "state \<Rightarrow> (32 word \<times> state)"},
                                      var_w("n",4),@{theory}),
                                   close
                                     (var_w("Rn",32),
                                      let'
                                        (var_w("address",32),
                                         ite(var_b"increment",var_w("Rn",32),
                                             bop(Sub,var_w("Rn",32),lw(8,32))),
                                         let'
                                           (var_w("address",32),
                                            ite(var_b"wordhigher",
                                                bop(Add,var_w("address",32),lw(4,32)),
                                                var_w("address",32)),
                                            mb(ite(var_b"wback",
                                                   call
                                                     ("write'R",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[ite(var_b"increment",
                                                             bop(Add,var_w("Rn",32),lw(8,32)),
                                                             bop(Sub,var_w("Rn",32),lw(8,32))),
                                                         var_w("n",4)],@{theory}),mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mb(call
                                                       ("MemA",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (32 word \<times> state)"},
                                                        tp[var_w("address",32),ln 4],@{theory}),
                                                     close
                                                       (var_w("new_pc_value",32),
                                                        mb(call
                                                             ("MemA",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (32 word \<times> state)"},
                                                              tp[bop(Add,var_w("address",32),
                                                                     lw(4,32)),ln 4],@{theory}),
                                                           close
                                                             (var_w("v",32),
                                                              mb(mb(mu(tp[var_w("v",32),lw(15,4),lt],
                                                                       qTy),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times>
                                                                            4 word \<times> bool"}),
                                                                       call
                                                                         ("CPSRWriteByInstr",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               4 word \<times> bool"}),
                                                                          @{theory}))),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mb(mr(close
                                                                            (var("s",qTy),
                                                                             call
                                                                               ("state.CPSR",
                                                                                @{typ PSR},
                                                                                var("s",qTy),
                                                                                @{theory}))),
                                                                       close
                                                                         (var("v",@{typ PSR}),
                                                                          mb(mb(mb(mu(call
                                                                                        ("PSR.M",
                                                                                         (Word_Lib.mk_wordT 5),
                                                                                         var("v",
                                                                                             @{typ PSR}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var_w("v",5),
                                                                                      mu(eq(var_w("v",5),
                                                                                            lw(26,5)),
                                                                                         qTy))),
                                                                                close
                                                                                  (var_b"b",
                                                                                   ite(var_b"b",
                                                                                       mb(mr(close
                                                                                               (var("s",
                                                                                                    qTy),
                                                                                                call
                                                                                                  ("state.CPSR",
                                                                                                   @{typ PSR},
                                                                                                   var("s",
                                                                                                       qTy),
                                                                                                   @{theory}))),
                                                                                          close
                                                                                            (var("v",
                                                                                                 @{typ PSR}),
                                                                                             mb(mu(call
                                                                                                     ("PSR.J",
                                                                                                      HOLogic.boolT,
                                                                                                      var("v",
                                                                                                          @{typ PSR}),
                                                                                                      @{theory}),
                                                                                                   qTy),
                                                                                                close
                                                                                                  (var_b"b",
                                                                                                   ite(var_b"b",
                                                                                                       mb(mr(close
                                                                                                               (var("s",
                                                                                                                    qTy),
                                                                                                                call
                                                                                                                  ("state.CPSR",
                                                                                                                   @{typ PSR},
                                                                                                                   var("s",
                                                                                                                       qTy),
                                                                                                                   @{theory}))),
                                                                                                          close
                                                                                                            (var("v",
                                                                                                                 @{typ PSR}),
                                                                                                             mu(call
                                                                                                                  ("PSR.T",
                                                                                                                   HOLogic.boolT,
                                                                                                                   var("v",
                                                                                                                       @{typ PSR}),
                                                                                                                   @{theory}),
                                                                                                                qTy))),
                                                                                                       mu(lf,
                                                                                                          qTy)))))),
                                                                                       mu(lf,qTy)))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("raise'exception",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       call
                                                                                         ("exception.UNPREDICTABLE",
                                                                                          @{typ exception},
                                                                                          ls
                                                                                           "ReturnFromException",
                                                                                          @{theory}),
                                                                                       @{theory}),
                                                                                    call
                                                                                      ("BranchWritePC",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       var_w("new_pc_value",32),
                                                                                       @{theory}))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SecureMonitorCall",
   close
     (var_w("imm4",4),
      mb(call("HaveSecurityExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"v",
            mb(ite(var_b"v",
                   call
                     ("CurrentModeIsNotUser",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                      @{theory}),mu(lf,qTy)),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                            @{theory}),
                         close
                           (var_b"v",
                            mb(ite(var_b"v",
                                   mb(call
                                        ("IsSecure",
                                         @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                         @{theory}),
                                      close
                                        (var_b"v",
                                         mb(mu(mop(Not,var_b"v"),qTy),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mb(call
                                                        ("CurrentModeIsHyp",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_b"v",
                                                         mb(mu(mop(Not,var_b"v"),qTy),
                                                            close
                                                              (var_b"b",
                                                               ite(var_b"b",
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.CP15",
                                                                               @{typ CP15},
                                                                               var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var("v",@{typ CP15}),
                                                                         mb(mu(call
                                                                                 ("CP15.HCR",
                                                                                  @{typ HCR},
                                                                                  var("v",
                                                                                      @{typ CP15}),
                                                                                  @{theory}),qTy),
                                                                            close
                                                                              (var("v",@{typ HCR}),
                                                                               mu(call
                                                                                    ("HCR.TSC",
                                                                                     HOLogic.boolT,
                                                                                     var("v",
                                                                                         @{typ HCR}),
                                                                                     @{theory}),qTy))))),
                                                                   mu(lf,qTy)))))),mu(lf,qTy)))))),
                                   mu(lf,qTy)),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(call
                                           ("WriteHSR",
                                            @{typ "state \<Rightarrow> (unit \<times> state)"},
                                            tp[lw(19,6),lw(0,25)],@{theory}),
                                         close
                                           (var_a HOLogic.unitT,
                                            call
                                              ("TakeHypTrapException",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               lu,@{theory}))),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call("state.CP15",@{typ CP15},var("s",qTy),@{theory}))),
                                         close
                                           (var("v",@{typ CP15}),
                                            mb(mb(mu(call
                                                       ("CP15.SCR",@{typ SCR},var("v",@{typ CP15}),
                                                        @{theory}),qTy),
                                                  close
                                                    (var("v",@{typ SCR}),
                                                     mu(call
                                                          ("SCR.SCD",HOLogic.boolT,
                                                           var("v",@{typ SCR}),@{theory}),qTy))),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",
                                                      mb(call
                                                           ("IsSecure",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},lu,@{theory}),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                call
                                                                  ("raise'exception",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   call
                                                                     ("exception.UNPREDICTABLE",
                                                                      @{typ exception},
                                                                      ls"SecureMonitorCall",
                                                                      @{theory}),@{theory}),
                                                                call
                                                                  ("TakeUndefInstrException",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},lu,
                                                                   @{theory})))),
                                                      call
                                                        ("TakeSMCException",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         lu,@{theory}))))))))))),
                      call
                        ("TakeUndefInstrException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'SupervisorCall",
   close
     (var_w("imm32",32),
      call
        ("CallSupervisor",@{typ "state \<Rightarrow> (unit \<times> state)"},
         ex(var_w("imm32",32),ln 15,ln 0,w16),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'StoreReturnState",
   close
     (tp[var_b"increment",var_b"wordhigher",var_b"wback",var_w("mode",5)],
      mb(call("CurrentModeIsHyp",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                call
                  ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,
                   @{theory}),
                mb(call
                     ("CurrentModeIsUserOrSystem",
                      @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                   close
                     (var_b"v",
                      mb(ite(var_b"v",mu(lt,qTy),
                             mb(call
                                  ("CurrentInstrSet",
                                   @{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,
                                   @{theory}),
                                close
                                  (var("v",@{typ InstrSet}),
                                   mu(eq(var("v",@{typ InstrSet}),
                                         lc("InstrSet_ThumbEE","InstrSet",@{theory})),qTy)))),
                         close
                           (var_b"b",
                            itb([(var_b"b",
                                  call
                                    ("raise'exception",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     call
                                       ("exception.UNPREDICTABLE",@{typ exception},
                                        ls"StoreReturnState",@{theory}),@{theory})),
                                 (eq(var_w("mode",5),lw(26,5)),
                                  call
                                    ("raise'exception",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     call
                                       ("exception.UNPREDICTABLE",@{typ exception},
                                        ls"StoreReturnState",@{theory}),@{theory}))],
                                mb(call
                                     ("IsSecure",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                      lu,@{theory}),
                                   close
                                     (var_b"v",
                                      mb(mb(mu(mop(Not,var_b"v"),qTy),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mb(mr(close
                                                           (var("s",qTy),
                                                            call
                                                              ("state.CP15",@{typ CP15},
                                                               var("s",qTy),@{theory}))),
                                                      close
                                                        (var("v",@{typ CP15}),
                                                         mb(mb(mb(mb(mu(call
                                                                          ("CP15.NSACR",
                                                                           @{typ NSACR},
                                                                           var("v",@{typ CP15}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var("v",@{typ NSACR}),
                                                                        mu(call
                                                                             ("NSACR.RFR",
                                                                              HOLogic.boolT,
                                                                              var("v",@{typ NSACR}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var_b"v",
                                                                     mu(bop(And,
                                                                            eq(var_w("mode",5),
                                                                               lw(17,5)),var_b"v"),
                                                                        qTy))),
                                                               close
                                                                 (var_b"v",
                                                                  mu(bop(Or,
                                                                         eq(var_w("mode",5),lw(22,5)),
                                                                         var_b"v"),qTy))),
                                                            close
                                                              (var_b"b",
                                                               ite(var_b"b",
                                                                   call
                                                                     ("raise'exception",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (unit \<times> state)"},
                                                                      call
                                                                        ("exception.UNPREDICTABLE",
                                                                         @{typ exception},
                                                                         ls"StoreReturnState",
                                                                         @{theory}),@{theory}),
                                                                   mu(lu,qTy)))))),mu(lu,qTy)))),
                                         close
                                           (var_a HOLogic.unitT,
                                            mb(call
                                                 ("Rmode",
                                                  @{typ
                                                  "state \<Rightarrow> (32 word \<times> state)"},
                                                  tp[lw(13,4),var_w("mode",5)],@{theory}),
                                               close
                                                 (var_w("base",32),
                                                  let'
                                                    (var_w("address",32),
                                                     ite(var_b"increment",var_w("base",32),
                                                         bop(Sub,var_w("base",32),lw(8,32))),
                                                     let'
                                                       (var_w("address",32),
                                                        ite(var_b"wordhigher",
                                                            bop(Add,var_w("address",32),lw(4,32)),
                                                            var_w("address",32)),
                                                        mb(mb(const
                                                                ("LR",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (32 word \<times> state)"},
                                                                 @{theory}),
                                                              close
                                                                (var_w("v",32),
                                                                 mb(mu(tp[var_w("v",32),
                                                                          var_w("address",32),ln 4],
                                                                       qTy),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "32 word \<times>
                                                                            32 word \<times> nat"}),
                                                                       call
                                                                         ("write'MemA",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "32 word \<times>
                                                                               32 word \<times> nat"}),
                                                                          @{theory}))))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mb(mb(const
                                                                      ("SPSR",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (PSR \<times> state)"},
                                                                       @{theory}),
                                                                    close
                                                                      (var("v",@{typ PSR}),
                                                                       mb(mb(mu(call
                                                                                  ("reg'PSR",w32,
                                                                                   var("v",
                                                                                       @{typ PSR}),
                                                                                   @{theory}),qTy),
                                                                             close
                                                                               (var_w("v",32),
                                                                                mu(tp[var_w("v",32),
                                                                                      bop(Add,
                                                                                          var_w("address",32),
                                                                                          lw(4,32)),
                                                                                      ln 4],qTy))),
                                                                          close
                                                                            (var("v",
                                                                                 @{typ
                                                                                 "32 word \<times>
                                                                                  32 word \<times>
                                                                                  nat"}),
                                                                             call
                                                                               ("write'MemA",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (unit \<times>
                                                                                  state)"},
                                                                                var("v",
                                                                                    @{typ
                                                                                    "32 word \<times>
                                                                                     32 word \<times>
                                                                                     nat"}),
                                                                                @{theory}))))),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mb(ite(var_b"wback",
                                                                           call
                                                                             ("write'Rmode",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              tp[ite(var_b"increment",
                                                                                     bop(Add,
                                                                                         var_w("base",32),
                                                                                         lw(8,32)),
                                                                                     bop(Sub,
                                                                                         var_w("base",32),
                                                                                         lw(8,32))),
                                                                                 lw(13,4),
                                                                                 var_w("mode",5)],
                                                                              @{theory}),mu(lu,qTy)),
                                                                       close
                                                                         (var_a HOLogic.unitT,
                                                                          call
                                                                            ("IncPC",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             lu,@{theory})))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'Setend",
   close
     (var_b"set_bigend",
      mb(mr(close(var("s",qTy),call("state.CPSR",@{typ PSR},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ PSR}),
            mb(mb(mb(mu(tp[var("v",@{typ PSR}),var_b"set_bigend"],qTy),
                     close
                       (var("v",@{typ "PSR \<times> bool"}),
                        mu(rupd("PSR.E",var("v",@{typ "PSR \<times> bool"}),@{theory}),qTy))),
                  close
                    (var("v",@{typ PSR}),
                     mw(close
                          (var("s",qTy),
                           rupd("state.CPSR",tp[var("s",qTy),var("v",@{typ PSR})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'Undefined",
   close
     (var_w("imm32",32),
      call
        ("TakeUndefInstrException",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'NoOperation",call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'Breakpoint",
   close
     (var_w("imm32",32),
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'Debug",
   close
     (var_w("option",4),
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'DataMemoryBarrier",
   close
     (var_w("option",4),
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'DataSynchronizationBarrier",
   close
     (var_w("option",4),
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'InstructionSynchronizationBarrier",
   close
     (var_w("option",4),
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'PreloadData",
   close
     (tp[var_b"add",var_b"is_pldw",var_w("n",4),var("m",@{typ offset1})],
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'PreloadDataLiteral",
   close
     (tp[var_b"add",var_w("imm32",32)],
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'PreloadInstruction",
   close
     (tp[var_b"add",var_w("n",4),var("m",@{typ offset1})],
      call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'SendEvent",call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'WaitForEvent",call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'WaitForInterrupt",
   call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'Yield",call("IncPC",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Run",
   close
     (var("v0",@{typ instruction}),
      cs(var("v0",@{typ instruction}),
         [(Term.Const(@{const_name "ClearExclusive"},@{typ instruction}),
           const("dfn'ClearExclusive",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "NoOperation"},@{typ instruction}),
           const("dfn'NoOperation",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (call
             ("instruction.Divide",@{typ instruction},
              var("v137",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),@{theory}),
           call
             ("dfn'Divide",@{typ "state \<Rightarrow> (unit \<times> state)"},
              var("v137",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),@{theory})),
          (call
             ("instruction.IfThen",@{typ instruction},var("v138",@{typ "4 word \<times> 4 word"}),
              @{theory}),
           call
             ("dfn'IfThen",@{typ "state \<Rightarrow> (unit \<times> state)"},
              var("v138",@{typ "4 word \<times> 4 word"}),@{theory})),
          (call
             ("instruction.Swap",@{typ instruction},
              var("v139",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),@{theory}),
           call
             ("dfn'Swap",@{typ "state \<Rightarrow> (unit \<times> state)"},
              var("v139",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),@{theory})),
          (call("instruction.Undefined",@{typ instruction},var_w("v140",32),@{theory}),
           call
             ("dfn'Undefined",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v140",32),
              @{theory})),
          (call("instruction.Branch",@{typ instruction},var("v1",@{typ Branch}),@{theory}),
           cs(var("v1",@{typ Branch}),
              [(call("Branch.BranchExchange",@{typ Branch},var_w("v2",4),@{theory}),
                call
                  ("dfn'BranchExchange",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v2",4),@{theory})),
               (call
                  ("Branch.BranchLinkExchangeImmediate",@{typ Branch},
                   var("v3",@{typ "InstrSet \<times> 32 word"}),@{theory}),
                call
                  ("dfn'BranchLinkExchangeImmediate",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v3",@{typ "InstrSet \<times> 32 word"}),@{theory})),
               (call("Branch.BranchLinkExchangeRegister",@{typ Branch},var_w("v4",4),@{theory}),
                call
                  ("dfn'BranchLinkExchangeRegister",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v4",4),@{theory})),
               (call("Branch.BranchTarget",@{typ Branch},var_w("v5",32),@{theory}),
                call
                  ("dfn'BranchTarget",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v5",32),@{theory})),
               (call
                  ("Branch.CheckArray",@{typ Branch},var("v6",@{typ "4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'CheckArray",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v6",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Branch.CompareBranch",@{typ Branch},
                   var("v7",@{typ "bool \<times> 4 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'CompareBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v7",@{typ "bool \<times> 4 word \<times> 32 word"}),@{theory})),
               (call
                  ("Branch.HandlerBranchLink",@{typ Branch},
                   var("v8",@{typ "bool \<times> 32 word"}),@{theory}),
                call
                  ("dfn'HandlerBranchLink",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v8",@{typ "bool \<times> 32 word"}),@{theory})),
               (call
                  ("Branch.HandlerBranchLinkParameter",@{typ Branch},
                   var("v9",@{typ "32 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'HandlerBranchLinkParameter",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v9",@{typ "32 word \<times> 32 word"}),@{theory})),
               (call
                  ("Branch.HandlerBranchParameter",@{typ Branch},
                   var("v10",@{typ "32 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'HandlerBranchParameter",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v10",@{typ "32 word \<times> 32 word"}),@{theory})),
               (call
                  ("Branch.TableBranchByte",@{typ Branch},
                   var("v11",@{typ "bool \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'TableBranchByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v11",@{typ "bool \<times> 4 word \<times> 4 word"}),@{theory}))],@{context})),
          (call("instruction.Data",@{typ instruction},var("v12",@{typ Data}),@{theory}),
           cs(var("v12",@{typ Data}),
              [(call
                  ("Data.AddSub",@{typ Data},
                   var("v13",@{typ "bool \<times> 4 word \<times> 4 word \<times> 12 word"}),
                   @{theory}),
                call
                  ("dfn'AddSub",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v13",@{typ "bool \<times> 4 word \<times> 4 word \<times> 12 word"}),
                   @{theory})),
               (call
                  ("Data.ArithLogicImmediate",@{typ Data},
                   var("v14",
                       @{typ
                       "4 word \<times> bool \<times> 4 word \<times> 4 word \<times> 12 word"}),
                   @{theory}),
                call
                  ("dfn'ArithLogicImmediate",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v14",
                       @{typ
                       "4 word \<times> bool \<times> 4 word \<times> 4 word \<times> 12 word"}),
                   @{theory})),
               (call
                  ("Data.CountLeadingZeroes",@{typ Data},var("v15",@{typ "4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'CountLeadingZeroes",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v15",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Data.Move",@{typ Data},
                   var("v16",@{typ "bool \<times> bool \<times> 4 word \<times> 12 word"}),@{theory}),
                call
                  ("dfn'Move",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v16",@{typ "bool \<times> bool \<times> 4 word \<times> 12 word"}),@{theory})),
               (call
                  ("Data.MoveHalfword",@{typ Data},
                   var("v17",@{typ "bool \<times> 4 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'MoveHalfword",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v17",@{typ "bool \<times> 4 word \<times> 16 word"}),@{theory})),
               (call
                  ("Data.Register",@{typ Data},
                   var("v18",
                       @{typ
                       "4 word \<times>
                        bool \<times>
                        4 word \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'Register",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v18",
                       @{typ
                       "4 word \<times>
                        bool \<times>
                        4 word \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"}),
                   @{theory})),
               (call
                  ("Data.RegisterShiftedRegister",@{typ Data},
                   var("v19",
                       @{typ
                       "4 word \<times>
                        bool \<times>
                        4 word \<times> 4 word \<times> 4 word \<times> SRType \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'RegisterShiftedRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v19",
                       @{typ
                       "4 word \<times>
                        bool \<times>
                        4 word \<times> 4 word \<times> 4 word \<times> SRType \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Data.ShiftImmediate",@{typ Data},
                   var("v20",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'ShiftImmediate",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v20",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"}),
                   @{theory})),
               (call
                  ("Data.ShiftRegister",@{typ Data},
                   var("v21",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> SRType \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'ShiftRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v21",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> SRType \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Data.TestCompareImmediate",@{typ Data},
                   var("v22",@{typ "2 word \<times> 4 word \<times> 12 word"}),@{theory}),
                call
                  ("dfn'TestCompareImmediate",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v22",@{typ "2 word \<times> 4 word \<times> 12 word"}),@{theory})),
               (call
                  ("Data.TestCompareRegister",@{typ Data},
                   var("v23",
                       @{typ "2 word \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'TestCompareRegister",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v23",
                       @{typ "2 word \<times> 4 word \<times> 4 word \<times> SRType \<times> nat"}),
                   @{theory}))],@{context})),
          (call("instruction.Hint",@{typ instruction},var("v24",@{typ Hint}),@{theory}),
           cs(var("v24",@{typ Hint}),
              [(Term.Const(@{const_name "SendEvent"},@{typ Hint}),
                const("dfn'SendEvent",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
               (Term.Const(@{const_name "WaitForEvent"},@{typ Hint}),
                const
                  ("dfn'WaitForEvent",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
               (Term.Const(@{const_name "WaitForInterrupt"},@{typ Hint}),
                const
                  ("dfn'WaitForInterrupt",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   @{theory})),
               (Term.Const(@{const_name "Yield"},@{typ Hint}),
                const("dfn'Yield",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
               (call("Hint.Breakpoint",@{typ Hint},var_w("v25",32),@{theory}),
                call
                  ("dfn'Breakpoint",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v25",32),@{theory})),
               (call("Hint.DataMemoryBarrier",@{typ Hint},var_w("v26",4),@{theory}),
                call
                  ("dfn'DataMemoryBarrier",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v26",4),@{theory})),
               (call("Hint.DataSynchronizationBarrier",@{typ Hint},var_w("v27",4),@{theory}),
                call
                  ("dfn'DataSynchronizationBarrier",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v27",4),@{theory})),
               (call("Hint.Debug",@{typ Hint},var_w("v28",4),@{theory}),
                call
                  ("dfn'Debug",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v28",4),
                   @{theory})),
               (call("Hint.InstructionSynchronizationBarrier",@{typ Hint},var_w("v29",4),@{theory}),
                call
                  ("dfn'InstructionSynchronizationBarrier",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v29",4),@{theory})),
               (call
                  ("Hint.PreloadData",@{typ Hint},
                   var("v30",@{typ "bool \<times> bool \<times> 4 word \<times> offset1"}),@{theory}),
                call
                  ("dfn'PreloadData",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v30",@{typ "bool \<times> bool \<times> 4 word \<times> offset1"}),@{theory})),
               (call
                  ("Hint.PreloadDataLiteral",@{typ Hint},var("v31",@{typ "bool \<times> 32 word"}),
                   @{theory}),
                call
                  ("dfn'PreloadDataLiteral",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v31",@{typ "bool \<times> 32 word"}),@{theory})),
               (call
                  ("Hint.PreloadInstruction",@{typ Hint},
                   var("v32",@{typ "bool \<times> 4 word \<times> offset1"}),@{theory}),
                call
                  ("dfn'PreloadInstruction",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v32",@{typ "bool \<times> 4 word \<times> offset1"}),@{theory}))],@{context})),
          (call("instruction.Load",@{typ instruction},var("v33",@{typ Load}),@{theory}),
           cs(var("v33",@{typ Load}),
              [(call
                  ("Load.LoadByte",@{typ Load},
                   var("v34",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'LoadByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v34",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Load.LoadByteLiteral",@{typ Load},
                   var("v35",@{typ "bool \<times> bool \<times> 4 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'LoadByteLiteral",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v35",@{typ "bool \<times> bool \<times> 4 word \<times> 32 word"}),@{theory})),
               (call
                  ("Load.LoadByteUnprivileged",@{typ Load},
                   var("v36",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'LoadByteUnprivileged",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v36",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Load.LoadDual",@{typ Load},
                   var("v37",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory}),
                call
                  ("dfn'LoadDual",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v37",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory})),
               (call
                  ("Load.LoadDualLiteral",@{typ Load},
                   var("v38",@{typ "bool \<times> 4 word \<times> 4 word \<times> 32 word"}),
                   @{theory}),
                call
                  ("dfn'LoadDualLiteral",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v38",@{typ "bool \<times> 4 word \<times> 4 word \<times> 32 word"}),
                   @{theory})),
               (call
                  ("Load.LoadExclusive",@{typ Load},
                   var("v39",@{typ "4 word \<times> 4 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'LoadExclusive",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v39",@{typ "4 word \<times> 4 word \<times> 32 word"}),@{theory})),
               (call
                  ("Load.LoadExclusiveByte",@{typ Load},var("v40",@{typ "4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'LoadExclusiveByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v40",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Load.LoadExclusiveDoubleword",@{typ Load},
                   var("v41",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'LoadExclusiveDoubleword",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v41",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Load.LoadExclusiveHalf",@{typ Load},var("v42",@{typ "4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'LoadExclusiveHalf",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v42",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Load.LoadHalf",@{typ Load},
                   var("v43",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'LoadHalf",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v43",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Load.LoadHalfLiteral",@{typ Load},
                   var("v44",@{typ "bool \<times> bool \<times> 4 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'LoadHalfLiteral",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v44",@{typ "bool \<times> bool \<times> 4 word \<times> 32 word"}),@{theory})),
               (call
                  ("Load.LoadHalfUnprivileged",@{typ Load},
                   var("v45",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory}),
                call
                  ("dfn'LoadHalfUnprivileged",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v45",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory})),
               (call
                  ("Load.LoadLiteral",@{typ Load},
                   var("v46",@{typ "bool \<times> 4 word \<times> 32 word"}),@{theory}),
                call
                  ("dfn'LoadLiteral",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v46",@{typ "bool \<times> 4 word \<times> 32 word"}),@{theory})),
               (call
                  ("Load.LoadMultiple",@{typ Load},
                   var("v47",
                       @{typ "bool \<times> bool \<times> bool \<times> 4 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'LoadMultiple",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v47",
                       @{typ "bool \<times> bool \<times> bool \<times> 4 word \<times> 16 word"}),
                   @{theory})),
               (call
                  ("Load.LoadMultipleExceptionReturn",@{typ Load},
                   var("v48",
                       @{typ "bool \<times> bool \<times> bool \<times> 4 word \<times> 15 word"}),
                   @{theory}),
                call
                  ("dfn'LoadMultipleExceptionReturn",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v48",
                       @{typ "bool \<times> bool \<times> bool \<times> 4 word \<times> 15 word"}),
                   @{theory})),
               (call
                  ("Load.LoadMultipleUserRegisters",@{typ Load},
                   var("v49",@{typ "bool \<times> bool \<times> 4 word \<times> 15 word"}),@{theory}),
                call
                  ("dfn'LoadMultipleUserRegisters",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v49",@{typ "bool \<times> bool \<times> 4 word \<times> 15 word"}),@{theory})),
               (call
                  ("Load.LoadSignedByteUnprivileged",@{typ Load},
                   var("v50",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory}),
                call
                  ("dfn'LoadSignedByteUnprivileged",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v50",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory})),
               (call
                  ("Load.LoadUnprivileged",@{typ Load},
                   var("v51",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'LoadUnprivileged",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v51",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Load.LoadWord",@{typ Load},
                   var("v52",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'LoadWord",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v52",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}))],@{context})),
          (call("instruction.Media",@{typ instruction},var("v53",@{typ Media}),@{theory}),
           cs(var("v53",@{typ Media}),
              [(call
                  ("Media.BitFieldClearOrInsert",@{typ Media},
                   var("v54",@{typ "4 word \<times> 4 word \<times> nat \<times> nat"}),@{theory}),
                call
                  ("dfn'BitFieldClearOrInsert",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v54",@{typ "4 word \<times> 4 word \<times> nat \<times> nat"}),@{theory})),
               (call
                  ("Media.BitFieldExtract",@{typ Media},
                   var("v55",@{typ "bool \<times> 4 word \<times> 4 word \<times> nat \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'BitFieldExtract",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v55",@{typ "bool \<times> 4 word \<times> 4 word \<times> nat \<times> nat"}),
                   @{theory})),
               (call
                  ("Media.ByteReverse",@{typ Media},var("v56",@{typ "4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'ByteReverse",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v56",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Media.ByteReversePackedHalfword",@{typ Media},
                   var("v57",@{typ "4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'ByteReversePackedHalfword",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v57",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Media.ByteReverseSignedHalfword",@{typ Media},
                   var("v58",@{typ "4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'ByteReverseSignedHalfword",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v58",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Media.ExtendByte",@{typ Media},
                   var("v59",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'ExtendByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v59",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"}),
                   @{theory})),
               (call
                  ("Media.ExtendByte16",@{typ Media},
                   var("v60",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'ExtendByte16",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v60",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"}),
                   @{theory})),
               (call
                  ("Media.ExtendHalfword",@{typ Media},
                   var("v61",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"}),
                   @{theory}),
                call
                  ("dfn'ExtendHalfword",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v61",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> nat"}),
                   @{theory})),
               (call
                  ("Media.PackHalfword",@{typ Media},
                   var("v62",
                       @{typ
                       "SRType \<times>
                        nat \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'PackHalfword",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v62",
                       @{typ
                       "SRType \<times>
                        nat \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Media.ReverseBits",@{typ Media},var("v63",@{typ "4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'ReverseBits",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v63",@{typ "4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Media.Saturate",@{typ Media},
                   var("v64",
                       @{typ
                       "SRType \<times>
                        nat \<times> nat \<times> bool \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'Saturate",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v64",
                       @{typ
                       "SRType \<times>
                        nat \<times> nat \<times> bool \<times> 4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Media.Saturate16",@{typ Media},
                   var("v65",@{typ "nat \<times> bool \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'Saturate16",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v65",@{typ "nat \<times> bool \<times> 4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Media.SaturatingAddSubtract",@{typ Media},
                   var("v66",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SaturatingAddSubtract",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v66",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Media.SelectBytes",@{typ Media},
                   var("v67",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'SelectBytes",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v67",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory}))],
              @{context})),
          (call("instruction.Multiply",@{typ instruction},var("v68",@{typ Multiply}),@{theory}),
           cs(var("v68",@{typ Multiply}),
              [(call
                  ("Multiply.Multiply32",@{typ Multiply},
                   var("v69",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'Multiply32",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v69",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.MultiplyAccumulate",@{typ Multiply},
                   var("v70",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'MultiplyAccumulate",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v70",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.MultiplyAccumulateAccumulate",@{typ Multiply},
                   var("v71",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'MultiplyAccumulateAccumulate",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v71",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.MultiplyLong",@{typ Multiply},
                   var("v72",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'MultiplyLong",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v72",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.MultiplySubtract",@{typ Multiply},
                   var("v73",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'MultiplySubtract",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v73",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.Signed16Multiply32Accumulate",@{typ Multiply},
                   var("v74",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'Signed16Multiply32Accumulate",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v74",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.Signed16Multiply32Result",@{typ Multiply},
                   var("v75",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'Signed16Multiply32Result",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v75",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.Signed16Multiply64Accumulate",@{typ Multiply},
                   var("v76",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'Signed16Multiply64Accumulate",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v76",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.Signed16x32Multiply32Accumulate",@{typ Multiply},
                   var("v77",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'Signed16x32Multiply32Accumulate",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v77",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.Signed16x32Multiply32Result",@{typ Multiply},
                   var("v78",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'Signed16x32Multiply32Result",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v78",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.SignedMostSignificantMultiply",@{typ Multiply},
                   var("v79",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedMostSignificantMultiply",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v79",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.SignedMostSignificantMultiplySubtract",@{typ Multiply},
                   var("v80",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedMostSignificantMultiplySubtract",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v80",
                       @{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.SignedMultiplyDual",@{typ Multiply},
                   var("v81",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedMultiplyDual",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v81",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Multiply.SignedMultiplyLongDual",@{typ Multiply},
                   var("v82",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedMultiplyLongDual",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v82",
                       @{typ
                       "bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}))],@{context})),
          (call("instruction.SIMD",@{typ instruction},var("v83",@{typ SIMD}),@{theory}),
           cs(var("v83",@{typ SIMD}),
              [(call
                  ("SIMD.SignedAddSub16",@{typ SIMD},
                   var("v84",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedAddSub16",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v84",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.SignedAddSub8",@{typ SIMD},
                   var("v85",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedAddSub8",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v85",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.SignedHalvingAddSub16",@{typ SIMD},
                   var("v86",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedHalvingAddSub16",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v86",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.SignedHalvingAddSub8",@{typ SIMD},
                   var("v87",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedHalvingAddSub8",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v87",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.SignedSaturatingAddSub16",@{typ SIMD},
                   var("v88",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedSaturatingAddSub16",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v88",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.SignedSaturatingAddSub8",@{typ SIMD},
                   var("v89",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'SignedSaturatingAddSub8",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v89",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedAddSub16",@{typ SIMD},
                   var("v90",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedAddSub16",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v90",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedAddSub8",@{typ SIMD},
                   var("v91",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedAddSub8",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v91",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedHalvingAddSub16",@{typ SIMD},
                   var("v92",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedHalvingAddSub16",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v92",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedHalvingAddSub8",@{typ SIMD},
                   var("v93",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedHalvingAddSub8",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v93",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedSaturatingAddSub16",@{typ SIMD},
                   var("v94",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedSaturatingAddSub16",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v94",@{typ "2 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedSaturatingAddSub8",@{typ SIMD},
                   var("v95",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedSaturatingAddSub8",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v95",@{typ "bool \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("SIMD.UnsignedSumAbsoluteDifferences",@{typ SIMD},
                   var("v96",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'UnsignedSumAbsoluteDifferences",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v96",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}))],@{context})),
          (call("instruction.Store",@{typ instruction},var("v97",@{typ Store}),@{theory}),
           cs(var("v97",@{typ Store}),
              [(call
                  ("Store.StoreByte",@{typ Store},
                   var("v98",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'StoreByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v98",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Store.StoreByteUnprivileged",@{typ Store},
                   var("v99",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'StoreByteUnprivileged",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v99",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Store.StoreDual",@{typ Store},
                   var("v100",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory}),
                call
                  ("dfn'StoreDual",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v100",
                       @{typ
                       "bool \<times>
                        bool \<times>
                        bool \<times> 4 word \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory})),
               (call
                  ("Store.StoreExclusive",@{typ Store},
                   var("v101",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 32 word"}),
                   @{theory}),
                call
                  ("dfn'StoreExclusive",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v101",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 32 word"}),
                   @{theory})),
               (call
                  ("Store.StoreExclusiveByte",@{typ Store},
                   var("v102",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'StoreExclusiveByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v102",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Store.StoreExclusiveDoubleword",@{typ Store},
                   var("v103",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory}),
                call
                  ("dfn'StoreExclusiveDoubleword",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v103",@{typ "4 word \<times> 4 word \<times> 4 word \<times> 4 word"}),
                   @{theory})),
               (call
                  ("Store.StoreExclusiveHalf",@{typ Store},
                   var("v104",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'StoreExclusiveHalf",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v104",@{typ "4 word \<times> 4 word \<times> 4 word"}),@{theory})),
               (call
                  ("Store.StoreHalf",@{typ Store},
                   var("v105",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'StoreHalf",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v105",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Store.StoreHalfUnprivileged",@{typ Store},
                   var("v106",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory}),
                call
                  ("dfn'StoreHalfUnprivileged",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v106",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset2"}),
                   @{theory})),
               (call
                  ("Store.StoreMultiple",@{typ Store},
                   var("v107",
                       @{typ "bool \<times> bool \<times> bool \<times> 4 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'StoreMultiple",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v107",
                       @{typ "bool \<times> bool \<times> bool \<times> 4 word \<times> 16 word"}),
                   @{theory})),
               (call
                  ("Store.StoreMultipleUserRegisters",@{typ Store},
                   var("v108",@{typ "bool \<times> bool \<times> 4 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'StoreMultipleUserRegisters",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v108",@{typ "bool \<times> bool \<times> 4 word \<times> 16 word"}),
                   @{theory})),
               (call
                  ("Store.StoreUnprivileged",@{typ Store},
                   var("v109",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'StoreUnprivileged",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v109",
                       @{typ "bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory})),
               (call
                  ("Store.StoreWord",@{typ Store},
                   var("v110",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}),
                call
                  ("dfn'StoreWord",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v110",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> 4 word \<times> 4 word \<times> offset1"}),
                   @{theory}))],@{context})),
          (call("instruction.System",@{typ instruction},var("v111",@{typ System}),@{theory}),
           cs(var("v111",@{typ System}),
              [(Term.Const(@{const_name "ExceptionReturn"},@{typ System}),
                const
                  ("dfn'ExceptionReturn",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   @{theory})),
               (call
                  ("System.ChangeProcessorState",@{typ System},
                   var("v112",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> bool \<times> bool \<times> 5 word option"}),
                   @{theory}),
                call
                  ("dfn'ChangeProcessorState",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v112",
                       @{typ
                       "bool \<times>
                        bool \<times> bool \<times> bool \<times> bool \<times> 5 word option"}),
                   @{theory})),
               (call("System.EnterxLeavex",@{typ System},var_b"v113",@{theory}),
                call
                  ("dfn'EnterxLeavex",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_b"v113",@{theory})),
               (call("System.HypervisorCall",@{typ System},var_w("v114",16),@{theory}),
                call
                  ("dfn'HypervisorCall",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v114",16),@{theory})),
               (call
                  ("System.MoveToBankedOrSpecialRegister",@{typ System},
                   var("v115",@{typ "bool \<times> 5 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'MoveToBankedOrSpecialRegister",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v115",@{typ "bool \<times> 5 word \<times> 4 word"}),@{theory})),
               (call
                  ("System.MoveToRegisterFromBankedOrSpecial",@{typ System},
                   var("v116",@{typ "bool \<times> 5 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'MoveToRegisterFromBankedOrSpecial",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v116",@{typ "bool \<times> 5 word \<times> 4 word"}),@{theory})),
               (call
                  ("System.MoveToRegisterFromSpecial",@{typ System},
                   var("v117",@{typ "bool \<times> 4 word"}),@{theory}),
                call
                  ("dfn'MoveToRegisterFromSpecial",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v117",@{typ "bool \<times> 4 word"}),@{theory})),
               (call
                  ("System.MoveToSpecialFromImmediate",@{typ System},
                   var("v118",@{typ "bool \<times> 32 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'MoveToSpecialFromImmediate",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v118",@{typ "bool \<times> 32 word \<times> 4 word"}),@{theory})),
               (call
                  ("System.MoveToSpecialFromRegister",@{typ System},
                   var("v119",@{typ "bool \<times> 4 word \<times> 4 word"}),@{theory}),
                call
                  ("dfn'MoveToSpecialFromRegister",
                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v119",@{typ "bool \<times> 4 word \<times> 4 word"}),@{theory})),
               (call
                  ("System.ReturnFromException",@{typ System},
                   var("v120",@{typ "bool \<times> bool \<times> bool \<times> 4 word"}),@{theory}),
                call
                  ("dfn'ReturnFromException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v120",@{typ "bool \<times> bool \<times> bool \<times> 4 word"}),@{theory})),
               (call("System.SecureMonitorCall",@{typ System},var_w("v121",4),@{theory}),
                call
                  ("dfn'SecureMonitorCall",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v121",4),@{theory})),
               (call("System.Setend",@{typ System},var_b"v122",@{theory}),
                call
                  ("dfn'Setend",@{typ "state \<Rightarrow> (unit \<times> state)"},var_b"v122",
                   @{theory})),
               (call
                  ("System.StoreReturnState",@{typ System},
                   var("v123",@{typ "bool \<times> bool \<times> bool \<times> 5 word"}),@{theory}),
                call
                  ("dfn'StoreReturnState",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v123",@{typ "bool \<times> bool \<times> bool \<times> 5 word"}),@{theory})),
               (call("System.SupervisorCall",@{typ System},var_w("v124",32),@{theory}),
                call
                  ("dfn'SupervisorCall",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var_w("v124",32),@{theory}))],@{context})),
          (call("instruction.VFP",@{typ instruction},var("v125",@{typ VFP}),@{theory}),
           cs(var("v125",@{typ VFP}),
              [(Term.Const(@{const_name "UndefinedVFP"},@{typ VFP}),
                const
                  ("dfn'UndefinedVFP",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
               (call
                  ("VFP.vadd",@{typ VFP},
                   var("v126",@{typ "bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'vadd",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v126",@{typ "bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory})),
               (call
                  ("VFP.vcmp",@{typ VFP},
                   var("v127",@{typ "bool \<times> 5 word \<times> 5 word option"}),@{theory}),
                call
                  ("dfn'vcmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v127",@{typ "bool \<times> 5 word \<times> 5 word option"}),@{theory})),
               (call
                  ("VFP.vldr",@{typ VFP},
                   var("v128",
                       @{typ "bool \<times> bool \<times> 5 word \<times> 4 word \<times> 32 word"}),
                   @{theory}),
                call
                  ("dfn'vldr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v128",
                       @{typ "bool \<times> bool \<times> 5 word \<times> 4 word \<times> 32 word"}),
                   @{theory})),
               (call
                  ("VFP.vmla_vmls",@{typ VFP},
                   var("v129",
                       @{typ "bool \<times> bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'vmla_vmls",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v129",
                       @{typ "bool \<times> bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory})),
               (call
                  ("VFP.vmov",@{typ VFP},var("v130",@{typ "bool \<times> 5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'vmov",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v130",@{typ "bool \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("VFP.vmov_imm",@{typ VFP},
                   var("v131",@{typ "bool \<times> 5 word \<times> 64 word"}),@{theory}),
                call
                  ("dfn'vmov_imm",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v131",@{typ "bool \<times> 5 word \<times> 64 word"}),@{theory})),
               (call("VFP.vmrs",@{typ VFP},var_w("v132",4),@{theory}),
                call
                  ("dfn'vmrs",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v132",4),
                   @{theory})),
               (call
                  ("VFP.vmul",@{typ VFP},
                   var("v133",@{typ "bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'vmul",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v133",@{typ "bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory})),
               (call
                  ("VFP.vneg_mul",@{typ VFP},
                   var("v134",
                       @{typ
                       "bool \<times> VFPNegMul \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'vneg_mul",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v134",
                       @{typ
                       "bool \<times> VFPNegMul \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory})),
               (call
                  ("VFP.vstr",@{typ VFP},
                   var("v135",
                       @{typ "bool \<times> bool \<times> 5 word \<times> 4 word \<times> 32 word"}),
                   @{theory}),
                call
                  ("dfn'vstr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v135",
                       @{typ "bool \<times> bool \<times> 5 word \<times> 4 word \<times> 32 word"}),
                   @{theory})),
               (call
                  ("VFP.vsub",@{typ VFP},
                   var("v136",@{typ "bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'vsub",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v136",@{typ "bool \<times> 5 word \<times> 5 word \<times> 5 word"}),
                   @{theory}))],@{context}))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Fetch",
   mb(call("CurrentInstrSet",@{typ "state \<Rightarrow> (InstrSet \<times> state)"},lu,@{theory}),
      close
        (var("iset",@{typ InstrSet}),
         mb(mr(close
                 (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
            close
              (var("v",@{typ Architecture}),
               mb(mb(mu(eq(var("v",@{typ Architecture}),lc("ARMv4","Architecture",@{theory})),qTy),
                     close
                       (var_b"v",
                        mu(bop(Or,
                               eq(var("iset",@{typ InstrSet}),
                                  lc("InstrSet_ARM","InstrSet",@{theory})),var_b"v"),qTy))),
                  close
                    (var_b"b",
                     itb([(var_b"b",
                           mb(mw(close
                                   (var("s",qTy),
                                    rupd
                                      ("state.Encoding",
                                       tp[var("s",qTy),lc("Encoding_ARM","Encoding",@{theory})],
                                       @{theory}))),
                              close
                                (var_a HOLogic.unitT,
                                 mb(mr(close
                                         (var("s",qTy),
                                          call
                                            ("state.REG",@{typ "RName \<Rightarrow> 32 word"},
                                             var("s",qTy),@{theory}))),
                                    close
                                      (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                                       mb(mb(mb(mu(apply
                                                     (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                                                      lc("RName_PC","RName",@{theory})),qTy),
                                                close(var_w("v",32),mu(tp[var_w("v",32),ln 4],qTy))),
                                             close
                                               (var("v",@{typ "32 word \<times> nat"}),
                                                call
                                                  ("MemA",
                                                   @{typ
                                                   "state \<Rightarrow> (32 word \<times> state)"},
                                                   var("v",@{typ "32 word \<times> nat"}),@{theory}))),
                                          close
                                            (var_w("v",32),
                                             mu(call
                                                  ("MachineCode.ARM",@{typ MachineCode},
                                                   var_w("v",32),@{theory}),qTy)))))))),
                          (eq(var("iset",@{typ InstrSet}),
                              lc("InstrSet_Jazelle","InstrSet",@{theory})),
                           mu(call("MachineCode.BadCode",@{typ MachineCode},ls"Fetch",@{theory}),qTy))],
                         mb(mr(close
                                 (var("s",qTy),
                                  call
                                    ("state.REG",@{typ "RName \<Rightarrow> 32 word"},var("s",qTy),
                                     @{theory}))),
                            close
                              (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                               mb(mu(apply
                                       (var("v",@{typ "RName \<Rightarrow> 32 word"}),
                                        lc("RName_PC","RName",@{theory})),qTy),
                                  close
                                    (var_w("fpc",32),
                                     mb(call
                                          ("MemA",
                                           @{typ "state \<Rightarrow> (16 word \<times> state)"},
                                           tp[var_w("fpc",32),ln 2],@{theory}),
                                        close
                                          (var_w("ireg",16),
                                           ite(bop(And,
                                                   eq(ex(var_w("ireg",16),ln 15,ln 13,
                                                         (Word_Lib.mk_wordT 3)),lw(7,3)),
                                                   mop(Not,
                                                       eq(ex(var_w("ireg",16),ln 12,ln 11,
                                                             (Word_Lib.mk_wordT 2)),lw(0,2)))),
                                               mb(mw(close
                                                       (var("s",qTy),
                                                        rupd
                                                          ("state.Encoding",
                                                           tp[var("s",qTy),
                                                              lc("Encoding_Thumb2","Encoding",
                                                                 @{theory})],@{theory}))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mb(call
                                                          ("MemA",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (16 word \<times> state)"},
                                                           tp[bop(Add,var_w("fpc",32),lw(2,32)),ln 2],
                                                           @{theory}),
                                                        close
                                                          (var_w("v",16),
                                                           mb(mu(tp[var_w("ireg",16),var_w("v",16)],
                                                                 qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "16 word \<times> 16 word"}),
                                                                 mu(call
                                                                      ("MachineCode.Thumb2",
                                                                       @{typ MachineCode},
                                                                       var("v",
                                                                           @{typ
                                                                           "16 word \<times> 16 word"}),
                                                                       @{theory}),qTy))))))),
                                               mb(mw(close
                                                       (var("s",qTy),
                                                        rupd
                                                          ("state.Encoding",
                                                           tp[var("s",qTy),
                                                              lc("Encoding_Thumb","Encoding",
                                                                 @{theory})],@{theory}))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mb(call
                                                          ("HaveThumbEE",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},lu,@{theory}),
                                                        close
                                                          (var_b"v",
                                                           mb(mb(mu(mop(Not,var_b"v"),qTy),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var("iset",
                                                                                  @{typ InstrSet}),
                                                                              lc("InstrSet_Thumb",
                                                                                 "InstrSet",
                                                                                 @{theory})),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 mu(ite(var_b"b",
                                                                        call
                                                                          ("MachineCode.Thumb",
                                                                           @{typ MachineCode},
                                                                           var_w("ireg",16),
                                                                           @{theory}),
                                                                        call
                                                                          ("MachineCode.ThumbEE",
                                                                           @{typ MachineCode},
                                                                           var_w("ireg",16),
                                                                           @{theory})),qTy))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Do",
   close
     (tp[var_w("cond",4),var_b"defined"],
      mb(mw(close
              (var("s",qTy),
               rupd("state.CurrentCondition",tp[var("s",qTy),var_w("cond",4)],@{theory}))),
         close
           (var_a HOLogic.unitT,
            mb(call
                 ("ConditionPassed",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
               close
                 (var_b"pass",
                  mb(mw(close
                          (var("s",qTy),
                           rupd
                             ("state.undefined",
                              tp[var("s",qTy),bop(And,var_b"pass",mop(Not,var_b"defined"))],
                              @{theory}))),
                     close(var_a HOLogic.unitT,mu(bop(And,var_b"pass",var_b"defined"),qTy)))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Skip",
   close
     (var_a HOLogic.unitT,
      mb(mr(close(var("s",qTy),call("state.undefined",HOLogic.boolT,var("s",qTy),@{theory}))),
         close
           (var_b"b",
            mu(ite(var_b"b",call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}),
                   Term.Const(@{const_name "NoOperation"},@{typ instruction})),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UndefinedARM",
   close
     (var_w("cond",4),
      mb(mw(close
              (var("s",qTy),
               rupd("state.CurrentCondition",tp[var("s",qTy),var_w("cond",4)],@{theory}))),
         close
           (var_a HOLogic.unitT,
            mb(call
                 ("ConditionPassed",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
               close
                 (var_b"b",
                  mu(ite(var_b"b",
                         call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}),
                         Term.Const(@{const_name "NoOperation"},@{typ instruction})),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("UndefinedThumb",
   close
     (var_a HOLogic.unitT,
      mb(call("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
         close
           (var_w("v",4),
            call
              ("UndefinedARM",@{typ "state \<Rightarrow> (instruction \<times> state)"},
               var_w("v",4),@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("DECODE_UNPREDICTABLE",
   close
     (tp[var("mc",@{typ MachineCode}),var_s"s"],
      call
        ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
         call
           ("exception.UNPREDICTABLE",@{typ exception},
            cc[ls"Decode ",
               cs(var("mc",@{typ MachineCode}),
                  [(call("MachineCode.ARM",@{typ MachineCode},var_w("opc",32),@{theory}),
                    cc[mop(Cast(@{typ string}),mop(Cast(@{typ "bool list"}),var_w("opc",32))),
                       ls"; ARM; "]),
                   (call("MachineCode.Thumb",@{typ MachineCode},var_w("opc",16),@{theory}),
                    cc[mop(Cast(@{typ string}),mop(Cast(@{typ "bool list"}),var_w("opc",16))),
                       ls"; Thumb; "]),
                   (call("MachineCode.ThumbEE",@{typ MachineCode},var_w("opc",16),@{theory}),
                    cc[mop(Cast(@{typ string}),mop(Cast(@{typ "bool list"}),var_w("opc",16))),
                       ls"; ThumbEE; "]),
                   (call
                      ("MachineCode.Thumb2",@{typ MachineCode},
                       tp[var_w("opc1",16),var_w("opc2",16)],@{theory}),
                    cc[mop(Cast(@{typ string}),mop(Cast(@{typ "bool list"}),var_w("opc1",16))),
                       ls", ",
                       mop(Cast(@{typ string}),mop(Cast(@{typ "bool list"}),var_w("opc2",16))),
                       ls"; Thumb2; "]),
                   (call("MachineCode.BadCode",@{typ MachineCode},var_s"x",@{theory}),var_s"x")],
                  @{context}),var_s"s"],@{theory}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DecodeHint",
   close
     (tp[var_w("cond",4),var_w("op",8)],
      mb(mr(close
              (var("s",qTy),call("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ Architecture}),
            mb(mb(mu(eq(var("v",@{typ Architecture}),lc("ARMv6T2","Architecture",@{theory})),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         mb(mr(close
                                 (var("s",qTy),
                                  call("state.Encoding",@{typ Encoding},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ Encoding}),
                               mb(mb(mu(eq(var("v",@{typ Encoding}),
                                           lc("Encoding_ARM","Encoding",@{theory})),qTy),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(mr(close
                                                    (var("s",qTy),
                                                     call
                                                       ("state.Architecture",@{typ Architecture},
                                                        var("s",qTy),@{theory}))),
                                               close
                                                 (var("v",@{typ Architecture}),
                                                  mu(eq(var("v",@{typ Architecture}),
                                                        lc("ARMv6K","Architecture",@{theory})),qTy))),
                                            mu(lf,qTy)))),
                                  close
                                    (var_b"v",
                                     mu(bop(And,eq(ex(var_w("op",8),ln 7,ln 4,w4),lw(15,4)),var_b"v"),
                                        qTy)))))))),
               close
                 (var_b"b",
                  ite(var_b"b",mu(Term.Const(@{const_name "NoOperation"},@{typ instruction}),qTy),
                      mb(call
                           ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                            @{theory}),
                         close
                           (var_n"v",
                            mb(mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",mu(lt,qTy),
                                               mb(mr(close
                                                       (var("s",qTy),
                                                        call
                                                          ("state.Encoding",@{typ Encoding},
                                                           var("s",qTy),@{theory}))),
                                                  close
                                                    (var("v",@{typ Encoding}),
                                                     mb(mu(eq(var("v",@{typ Encoding}),
                                                              lc("Encoding_ARM","Encoding",@{theory})),
                                                           qTy),
                                                        close
                                                          (var_b"b",
                                                           ite(var_b"b",
                                                               mb(mr(close
                                                                       (var("s",qTy),
                                                                        call
                                                                          ("state.Architecture",
                                                                           @{typ Architecture},
                                                                           var("s",qTy),@{theory}))),
                                                                  close
                                                                    (var("v",@{typ Architecture}),
                                                                     mu(eq(var("v",
                                                                               @{typ Architecture}),
                                                                           lc("ARMv6K",
                                                                              "Architecture",
                                                                              @{theory})),qTy))),
                                                               mu(lf,qTy))))))))),
                                     close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                  close
                                    (var("v",@{typ "4 word \<times> bool"}),
                                     call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mu(let'
                                           (tp[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                               var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"],
                                            call
                                              ("boolify'8",
                                               @{typ
                                               "bool \<times>
                                                bool \<times>
                                                bool \<times>
                                                bool \<times>
                                                bool \<times> bool \<times> bool \<times> bool"},
                                               var_w("op",8),@{theory}),
                                            itb([(bop(And,mop(Not,var_b"b'7"),
                                                      bop(And,mop(Not,var_b"b'6"),
                                                          bop(And,mop(Not,var_b"b'5"),
                                                              bop(And,mop(Not,var_b"b'4"),
                                                                  bop(And,mop(Not,var_b"b'3"),
                                                                      bop(And,mop(Not,var_b"b'2"),
                                                                          bop(And,
                                                                              mop(Not,var_b"b'1"),
                                                                              var_b"b'0"))))))),
                                                  call
                                                    ("instruction.Hint",@{typ instruction},
                                                     Term.Const(@{const_name "Yield"},@{typ Hint}),
                                                     @{theory})),
                                                 (bop(And,mop(Not,var_b"b'7"),
                                                      bop(And,mop(Not,var_b"b'6"),
                                                          bop(And,mop(Not,var_b"b'5"),
                                                              bop(And,mop(Not,var_b"b'4"),
                                                                  bop(And,mop(Not,var_b"b'3"),
                                                                      bop(And,mop(Not,var_b"b'2"),
                                                                          bop(And,var_b"b'1",
                                                                              mop(Not,var_b"b'0")))))))),
                                                  call
                                                    ("instruction.Hint",@{typ instruction},
                                                     Term.Const
                                                       (@{const_name "WaitForEvent"},@{typ Hint}),
                                                     @{theory})),
                                                 (bop(And,mop(Not,var_b"b'7"),
                                                      bop(And,mop(Not,var_b"b'6"),
                                                          bop(And,mop(Not,var_b"b'5"),
                                                              bop(And,mop(Not,var_b"b'4"),
                                                                  bop(And,mop(Not,var_b"b'3"),
                                                                      bop(And,mop(Not,var_b"b'2"),
                                                                          bop(And,var_b"b'1",
                                                                              var_b"b'0"))))))),
                                                  call
                                                    ("instruction.Hint",@{typ instruction},
                                                     Term.Const
                                                       (@{const_name "WaitForInterrupt"},@{typ Hint}),
                                                     @{theory})),
                                                 (bop(And,mop(Not,var_b"b'7"),
                                                      bop(And,mop(Not,var_b"b'6"),
                                                          bop(And,mop(Not,var_b"b'5"),
                                                              bop(And,mop(Not,var_b"b'4"),
                                                                  bop(And,mop(Not,var_b"b'3"),
                                                                      bop(And,var_b"b'2",
                                                                          bop(And,
                                                                              mop(Not,var_b"b'1"),
                                                                              mop(Not,var_b"b'0")))))))),
                                                  call
                                                    ("instruction.Hint",@{typ instruction},
                                                     Term.Const
                                                       (@{const_name "SendEvent"},@{typ Hint}),
                                                     @{theory})),
                                                 (bop(And,var_b"b'7",
                                                      bop(And,var_b"b'6",
                                                          bop(And,var_b"b'5",var_b"b'4"))),
                                                  call
                                                    ("instruction.Hint",@{typ instruction},
                                                     call
                                                       ("Hint.Debug",@{typ Hint},
                                                        mop(Cast w4,
                                                            ll[var_b"b'3",var_b"b'2",var_b"b'1",
                                                               var_b"b'0"]),@{theory}),@{theory}))],
                                                Term.Const
                                                  (@{const_name "NoOperation"},@{typ instruction}))),
                                         qTy),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("DecodeParallelAdditionSubtraction",
   close
     (tp[var_w("op1",2),var_w("op2",3),var_w("U",1),var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],
      ite(eq(var_w("U",1),lw(1,1)),
          let'
            (tp[var_w("v#0",2),var_b"v#1",var_b"v#2",var_b"v#3"],
             tp[var_w("op1",2),
                call("boolify'3",@{typ "bool \<times> bool \<times> bool"},var_w("op2",3),@{theory})],
             cs(tp[var_w("v#0",2),var_b"v#1",var_b"v#2",var_b"v#3"],
                [(tp[var_w("v",2),lf,var_b"x'1",var_b"x'0"],
                  itb([(eq(var_w("v",2),lw(1,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedAddSub16",@{typ SIMD},
                              tp[mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"x'1",var_b"x'0"]),
                                 var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(2,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedSaturatingAddSub16",@{typ SIMD},
                              tp[mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"x'1",var_b"x'0"]),
                                 var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(3,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedHalvingAddSub16",@{typ SIMD},
                              tp[mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"x'1",var_b"x'0"]),
                                 var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory}))],
                      call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))),
                 (tp[var_w("v",2),lt,lt,lt],
                  itb([(eq(var_w("v",2),lw(1,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedAddSub8",@{typ SIMD},
                              tp[lt,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(2,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedSaturatingAddSub8",@{typ SIMD},
                              tp[lt,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(3,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedHalvingAddSub8",@{typ SIMD},
                              tp[lt,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory}))],
                      call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))),
                 (tp[var_w("v",2),lt,lf,lf],
                  itb([(eq(var_w("v",2),lw(1,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedAddSub8",@{typ SIMD},
                              tp[lf,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(2,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedSaturatingAddSub8",@{typ SIMD},
                              tp[lf,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(3,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.UnsignedHalvingAddSub8",@{typ SIMD},
                              tp[lf,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory}))],
                      call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))),
                 (tp[var_w("v",2),var_b"v0",var_b"v1",var_b"v2"],
                  call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))],@{context})),
          let'
            (tp[var_w("v#4",2),var_b"v#5",var_b"v#6",var_b"v#7"],
             tp[var_w("op1",2),
                call("boolify'3",@{typ "bool \<times> bool \<times> bool"},var_w("op2",3),@{theory})],
             cs(tp[var_w("v#4",2),var_b"v#5",var_b"v#6",var_b"v#7"],
                [(tp[var_w("v",2),lf,var_b"x'1",var_b"x'0"],
                  itb([(eq(var_w("v",2),lw(1,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedAddSub16",@{typ SIMD},
                              tp[mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"x'1",var_b"x'0"]),
                                 var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(2,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedSaturatingAddSub16",@{typ SIMD},
                              tp[mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"x'1",var_b"x'0"]),
                                 var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(3,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedHalvingAddSub16",@{typ SIMD},
                              tp[mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"x'1",var_b"x'0"]),
                                 var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory}))],
                      call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))),
                 (tp[var_w("v",2),lt,lt,lt],
                  itb([(eq(var_w("v",2),lw(1,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedAddSub8",@{typ SIMD},
                              tp[lt,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(2,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedSaturatingAddSub8",@{typ SIMD},
                              tp[lt,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(3,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedHalvingAddSub8",@{typ SIMD},
                              tp[lt,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory}))],
                      call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))),
                 (tp[var_w("v",2),lt,lf,lf],
                  itb([(eq(var_w("v",2),lw(1,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedAddSub8",@{typ SIMD},
                              tp[lf,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(2,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedSaturatingAddSub8",@{typ SIMD},
                              tp[lf,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory})),
                       (eq(var_w("v",2),lw(3,2)),
                        call
                          ("instruction.SIMD",@{typ instruction},
                           call
                             ("SIMD.SignedHalvingAddSub8",@{typ SIMD},
                              tp[lf,var_w("Rd",4),var_w("Rn",4),var_w("Rm",4)],@{theory}),@{theory}))],
                      call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))),
                 (tp[var_w("v",2),var_b"v0",var_b"v1",var_b"v2"],
                  call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}))],@{context})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DecodeVFP",
   close
     (var_w("w",32),
      let'
        (tp[var_b"b'27",var_b"b'26",var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",
            var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",var_b"b'15",var_b"b'14",
            var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
            var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"],
         call
           ("boolify'28",
            @{typ
            "bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
            ex(var_w("w",32),ln 27,ln 0,(Word_Lib.mk_wordT 28)),@{theory}),
         ite(bop(And,var_b"b'27",
                 bop(And,var_b"b'26",bop(And,var_b"b'11",bop(And,mop(Not,var_b"b'10"),var_b"b'9")))),
             itb([(bop(And,mop(Not,var_b"b'25"),bop(And,var_b"b'24",mop(Not,var_b"b'21"))),
                   let'
                     (var_w("Vd",4),
                      mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                      let'
                        (var_w("Rn",4),
                         mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                         let'
                           (var_w("D",1),mop(Cast w1,ll[var_b"b'22"]),
                            mu(let'
                                 (var_b"single_reg",eq(mop(Cast w1,ll[var_b"b'8"]),lw(0,1)),
                                  let'
                                    (var_b"add",eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                     let'
                                       (var_w("imm32",32),
                                        mop(Cast w32,
                                            cc[mop(Cast w8,
                                                   ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                      var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                               lw(0,2)]),
                                        let'
                                          (var_w("d",5),
                                           ite(var_b"single_reg",cc[var_w("Vd",4),var_w("D",1)],
                                               cc[var_w("D",1),var_w("Vd",4)]),
                                           ite(eq(mop(Cast w1,ll[var_b"b'20"]),lw(1,1)),
                                               call
                                                 ("VFP.vldr",@{typ VFP},
                                                  tp[var_b"single_reg",var_b"add",var_w("d",5),
                                                     var_w("Rn",4),var_w("imm32",32)],@{theory}),
                                               call
                                                 ("VFP.vstr",@{typ VFP},
                                                  tp[var_b"single_reg",var_b"add",var_w("d",5),
                                                     var_w("Rn",4),var_w("imm32",32)],@{theory})))))),
                               qTy))))),
                  (bop(And,var_b"b'25",
                       bop(And,mop(Not,var_b"b'24"),
                           bop(And,mop(Not,var_b"b'23"),mop(Not,var_b"b'4")))),
                   let'
                     (var_w("Vm",4),mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                      let'
                        (var_w("M",1),mop(Cast w1,ll[var_b"b'5"]),
                         let'
                           (var_w("op2",1),mop(Cast w1,ll[var_b"b'6"]),
                            let'
                              (var_w("N",1),mop(Cast w1,ll[var_b"b'7"]),
                               let'
                                 (var_w("Vd",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Vn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("D",1),mop(Cast w1,ll[var_b"b'22"]),
                                        mu(let'
                                             (var_b"dp_operation",
                                              eq(mop(Cast w1,ll[var_b"b'8"]),lw(1,1)),
                                              let'
                                                (tp[var_w("d",5),var_w("n",5),var_w("m",5)],
                                                 ite(var_b"dp_operation",
                                                     tp[cc[var_w("D",1),var_w("Vd",4)],
                                                        cc[var_w("N",1),var_w("Vn",4)],
                                                        cc[var_w("M",1),var_w("Vm",4)]],
                                                     tp[cc[var_w("Vd",4),var_w("D",1)],
                                                        cc[var_w("Vn",4),var_w("N",1)],
                                                        cc[var_w("Vm",4),var_w("M",1)]]),
                                                 cs(mop(Cast (Word_Lib.mk_wordT 2),
                                                        ll[var_b"b'21",var_b"b'20"]),
                                                    [(var_w("v",2),
                                                      itb([(eq(var_w("v",2),lw(0,2)),
                                                            call
                                                              ("VFP.vmla_vmls",@{typ VFP},
                                                               tp[var_b"dp_operation",
                                                                  eq(var_w("op2",1),lw(0,1)),
                                                                  var_w("d",5),var_w("n",5),
                                                                  var_w("m",5)],@{theory})),
                                                           (eq(var_w("v",2),lw(1,2)),
                                                            call
                                                              ("VFP.vneg_mul",@{typ VFP},
                                                               tp[var_b"dp_operation",
                                                                  ite(eq(var_w("op2",1),lw(1,1)),
                                                                      lc("VFPNegMul_VNMLA",
                                                                         "VFPNegMul",@{theory}),
                                                                      lc("VFPNegMul_VNMLS",
                                                                         "VFPNegMul",@{theory})),
                                                                  var_w("d",5),var_w("n",5),
                                                                  var_w("m",5)],@{theory})),
                                                           (eq(var_w("v",2),lw(2,2)),
                                                            ite(eq(var_w("op2",1),lw(1,1)),
                                                                call
                                                                  ("VFP.vneg_mul",@{typ VFP},
                                                                   tp[var_b"dp_operation",
                                                                      lc("VFPNegMul_VNMUL",
                                                                         "VFPNegMul",@{theory}),
                                                                      var_w("d",5),var_w("n",5),
                                                                      var_w("m",5)],@{theory}),
                                                                call
                                                                  ("VFP.vmul",@{typ VFP},
                                                                   tp[var_b"dp_operation",
                                                                      var_w("d",5),var_w("n",5),
                                                                      var_w("m",5)],@{theory}))),
                                                           (eq(var_w("v",2),lw(3,2)),
                                                            ite(eq(var_w("op2",1),lw(1,1)),
                                                                call
                                                                  ("VFP.vsub",@{typ VFP},
                                                                   tp[var_b"dp_operation",
                                                                      var_w("d",5),var_w("n",5),
                                                                      var_w("m",5)],@{theory}),
                                                                call
                                                                  ("VFP.vadd",@{typ VFP},
                                                                   tp[var_b"dp_operation",
                                                                      var_w("d",5),var_w("n",5),
                                                                      var_w("m",5)],@{theory})))],
                                                          lx @{typ VFP}))],@{context}))),qTy))))))))),
                  (bop(And,var_b"b'25",
                       bop(And,mop(Not,var_b"b'24"),
                           bop(And,var_b"b'23",
                               bop(And,var_b"b'21",
                                   bop(And,var_b"b'20",
                                       bop(And,mop(Not,var_b"b'19"),
                                           bop(And,mop(Not,var_b"b'18"),
                                               bop(And,mop(Not,var_b"b'17"),
                                                   bop(And,mop(Not,var_b"b'16"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,var_b"b'6",mop(Not,var_b"b'4")))))))))))),
                   let'
                     (var_w("Vm",4),mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                      let'
                        (var_w("M",1),mop(Cast w1,ll[var_b"b'5"]),
                         let'
                           (var_w("Vd",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("D",1),mop(Cast w1,ll[var_b"b'22"]),
                               mu(let'
                                    (var_b"single_register",eq(mop(Cast w1,ll[var_b"b'8"]),lw(0,1)),
                                     let'
                                       (tp[var_w("d",5),var_w("m",5)],
                                        ite(var_b"single_register",
                                            tp[cc[var_w("Vd",4),var_w("D",1)],
                                               cc[var_w("Vm",4),var_w("M",1)]],
                                            tp[cc[var_w("D",1),var_w("Vd",4)],
                                               cc[var_w("M",1),var_w("Vm",4)]]),
                                        call
                                          ("VFP.vmov",@{typ VFP},
                                           tp[var_b"single_register",var_w("d",5),var_w("m",5)],
                                           @{theory}))),qTy)))))),
                  (bop(And,var_b"b'25",
                       bop(And,mop(Not,var_b"b'24"),
                           bop(And,var_b"b'23",
                               bop(And,var_b"b'21",
                                   bop(And,var_b"b'20",
                                       bop(And,mop(Not,var_b"b'19"),
                                           bop(And,var_b"b'18",
                                               bop(And,mop(Not,var_b"b'17"),
                                                   bop(And,mop(Not,var_b"b'16"),
                                                       bop(And,var_b"b'6",mop(Not,var_b"b'4"))))))))))),
                   let'
                     (var_w("Vm",4),mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                      let'
                        (var_w("M",1),mop(Cast w1,ll[var_b"b'5"]),
                         let'
                           (var_w("Vd",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("D",1),mop(Cast w1,ll[var_b"b'22"]),
                               mu(ite(eq(mop(Cast w1,ll[var_b"b'7"]),lw(1,1)),
                                      let'
                                        (var_b"dp_operation",
                                         eq(mop(Cast w1,ll[var_b"b'8"]),lw(1,1)),
                                         let'
                                           (tp[var_w("d",5),var_w("m",5)],
                                            ite(var_b"dp_operation",
                                                tp[cc[var_w("D",1),var_w("Vd",4)],
                                                   cc[var_w("M",1),var_w("Vm",4)]],
                                                tp[cc[var_w("Vd",4),var_w("D",1)],
                                                   cc[var_w("Vm",4),var_w("M",1)]]),
                                            call
                                              ("VFP.vcmp",@{typ VFP},
                                               tp[var_b"dp_operation",var_w("d",5),
                                                  mop(Some,var_w("m",5))],@{theory}))),
                                      Term.Const(@{const_name "UndefinedVFP"},@{typ VFP})),qTy)))))),
                  (bop(And,var_b"b'25",
                       bop(And,mop(Not,var_b"b'24"),
                           bop(And,var_b"b'23",
                               bop(And,var_b"b'21",
                                   bop(And,var_b"b'20",
                                       bop(And,mop(Not,var_b"b'19"),
                                           bop(And,var_b"b'18",
                                               bop(And,mop(Not,var_b"b'17"),
                                                   bop(And,var_b"b'16",
                                                       bop(And,var_b"b'6",mop(Not,var_b"b'4"))))))))))),
                   let'
                     (var_w("Vd",4),
                      mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                      let'
                        (var_w("D",1),mop(Cast w1,ll[var_b"b'22"]),
                         mu(ite(eq(mop(Cast w1,ll[var_b"b'7"]),lw(1,1)),
                                let'
                                  (var_b"dp_operation",eq(mop(Cast w1,ll[var_b"b'8"]),lw(1,1)),
                                   call
                                     ("VFP.vcmp",@{typ VFP},
                                      tp[var_b"dp_operation",
                                         ite(var_b"dp_operation",cc[var_w("D",1),var_w("Vd",4)],
                                             cc[var_w("Vd",4),var_w("D",1)]),
                                         lo (Word_Lib.mk_wordT 5)],@{theory})),
                                Term.Const(@{const_name "UndefinedVFP"},@{typ VFP})),qTy)))),
                  (bop(And,var_b"b'25",
                       bop(And,mop(Not,var_b"b'24"),
                           bop(And,var_b"b'23",
                               bop(And,var_b"b'21",
                                   bop(And,var_b"b'20",
                                       bop(And,mop(Not,var_b"b'6"),mop(Not,var_b"b'4"))))))),
                   let'
                     (var_w("Vd",4),
                      mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                      let'
                        (var_w("D",1),mop(Cast w1,ll[var_b"b'22"]),
                         mu(let'
                              (var_b"single_register",eq(mop(Cast w1,ll[var_b"b'8"]),lw(0,1)),
                               call
                                 ("VFP.vmov_imm",@{typ VFP},
                                  tp[var_b"single_register",
                                     ite(var_b"single_register",cc[var_w("Vd",4),var_w("D",1)],
                                         cc[var_w("D",1),var_w("Vd",4)]),
                                     call
                                       ("VFPExpandImm",w64,
                                        tp[cc[mop(Cast w4,
                                                  ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                                           var_b"single_register"],@{theory})],@{theory})),qTy)))),
                  (bop(And,var_b"b'25",
                       bop(And,mop(Not,var_b"b'24"),
                           bop(And,var_b"b'23",
                               bop(And,var_b"b'22",
                                   bop(And,var_b"b'21",
                                       bop(And,var_b"b'20",
                                           bop(And,mop(Not,var_b"b'19"),
                                               bop(And,mop(Not,var_b"b'18"),
                                                   bop(And,mop(Not,var_b"b'17"),
                                                       bop(And,var_b"b'16",
                                                           bop(And,mop(Not,var_b"b'8"),var_b"b'4"))))))))))),
                   let'
                     (var_w("Rt",4),
                      mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                      ite(eq(var_w("Rt",4),lw(13,4)),
                          call
                            ("raise'exception",@{typ "state \<Rightarrow> (VFP \<times> state)"},
                             call
                               ("exception.UNPREDICTABLE",@{typ exception},ls"DecodeVFP: mrs",
                                @{theory}),@{theory}),
                          mu(call("VFP.vmrs",@{typ VFP},var_w("Rt",4),@{theory}),qTy))))],
                 mu(Term.Const(@{const_name "UndefinedVFP"},@{typ VFP}),qTy)),
             mu(Term.Const(@{const_name "UndefinedVFP"},@{typ VFP}),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DecodeARM",
   close
     (var_w("w",32),
      let'
        (var("mc",@{typ MachineCode}),
         call("MachineCode.ARM",@{typ MachineCode},var_w("w",32),@{theory}),
         let'
           (var_w("cond",4),ex(var_w("w",32),ln 31,ln 28,w4),
            ite(eq(var_w("cond",4),lw(15,4)),
                let'
                  (tp[var_b"b'27",var_b"b'26",var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                      var_b"b'21",var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",
                      var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",
                      var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                      var_b"b'2",var_b"b'1",var_b"b'0"],
                   call
                     ("boolify'28",
                      @{typ
                      "bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
                      ex(var_w("w",32),ln 27,ln 0,(Word_Lib.mk_wordT 28)),@{theory}),
                   itb([(var_b"b'26",
                         itb([(var_b"b'21",
                               ite(bop(And,mop(Not,var_b"b'27"),
                                       bop(And,mop(Not,var_b"b'25"),
                                           bop(And,var_b"b'24",
                                               bop(And,mop(Not,var_b"b'23"),
                                                   bop(And,var_b"b'22",
                                                       bop(And,var_b"b'20",mop(Not,var_b"b'7"))))))),
                                   itb([(bop(And,mop(Not,var_b"b'6"),
                                             bop(And,mop(Not,var_b"b'5"),var_b"b'4")),
                                         mb(mr(close
                                                 (var("s",qTy),
                                                  call
                                                    ("state.Architecture",@{typ Architecture},
                                                     var("s",qTy),@{theory}))),
                                            close
                                              (var("v",@{typ Architecture}),
                                               mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                               sl[lc("ARMv6K","Architecture",
                                                                     @{theory}),
                                                                  lc("ARMv7_A","Architecture",
                                                                     @{theory}),
                                                                  lc("ARMv7_R","Architecture",
                                                                     @{theory})]),qTy),
                                                        close
                                                          (var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                     close
                                                       (var("v",@{typ "4 word \<times> bool"}),
                                                        call
                                                          ("Do",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},
                                                           var("v",@{typ "4 word \<times> bool"}),
                                                           @{theory}))),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         mu(Term.Const
                                                              (@{const_name "ClearExclusive"},
                                                               @{typ instruction}),qTy),
                                                         call
                                                           ("Skip",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (instruction \<times> state)"},lu,
                                                            @{theory}))))))),
                                        (bop(And,var_b"b'19",
                                             bop(And,var_b"b'18",
                                                 bop(And,var_b"b'17",
                                                     bop(And,var_b"b'16",
                                                         bop(And,var_b"b'15",
                                                             bop(And,var_b"b'14",
                                                                 bop(And,var_b"b'13",
                                                                     bop(And,var_b"b'12",
                                                                         bop(And,
                                                                             mop(Not,var_b"b'11"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'10"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'9"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'8"),
                                                                                         bop(And,
                                                                                             var_b"b'6",
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'5"),
                                                                                                 mop(Not,
                                                                                                     var_b"b'4"))))))))))))))),
                                         mb(call
                                              ("ArchVersion",
                                               @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                               @{theory}),
                                            close
                                              (var_n"v",
                                               mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                        close
                                                          (var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                     close
                                                       (var("v",@{typ "4 word \<times> bool"}),
                                                        call
                                                          ("Do",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},
                                                           var("v",@{typ "4 word \<times> bool"}),
                                                           @{theory}))),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         mu(call
                                                              ("instruction.Hint",
                                                               @{typ instruction},
                                                               call
                                                                 ("Hint.DataSynchronizationBarrier",
                                                                  @{typ Hint},
                                                                  mop(Cast w4,
                                                                      ll[var_b"b'3",var_b"b'2",
                                                                         var_b"b'1",var_b"b'0"]),
                                                                  @{theory}),@{theory}),qTy),
                                                         call
                                                           ("Skip",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (instruction \<times> state)"},lu,
                                                            @{theory}))))))),
                                        (bop(And,var_b"b'6",bop(And,mop(Not,var_b"b'5"),var_b"b'4")),
                                         mb(call
                                              ("ArchVersion",
                                               @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                               @{theory}),
                                            close
                                              (var_n"v",
                                               mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                        close
                                                          (var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                     close
                                                       (var("v",@{typ "4 word \<times> bool"}),
                                                        call
                                                          ("Do",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},
                                                           var("v",@{typ "4 word \<times> bool"}),
                                                           @{theory}))),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         mu(call
                                                              ("instruction.Hint",
                                                               @{typ instruction},
                                                               call
                                                                 ("Hint.DataMemoryBarrier",
                                                                  @{typ Hint},
                                                                  mop(Cast w4,
                                                                      ll[var_b"b'3",var_b"b'2",
                                                                         var_b"b'1",var_b"b'0"]),
                                                                  @{theory}),@{theory}),qTy),
                                                         call
                                                           ("Skip",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (instruction \<times> state)"},lu,
                                                            @{theory}))))))),
                                        (bop(And,var_b"b'6",bop(And,var_b"b'5",mop(Not,var_b"b'4"))),
                                         mb(call
                                              ("ArchVersion",
                                               @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                               @{theory}),
                                            close
                                              (var_n"v",
                                               mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                        close
                                                          (var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                     close
                                                       (var("v",@{typ "4 word \<times> bool"}),
                                                        call
                                                          ("Do",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},
                                                           var("v",@{typ "4 word \<times> bool"}),
                                                           @{theory}))),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         mu(call
                                                              ("instruction.Hint",
                                                               @{typ instruction},
                                                               call
                                                                 ("Hint.InstructionSynchronizationBarrier",
                                                                  @{typ Hint},
                                                                  mop(Cast w4,
                                                                      ll[var_b"b'3",var_b"b'2",
                                                                         var_b"b'1",var_b"b'0"]),
                                                                  @{theory}),@{theory}),qTy),
                                                         call
                                                           ("Skip",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (instruction \<times> state)"},lu,
                                                            @{theory})))))))],
                                       mb(call
                                            ("ArchVersion",
                                             @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_n"v",
                                             mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       mu(call
                                                            ("instruction.Undefined",
                                                             @{typ instruction},lw(0,32),@{theory}),
                                                          qTy),
                                                       mb(call
                                                            ("DECODE_UNPREDICTABLE",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[var("mc",@{typ MachineCode}),ls""],
                                                             @{theory}),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(lx @{typ instruction},qTy))))))))),
                                   mb(call
                                        ("ArchVersion",
                                         @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                         @{theory}),
                                      close
                                        (var_n"v",
                                         mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mu(call
                                                        ("instruction.Undefined",@{typ instruction},
                                                         lw(0,32),@{theory}),qTy),
                                                   mb(call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),ls""],
                                                         @{theory}),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         mu(lx @{typ instruction},qTy)))))))))),
                              (bop(And,mop(Not,var_b"b'27"),var_b"b'20"),
                               itb([(bop(And,mop(Not,var_b"b'25"),
                                         bop(And,mop(Not,var_b"b'24"),var_b"b'22")),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                    close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mu(call
                                                          ("instruction.Hint",@{typ instruction},
                                                           call
                                                             ("Hint.PreloadInstruction",@{typ Hint},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                    lw(1,1)),
                                                                 mop(Cast w4,
                                                                     ll[var_b"b'19",var_b"b'18",
                                                                        var_b"b'17",var_b"b'16"]),
                                                                 call
                                                                   ("offset1.immediate_form1",
                                                                    @{typ offset1},
                                                                    mop(Cast w32,
                                                                        mop(Cast
                                                                              (Word_Lib.mk_wordT 12),
                                                                            ll[var_b"b'11",
                                                                               var_b"b'10",
                                                                               var_b"b'9",
                                                                               var_b"b'8",
                                                                               var_b"b'7",
                                                                               var_b"b'6",
                                                                               var_b"b'5",
                                                                               var_b"b'4",
                                                                               var_b"b'3",
                                                                               var_b"b'2",
                                                                               var_b"b'1",var_b"b'0"])),
                                                                    @{theory})],@{theory}),@{theory}),
                                                        qTy),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))),
                                    (bop(And,var_b"b'25",
                                         bop(And,mop(Not,var_b"b'24"),
                                             bop(And,var_b"b'22",mop(Not,var_b"b'4")))),
                                     let'
                                       (var_w("Rm",4),
                                        mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                       close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(eq(var_w("Rm",4),lw(15,4)),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls
                                                                      "PreloadInstruction (register)"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (tp[var("shift_t",@{typ SRType}),
                                                                       var_n"shift_n"],
                                                                    call
                                                                      ("DecodeImmShift",
                                                                       @{typ "SRType \<times> nat"},
                                                                       tp[mop(Cast
                                                                                (Word_Lib.mk_wordT 2),
                                                                              ll[var_b"b'6",
                                                                                 var_b"b'5"]),
                                                                          mop(Cast
                                                                                (Word_Lib.mk_wordT 5),
                                                                              ll[var_b"b'11",
                                                                                 var_b"b'10",
                                                                                 var_b"b'9",
                                                                                 var_b"b'8",
                                                                                 var_b"b'7"])],
                                                                       @{theory}),
                                                                    call
                                                                      ("instruction.Hint",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Hint.PreloadInstruction",
                                                                          @{typ Hint},
                                                                          tp[eq(mop(Cast w1,
                                                                                    ll[var_b"b'23"]),
                                                                                lw(1,1)),
                                                                             mop(Cast w4,
                                                                                 ll[var_b"b'19",
                                                                                    var_b"b'18",
                                                                                    var_b"b'17",
                                                                                    var_b"b'16"]),
                                                                             call
                                                                               ("offset1.register_form1",
                                                                                @{typ offset1},
                                                                                tp[var_w("Rm",4),
                                                                                   var("shift_t",
                                                                                       @{typ SRType}),
                                                                                   var_n"shift_n"],
                                                                                @{theory})],
                                                                          @{theory}),@{theory})),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))),
                                    (bop(And,mop(Not,var_b"b'25"),
                                         bop(And,var_b"b'24",
                                             bop(And,var_b"b'19",
                                                 bop(And,var_b"b'18",
                                                     bop(And,var_b"b'17",var_b"b'16"))))),
                                     mb(call
                                          ("HaveDSPSupport",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mu(tp[lw(14,4),var_b"v"],qTy),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mu(call
                                                          ("instruction.Hint",@{typ instruction},
                                                           call
                                                             ("Hint.PreloadDataLiteral",@{typ Hint},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                    lw(1,1)),
                                                                 mop(Cast w32,
                                                                     mop(Cast (Word_Lib.mk_wordT 12),
                                                                         ll[var_b"b'11",var_b"b'10",
                                                                            var_b"b'9",var_b"b'8",
                                                                            var_b"b'7",var_b"b'6",
                                                                            var_b"b'5",var_b"b'4",
                                                                            var_b"b'3",var_b"b'2",
                                                                            var_b"b'1",var_b"b'0"]))],
                                                              @{theory}),@{theory}),qTy),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))),
                                    (bop(And,mop(Not,var_b"b'25"),var_b"b'24"),
                                     let'
                                       (var_w("R",1),mop(Cast w1,ll[var_b"b'22"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",
                                                                       mb(mr(close
                                                                               (var("s",qTy),
                                                                                call
                                                                                  ("state.Extensions",
                                                                                   @{typ
                                                                                   "Extensions set"},
                                                                                   var("s",qTy),
                                                                                   @{theory}))),
                                                                          close
                                                                            (var("v",
                                                                                 @{typ
                                                                                 "Extensions set"}),
                                                                             mu(bop(In,
                                                                                    lc("Extension_Multiprocessing",
                                                                                       "Extensions",
                                                                                       @{theory}),
                                                                                    var("v",
                                                                                        @{typ
                                                                                        "Extensions
                                                                                            set"})),
                                                                                qTy))),mu(lf,qTy)))),
                                                             close
                                                               (var_b"v",
                                                                mu(bop(And,eq(var_w("R",1),lw(1,1)),
                                                                       var_b"v"),qTy))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",mu(lt,qTy),
                                                                 mb(call
                                                                      ("HaveDSPSupport",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (bool \<times> state)"},lu,
                                                                       @{theory}),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(And,
                                                                              eq(var_w("R",1),
                                                                                 lw(0,1)),var_b"v"),
                                                                          qTy)))))),
                                                       close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mu(call
                                                             ("instruction.Hint",@{typ instruction},
                                                              call
                                                                ("Hint.PreloadData",@{typ Hint},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    eq(var_w("R",1),lw(0,1)),
                                                                    mop(Cast w4,
                                                                        ll[var_b"b'19",var_b"b'18",
                                                                           var_b"b'17",var_b"b'16"]),
                                                                    call
                                                                      ("offset1.immediate_form1",
                                                                       @{typ offset1},
                                                                       mop(Cast w32,
                                                                           mop(Cast
                                                                                 (Word_Lib.mk_wordT 12),
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8",
                                                                                  var_b"b'7",
                                                                                  var_b"b'6",
                                                                                  var_b"b'5",
                                                                                  var_b"b'4",
                                                                                  var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])),
                                                                       @{theory})],@{theory}),
                                                              @{theory}),qTy),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))),
                                    (bop(And,var_b"b'25",bop(And,var_b"b'24",mop(Not,var_b"b'4"))),
                                     let'
                                       (var_w("Rm",4),
                                        mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("R",1),mop(Cast w1,ll[var_b"b'22"]),
                                              mb(call
                                                   ("ArchVersion",
                                                    @{typ
                                                    "state \<Rightarrow> (nat \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_n"v",
                                                    mb(mb(mb(mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                                      close
                                                                        (var_b"b",
                                                                         ite(var_b"b",
                                                                             mb(mr(close
                                                                                     (var("s",qTy),
                                                                                      call
                                                                                        ("state.Extensions",
                                                                                         @{typ
                                                                                         "Extensions
                                                                                             set"},
                                                                                         var("s",qTy),
                                                                                         @{theory}))),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ
                                                                                       "Extensions
                                                                                           set"}),
                                                                                   mu(bop(In,
                                                                                          lc("Extension_Multiprocessing",
                                                                                             "Extensions",
                                                                                             @{theory}),
                                                                                          var("v",
                                                                                              @{typ
                                                                                              "Extensions
                                                                                                  set"})),
                                                                                      qTy))),
                                                                             mu(lf,qTy)))),
                                                                   close
                                                                     (var_b"v",
                                                                      mu(bop(And,
                                                                             eq(var_w("R",1),lw(1,1)),
                                                                             var_b"v"),qTy))),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",mu(lt,qTy),
                                                                       mb(call
                                                                            ("HaveDSPSupport",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (bool \<times> state)"},
                                                                             lu,@{theory}),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(And,
                                                                                    eq(var_w("R",1),
                                                                                       lw(0,1)),
                                                                                    var_b"v"),qTy)))))),
                                                             close
                                                               (var_b"v",
                                                                mu(tp[lw(14,4),var_b"v"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              let'
                                                                (var_b"is_pldw",
                                                                 eq(var_w("R",1),lw(0,1)),
                                                                 mb(ite(bop(Or,
                                                                            eq(var_w("Rm",4),
                                                                               lw(15,4)),
                                                                            bop(And,
                                                                                eq(var_w("Rn",4),
                                                                                   lw(15,4)),
                                                                                var_b"is_pldw")),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls
                                                                               "PreloadData (register)"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(let'
                                                                            (tp[var("shift_t",
                                                                                    @{typ SRType}),
                                                                                var_n"shift_n"],
                                                                             call
                                                                               ("DecodeImmShift",
                                                                                @{typ
                                                                                "SRType \<times> nat"},
                                                                                tp[mop(Cast
                                                                                         (Word_Lib.mk_wordT 2),
                                                                                       ll[var_b"b'6",
                                                                                          var_b"b'5"]),
                                                                                   mop(Cast
                                                                                         (Word_Lib.mk_wordT 5),
                                                                                       ll[var_b"b'11",
                                                                                          var_b"b'10",
                                                                                          var_b"b'9",
                                                                                          var_b"b'8",
                                                                                          var_b"b'7"])],
                                                                                @{theory}),
                                                                             call
                                                                               ("instruction.Hint",
                                                                                @{typ instruction},
                                                                                call
                                                                                  ("Hint.PreloadData",
                                                                                   @{typ Hint},
                                                                                   tp[eq(mop(Cast w1,
                                                                                             ll[var_b"b'23"]),
                                                                                         lw(1,1)),
                                                                                      var_b"is_pldw",
                                                                                      var_w("Rn",4),
                                                                                      call
                                                                                        ("offset1.register_form1",
                                                                                         @{typ offset1},
                                                                                         tp[var_w("Rm",4),
                                                                                            var("shift_t",
                                                                                                @{typ SRType}),
                                                                                            var_n"shift_n"],
                                                                                         @{theory})],
                                                                                   @{theory}),
                                                                                @{theory})),qTy)))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))))],
                                   mb(call
                                        ("ArchVersion",
                                         @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                         @{theory}),
                                      close
                                        (var_n"v",
                                         mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mu(call
                                                        ("instruction.Undefined",@{typ instruction},
                                                         lw(0,32),@{theory}),qTy),
                                                   mb(call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),ls""],
                                                         @{theory}),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         mu(lx @{typ instruction},qTy))))))))))],
                             mb(call
                                  ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                   lu,@{theory}),
                                close
                                  (var_n"v",
                                   mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                      close
                                        (var_b"b",
                                         ite(var_b"b",
                                             mu(call
                                                  ("instruction.Undefined",@{typ instruction},
                                                   lw(0,32),@{theory}),qTy),
                                             mb(call
                                                  ("DECODE_UNPREDICTABLE",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[var("mc",@{typ MachineCode}),ls""],@{theory}),
                                                close
                                                  (var_a HOLogic.unitT,mu(lx @{typ instruction},qTy)))))))))),
                        (bop(And,mop(Not,var_b"b'27"),
                             bop(And,mop(Not,var_b"b'25"),
                                 bop(And,var_b"b'24",
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,var_b"b'16",
                                                         bop(And,mop(Not,var_b"b'7"),
                                                             bop(And,mop(Not,var_b"b'6"),
                                                                 bop(And,mop(Not,var_b"b'5"),
                                                                     mop(Not,var_b"b'4")))))))))))),
                         mb(call
                              ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                               @{theory}),
                            close
                              (var_n"v",
                               mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                        close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.System",@{typ instruction},
                                               call
                                                 ("System.Setend",@{typ System},
                                                  eq(mop(Cast w1,ll[var_b"b'9"]),lw(1,1)),@{theory}),
                                               @{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))),
                        (bop(And,mop(Not,var_b"b'27"),
                             bop(And,mop(Not,var_b"b'25"),
                                 bop(And,var_b"b'24",
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'16"),
                                                         mop(Not,var_b"b'5"))))))))),
                         let'
                           (var_w("mode",5),
                            mop(Cast (Word_Lib.mk_wordT 5),
                                ll[var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("F",1),mop(Cast w1,ll[var_b"b'6"]),
                               let'
                                 (var_w("I",1),mop(Cast w1,ll[var_b"b'7"]),
                                  let'
                                    (var_w("A",1),mop(Cast w1,ll[var_b"b'8"]),
                                     let'
                                       (var_w("M",1),mop(Cast w1,ll[var_b"b'17"]),
                                        let'
                                          (var_w("imod",2),
                                           mop(Cast (Word_Lib.mk_wordT 2),
                                               ll[var_b"b'19",var_b"b'18"]),
                                           mb(call
                                                ("ArchVersion",
                                                 @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_n"v",
                                                 mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                          close
                                                            (var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mb(ite(bop(Or,
                                                                      bop(And,
                                                                          mop(Not,
                                                                              eq(var_w("mode",5),
                                                                                 lw(0,5))),
                                                                          eq(var_w("M",1),lw(0,1))),
                                                                      bop(Or,
                                                                          eq(bop(Bit,
                                                                                 var_w("imod",2),
                                                                                 ln 1),
                                                                             eq(cc[var_w("A",1),
                                                                                   var_w("I",1),
                                                                                   var_w("F",1)],
                                                                                lw(0,3))),
                                                                          bop(Or,
                                                                              bop(And,
                                                                                  eq(var_w("imod",2),
                                                                                     lw(0,2)),
                                                                                  eq(var_w("M",1),
                                                                                     lw(0,1))),
                                                                              eq(var_w("imod",2),
                                                                                 lw(1,2))))),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"ChangeProcessorState"],
                                                                     @{theory}),mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.System",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("System.ChangeProcessorState",
                                                                          @{typ System},
                                                                          tp[eq(var_w("imod",2),
                                                                                lw(2,2)),
                                                                             eq(var_w("imod",2),
                                                                                lw(3,2)),
                                                                             eq(var_w("A",1),lw(1,1)),
                                                                             eq(var_w("I",1),lw(1,1)),
                                                                             eq(var_w("F",1),lw(1,1)),
                                                                             ite(eq(var_w("M",1),
                                                                                    lw(1,1)),
                                                                                 mop(Some,
                                                                                     var_w("mode",5)),
                                                                                 lo (Word_Lib.mk_wordT 5))],
                                                                          @{theory}),@{theory}),qTy))),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory}))))))))))))),
                        (bop(And,var_b"b'27",
                             bop(And,mop(Not,var_b"b'25"),bop(And,var_b"b'22",mop(Not,var_b"b'20")))),
                         let'
                           (var_w("U",1),mop(Cast w1,ll[var_b"b'23"]),
                            mb(call
                                 ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                  lu,@{theory}),
                               close
                                 (var_n"v",
                                  mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                           close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mu(call
                                                 ("instruction.System",@{typ instruction},
                                                  call
                                                    ("System.StoreReturnState",@{typ System},
                                                     tp[eq(var_w("U",1),lw(1,1)),
                                                        eq(mop(Cast w1,ll[var_b"b'24"]),var_w("U",1)),
                                                        eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                        mop(Cast (Word_Lib.mk_wordT 5),
                                                            ll[var_b"b'4",var_b"b'3",var_b"b'2",
                                                               var_b"b'1",var_b"b'0"])],@{theory}),
                                                  @{theory}),qTy),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'27",
                             bop(And,mop(Not,var_b"b'25"),bop(And,mop(Not,var_b"b'22"),var_b"b'20"))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                            let'
                              (var_w("U",1),mop(Cast w1,ll[var_b"b'23"]),
                               mb(call
                                    ("ArchVersion",
                                     @{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
                                  close
                                    (var_n"v",
                                     mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                              close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(eq(var_w("Rn",4),lw(15,4)),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"ReturnFromException"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.System",@{typ instruction},
                                                           call
                                                             ("System.ReturnFromException",
                                                              @{typ System},
                                                              tp[eq(var_w("U",1),lw(1,1)),
                                                                 eq(mop(Cast w1,ll[var_b"b'24"]),
                                                                    var_w("U",1)),
                                                                 eq(mop(Cast w1,ll[var_b"b'21"]),
                                                                    lw(1,1)),var_w("Rn",4)],
                                                              @{theory}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'27",var_b"b'25"),
                         mb(call
                              ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                               @{theory}),
                            close
                              (var_n"v",
                               mb(mb(mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                        close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.Branch",@{typ instruction},
                                               call
                                                 ("Branch.BranchLinkExchangeImmediate",
                                                  @{typ Branch},
                                                  tp[lc("InstrSet_Thumb","InstrSet",@{theory}),
                                                     mop(SE w32,
                                                         cc[mop(Cast (Word_Lib.mk_wordT 24),
                                                                ll[var_b"b'23",var_b"b'22",
                                                                   var_b"b'21",var_b"b'20",
                                                                   var_b"b'19",var_b"b'18",
                                                                   var_b"b'17",var_b"b'16",
                                                                   var_b"b'15",var_b"b'14",
                                                                   var_b"b'13",var_b"b'12",
                                                                   var_b"b'11",var_b"b'10",
                                                                   var_b"b'9",var_b"b'8",var_b"b'7",
                                                                   var_b"b'6",var_b"b'5",var_b"b'4",
                                                                   var_b"b'3",var_b"b'2",var_b"b'1",
                                                                   var_b"b'0"]),
                                                            mop(Cast w1,ll[var_b"b'24"]),lw(0,1)])],
                                                  @{theory}),@{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory})))))))],
                       mb(call
                            ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                             @{theory}),
                          close
                            (var_n"v",
                             mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                close
                                  (var_b"b",
                                   ite(var_b"b",
                                       mu(call
                                            ("instruction.Undefined",@{typ instruction},lw(0,32),
                                             @{theory}),qTy),
                                       mb(call
                                            ("DECODE_UNPREDICTABLE",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[var("mc",@{typ MachineCode}),ls""],@{theory}),
                                          close(var_a HOLogic.unitT,mu(lx @{typ instruction},qTy)))))))))),
                let'
                  (tp[var_b"b'27",var_b"b'26",var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                      var_b"b'21",var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",
                      var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",
                      var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                      var_b"b'2",var_b"b'1",var_b"b'0"],
                   call
                     ("boolify'28",
                      @{typ
                      "bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times>
                       bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
                      ex(var_w("w",32),ln 27,ln 0,(Word_Lib.mk_wordT 28)),@{theory}),
                   itb([(var_b"b'26",
                         itb([(bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'22",
                                                   bop(And,var_b"b'21",
                                                       bop(And,var_b"b'20",
                                                           bop(And,var_b"b'7",
                                                               bop(And,var_b"b'6",
                                                                   bop(And,var_b"b'5",var_b"b'4")))))))))),
                               mb(mw(close
                                       (var("s",qTy),
                                        rupd
                                          ("state.CurrentCondition",
                                           tp[var("s",qTy),var_w("cond",4)],@{theory}))),
                                  close
                                    (var_a HOLogic.unitT,
                                     mb(call
                                          ("ConditionPassed",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"b",
                                           mu(ite(var_b"b",
                                                  call
                                                    ("instruction.Undefined",@{typ instruction},
                                                     mop(Cast w32,
                                                         cc[mop(Cast (Word_Lib.mk_wordT 12),
                                                                ll[var_b"b'19",var_b"b'18",
                                                                   var_b"b'17",var_b"b'16",
                                                                   var_b"b'15",var_b"b'14",
                                                                   var_b"b'13",var_b"b'12",
                                                                   var_b"b'11",var_b"b'10",
                                                                   var_b"b'9",var_b"b'8"]),
                                                            mop(Cast w4,
                                                                ll[var_b"b'3",var_b"b'2",var_b"b'1",
                                                                   var_b"b'0"])]),@{theory}),
                                                  Term.Const
                                                    (@{const_name "NoOperation"},@{typ instruction})),
                                              qTy)))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,mop(Not,var_b"b'25"),
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'21",mop(Not,var_b"b'20"))))),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,
                                                             bop(And,eq(var_w("B",1),lw(1,1)),
                                                                 eq(var_w("Rt",4),lw(15,4))),
                                                             bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                 eq(var_w("Rn",4),var_w("Rt",4)))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"StoreUnprivileged (immediate)"],
                                                            @{theory}),mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(let'
                                                             (var_b"add",
                                                              eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                 lw(1,1)),
                                                              let'
                                                                (var_b"postindex",lt,
                                                                 let'
                                                                   (var("m",@{typ offset1}),
                                                                    call
                                                                      ("offset1.immediate_form1",
                                                                       @{typ offset1},
                                                                       mop(Cast w32,
                                                                           mop(Cast
                                                                                 (Word_Lib.mk_wordT 12),
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8",
                                                                                  var_b"b'7",
                                                                                  var_b"b'6",
                                                                                  var_b"b'5",
                                                                                  var_b"b'4",
                                                                                  var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])),
                                                                       @{theory}),
                                                                    ite(eq(var_w("B",1),lw(1,1)),
                                                                        call
                                                                          ("instruction.Store",
                                                                           @{typ instruction},
                                                                           call
                                                                             ("Store.StoreByteUnprivileged",
                                                                              @{typ Store},
                                                                              tp[var_b"add",
                                                                                 var_b"postindex",
                                                                                 var_w("Rt",4),
                                                                                 var_w("Rn",4),
                                                                                 var("m",
                                                                                     @{typ offset1})],
                                                                              @{theory}),@{theory}),
                                                                        call
                                                                          ("instruction.Store",
                                                                           @{typ instruction},
                                                                           call
                                                                             ("Store.StoreUnprivileged",
                                                                              @{typ Store},
                                                                              tp[var_b"add",
                                                                                 var_b"postindex",
                                                                                 var_w("Rt",4),
                                                                                 var_w("Rn",4),
                                                                                 var("m",
                                                                                     @{typ offset1})],
                                                                              @{theory}),@{theory}))))),
                                                           qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,mop(Not,var_b"b'25"),mop(Not,var_b"b'20"))),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                        let'
                                          (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                           mb(call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 tp[var_w("cond",4),lt],@{theory}),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     let'
                                                       (var_b"wback",
                                                        bop(Or,eq(var_w("P",1),lw(0,1)),
                                                            eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1))),
                                                        mb(ite(bop(Or,
                                                                   bop(And,eq(var_w("B",1),lw(1,1)),
                                                                       eq(var_w("Rt",4),lw(15,4))),
                                                                   bop(And,var_b"wback",
                                                                       bop(Or,
                                                                           eq(var_w("Rn",4),lw(15,4)),
                                                                           eq(var_w("Rn",4),
                                                                              var_w("Rt",4))))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"Store (immediate)"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"add",
                                                                    eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (var_b"index",
                                                                       eq(var_w("P",1),lw(1,1)),
                                                                       let'
                                                                         (var("m",@{typ offset1}),
                                                                          call
                                                                            ("offset1.immediate_form1",
                                                                             @{typ offset1},
                                                                             mop(Cast w32,
                                                                                 mop(Cast
                                                                                       (Word_Lib.mk_wordT 12),
                                                                                     ll[var_b"b'11",
                                                                                        var_b"b'10",
                                                                                        var_b"b'9",
                                                                                        var_b"b'8",
                                                                                        var_b"b'7",
                                                                                        var_b"b'6",
                                                                                        var_b"b'5",
                                                                                        var_b"b'4",
                                                                                        var_b"b'3",
                                                                                        var_b"b'2",
                                                                                        var_b"b'1",
                                                                                        var_b"b'0"])),
                                                                             @{theory}),
                                                                          ite(eq(var_w("B",1),
                                                                                 lw(1,1)),
                                                                              call
                                                                                ("instruction.Store",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Store.StoreByte",
                                                                                    @{typ Store},
                                                                                    tp[var_b"add",
                                                                                       var_b"index",
                                                                                       var_b"wback",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset1})],
                                                                                    @{theory}),
                                                                                 @{theory}),
                                                                              call
                                                                                ("instruction.Store",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Store.StoreWord",
                                                                                    @{typ Store},
                                                                                    tp[var_b"add",
                                                                                       var_b"index",
                                                                                       var_b"wback",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset1})],
                                                                                    @{theory}),
                                                                                 @{theory}))))),qTy)))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,mop(Not,var_b"b'25"),
                                       bop(And,mop(Not,var_b"b'24"),bop(And,var_b"b'21",var_b"b'20")))),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                          bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                              eq(var_w("Rn",4),var_w("Rt",4)))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadUnprivileged (immediate)"],
                                                         @{theory}),mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(let'
                                                          (var_b"add",
                                                           eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                                           let'
                                                             (var_b"postindex",lt,
                                                              let'
                                                                (var("m",@{typ offset1}),
                                                                 call
                                                                   ("offset1.immediate_form1",
                                                                    @{typ offset1},
                                                                    mop(Cast w32,
                                                                        mop(Cast
                                                                              (Word_Lib.mk_wordT 12),
                                                                            ll[var_b"b'11",
                                                                               var_b"b'10",
                                                                               var_b"b'9",
                                                                               var_b"b'8",
                                                                               var_b"b'7",
                                                                               var_b"b'6",
                                                                               var_b"b'5",
                                                                               var_b"b'4",
                                                                               var_b"b'3",
                                                                               var_b"b'2",
                                                                               var_b"b'1",var_b"b'0"])),
                                                                    @{theory}),
                                                                 ite(eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                        lw(1,1)),
                                                                     call
                                                                       ("instruction.Load",
                                                                        @{typ instruction},
                                                                        call
                                                                          ("Load.LoadByteUnprivileged",
                                                                           @{typ Load},
                                                                           tp[var_b"add",
                                                                              var_b"postindex",
                                                                              var_w("Rt",4),
                                                                              var_w("Rn",4),
                                                                              var("m",@{typ offset1})],
                                                                           @{theory}),@{theory}),
                                                                     call
                                                                       ("instruction.Load",
                                                                        @{typ instruction},
                                                                        call
                                                                          ("Load.LoadUnprivileged",
                                                                           @{typ Load},
                                                                           tp[var_b"add",
                                                                              var_b"postindex",
                                                                              var_w("Rt",4),
                                                                              var_w("Rn",4),
                                                                              var("m",@{typ offset1})],
                                                                           @{theory}),@{theory}))))),
                                                        qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,mop(Not,var_b"b'25"),
                                       bop(And,var_b"b'20",
                                           bop(And,var_b"b'19",
                                               bop(And,var_b"b'18",bop(And,var_b"b'17",var_b"b'16")))))),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(And,eq(var_w("B",1),lw(1,1)),
                                                          eq(var_w("Rt",4),lw(15,4))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadByte (literal)"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(let'
                                                          (var_b"add",
                                                           eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                                           let'
                                                             (var_w("imm32",32),
                                                              mop(Cast w32,
                                                                  mop(Cast (Word_Lib.mk_wordT 12),
                                                                      ll[var_b"b'11",var_b"b'10",
                                                                         var_b"b'9",var_b"b'8",
                                                                         var_b"b'7",var_b"b'6",
                                                                         var_b"b'5",var_b"b'4",
                                                                         var_b"b'3",var_b"b'2",
                                                                         var_b"b'1",var_b"b'0"])),
                                                              ite(eq(var_w("B",1),lw(1,1)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadByteLiteral",
                                                                        @{typ Load},
                                                                        tp[lt,var_b"add",
                                                                           var_w("Rt",4),
                                                                           var_w("imm32",32)],
                                                                        @{theory}),@{theory}),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadLiteral",
                                                                        @{typ Load},
                                                                        tp[var_b"add",var_w("Rt",4),
                                                                           var_w("imm32",32)],
                                                                        @{theory}),@{theory})))),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,mop(Not,var_b"b'25"),var_b"b'20")),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                        let'
                                          (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                           mb(call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 tp[var_w("cond",4),lt],@{theory}),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     let'
                                                       (var_b"wback",
                                                        bop(Or,eq(var_w("P",1),lw(0,1)),
                                                            eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1))),
                                                        mb(ite(bop(Or,
                                                                   bop(And,eq(var_w("B",1),lw(1,1)),
                                                                       eq(var_w("Rt",4),lw(15,4))),
                                                                   bop(And,var_b"wback",
                                                                       eq(var_w("Rn",4),
                                                                          var_w("Rt",4)))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"LoadWord/Byte (immediate)"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"add",
                                                                    eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (var_b"index",
                                                                       eq(var_w("P",1),lw(1,1)),
                                                                       let'
                                                                         (var("m",@{typ offset1}),
                                                                          call
                                                                            ("offset1.immediate_form1",
                                                                             @{typ offset1},
                                                                             mop(Cast w32,
                                                                                 mop(Cast
                                                                                       (Word_Lib.mk_wordT 12),
                                                                                     ll[var_b"b'11",
                                                                                        var_b"b'10",
                                                                                        var_b"b'9",
                                                                                        var_b"b'8",
                                                                                        var_b"b'7",
                                                                                        var_b"b'6",
                                                                                        var_b"b'5",
                                                                                        var_b"b'4",
                                                                                        var_b"b'3",
                                                                                        var_b"b'2",
                                                                                        var_b"b'1",
                                                                                        var_b"b'0"])),
                                                                             @{theory}),
                                                                          ite(eq(var_w("B",1),
                                                                                 lw(1,1)),
                                                                              call
                                                                                ("instruction.Load",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Load.LoadByte",
                                                                                    @{typ Load},
                                                                                    tp[lt,
                                                                                       var_b"add",
                                                                                       var_b"index",
                                                                                       var_b"wback",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset1})],
                                                                                    @{theory}),
                                                                                 @{theory}),
                                                                              call
                                                                                ("instruction.Load",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Load.LoadWord",
                                                                                    @{typ Load},
                                                                                    tp[var_b"add",
                                                                                       var_b"index",
                                                                                       var_b"wback",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset1})],
                                                                                    @{theory}),
                                                                                 @{theory}))))),qTy)))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'21",
                                               bop(And,mop(Not,var_b"b'20"),mop(Not,var_b"b'4")))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rt",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        let'
                                          (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                           mb(call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 tp[var_w("cond",4),lt],@{theory}),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(call
                                                          ("ArchVersion",
                                                           @{typ
                                                           "state \<Rightarrow> (nat \<times> state)"},
                                                           lu,@{theory}),
                                                        close
                                                          (var_n"v",
                                                           mb(mb(mb(mb(mb(mb(mb(mu(bop(Lt,var_n"v",
                                                                                       ln 6),qTy),
                                                                                close
                                                                                  (var_b"b",
                                                                                   mu(bop(And,
                                                                                          var_b"b",
                                                                                          eq(var_w("Rm",4),
                                                                                             var_w("Rn",4))),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(bop(Or,
                                                                                       eq(var_w("Rm",4),
                                                                                          lw(15,4)),
                                                                                       var_b"v"),qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    eq(var_w("Rn",4),
                                                                                       var_w("Rt",4)),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(Or,
                                                                                 eq(var_w("Rn",4),
                                                                                    lw(15,4)),
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(Or,
                                                                              bop(And,
                                                                                  eq(var_w("B",1),
                                                                                     lw(1,1)),
                                                                                  eq(var_w("Rt",4),
                                                                                     lw(15,4))),
                                                                              var_b"v"),qTy))),
                                                                 close
                                                                   (var_b"b",
                                                                    ite(var_b"b",
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls
                                                                               "StoreUnprivileged (regiser)"],
                                                                           @{theory}),mu(lu,qTy)))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(let'
                                                                      (var_b"add",
                                                                       eq(mop(Cast w1,
                                                                              ll[var_b"b'23"]),
                                                                          lw(1,1)),
                                                                       let'
                                                                         (var_b"postindex",lt,
                                                                          let'
                                                                            (tp[var("shift_t",
                                                                                    @{typ SRType}),
                                                                                var_n"shift_n"],
                                                                             call
                                                                               ("DecodeImmShift",
                                                                                @{typ
                                                                                "SRType \<times> nat"},
                                                                                tp[mop(Cast
                                                                                         (Word_Lib.mk_wordT 2),
                                                                                       ll[var_b"b'6",
                                                                                          var_b"b'5"]),
                                                                                   mop(Cast
                                                                                         (Word_Lib.mk_wordT 5),
                                                                                       ll[var_b"b'11",
                                                                                          var_b"b'10",
                                                                                          var_b"b'9",
                                                                                          var_b"b'8",
                                                                                          var_b"b'7"])],
                                                                                @{theory}),
                                                                             let'
                                                                               (var("m",
                                                                                    @{typ offset1}),
                                                                                call
                                                                                  ("offset1.register_form1",
                                                                                   @{typ offset1},
                                                                                   tp[var_w("Rm",4),
                                                                                      var("shift_t",
                                                                                          @{typ SRType}),
                                                                                      var_n"shift_n"],
                                                                                   @{theory}),
                                                                                ite(eq(var_w("B",1),
                                                                                       lw(1,1)),
                                                                                    call
                                                                                      ("instruction.Store",
                                                                                       @{typ instruction},
                                                                                       call
                                                                                         ("Store.StoreByteUnprivileged",
                                                                                          @{typ Store},
                                                                                          tp[var_b"add",
                                                                                             var_b"postindex",
                                                                                             var_w("Rt",4),
                                                                                             var_w("Rn",4),
                                                                                             var("m",
                                                                                                 @{typ offset1})],
                                                                                          @{theory}),
                                                                                       @{theory}),
                                                                                    call
                                                                                      ("instruction.Store",
                                                                                       @{typ instruction},
                                                                                       call
                                                                                         ("Store.StoreUnprivileged",
                                                                                          @{typ Store},
                                                                                          tp[var_b"add",
                                                                                             var_b"postindex",
                                                                                             var_w("Rt",4),
                                                                                             var_w("Rn",4),
                                                                                             var("m",
                                                                                                 @{typ offset1})],
                                                                                          @{theory}),
                                                                                       @{theory})))))),
                                                                    qTy))))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'20"),mop(Not,var_b"b'4")))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rt",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        let'
                                          (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                           let'
                                             (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                              mb(call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    tp[var_w("cond",4),lt],@{theory}),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        let'
                                                          (var_b"wback",
                                                           bop(Or,eq(var_w("P",1),lw(0,1)),
                                                               eq(mop(Cast w1,ll[var_b"b'21"]),
                                                                  lw(1,1))),
                                                           mb(call
                                                                ("ArchVersion",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (nat \<times> state)"},lu,
                                                                 @{theory}),
                                                              close
                                                                (var_n"v",
                                                                 mb(mb(mb(mb(mb(mb(mu(bop(Lt,
                                                                                          var_n"v",
                                                                                          ln 6),qTy),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      mu(bop(And,
                                                                                             var_b"b",
                                                                                             bop(And,
                                                                                                 var_b"wback",
                                                                                                 eq(var_w("Rm",4),
                                                                                                    var_w("Rn",4)))),
                                                                                         qTy))),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(Or,
                                                                                          bop(And,
                                                                                              var_b"wback",
                                                                                              bop(Or,
                                                                                                  eq(var_w("Rn",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  eq(var_w("Rn",4),
                                                                                                     var_w("Rt",4)))),
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(bop(Or,
                                                                                       eq(var_w("Rm",4),
                                                                                          lw(15,4)),
                                                                                       var_b"v"),qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    bop(And,
                                                                                        eq(var_w("B",1),
                                                                                           lw(1,1)),
                                                                                        eq(var_w("Rt",4),
                                                                                           lw(15,4))),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              call
                                                                                ("DECODE_UNPREDICTABLE",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (unit \<times>
                                                                                   state)"},
                                                                                 tp[var("mc",
                                                                                        @{typ MachineCode}),
                                                                                    ls
                                                                                     "Store (regiser)"],
                                                                                 @{theory}),
                                                                              mu(lu,qTy)))),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(let'
                                                                            (var_b"add",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'23"]),
                                                                                lw(1,1)),
                                                                             let'
                                                                               (var_b"index",
                                                                                eq(var_w("P",1),
                                                                                   lw(1,1)),
                                                                                let'
                                                                                  (tp[var("shift_t",
                                                                                          @{typ SRType}),
                                                                                      var_n"shift_n"],
                                                                                   call
                                                                                     ("DecodeImmShift",
                                                                                      @{typ
                                                                                      "SRType \<times>
                                                                                       nat"},
                                                                                      tp[mop(Cast
                                                                                               (Word_Lib.mk_wordT 2),
                                                                                             ll[var_b"b'6",
                                                                                                var_b"b'5"]),
                                                                                         mop(Cast
                                                                                               (Word_Lib.mk_wordT 5),
                                                                                             ll[var_b"b'11",
                                                                                                var_b"b'10",
                                                                                                var_b"b'9",
                                                                                                var_b"b'8",
                                                                                                var_b"b'7"])],
                                                                                      @{theory}),
                                                                                   let'
                                                                                     (var("m",
                                                                                          @{typ offset1}),
                                                                                      call
                                                                                        ("offset1.register_form1",
                                                                                         @{typ offset1},
                                                                                         tp[var_w("Rm",4),
                                                                                            var("shift_t",
                                                                                                @{typ SRType}),
                                                                                            var_n"shift_n"],
                                                                                         @{theory}),
                                                                                      ite(eq(var_w("B",1),
                                                                                             lw(1,1)),
                                                                                          call
                                                                                            ("instruction.Store",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Store.StoreByte",
                                                                                                @{typ Store},
                                                                                                tp[var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory}),
                                                                                          call
                                                                                            ("instruction.Store",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Store.StoreWord",
                                                                                                @{typ Store},
                                                                                                tp[var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory})))))),
                                                                          qTy)))))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'21",
                                               bop(And,var_b"b'20",mop(Not,var_b"b'4")))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rt",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(call
                                                       ("ArchVersion",
                                                        @{typ
                                                        "state \<Rightarrow> (nat \<times> state)"},
                                                        lu,@{theory}),
                                                     close
                                                       (var_n"v",
                                                        mb(mb(mb(mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),
                                                                                qTy),
                                                                             close
                                                                               (var_b"b",
                                                                                mu(bop(And,var_b"b",
                                                                                       eq(var_w("Rm",4),
                                                                                          var_w("Rn",4))),
                                                                                   qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    eq(var_w("Rm",4),
                                                                                       lw(15,4)),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(Or,
                                                                                 eq(var_w("Rn",4),
                                                                                    var_w("Rt",4)),
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(Or,
                                                                              eq(var_w("Rn",4),
                                                                                 lw(15,4)),var_b"v"),
                                                                          qTy))),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("Rt",4),lw(15,4)),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls
                                                                            "LoadUnprivileged (regiser)"],
                                                                        @{theory}),mu(lu,qTy)))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"add",
                                                                    eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (var_b"postindex",lt,
                                                                       let'
                                                                         (tp[var("shift_t",
                                                                                 @{typ SRType}),
                                                                             var_n"shift_n"],
                                                                          call
                                                                            ("DecodeImmShift",
                                                                             @{typ
                                                                             "SRType \<times> nat"},
                                                                             tp[mop(Cast
                                                                                      (Word_Lib.mk_wordT 2),
                                                                                    ll[var_b"b'6",
                                                                                       var_b"b'5"]),
                                                                                mop(Cast
                                                                                      (Word_Lib.mk_wordT 5),
                                                                                    ll[var_b"b'11",
                                                                                       var_b"b'10",
                                                                                       var_b"b'9",
                                                                                       var_b"b'8",
                                                                                       var_b"b'7"])],
                                                                             @{theory}),
                                                                          let'
                                                                            (var("m",@{typ offset1}),
                                                                             call
                                                                               ("offset1.register_form1",
                                                                                @{typ offset1},
                                                                                tp[var_w("Rm",4),
                                                                                   var("shift_t",
                                                                                       @{typ SRType}),
                                                                                   var_n"shift_n"],
                                                                                @{theory}),
                                                                             ite(eq(mop(Cast w1,
                                                                                        ll[var_b"b'22"]),
                                                                                    lw(1,1)),
                                                                                 call
                                                                                   ("instruction.Load",
                                                                                    @{typ instruction},
                                                                                    call
                                                                                      ("Load.LoadByteUnprivileged",
                                                                                       @{typ Load},
                                                                                       tp[var_b"add",
                                                                                          var_b"postindex",
                                                                                          var_w("Rt",4),
                                                                                          var_w("Rn",4),
                                                                                          var("m",
                                                                                              @{typ offset1})],
                                                                                       @{theory}),
                                                                                    @{theory}),
                                                                                 call
                                                                                   ("instruction.Load",
                                                                                    @{typ instruction},
                                                                                    call
                                                                                      ("Load.LoadUnprivileged",
                                                                                       @{typ Load},
                                                                                       tp[var_b"add",
                                                                                          var_b"postindex",
                                                                                          var_w("Rt",4),
                                                                                          var_w("Rn",4),
                                                                                          var("m",
                                                                                              @{typ offset1})],
                                                                                       @{theory}),
                                                                                    @{theory})))))),
                                                                 qTy))))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",bop(And,var_b"b'20",mop(Not,var_b"b'4")))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rt",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        let'
                                          (var_w("B",1),mop(Cast w1,ll[var_b"b'22"]),
                                           let'
                                             (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                              mb(call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    tp[var_w("cond",4),lt],@{theory}),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        let'
                                                          (var_b"wback",
                                                           bop(Or,eq(var_w("P",1),lw(0,1)),
                                                               eq(mop(Cast w1,ll[var_b"b'21"]),
                                                                  lw(1,1))),
                                                           mb(call
                                                                ("ArchVersion",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (nat \<times> state)"},lu,
                                                                 @{theory}),
                                                              close
                                                                (var_n"v",
                                                                 mb(mb(mb(mb(mb(mb(mu(bop(Lt,
                                                                                          var_n"v",
                                                                                          ln 6),qTy),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      mu(bop(And,
                                                                                             var_b"b",
                                                                                             bop(And,
                                                                                                 var_b"wback",
                                                                                                 eq(var_w("Rm",4),
                                                                                                    var_w("Rn",4)))),
                                                                                         qTy))),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(Or,
                                                                                          bop(And,
                                                                                              var_b"wback",
                                                                                              bop(Or,
                                                                                                  eq(var_w("Rn",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  eq(var_w("Rn",4),
                                                                                                     var_w("Rt",4)))),
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(bop(Or,
                                                                                       eq(var_w("Rm",4),
                                                                                          lw(15,4)),
                                                                                       var_b"v"),qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    bop(And,
                                                                                        eq(var_w("B",1),
                                                                                           lw(1,1)),
                                                                                        eq(var_w("Rt",4),
                                                                                           lw(15,4))),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              call
                                                                                ("DECODE_UNPREDICTABLE",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (unit \<times>
                                                                                   state)"},
                                                                                 tp[var("mc",
                                                                                        @{typ MachineCode}),
                                                                                    ls
                                                                                     "LoadWord/Byte (regiser)"],
                                                                                 @{theory}),
                                                                              mu(lu,qTy)))),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(let'
                                                                            (var_b"add",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'23"]),
                                                                                lw(1,1)),
                                                                             let'
                                                                               (var_b"index",
                                                                                eq(var_w("P",1),
                                                                                   lw(1,1)),
                                                                                let'
                                                                                  (tp[var("shift_t",
                                                                                          @{typ SRType}),
                                                                                      var_n"shift_n"],
                                                                                   call
                                                                                     ("DecodeImmShift",
                                                                                      @{typ
                                                                                      "SRType \<times>
                                                                                       nat"},
                                                                                      tp[mop(Cast
                                                                                               (Word_Lib.mk_wordT 2),
                                                                                             ll[var_b"b'6",
                                                                                                var_b"b'5"]),
                                                                                         mop(Cast
                                                                                               (Word_Lib.mk_wordT 5),
                                                                                             ll[var_b"b'11",
                                                                                                var_b"b'10",
                                                                                                var_b"b'9",
                                                                                                var_b"b'8",
                                                                                                var_b"b'7"])],
                                                                                      @{theory}),
                                                                                   let'
                                                                                     (var("m",
                                                                                          @{typ offset1}),
                                                                                      call
                                                                                        ("offset1.register_form1",
                                                                                         @{typ offset1},
                                                                                         tp[var_w("Rm",4),
                                                                                            var("shift_t",
                                                                                                @{typ SRType}),
                                                                                            var_n"shift_n"],
                                                                                         @{theory}),
                                                                                      ite(eq(var_w("B",1),
                                                                                             lw(1,1)),
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadByte",
                                                                                                @{typ Load},
                                                                                                tp[lt,
                                                                                                   var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory}),
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadWord",
                                                                                                @{typ Load},
                                                                                                tp[var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory})))))),
                                                                          qTy)))))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,mop(Not,var_b"b'23"),var_b"b'4")))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   bop(Or,
                                                                       eq(var_w("Rn",4),lw(15,4)),
                                                                       eq(var_w("Rm",4),lw(15,4)))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls
                                                                      "Parallel addition and subtraction"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("DecodeParallelAdditionSubtraction",
                                                                    @{typ instruction},
                                                                    tp[mop(Cast
                                                                             (Word_Lib.mk_wordT 2),
                                                                           ll[var_b"b'21",
                                                                              var_b"b'20"]),
                                                                       mop(Cast
                                                                             (Word_Lib.mk_wordT 3),
                                                                           ll[var_b"b'7",var_b"b'6",
                                                                              var_b"b'5"]),
                                                                       mop(Cast w1,ll[var_b"b'22"]),
                                                                       var_w("Rd",4),var_w("Rn",4),
                                                                       var_w("Rm",4)],@{theory}),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,mop(Not,var_b"b'22"),
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,mop(Not,var_b"b'20"),
                                                           bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("tb",1),mop(Cast w1,ll[var_b"b'6"]),
                                     let'
                                       (var_w("Rd",4),
                                        mop(Cast w4,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           mb(call
                                                ("ArchVersion",
                                                 @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_n"v",
                                                 mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                          close
                                                            (var_b"v",
                                                             mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                      bop(Or,
                                                                          eq(var_w("Rn",4),lw(15,4)),
                                                                          eq(var_w("Rm",4),lw(15,4)))),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"PackHalfword"],@{theory}),
                                                                  mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(let'
                                                                      (tp[var("shift_t",
                                                                              @{typ SRType}),
                                                                          var_n"shift_n"],
                                                                       call
                                                                         ("DecodeImmShift",
                                                                          @{typ
                                                                          "SRType \<times> nat"},
                                                                          tp[cc[var_w("tb",1),
                                                                                lw(0,1)],
                                                                             mop(Cast
                                                                                   (Word_Lib.mk_wordT 5),
                                                                                 ll[var_b"b'11",
                                                                                    var_b"b'10",
                                                                                    var_b"b'9",
                                                                                    var_b"b'8",
                                                                                    var_b"b'7"])],
                                                                          @{theory}),
                                                                       call
                                                                         ("instruction.Media",
                                                                          @{typ instruction},
                                                                          call
                                                                            ("Media.PackHalfword",
                                                                             @{typ Media},
                                                                             tp[var("shift_t",
                                                                                    @{typ SRType}),
                                                                                var_n"shift_n",
                                                                                eq(var_w("tb",1),
                                                                                   lw(1,1)),
                                                                                var_w("Rd",4),
                                                                                var_w("Rn",4),
                                                                                var_w("Rm",4)],
                                                                             @{theory}),@{theory})),
                                                                    qTy))),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory}))))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,mop(Not,var_b"b'22"),
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,mop(Not,var_b"b'20"),
                                                           bop(And,var_b"b'7",
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   bop(And,var_b"b'5",var_b"b'4")))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   bop(Or,
                                                                       eq(var_w("Rn",4),lw(15,4)),
                                                                       eq(var_w("Rm",4),lw(15,4)))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"SelectBytes"],@{theory}),
                                                               mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Media",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Media.SelectBytes",
                                                                       @{typ Media},
                                                                       tp[var_w("Rd",4),
                                                                          var_w("Rn",4),
                                                                          var_w("Rm",4)],@{theory}),
                                                                    @{theory}),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'21",
                                                   bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("sat_imm",5),
                                        mop(Cast (Word_Lib.mk_wordT 5),
                                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                               var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   eq(var_w("Rn",4),lw(15,4))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"Saturate"],@{theory}),
                                                               mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"unsigned",
                                                                    eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (tp[var("shift_t",
                                                                              @{typ SRType}),
                                                                          var_n"shift_n"],
                                                                       call
                                                                         ("DecodeImmShift",
                                                                          @{typ
                                                                          "SRType \<times> nat"},
                                                                          tp[cc[mop(Cast w1,
                                                                                    ll[var_b"b'6"]),
                                                                                lw(0,1)],
                                                                             mop(Cast
                                                                                   (Word_Lib.mk_wordT 5),
                                                                                 ll[var_b"b'11",
                                                                                    var_b"b'10",
                                                                                    var_b"b'9",
                                                                                    var_b"b'8",
                                                                                    var_b"b'7"])],
                                                                          @{theory}),
                                                                       call
                                                                         ("instruction.Media",
                                                                          @{typ instruction},
                                                                          call
                                                                            ("Media.Saturate",
                                                                             @{typ Media},
                                                                             tp[var("shift_t",
                                                                                    @{typ SRType}),
                                                                                var_n"shift_n",
                                                                                ite(var_b"unsigned",
                                                                                    mop(Cast
                                                                                          HOLogic.natT,
                                                                                        var_w("sat_imm",5)),
                                                                                    bop(Add,
                                                                                        mop(Cast
                                                                                              HOLogic.natT,
                                                                                            var_w("sat_imm",5)),
                                                                                        ln 1)),
                                                                                var_b"unsigned",
                                                                                var_w("Rd",4),
                                                                                var_w("Rn",4)],
                                                                             @{theory}),@{theory}))),
                                                                 qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'21",
                                                   bop(And,mop(Not,var_b"b'20"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,var_b"b'5",var_b"b'4"))))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("sat_imm",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   eq(var_w("Rn",4),lw(15,4))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"Saturate16"],@{theory}),
                                                               mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"unsigned",
                                                                    eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                       lw(1,1)),
                                                                    call
                                                                      ("instruction.Media",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Media.Saturate16",
                                                                          @{typ Media},
                                                                          tp[ite(var_b"unsigned",
                                                                                 mop(Cast
                                                                                       HOLogic.natT,
                                                                                     var_w("sat_imm",4)),
                                                                                 bop(Add,
                                                                                     mop(Cast
                                                                                           HOLogic.natT,
                                                                                         var_w("sat_imm",4)),
                                                                                     ln 1)),
                                                                             var_b"unsigned",
                                                                             var_w("Rd",4),
                                                                             var_w("Rn",4)],
                                                                          @{theory}),@{theory})),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,mop(Not,var_b"b'21"),
                                                   bop(And,mop(Not,var_b"b'20"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,var_b"b'6",
                                                               bop(And,var_b"b'5",var_b"b'4"))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ExtendByte16"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ExtendByte16",
                                                                    @{typ Media},
                                                                    tp[eq(mop(Cast w1,
                                                                              ll[var_b"b'22"]),
                                                                          lw(1,1)),var_w("Rd",4),
                                                                       mop(Cast w4,
                                                                           ll[var_b"b'19",
                                                                              var_b"b'18",
                                                                              var_b"b'17",
                                                                              var_b"b'16"]),
                                                                       var_w("Rm",4),
                                                                       mop(Cast HOLogic.natT,
                                                                           cc[mop(Cast
                                                                                    (Word_Lib.mk_wordT 2),
                                                                                  ll[var_b"b'11",
                                                                                     var_b"b'10"]),
                                                                              lw(0,3)])],@{theory}),
                                                                 @{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'21",
                                                   bop(And,mop(Not,var_b"b'20"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,var_b"b'6",
                                                               bop(And,var_b"b'5",var_b"b'4"))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ExtendByte"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ExtendByte",@{typ Media},
                                                                    tp[eq(mop(Cast w1,
                                                                              ll[var_b"b'22"]),
                                                                          lw(1,1)),var_w("Rd",4),
                                                                       mop(Cast w4,
                                                                           ll[var_b"b'19",
                                                                              var_b"b'18",
                                                                              var_b"b'17",
                                                                              var_b"b'16"]),
                                                                       var_w("Rm",4),
                                                                       mop(Cast HOLogic.natT,
                                                                           cc[mop(Cast
                                                                                    (Word_Lib.mk_wordT 2),
                                                                                  ll[var_b"b'11",
                                                                                     var_b"b'10"]),
                                                                              lw(0,3)])],@{theory}),
                                                                 @{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'21",
                                                   bop(And,var_b"b'20",
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,var_b"b'6",
                                                               bop(And,var_b"b'5",var_b"b'4"))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ExtendHalfword"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ExtendHalfword",
                                                                    @{typ Media},
                                                                    tp[eq(mop(Cast w1,
                                                                              ll[var_b"b'22"]),
                                                                          lw(1,1)),var_w("Rd",4),
                                                                       mop(Cast w4,
                                                                           ll[var_b"b'19",
                                                                              var_b"b'18",
                                                                              var_b"b'17",
                                                                              var_b"b'16"]),
                                                                       var_w("Rm",4),
                                                                       mop(Cast HOLogic.natT,
                                                                           cc[mop(Cast
                                                                                    (Word_Lib.mk_wordT 2),
                                                                                  ll[var_b"b'11",
                                                                                     var_b"b'10"]),
                                                                              lw(0,3)])],@{theory}),
                                                                 @{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,mop(Not,var_b"b'22"),
                                                   bop(And,var_b"b'21",
                                                       bop(And,var_b"b'20",
                                                           bop(And,mop(Not,var_b"b'7"),
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   bop(And,var_b"b'5",var_b"b'4")))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ByteReverse"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ByteReverse",
                                                                    @{typ Media},
                                                                    tp[var_w("Rd",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,mop(Not,var_b"b'22"),
                                                   bop(And,var_b"b'21",
                                                       bop(And,var_b"b'20",
                                                           bop(And,var_b"b'7",
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   bop(And,var_b"b'5",var_b"b'4")))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ByteReversePackedHalfword"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ByteReversePackedHalfword",
                                                                    @{typ Media},
                                                                    tp[var_w("Rd",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'22",
                                                   bop(And,var_b"b'21",
                                                       bop(And,var_b"b'20",
                                                           bop(And,var_b"b'7",
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   bop(And,var_b"b'5",var_b"b'4")))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ByteReverseSignedHalfword"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ByteReverseSignedHalfword",
                                                                    @{typ Media},
                                                                    tp[var_w("Rd",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,mop(Not,var_b"b'24"),
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'22",
                                                   bop(And,var_b"b'21",
                                                       bop(And,var_b"b'20",
                                                           bop(And,mop(Not,var_b"b'7"),
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   bop(And,var_b"b'5",var_b"b'4")))))))))),
                               let'
                                 (var_w("Rm",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                eq(var_w("Rm",4),lw(15,4))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"ReverseBits"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Media",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Media.ReverseBits",
                                                                    @{typ Media},
                                                                    tp[var_w("Rd",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,mop(Not,var_b"b'23"),
                                               bop(And,mop(Not,var_b"b'22"),
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,mop(Not,var_b"b'20"),
                                                           bop(And,mop(Not,var_b"b'7"),var_b"b'4")))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rm",4),
                                     mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                     let'
                                       (var_w("Rd",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   bop(Or,
                                                                       eq(var_w("Rn",4),lw(15,4)),
                                                                       eq(var_w("Rm",4),lw(15,4)))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"SignedMultiplyDual"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Multiply",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Multiply.SignedMultiplyDual",
                                                                       @{typ Multiply},
                                                                       tp[eq(mop(Cast w1,
                                                                                 ll[var_b"b'6"]),
                                                                             lw(1,1)),
                                                                          eq(mop(Cast w1,
                                                                                 ll[var_b"b'5"]),
                                                                             lw(1,1)),var_w("Rd",4),
                                                                          var_w("Rn",4),
                                                                          var_w("Rm",4),
                                                                          mop(Cast w4,
                                                                              ll[var_b"b'15",
                                                                                 var_b"b'14",
                                                                                 var_b"b'13",
                                                                                 var_b"b'12"])],
                                                                       @{theory}),@{theory}),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,mop(Not,var_b"b'23"),
                                               bop(And,var_b"b'22",
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,mop(Not,var_b"b'20"),
                                                           bop(And,mop(Not,var_b"b'7"),var_b"b'4")))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rm",4),
                                     mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                     let'
                                       (var_w("RdLo",4),
                                        mop(Cast w4,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                        let'
                                          (var_w("RdHi",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           mb(call
                                                ("ArchVersion",
                                                 @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_n"v",
                                                 mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                          close
                                                            (var_b"v",
                                                             mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mb(ite(bop(Or,
                                                                      eq(var_w("RdLo",4),lw(15,4)),
                                                                      bop(Or,
                                                                          eq(var_w("RdHi",4),
                                                                             lw(15,4)),
                                                                          bop(Or,
                                                                              eq(var_w("Rn",4),
                                                                                 lw(15,4)),
                                                                              eq(var_w("Rm",4),
                                                                                 lw(15,4))))),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"SignedMultiplyLongDual"],
                                                                     @{theory}),mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.Multiply",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Multiply.SignedMultiplyLongDual",
                                                                          @{typ Multiply},
                                                                          tp[eq(mop(Cast w1,
                                                                                    ll[var_b"b'6"]),
                                                                                lw(1,1)),
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'5"]),
                                                                                lw(1,1)),
                                                                             var_w("RdHi",4),
                                                                             var_w("RdLo",4),
                                                                             var_w("Rn",4),
                                                                             var_w("Rm",4)],
                                                                          @{theory}),@{theory}),qTy))),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory}))))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,mop(Not,var_b"b'23"),
                                               bop(And,var_b"b'22",
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,var_b"b'20",
                                                           bop(And,mop(Not,var_b"b'7"),
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   var_b"b'4"))))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rm",4),
                                     mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                     let'
                                       (var_w("Rd",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   bop(Or,
                                                                       eq(var_w("Rn",4),lw(15,4)),
                                                                       eq(var_w("Rm",4),lw(15,4)))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls
                                                                      "SignedMostSignificantMultiply"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Multiply",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Multiply.SignedMostSignificantMultiply",
                                                                       @{typ Multiply},
                                                                       tp[eq(mop(Cast w1,
                                                                                 ll[var_b"b'5"]),
                                                                             lw(1,1)),var_w("Rd",4),
                                                                          var_w("Rn",4),
                                                                          var_w("Rm",4),
                                                                          mop(Cast w4,
                                                                              ll[var_b"b'15",
                                                                                 var_b"b'14",
                                                                                 var_b"b'13",
                                                                                 var_b"b'12"])],
                                                                       @{theory}),@{theory}),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,mop(Not,var_b"b'23"),
                                               bop(And,var_b"b'22",
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,var_b"b'20",
                                                           bop(And,var_b"b'7",
                                                               bop(And,var_b"b'6",var_b"b'4"))))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rm",4),
                                     mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                     let'
                                       (var_w("Ra",4),
                                        mop(Cast w4,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                        let'
                                          (var_w("Rd",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           mb(call
                                                ("ArchVersion",
                                                 @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_n"v",
                                                 mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                          close
                                                            (var_b"v",
                                                             mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                      bop(Or,
                                                                          eq(var_w("Rn",4),lw(15,4)),
                                                                          bop(Or,
                                                                              eq(var_w("Rm",4),
                                                                                 lw(15,4)),
                                                                              eq(var_w("Ra",4),
                                                                                 lw(15,4))))),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls
                                                                         "SignedMostSignificantMultiplySubtract"],
                                                                     @{theory}),mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.Multiply",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Multiply.SignedMostSignificantMultiplySubtract",
                                                                          @{typ Multiply},
                                                                          tp[eq(mop(Cast w1,
                                                                                    ll[var_b"b'5"]),
                                                                                lw(1,1)),
                                                                             var_w("Rd",4),
                                                                             var_w("Rn",4),
                                                                             var_w("Rm",4),
                                                                             var_w("Ra",4)],
                                                                          @{theory}),@{theory}),qTy))),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory}))))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,var_b"b'23",
                                               bop(And,mop(Not,var_b"b'22"),
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,mop(Not,var_b"b'20"),
                                                           bop(And,mop(Not,var_b"b'7"),
                                                               bop(And,mop(Not,var_b"b'6"),
                                                                   bop(And,mop(Not,var_b"b'5"),
                                                                       var_b"b'4")))))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rm",4),
                                     mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                     let'
                                       (var_w("Rd",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("ArchVersion",
                                              @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_n"v",
                                              mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   bop(Or,
                                                                       eq(var_w("Rn",4),lw(15,4)),
                                                                       eq(var_w("Rm",4),lw(15,4)))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls
                                                                      "UnsignedSumAbsoluteDifferences"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.SIMD",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("SIMD.UnsignedSumAbsoluteDifferences",
                                                                       @{typ SIMD},
                                                                       tp[var_w("Rd",4),
                                                                          var_w("Rn",4),
                                                                          var_w("Rm",4),
                                                                          mop(Cast w4,
                                                                              ll[var_b"b'15",
                                                                                 var_b"b'14",
                                                                                 var_b"b'13",
                                                                                 var_b"b'12"])],
                                                                       @{theory}),@{theory}),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'21",
                                                   bop(And,var_b"b'6",
                                                       bop(And,mop(Not,var_b"b'5"),var_b"b'4"))))))),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     let'
                                                       (var_n"lsbit",
                                                        mop(Cast HOLogic.natT,
                                                            mop(Cast (Word_Lib.mk_wordT 5),
                                                                ll[var_b"b'11",var_b"b'10",
                                                                   var_b"b'9",var_b"b'8",var_b"b'7"])),
                                                        let'
                                                          (var_n"widthminus1",
                                                           mop(Cast HOLogic.natT,
                                                               mop(Cast (Word_Lib.mk_wordT 5),
                                                                   ll[var_b"b'20",var_b"b'19",
                                                                      var_b"b'18",var_b"b'17",
                                                                      var_b"b'16"])),
                                                           mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                      bop(Or,
                                                                          eq(var_w("Rn",4),lw(15,4)),
                                                                          bop(Lt,ln 31,
                                                                              bop(Add,var_n"lsbit",
                                                                                  var_n"widthminus1")))),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"BitFieldExtract"],
                                                                     @{theory}),mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.Media",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Media.BitFieldExtract",
                                                                          @{typ Media},
                                                                          tp[eq(mop(Cast w1,
                                                                                    ll[var_b"b'22"]),
                                                                                lw(1,1)),
                                                                             var_w("Rd",4),
                                                                             var_w("Rn",4),
                                                                             var_n"lsbit",
                                                                             var_n"widthminus1"],
                                                                          @{theory}),@{theory}),qTy))))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))),
                              (bop(And,mop(Not,var_b"b'27"),
                                   bop(And,var_b"b'25",
                                       bop(And,var_b"b'24",
                                           bop(And,var_b"b'23",
                                               bop(And,var_b"b'22",
                                                   bop(And,mop(Not,var_b"b'21"),
                                                       bop(And,mop(Not,var_b"b'6"),
                                                           bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                               let'
                                 (var_w("Rd",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  mb(call
                                       ("ArchVersion",
                                        @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_n"v",
                                        mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                 close
                                                   (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  let'
                                                    (var_n"lsbit",
                                                     mop(Cast HOLogic.natT,
                                                         mop(Cast (Word_Lib.mk_wordT 5),
                                                             ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                                var_b"b'8",var_b"b'7"])),
                                                     let'
                                                       (var_n"msbit",
                                                        mop(Cast HOLogic.natT,
                                                            mop(Cast (Word_Lib.mk_wordT 5),
                                                                ll[var_b"b'20",var_b"b'19",
                                                                   var_b"b'18",var_b"b'17",
                                                                   var_b"b'16"])),
                                                        mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                   bop(Lt,var_n"msbit",var_n"lsbit")),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"BitFieldClearOrInsert"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Media",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Media.BitFieldClearOrInsert",
                                                                       @{typ Media},
                                                                       tp[var_w("Rd",4),
                                                                          mop(Cast w4,
                                                                              ll[var_b"b'3",
                                                                                 var_b"b'2",
                                                                                 var_b"b'1",
                                                                                 var_b"b'0"]),
                                                                          var_n"lsbit",var_n"msbit"],
                                                                       @{theory}),@{theory}),qTy))))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,var_b"b'27",bop(And,var_b"b'25",var_b"b'24")),
                               mb(call
                                    ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                     tp[var_w("cond",4),lt],@{theory}),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.System",@{typ instruction},
                                               call
                                                 ("System.SupervisorCall",@{typ System},
                                                  mop(SE w32,
                                                      mop(Cast (Word_Lib.mk_wordT 24),
                                                          ll[var_b"b'23",var_b"b'22",var_b"b'21",
                                                             var_b"b'20",var_b"b'19",var_b"b'18",
                                                             var_b"b'17",var_b"b'16",var_b"b'15",
                                                             var_b"b'14",var_b"b'13",var_b"b'12",
                                                             var_b"b'11",var_b"b'10",var_b"b'9",
                                                             var_b"b'8",var_b"b'7",var_b"b'6",
                                                             var_b"b'5",var_b"b'4",var_b"b'3",
                                                             var_b"b'2",var_b"b'1",var_b"b'0"])),
                                                  @{theory}),@{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))),
                              (bop(And,var_b"b'27",
                                   bop(And,var_b"b'11",bop(And,mop(Not,var_b"b'10"),var_b"b'9"))),
                               mb(mr(close
                                       (var("s",qTy),
                                        call
                                          ("state.Extensions",@{typ "Extensions set"},var("s",qTy),
                                           @{theory}))),
                                  close
                                    (var("v",@{typ "Extensions set"}),
                                     mb(mb(mb(mu(bop(In,lc("Extension_VFP","Extensions",@{theory}),
                                                     var("v",@{typ "Extensions set"})),qTy),
                                              close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(call
                                                    ("DecodeVFP",
                                                     @{typ
                                                     "state \<Rightarrow> (VFP \<times> state)"},
                                                     var_w("w",32),@{theory}),
                                                  close
                                                    (var("v",@{typ VFP}),
                                                     mu(call
                                                          ("instruction.VFP",@{typ instruction},
                                                           var("v",@{typ VFP}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))],
                             call
                               ("UndefinedARM",
                                @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                var_w("cond",4),@{theory}))),
                        (var_b"b'27",
                         itb([(bop(And,mop(Not,var_b"b'25"),
                                   bop(And,var_b"b'22",mop(Not,var_b"b'20"))),
                               let'
                                 (var_w("registers",16),
                                  mop(Cast w16,
                                      ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                         var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                         var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                         var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("U",1),mop(Cast w1,ll[var_b"b'23"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(call
                                                       ("BitCount",
                                                        @{typ
                                                        "state \<Rightarrow> (nat \<times> state)"},
                                                        var_w("registers",16),@{theory}),
                                                     close
                                                       (var_n"v",
                                                        mb(mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("Rn",4),lw(15,4)),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls
                                                                            "StoreMultipleUserRegisters"],
                                                                        @{theory}),mu(lu,qTy)))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Store",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Store.StoreMultipleUserRegisters",
                                                                       @{typ Store},
                                                                       tp[eq(var_w("U",1),lw(1,1)),
                                                                          eq(mop(Cast w1,
                                                                                 ll[var_b"b'24"]),
                                                                             var_w("U",1)),
                                                                          var_w("Rn",4),
                                                                          var_w("registers",16)],
                                                                       @{theory}),@{theory}),qTy))))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,mop(Not,var_b"b'25"),
                                   bop(And,mop(Not,var_b"b'22"),mop(Not,var_b"b'20"))),
                               let'
                                 (var_w("registers",16),
                                  mop(Cast w16,
                                      ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                         var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                         var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                         var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(call
                                                    ("BitCount",
                                                     @{typ
                                                     "state \<Rightarrow> (nat \<times> state)"},
                                                     var_w("registers",16),@{theory}),
                                                  close
                                                    (var_n"v",
                                                     mb(mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                              close
                                                                (var_b"v",
                                                                 mu(bop(Or,
                                                                        eq(var_w("Rn",4),lw(15,4)),
                                                                        var_b"v"),qTy))),
                                                           close
                                                             (var_b"b",
                                                              ite(var_b"b",
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"StoreMultiple"],@{theory}),
                                                                  mu(lu,qTy)))),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Store",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Store.StoreMultiple",
                                                                    @{typ Store},
                                                                    tp[eq(mop(Cast w1,
                                                                              ll[var_b"b'23"]),
                                                                          lw(1,1)),
                                                                       eq(mop(Cast w1,
                                                                              ll[var_b"b'24"]),
                                                                          lw(1,1)),
                                                                       eq(mop(Cast w1,
                                                                              ll[var_b"b'21"]),
                                                                          lw(1,1)),var_w("Rn",4),
                                                                       var_w("registers",16)],
                                                                    @{theory}),@{theory}),qTy))))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))),
                              (bop(And,mop(Not,var_b"b'25"),
                                   bop(And,var_b"b'22",bop(And,var_b"b'20",mop(Not,var_b"b'15")))),
                               let'
                                 (var_w("registers",15),
                                  mop(Cast (Word_Lib.mk_wordT 15),
                                      ll[var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                         var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                         var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                         var_b"b'0"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("U",1),mop(Cast w1,ll[var_b"b'23"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(call
                                                       ("BitCount",
                                                        @{typ
                                                        "state \<Rightarrow> (nat \<times> state)"},
                                                        var_w("registers",15),@{theory}),
                                                     close
                                                       (var_n"v",
                                                        mb(mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("Rn",4),lw(15,4)),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls
                                                                            "LoadMultipleUserRegisters"],
                                                                        @{theory}),mu(lu,qTy)))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadMultipleUserRegisters",
                                                                       @{typ Load},
                                                                       tp[eq(var_w("U",1),lw(1,1)),
                                                                          eq(mop(Cast w1,
                                                                                 ll[var_b"b'24"]),
                                                                             var_w("U",1)),
                                                                          var_w("Rn",4),
                                                                          var_w("registers",15)],
                                                                       @{theory}),@{theory}),qTy))))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,mop(Not,var_b"b'25"),
                                   bop(And,var_b"b'22",bop(And,var_b"b'20",var_b"b'15"))),
                               let'
                                 (var_w("registers",15),
                                  mop(Cast (Word_Lib.mk_wordT 15),
                                      ll[var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                         var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                         var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                         var_b"b'0"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("U",1),mop(Cast w1,ll[var_b"b'23"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  let'
                                                    (var_b"wback",
                                                     eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                     mb(call
                                                          ("ArchVersion",
                                                           @{typ
                                                           "state \<Rightarrow> (nat \<times> state)"},
                                                           lu,@{theory}),
                                                        close
                                                          (var_n"v",
                                                           mb(mb(mb(mb(mb(mu(bop(Ge,var_n"v",ln 7),
                                                                             qTy),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(And,
                                                                                    bop(Bit,
                                                                                        var_w("registers",15),
                                                                                        mop(Cast
                                                                                              HOLogic.natT,
                                                                                            var_w("Rn",4))),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(And,var_b"wback",
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(Or,
                                                                              eq(var_w("Rn",4),
                                                                                 lw(15,4)),var_b"v"),
                                                                          qTy))),
                                                                 close
                                                                   (var_b"b",
                                                                    ite(var_b"b",
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls
                                                                               "LoadMultipleExceptionReturn"],
                                                                           @{theory}),mu(lu,qTy)))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.Load",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Load.LoadMultipleExceptionReturn",
                                                                          @{typ Load},
                                                                          tp[eq(var_w("U",1),lw(1,1)),
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'24"]),
                                                                                var_w("U",1)),
                                                                             var_b"wback",
                                                                             var_w("Rn",4),
                                                                             var_w("registers",15)],
                                                                          @{theory}),@{theory}),qTy)))))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,mop(Not,var_b"b'25"),
                                   bop(And,mop(Not,var_b"b'22"),var_b"b'20")),
                               let'
                                 (var_w("registers",16),
                                  mop(Cast w16,
                                      ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                         var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                         var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                         var_b"b'1",var_b"b'0"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               let'
                                                 (var_b"wback",
                                                  eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                  mb(call
                                                       ("BitCount",
                                                        @{typ
                                                        "state \<Rightarrow> (nat \<times> state)"},
                                                        var_w("registers",16),@{theory}),
                                                     close
                                                       (var_n"v",
                                                        mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                                    close
                                                                      (var_b"b",
                                                                       ite(var_b"b",mu(lt,qTy),
                                                                           mb(call
                                                                                ("ArchVersion",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (nat \<times>
                                                                                   state)"},lu,
                                                                                 @{theory}),
                                                                              close
                                                                                (var_n"v",
                                                                                 mb(mb(mu(bop(Ge,
                                                                                              var_n"v",
                                                                                              ln 7),
                                                                                          qTy),
                                                                                       close
                                                                                         (var_b"v",
                                                                                          mu(bop(And,
                                                                                                 bop(Bit,
                                                                                                     var_w("registers",16),
                                                                                                     mop(Cast
                                                                                                           HOLogic.natT,
                                                                                                         var_w("Rn",4))),
                                                                                                 var_b"v"),
                                                                                             qTy))),
                                                                                    close
                                                                                      (var_b"v",
                                                                                       mu(bop(And,
                                                                                              var_b"wback",
                                                                                              var_b"v"),
                                                                                          qTy)))))))),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("Rn",4),lw(15,4)),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"LoadMultiple"],
                                                                        @{theory}),mu(lu,qTy)))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadMultiple",
                                                                       @{typ Load},
                                                                       tp[eq(mop(Cast w1,
                                                                                 ll[var_b"b'23"]),
                                                                             lw(1,1)),
                                                                          eq(mop(Cast w1,
                                                                                 ll[var_b"b'24"]),
                                                                             lw(1,1)),var_b"wback",
                                                                          var_w("Rn",4),
                                                                          var_w("registers",16)],
                                                                       @{theory}),@{theory}),qTy)))))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))),
                              (bop(And,var_b"b'25",mop(Not,var_b"b'24")),
                               mb(call
                                    ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                     tp[var_w("cond",4),lt],@{theory}),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.Branch",@{typ instruction},
                                               call
                                                 ("Branch.BranchTarget",@{typ Branch},
                                                  mop(SE w32,
                                                      cc[mop(Cast (Word_Lib.mk_wordT 24),
                                                             ll[var_b"b'23",var_b"b'22",var_b"b'21",
                                                                var_b"b'20",var_b"b'19",var_b"b'18",
                                                                var_b"b'17",var_b"b'16",var_b"b'15",
                                                                var_b"b'14",var_b"b'13",var_b"b'12",
                                                                var_b"b'11",var_b"b'10",var_b"b'9",
                                                                var_b"b'8",var_b"b'7",var_b"b'6",
                                                                var_b"b'5",var_b"b'4",var_b"b'3",
                                                                var_b"b'2",var_b"b'1",var_b"b'0"]),
                                                         lw(0,2)]),@{theory}),@{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))),
                              (bop(And,var_b"b'25",var_b"b'24"),
                               mb(call
                                    ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                     tp[var_w("cond",4),lt],@{theory}),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.Branch",@{typ instruction},
                                               call
                                                 ("Branch.BranchLinkExchangeImmediate",
                                                  @{typ Branch},
                                                  tp[lc("InstrSet_ARM","InstrSet",@{theory}),
                                                     mop(SE w32,
                                                         cc[mop(Cast (Word_Lib.mk_wordT 24),
                                                                ll[var_b"b'23",var_b"b'22",
                                                                   var_b"b'21",var_b"b'20",
                                                                   var_b"b'19",var_b"b'18",
                                                                   var_b"b'17",var_b"b'16",
                                                                   var_b"b'15",var_b"b'14",
                                                                   var_b"b'13",var_b"b'12",
                                                                   var_b"b'11",var_b"b'10",
                                                                   var_b"b'9",var_b"b'8",var_b"b'7",
                                                                   var_b"b'6",var_b"b'5",var_b"b'4",
                                                                   var_b"b'3",var_b"b'2",var_b"b'1",
                                                                   var_b"b'0"]),lw(0,2)])],@{theory}),
                                               @{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory})))))],
                             call
                               ("UndefinedARM",
                                @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                var_w("cond",4),@{theory}))),
                        (var_b"b'25",
                         itb([(bop(And,var_b"b'24",
                                   bop(And,mop(Not,var_b"b'23"),
                                       bop(And,mop(Not,var_b"b'21"),mop(Not,var_b"b'20")))),
                               let'
                                 (var_w("Rd",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  mb(call
                                       ("HaveThumb2",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(eq(var_w("Rd",4),lw(15,4)),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"MoveTopHalfword"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Data",@{typ instruction},
                                                              call
                                                                ("Data.MoveHalfword",@{typ Data},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                       lw(1,1)),var_w("Rd",4),
                                                                    cc[mop(Cast w4,
                                                                           ll[var_b"b'19",
                                                                              var_b"b'18",
                                                                              var_b"b'17",
                                                                              var_b"b'16"]),
                                                                       mop(Cast
                                                                             (Word_Lib.mk_wordT 12),
                                                                           ll[var_b"b'11",
                                                                              var_b"b'10",
                                                                              var_b"b'9",var_b"b'8",
                                                                              var_b"b'7",var_b"b'6",
                                                                              var_b"b'5",var_b"b'4",
                                                                              var_b"b'3",var_b"b'2",
                                                                              var_b"b'1",var_b"b'0"])]],
                                                                 @{theory}),@{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))),
                              (bop(And,var_b"b'24",
                                   bop(And,mop(Not,var_b"b'23"),
                                       bop(And,mop(Not,var_b"b'22"),
                                           bop(And,var_b"b'21",
                                               bop(And,mop(Not,var_b"b'20"),
                                                   bop(And,mop(Not,var_b"b'19"),
                                                       bop(And,mop(Not,var_b"b'18"),
                                                           bop(And,mop(Not,var_b"b'17"),
                                                               mop(Not,var_b"b'16"))))))))),
                               call
                                 ("DecodeHint",
                                  @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                  tp[var_w("cond",4),
                                     mop(Cast w8,
                                         ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                                            var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory})),
                              (bop(And,var_b"b'24",
                                   bop(And,mop(Not,var_b"b'23"),
                                       bop(And,var_b"b'21",mop(Not,var_b"b'20")))),
                               let'
                                 (var_w("mask",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        tp[var_w("cond",4),lt],@{theory}),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(ite(eq(var_w("mask",4),lw(0,4)),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),
                                                         ls"MoveToSpecialFromImmediate"],@{theory}),
                                                   mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mb(call
                                                       ("ARMExpandImm",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (32 word \<times> state)"},
                                                        mop(Cast (Word_Lib.mk_wordT 12),
                                                            ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                               var_b"b'8",var_b"b'7",var_b"b'6",
                                                               var_b"b'5",var_b"b'4",var_b"b'3",
                                                               var_b"b'2",var_b"b'1",var_b"b'0"]),
                                                        @{theory}),
                                                     close
                                                       (var_w("imm32",32),
                                                        mu(call
                                                             ("instruction.System",
                                                              @{typ instruction},
                                                              call
                                                                ("System.MoveToSpecialFromImmediate",
                                                                 @{typ System},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                       lw(1,1)),var_w("imm32",32),
                                                                    var_w("mask",4)],@{theory}),
                                                              @{theory}),qTy))))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))],
                             let'
                               (var_w("imm12",12),
                                mop(Cast (Word_Lib.mk_wordT 12),
                                    ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                       var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                       var_b"b'1",var_b"b'0"]),
                                let'
                                  (var_w("Rd",4),
                                   mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                   let'
                                     (var_w("Rn",4),
                                      mop(Cast w4,
                                          ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                      let'
                                        (var_w("opc",4),
                                         mop(Cast w4,
                                             ll[var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                                         mb(call
                                              ("Do",
                                               @{typ "state \<Rightarrow> (bool \<times> state)"},
                                               tp[var_w("cond",4),lt],@{theory}),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mu(let'
                                                        (var_b"setflags",
                                                         eq(mop(Cast w1,ll[var_b"b'20"]),lw(1,1)),
                                                         let'
                                                           (tp[var_b"b'3",var_b"b'2",var_b"b'1",
                                                               var_b"b'0"],
                                                            call
                                                              ("boolify'4",
                                                               @{typ
                                                               "bool \<times>
                                                                bool \<times> bool \<times> bool"},
                                                               var_w("opc",4),@{theory}),
                                                            ite(var_b"b'3",
                                                                itb([(bop(And,var_b"b'2",var_b"b'0"),
                                                                      call
                                                                        ("instruction.Data",
                                                                         @{typ instruction},
                                                                         call
                                                                           ("Data.Move",@{typ Data},
                                                                            tp[var_b"setflags",
                                                                               mop(Cast
                                                                                     HOLogic.boolT,
                                                                                   mop(Cast w1,
                                                                                       ll[var_b"b'1"])),
                                                                               var_w("Rd",4),
                                                                               var_w("imm12",12)],
                                                                            @{theory}),@{theory})),
                                                                     (mop(Not,var_b"b'2"),
                                                                      call
                                                                        ("instruction.Data",
                                                                         @{typ instruction},
                                                                         call
                                                                           ("Data.TestCompareImmediate",
                                                                            @{typ Data},
                                                                            tp[mop(Cast
                                                                                     (Word_Lib.mk_wordT 2),
                                                                                   ll[var_b"b'1",
                                                                                      var_b"b'0"]),
                                                                               var_w("Rn",4),
                                                                               var_w("imm12",12)],
                                                                            @{theory}),@{theory}))],
                                                                    call
                                                                      ("instruction.Data",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Data.ArithLogicImmediate",
                                                                          @{typ Data},
                                                                          tp[var_w("opc",4),
                                                                             var_b"setflags",
                                                                             var_w("Rd",4),
                                                                             var_w("Rn",4),
                                                                             var_w("imm12",12)],
                                                                          @{theory}),@{theory})),
                                                                call
                                                                  ("instruction.Data",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Data.ArithLogicImmediate",
                                                                      @{typ Data},
                                                                      tp[var_w("opc",4),
                                                                         var_b"setflags",
                                                                         var_w("Rd",4),
                                                                         var_w("Rn",4),
                                                                         var_w("imm12",12)],
                                                                      @{theory}),@{theory})))),qTy),
                                                   call
                                                     ("Skip",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'21"),
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,var_b"b'9",
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),mop(Not,var_b"b'4"))))))))),
                         let'
                           (var_w("Rd",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            mb(call
                                 ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                  lu,@{theory}),
                               close
                                 (var_b"v",
                                  mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(ite(eq(var_w("Rd",4),lw(15,4)),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),
                                                         ls"MoveToRegisterFromBankedOrSpecial"],
                                                      @{theory}),mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.System",@{typ instruction},
                                                        call
                                                          ("System.MoveToRegisterFromBankedOrSpecial",
                                                           @{typ System},
                                                           tp[eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                 lw(1,1)),
                                                              cc[mop(Cast w1,ll[var_b"b'8"]),
                                                                 mop(Cast w4,
                                                                     ll[var_b"b'19",var_b"b'18",
                                                                        var_b"b'17",var_b"b'16"])],
                                                              var_w("Rd",4)],@{theory}),@{theory}),
                                                     qTy))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'21"),
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,mop(Not,var_b"b'9"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),mop(Not,var_b"b'4"))))))))),
                         let'
                           (var_w("Rd",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            mb(call
                                 ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                  tp[var_w("cond",4),lt],@{theory}),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(ite(eq(var_w("Rd",4),lw(15,4)),
                                             call
                                               ("DECODE_UNPREDICTABLE",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                tp[var("mc",@{typ MachineCode}),
                                                   ls"MoveToRegisterFromSpecial"],@{theory}),
                                             mu(lu,qTy)),
                                         close
                                           (var_a HOLogic.unitT,
                                            mu(call
                                                 ("instruction.System",@{typ instruction},
                                                  call
                                                    ("System.MoveToRegisterFromSpecial",
                                                     @{typ System},
                                                     tp[eq(mop(Cast w1,ll[var_b"b'22"]),lw(1,1)),
                                                        var_w("Rd",4)],@{theory}),@{theory}),qTy))),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory})))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'21",
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,var_b"b'9",
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),mop(Not,var_b"b'4"))))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            mb(call
                                 ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                  lu,@{theory}),
                               close
                                 (var_b"v",
                                  mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(ite(bop(In,var_w("Rn",4),sl[lw(13,4),lw(15,4)]),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),
                                                         ls"MoveToBankedOrSpecialRegister"],
                                                      @{theory}),mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.System",@{typ instruction},
                                                        call
                                                          ("System.MoveToBankedOrSpecialRegister",
                                                           @{typ System},
                                                           tp[eq(mop(Cast w1,ll[var_b"b'22"]),
                                                                 lw(1,1)),
                                                              cc[mop(Cast w1,ll[var_b"b'8"]),
                                                                 mop(Cast w4,
                                                                     ll[var_b"b'19",var_b"b'18",
                                                                        var_b"b'17",var_b"b'16"])],
                                                              var_w("Rn",4)],@{theory}),@{theory}),
                                                     qTy))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'21",
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,mop(Not,var_b"b'9"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),mop(Not,var_b"b'4"))))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("mask",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(call
                                    ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                     tp[var_w("cond",4),lt],@{theory}),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mb(ite(bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                    eq(var_w("mask",4),lw(0,4))),
                                                call
                                                  ("DECODE_UNPREDICTABLE",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[var("mc",@{typ MachineCode}),
                                                      ls"MoveToSpecialFromRegister"],@{theory}),
                                                mu(lu,qTy)),
                                            close
                                              (var_a HOLogic.unitT,
                                               mu(call
                                                    ("instruction.System",@{typ instruction},
                                                     call
                                                       ("System.MoveToSpecialFromRegister",
                                                        @{typ System},
                                                        tp[eq(mop(Cast w1,ll[var_b"b'22"]),lw(1,1)),
                                                           var_w("Rn",4),var_w("mask",4)],@{theory}),
                                                     @{theory}),qTy))),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         mb(mr(close
                                 (var("s",qTy),
                                  call
                                    ("state.Architecture",@{typ Architecture},var("s",qTy),@{theory}))),
                            close
                              (var("v",@{typ Architecture}),
                               mb(mb(mb(mb(mu(eq(var("v",@{typ Architecture}),
                                                 lc("ARMv4","Architecture",@{theory})),qTy),
                                           close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                        close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.Branch",@{typ instruction},
                                               call
                                                 ("Branch.BranchExchange",@{typ Branch},
                                                  mop(Cast w4,
                                                      ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                                  @{theory}),@{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               mb(call
                                    ("ArchVersion",
                                     @{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
                                  close
                                    (var_n"v",
                                     mb(mb(mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                              close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                          eq(var_w("Rm",4),lw(15,4))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"CountLeadingZeroes"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Data",@{typ instruction},
                                                           call
                                                             ("Data.CountLeadingZeroes",@{typ Data},
                                                              tp[var_w("Rd",4),var_w("Rm",4)],
                                                              @{theory}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",var_b"b'4")))))))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            mb(call
                                 ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                  lu,@{theory}),
                               close
                                 (var_n"v",
                                  mb(mb(mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                           close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(ite(eq(var_w("Rm",4),lw(15,4)),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),
                                                         ls"BranchLinkExchangeRegister"],@{theory}),
                                                   mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.Branch",@{typ instruction},
                                                        call
                                                          ("Branch.BranchLinkExchangeRegister",
                                                           @{typ Branch},var_w("Rm",4),@{theory}),
                                                        @{theory}),qTy))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,mop(Not,var_b"b'7"),
                                         bop(And,var_b"b'6",bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("HaveDSPSupport",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                 eq(var_w("Rm",4),lw(15,4)))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"SaturatingAddSubtract"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Media",
                                                              @{typ instruction},
                                                              call
                                                                ("Media.SaturatingAddSubtract",
                                                                 @{typ Media},
                                                                 tp[mop(Cast (Word_Lib.mk_wordT 2),
                                                                        ll[var_b"b'22",var_b"b'21"]),
                                                                    var_w("Rd",4),var_w("Rm",4),
                                                                    var_w("Rn",4)],@{theory}),
                                                              @{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,var_b"b'6",bop(And,var_b"b'5",var_b"b'4")))))))),
                         mb(call
                              ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                               @{theory}),
                            close
                              (var_n"v",
                               mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mb(ite(mop(Not,eq(var_w("cond",4),lw(14,4))),
                                                call
                                                  ("DECODE_UNPREDICTABLE",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[var("mc",@{typ MachineCode}),ls"Breakpoint"],
                                                   @{theory}),mu(lu,qTy)),
                                            close
                                              (var_a HOLogic.unitT,
                                               mb(mw(close
                                                       (var("s",qTy),
                                                        rupd
                                                          ("state.CurrentCondition",
                                                           tp[var("s",qTy),var_w("cond",4)],
                                                           @{theory}))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Hint",@{typ instruction},
                                                           call
                                                             ("Hint.Breakpoint",@{typ Hint},
                                                              mop(Cast w32,
                                                                  cc[mop(Cast (Word_Lib.mk_wordT 12),
                                                                         ll[var_b"b'19",var_b"b'18",
                                                                            var_b"b'17",var_b"b'16",
                                                                            var_b"b'15",var_b"b'14",
                                                                            var_b"b'13",var_b"b'12",
                                                                            var_b"b'11",var_b"b'10",
                                                                            var_b"b'9",var_b"b'8"]),
                                                                     mop(Cast w4,
                                                                         ll[var_b"b'3",var_b"b'2",
                                                                            var_b"b'1",var_b"b'0"])]),
                                                              @{theory}),@{theory}),qTy))))),
                                         mb(call
                                              ("Do",
                                               @{typ "state \<Rightarrow> (bool \<times> state)"},
                                               tp[var_w("cond",4),lf],@{theory}),
                                            close
                                              (var_b"b",
                                               mu(ite(var_b"b",
                                                      call
                                                        ("instruction.Undefined",@{typ instruction},
                                                         lw(0,32),@{theory}),
                                                      Term.Const
                                                        (@{const_name "NoOperation"},
                                                         @{typ instruction})),qTy))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,var_b"b'6",bop(And,var_b"b'5",var_b"b'4")))))))),
                         mb(call
                              ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                               @{theory}),
                            close
                              (var_b"v",
                               mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mb(ite(mop(Not,eq(var_w("cond",4),lw(14,4))),
                                                call
                                                  ("DECODE_UNPREDICTABLE",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[var("mc",@{typ MachineCode}),
                                                      ls"HypervisorCall"],@{theory}),mu(lu,qTy)),
                                            close
                                              (var_a HOLogic.unitT,
                                               mu(call
                                                    ("instruction.System",@{typ instruction},
                                                     call
                                                       ("System.HypervisorCall",@{typ System},
                                                        cc[mop(Cast (Word_Lib.mk_wordT 12),
                                                               ll[var_b"b'19",var_b"b'18",
                                                                  var_b"b'17",var_b"b'16",
                                                                  var_b"b'15",var_b"b'14",
                                                                  var_b"b'13",var_b"b'12",
                                                                  var_b"b'11",var_b"b'10",
                                                                  var_b"b'9",var_b"b'8"]),
                                                           mop(Cast w4,
                                                               ll[var_b"b'3",var_b"b'2",var_b"b'1",
                                                                  var_b"b'0"])],@{theory}),@{theory}),
                                                  qTy))),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,var_b"b'6",bop(And,var_b"b'5",var_b"b'4")))))))),
                         mb(call
                              ("HaveSecurityExt",@{typ "state \<Rightarrow> (bool \<times> state)"},
                               lu,@{theory}),
                            close
                              (var_b"v",
                               mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.System",@{typ instruction},
                                               call
                                                 ("System.SecureMonitorCall",@{typ System},
                                                  mop(Cast w4,
                                                      ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                                  @{theory}),@{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",mop(Not,var_b"b'4"))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Ra",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("HaveDSPSupport",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                    bop(Or,
                                                                        eq(var_w("Rm",4),lw(15,4)),
                                                                        eq(var_w("Ra",4),lw(15,4))))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"Signed16Multiply32Accumulate"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Multiply",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Multiply.Signed16Multiply32Accumulate",
                                                                    @{typ Multiply},
                                                                    tp[eq(mop(Cast w1,ll[var_b"b'6"]),
                                                                          lw(1,1)),
                                                                       eq(mop(Cast w1,ll[var_b"b'5"]),
                                                                          lw(1,1)),var_w("Rd",4),
                                                                       var_w("Rn",4),var_w("Rm",4),
                                                                       var_w("Ra",4)],@{theory}),
                                                                 @{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'5"),mop(Not,var_b"b'4")))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Ra",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("HaveDSPSupport",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                    bop(Or,
                                                                        eq(var_w("Rm",4),lw(15,4)),
                                                                        eq(var_w("Ra",4),lw(15,4))))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls
                                                                   "Signed16x32Multiply32Accumulate"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Multiply",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Multiply.Signed16x32Multiply32Accumulate",
                                                                    @{typ Multiply},
                                                                    tp[eq(mop(Cast w1,ll[var_b"b'6"]),
                                                                          lw(1,1)),var_w("Rd",4),
                                                                       var_w("Rn",4),var_w("Rm",4),
                                                                       var_w("Ra",4)],@{theory}),
                                                                 @{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,var_b"b'5",mop(Not,var_b"b'4")))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Rd",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("HaveDSPSupport",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                 eq(var_w("Rm",4),lw(15,4)))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"Signed16x32Multiply32Result"],
                                                            @{theory}),mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Multiply",
                                                              @{typ instruction},
                                                              call
                                                                ("Multiply.Signed16x32Multiply32Result",
                                                                 @{typ Multiply},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'6"]),
                                                                       lw(1,1)),var_w("Rd",4),
                                                                    var_w("Rn",4),var_w("Rm",4)],
                                                                 @{theory}),@{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",mop(Not,var_b"b'4"))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("RdLo",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("RdHi",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("HaveDSPSupport",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("RdLo",4),lw(15,4)),
                                                                bop(Or,eq(var_w("RdHi",4),lw(15,4)),
                                                                    bop(Or,
                                                                        eq(var_w("Rn",4),lw(15,4)),
                                                                        eq(var_w("Rm",4),lw(15,4))))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"Signed16Multiply64Accumulate"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Multiply",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Multiply.Signed16Multiply64Accumulate",
                                                                    @{typ Multiply},
                                                                    tp[eq(mop(Cast w1,ll[var_b"b'6"]),
                                                                          lw(1,1)),
                                                                       eq(mop(Cast w1,ll[var_b"b'5"]),
                                                                          lw(1,1)),var_w("RdHi",4),
                                                                       var_w("RdLo",4),
                                                                       var_w("Rn",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",mop(Not,var_b"b'4"))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Rd",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("HaveDSPSupport",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                 eq(var_w("Rm",4),lw(15,4)))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"Signed16Multiply32Result"],
                                                            @{theory}),mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Multiply",
                                                              @{typ instruction},
                                                              call
                                                                ("Multiply.Signed16Multiply32Result",
                                                                 @{typ Multiply},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'6"]),
                                                                       lw(1,1)),
                                                                    eq(mop(Cast w1,ll[var_b"b'5"]),
                                                                       lw(1,1)),var_w("Rd",4),
                                                                    var_w("Rn",4),var_w("Rm",4)],
                                                                 @{theory}),@{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,mop(Not,var_b"b'19"),
                                                 bop(And,mop(Not,var_b"b'18"),
                                                     bop(And,mop(Not,var_b"b'17"),
                                                         bop(And,mop(Not,var_b"b'16"),
                                                             bop(And,mop(Not,var_b"b'15"),
                                                                 bop(And,mop(Not,var_b"b'14"),
                                                                     bop(And,mop(Not,var_b"b'13"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'12"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'11"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'10"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'9"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'8"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'7"),
                                                                                                 bop(And,
                                                                                                     var_b"b'6",
                                                                                                     bop(And,
                                                                                                         var_b"b'5",
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'4"),
                                                                                                             bop(And,
                                                                                                                 var_b"b'3",
                                                                                                                 bop(And,
                                                                                                                     var_b"b'2",
                                                                                                                     bop(And,
                                                                                                                         var_b"b'1",
                                                                                                                         mop(Not,
                                                                                                                             var_b"b'0"))))))))))))))))))))))))),
                         mb(call
                              ("HaveVirtExt",@{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                               @{theory}),
                            close
                              (var_b"v",
                               mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(call
                                              ("instruction.System",@{typ instruction},
                                               Term.Const
                                                 (@{const_name "ExceptionReturn"},@{typ System}),
                                               @{theory}),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'20"),mop(Not,var_b"b'7")))),
                         mu(call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}),qTy)),
                        (mop(Not,var_b"b'4"),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  let'
                                    (var_w("opc",4),
                                     mop(Cast w4,ll[var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mu(let'
                                                    (var_b"setflags",
                                                     eq(mop(Cast w1,ll[var_b"b'20"]),lw(1,1)),
                                                     let'
                                                       (tp[var("shift_t",@{typ SRType}),
                                                           var_n"shift_n"],
                                                        call
                                                          ("DecodeImmShift",
                                                           @{typ "SRType \<times> nat"},
                                                           tp[mop(Cast (Word_Lib.mk_wordT 2),
                                                                  ll[var_b"b'6",var_b"b'5"]),
                                                              mop(Cast (Word_Lib.mk_wordT 5),
                                                                  ll[var_b"b'11",var_b"b'10",
                                                                     var_b"b'9",var_b"b'8",
                                                                     var_b"b'7"])],@{theory}),
                                                        itb([(eq(ex(var_w("opc",4),ln 3,ln 2,
                                                                    (Word_Lib.mk_wordT 2)),lw(2,2)),
                                                              call
                                                                ("instruction.Data",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Data.TestCompareRegister",
                                                                    @{typ Data},
                                                                    tp[ex(var_w("opc",4),ln 1,ln 0,
                                                                          (Word_Lib.mk_wordT 2)),
                                                                       var_w("Rn",4),var_w("Rm",4),
                                                                       var("shift_t",@{typ SRType}),
                                                                       var_n"shift_n"],@{theory}),
                                                                 @{theory})),
                                                             (bop(In,var_w("opc",4),
                                                                  sl[lw(13,4),lw(15,4)]),
                                                              call
                                                                ("instruction.Data",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Data.ShiftImmediate",
                                                                    @{typ Data},
                                                                    tp[bop(Bit,var_w("opc",4),ln 1),
                                                                       var_b"setflags",
                                                                       var_w("Rd",4),var_w("Rm",4),
                                                                       var("shift_t",@{typ SRType}),
                                                                       var_n"shift_n"],@{theory}),
                                                                 @{theory}))],
                                                            call
                                                              ("instruction.Data",
                                                               @{typ instruction},
                                                               call
                                                                 ("Data.Register",@{typ Data},
                                                                  tp[var_w("opc",4),var_b"setflags",
                                                                     var_w("Rd",4),var_w("Rn",4),
                                                                     var_w("Rm",4),
                                                                     var("shift_t",@{typ SRType}),
                                                                     var_n"shift_n"],@{theory}),
                                                               @{theory})))),qTy),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,mop(Not,var_b"b'7"),var_b"b'4"),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rs",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Rd",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("opc",4),
                                        mop(Cast w4,
                                            ll[var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,
                                                             bop(And,eq(var_w("Rd",4),lw(15,4)),
                                                                 mop(Not,
                                                                     eq(ex(var_w("opc",4),ln 3,ln 2,
                                                                           (Word_Lib.mk_wordT 2)),
                                                                        lw(2,2)))),
                                                             bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                 bop(Or,eq(var_w("Rm",4),lw(15,4)),
                                                                     eq(var_w("Rs",4),lw(15,4))))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"RegisterShiftedRegister"],
                                                            @{theory}),mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(let'
                                                             (var_b"setflags",
                                                              eq(mop(Cast w1,ll[var_b"b'20"]),
                                                                 lw(1,1)),
                                                              let'
                                                                (var("shift_t",@{typ SRType}),
                                                                 call
                                                                   ("DecodeRegShift",@{typ SRType},
                                                                    mop(Cast (Word_Lib.mk_wordT 2),
                                                                        ll[var_b"b'6",var_b"b'5"]),
                                                                    @{theory}),
                                                                 ite(bop(Or,
                                                                         eq(var_w("opc",4),lw(13,4)),
                                                                         eq(var_w("opc",4),lw(15,4))),
                                                                     call
                                                                       ("instruction.Data",
                                                                        @{typ instruction},
                                                                        call
                                                                          ("Data.ShiftRegister",
                                                                           @{typ Data},
                                                                           tp[bop(Bit,
                                                                                  var_w("opc",4),
                                                                                  ln 1),
                                                                              var_b"setflags",
                                                                              var_w("Rd",4),
                                                                              var_w("Rm",4),
                                                                              var("shift_t",
                                                                                  @{typ SRType}),
                                                                              var_w("Rs",4)],
                                                                           @{theory}),@{theory}),
                                                                     call
                                                                       ("instruction.Data",
                                                                        @{typ instruction},
                                                                        call
                                                                          ("Data.RegisterShiftedRegister",
                                                                           @{typ Data},
                                                                           tp[var_w("opc",4),
                                                                              var_b"setflags",
                                                                              var_w("Rd",4),
                                                                              var_w("Rn",4),
                                                                              var_w("Rm",4),
                                                                              var("shift_t",
                                                                                  @{typ SRType}),
                                                                              var_w("Rs",4)],
                                                                           @{theory}),@{theory})))),
                                                           qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'7",
                                         bop(And,mop(Not,var_b"b'6"),
                                             bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Ra",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("A",1),mop(Cast w1,ll[var_b"b'21"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),lt],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(call
                                                       ("ArchVersion",
                                                        @{typ
                                                        "state \<Rightarrow> (nat \<times> state)"},
                                                        lu,@{theory}),
                                                     close
                                                       (var_n"v",
                                                        mb(mb(mb(mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),
                                                                                qTy),
                                                                             close
                                                                               (var_b"b",
                                                                                mu(bop(And,var_b"b",
                                                                                       eq(var_w("Rd",4),
                                                                                          var_w("Rn",4))),
                                                                                   qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    bop(And,
                                                                                        eq(var_w("A",1),
                                                                                           lw(1,1)),
                                                                                        eq(var_w("Ra",4),
                                                                                           lw(15,4))),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(Or,
                                                                                 eq(var_w("Rm",4),
                                                                                    lw(15,4)),
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(Or,
                                                                              eq(var_w("Rn",4),
                                                                                 lw(15,4)),var_b"v"),
                                                                          qTy))),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("Rd",4),lw(15,4)),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"Multiply"],@{theory}),
                                                                     mu(lu,qTy)))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"setflags",
                                                                    eq(mop(Cast w1,ll[var_b"b'20"]),
                                                                       lw(1,1)),
                                                                    ite(eq(var_w("A",1),lw(1,1)),
                                                                        call
                                                                          ("instruction.Multiply",
                                                                           @{typ instruction},
                                                                           call
                                                                             ("Multiply.MultiplyAccumulate",
                                                                              @{typ Multiply},
                                                                              tp[var_b"setflags",
                                                                                 var_w("Rd",4),
                                                                                 var_w("Rn",4),
                                                                                 var_w("Rm",4),
                                                                                 var_w("Ra",4)],
                                                                              @{theory}),@{theory}),
                                                                        call
                                                                          ("instruction.Multiply",
                                                                           @{typ instruction},
                                                                           call
                                                                             ("Multiply.Multiply32",
                                                                              @{typ Multiply},
                                                                              tp[var_b"setflags",
                                                                                 var_w("Rd",4),
                                                                                 var_w("Rn",4),
                                                                                 var_w("Rm",4)],
                                                                              @{theory}),@{theory}))),
                                                                 qTy))))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("RdLo",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("RdHi",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("ArchVersion",
                                           @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_n"v",
                                           mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("RdHi",4),lw(15,4)),
                                                                bop(Or,eq(var_w("RdLo",4),lw(15,4)),
                                                                    bop(Or,
                                                                        eq(var_w("Rn",4),lw(15,4)),
                                                                        bop(Or,
                                                                            eq(var_w("Rm",4),
                                                                               lw(15,4)),
                                                                            eq(var_w("RdHi",4),
                                                                               var_w("RdLo",4)))))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"MultiplyAccumulateAccumulate"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Multiply",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Multiply.MultiplyAccumulateAccumulate",
                                                                    @{typ Multiply},
                                                                    tp[var_w("RdHi",4),
                                                                       var_w("RdLo",4),
                                                                       var_w("Rn",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("Ra",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rd",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("HaveThumb2",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                    bop(Or,
                                                                        eq(var_w("Rm",4),lw(15,4)),
                                                                        eq(var_w("Ra",4),lw(15,4))))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"MultiplySubtract"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Multiply",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Multiply.MultiplySubtract",
                                                                    @{typ Multiply},
                                                                    tp[var_w("Rd",4),var_w("Rn",4),
                                                                       var_w("Rm",4),var_w("Ra",4)],
                                                                    @{theory}),@{theory}),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,var_b"b'23",
                                 bop(And,var_b"b'7",
                                     bop(And,mop(Not,var_b"b'6"),
                                         bop(And,mop(Not,var_b"b'5"),var_b"b'4"))))),
                         let'
                           (var_w("Rn",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rm",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               let'
                                 (var_w("RdLo",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("RdHi",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(call
                                                    ("ArchVersion",
                                                     @{typ
                                                     "state \<Rightarrow> (nat \<times> state)"},lu,
                                                     @{theory}),
                                                  close
                                                    (var_n"v",
                                                     mb(mb(mb(mb(mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),
                                                                                qTy),
                                                                             close
                                                                               (var_b"b",
                                                                                mu(bop(And,var_b"b",
                                                                                       bop(Or,
                                                                                           eq(var_w("RdHi",4),
                                                                                              var_w("Rn",4)),
                                                                                           eq(var_w("RdLo",4),
                                                                                              var_w("Rn",4)))),
                                                                                   qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    eq(var_w("RdHi",4),
                                                                                       var_w("RdLo",4)),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(Or,
                                                                                 eq(var_w("Rm",4),
                                                                                    lw(15,4)),
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(Or,
                                                                              eq(var_w("Rn",4),
                                                                                 lw(15,4)),var_b"v"),
                                                                          qTy))),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("RdHi",4),
                                                                              lw(15,4)),var_b"v"),
                                                                       qTy))),
                                                              close
                                                                (var_b"v",
                                                                 mu(bop(Or,
                                                                        eq(var_w("RdLo",4),lw(15,4)),
                                                                        var_b"v"),qTy))),
                                                           close
                                                             (var_b"b",
                                                              ite(var_b"b",
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"MultiplyLong"],@{theory}),
                                                                  mu(lu,qTy)))),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Multiply",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Multiply.MultiplyLong",
                                                                    @{typ Multiply},
                                                                    tp[eq(mop(Cast w1,
                                                                              ll[var_b"b'21"]),
                                                                          lw(1,1)),
                                                                       eq(mop(Cast w1,
                                                                              ll[var_b"b'22"]),
                                                                          lw(1,1)),
                                                                       eq(mop(Cast w1,
                                                                              ll[var_b"b'20"]),
                                                                          lw(1,1)),var_w("RdHi",4),
                                                                       var_w("RdLo",4),
                                                                       var_w("Rn",4),var_w("Rm",4)],
                                                                    @{theory}),@{theory}),qTy))))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,mop(Not,var_b"b'23"),
                                 bop(And,mop(Not,var_b"b'21"),
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,var_b"b'7",
                                             bop(And,mop(Not,var_b"b'6"),
                                                 bop(And,mop(Not,var_b"b'5"),var_b"b'4"))))))),
                         let'
                           (var_w("Rt2",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rt",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        tp[var_w("cond",4),lt],@{theory}),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                       bop(Or,eq(var_w("Rt2",4),lw(15,4)),
                                                           bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                               bop(Or,
                                                                   eq(var_w("Rn",4),var_w("Rt",4)),
                                                                   eq(var_w("Rn",4),var_w("Rt2",4)))))),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),ls"Swap"],
                                                      @{theory}),mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.Swap",@{typ instruction},
                                                        tp[eq(mop(Cast w1,ll[var_b"b'22"]),lw(1,1)),
                                                           var_w("Rt",4),var_w("Rt2",4),
                                                           var_w("Rn",4)],@{theory}),qTy))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("ArchVersion",
                                        @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_n"v",
                                        mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                 close
                                                   (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                                 bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                     bop(Or,
                                                                         eq(var_w("Rd",4),
                                                                            var_w("Rn",4)),
                                                                         eq(var_w("Rd",4),
                                                                            var_w("Rt",4)))))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"StoreExclusive"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Store",
                                                              @{typ instruction},
                                                              call
                                                                ("Store.StoreExclusive",
                                                                 @{typ Store},
                                                                 tp[var_w("Rd",4),var_w("Rt",4),
                                                                    var_w("Rn",4),lw(0,32)],
                                                                 @{theory}),@{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,var_b"b'20",
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(call
                                    ("ArchVersion",
                                     @{typ "state \<Rightarrow> (nat \<times> state)"},lu,@{theory}),
                                  close
                                    (var_n"v",
                                     mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                              close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                          eq(var_w("Rn",4),lw(15,4))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadExclusive"],@{theory}),mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Load",@{typ instruction},
                                                           call
                                                             ("Load.LoadExclusive",@{typ Load},
                                                              tp[var_w("Rt",4),var_w("Rn",4),
                                                                 lw(0,32)],@{theory}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(mr(close
                                          (var("s",qTy),
                                           call
                                             ("state.Architecture",@{typ Architecture},var("s",qTy),
                                              @{theory}))),
                                     close
                                       (var("v",@{typ Architecture}),
                                        mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                        sl[lc("ARMv6K","Architecture",@{theory}),
                                                           lc("ARMv7_A","Architecture",@{theory}),
                                                           lc("ARMv7_R","Architecture",@{theory})]),
                                                    qTy),
                                                 close
                                                   (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  let'
                                                    (var_w("Rt2",4),bop(Add,var_w("Rt",4),lw(1,4)),
                                                     mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                                bop(Or,bop(Bit,var_w("Rt",4),ln 0),
                                                                    bop(Or,
                                                                        eq(var_w("Rt",4),lw(14,4)),
                                                                        bop(Or,
                                                                            eq(var_w("Rn",4),
                                                                               lw(15,4)),
                                                                            bop(Or,
                                                                                eq(var_w("Rd",4),
                                                                                   var_w("Rn",4)),
                                                                                bop(Or,
                                                                                    eq(var_w("Rd",4),
                                                                                       var_w("Rt",4)),
                                                                                    eq(var_w("Rd",4),
                                                                                       var_w("Rt2",4)))))))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"StoreExclusiveDoubleword"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.Store",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Store.StoreExclusiveDoubleword",
                                                                    @{typ Store},
                                                                    tp[var_w("Rd",4),var_w("Rt",4),
                                                                       var_w("Rt2",4),var_w("Rn",4)],
                                                                    @{theory}),@{theory}),qTy)))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,mop(Not,var_b"b'22"),
                                     bop(And,var_b"b'21",
                                         bop(And,var_b"b'20",
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(mr(close
                                       (var("s",qTy),
                                        call
                                          ("state.Architecture",@{typ Architecture},var("s",qTy),
                                           @{theory}))),
                                  close
                                    (var("v",@{typ Architecture}),
                                     mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                     sl[lc("ARMv6K","Architecture",@{theory}),
                                                        lc("ARMv7_A","Architecture",@{theory}),
                                                        lc("ARMv7_R","Architecture",@{theory})]),qTy),
                                              close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,bop(Bit,var_w("Rt",4),ln 0),
                                                          bop(Or,eq(var_w("Rt",4),lw(14,4)),
                                                              eq(var_w("Rn",4),lw(15,4)))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadExclusiveDoubleword"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Load",@{typ instruction},
                                                           call
                                                             ("Load.LoadExclusiveDoubleword",
                                                              @{typ Load},
                                                              tp[var_w("Rt",4),
                                                                 bop(Add,var_w("Rt",4),lw(1,4)),
                                                                 var_w("Rn",4)],@{theory}),@{theory}),
                                                        qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,var_b"b'22",
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(mr(close
                                          (var("s",qTy),
                                           call
                                             ("state.Architecture",@{typ Architecture},var("s",qTy),
                                              @{theory}))),
                                     close
                                       (var("v",@{typ Architecture}),
                                        mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                        sl[lc("ARMv6K","Architecture",@{theory}),
                                                           lc("ARMv7_A","Architecture",@{theory}),
                                                           lc("ARMv7_R","Architecture",@{theory})]),
                                                    qTy),
                                                 close
                                                   (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                                 bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                     bop(Or,
                                                                         eq(var_w("Rd",4),
                                                                            var_w("Rn",4)),
                                                                         eq(var_w("Rd",4),
                                                                            var_w("Rt",4)))))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"StoreExclusiveByte"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Store",
                                                              @{typ instruction},
                                                              call
                                                                ("Store.StoreExclusiveByte",
                                                                 @{typ Store},
                                                                 tp[var_w("Rd",4),var_w("Rt",4),
                                                                    var_w("Rn",4)],@{theory}),
                                                              @{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,var_b"b'22",
                                     bop(And,mop(Not,var_b"b'21"),
                                         bop(And,var_b"b'20",
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(mr(close
                                       (var("s",qTy),
                                        call
                                          ("state.Architecture",@{typ Architecture},var("s",qTy),
                                           @{theory}))),
                                  close
                                    (var("v",@{typ Architecture}),
                                     mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                     sl[lc("ARMv6K","Architecture",@{theory}),
                                                        lc("ARMv7_A","Architecture",@{theory}),
                                                        lc("ARMv7_R","Architecture",@{theory})]),qTy),
                                              close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                          eq(var_w("Rn",4),lw(15,4))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadExclusiveByte"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Load",@{typ instruction},
                                                           call
                                                             ("Load.LoadExclusiveByte",@{typ Load},
                                                              tp[var_w("Rt",4),var_w("Rn",4)],
                                                              @{theory}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,mop(Not,var_b"b'20"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(mr(close
                                          (var("s",qTy),
                                           call
                                             ("state.Architecture",@{typ Architecture},var("s",qTy),
                                              @{theory}))),
                                     close
                                       (var("v",@{typ Architecture}),
                                        mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                        sl[lc("ARMv6K","Architecture",@{theory}),
                                                           lc("ARMv7_A","Architecture",@{theory}),
                                                           lc("ARMv7_R","Architecture",@{theory})]),
                                                    qTy),
                                                 close
                                                   (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rd",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                                 bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                     bop(Or,
                                                                         eq(var_w("Rd",4),
                                                                            var_w("Rn",4)),
                                                                         eq(var_w("Rd",4),
                                                                            var_w("Rt",4)))))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"StoreExclusiveHalf"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Store",
                                                              @{typ instruction},
                                                              call
                                                                ("Store.StoreExclusiveHalf",
                                                                 @{typ Store},
                                                                 tp[var_w("Rd",4),var_w("Rt",4),
                                                                    var_w("Rn",4)],@{theory}),
                                                              @{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,var_b"b'24",
                             bop(And,var_b"b'23",
                                 bop(And,var_b"b'22",
                                     bop(And,var_b"b'21",
                                         bop(And,var_b"b'20",
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,mop(Not,var_b"b'5"),var_b"b'4")))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(mr(close
                                       (var("s",qTy),
                                        call
                                          ("state.Architecture",@{typ Architecture},var("s",qTy),
                                           @{theory}))),
                                  close
                                    (var("v",@{typ Architecture}),
                                     mb(mb(mb(mu(bop(In,var("v",@{typ Architecture}),
                                                     sl[lc("ARMv6K","Architecture",@{theory}),
                                                        lc("ARMv7_A","Architecture",@{theory}),
                                                        lc("ARMv7_R","Architecture",@{theory})]),qTy),
                                              close(var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                          eq(var_w("Rn",4),lw(15,4))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadExclusiveHalf"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Load",@{typ instruction},
                                                           call
                                                             ("Load.LoadExclusiveHalf",@{typ Load},
                                                              tp[var_w("Rt",4),var_w("Rn",4)],
                                                              @{theory}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,mop(Not,var_b"b'22"),
                                 bop(And,var_b"b'21",
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,var_b"b'7",
                                             bop(And,mop(Not,var_b"b'6"),
                                                 bop(And,var_b"b'5",var_b"b'4"))))))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rt",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  mb(call
                                       ("HaveThumb2",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                             bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                 bop(Or,
                                                                     eq(var_w("Rn",4),var_w("Rt",4)),
                                                                     eq(var_w("Rm",4),lw(15,4))))),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"StoreHalfUnprivileged"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Store",
                                                              @{typ instruction},
                                                              call
                                                                ("Store.StoreHalfUnprivileged",
                                                                 @{typ Store},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),lt,var_w("Rt",4),
                                                                    var_w("Rn",4),
                                                                    call
                                                                      ("offset2.register_form2",
                                                                       @{typ offset2},var_w("Rm",4),
                                                                       @{theory})],@{theory}),
                                                              @{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'20"),
                                 bop(And,var_b"b'7",
                                     bop(And,mop(Not,var_b"b'6"),bop(And,var_b"b'5",var_b"b'4"))))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rt",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  let'
                                    (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                     mb(call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           tp[var_w("cond",4),lt],@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               let'
                                                 (var_b"wback",
                                                  bop(Or,eq(var_w("P",1),lw(0,1)),
                                                      eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1))),
                                                  mb(call
                                                       ("ArchVersion",
                                                        @{typ
                                                        "state \<Rightarrow> (nat \<times> state)"},
                                                        lu,@{theory}),
                                                     close
                                                       (var_n"v",
                                                        mb(mb(mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),
                                                                             qTy),
                                                                          close
                                                                            (var_b"b",
                                                                             mu(bop(And,var_b"b",
                                                                                    bop(And,
                                                                                        var_b"wback",
                                                                                        eq(var_w("Rm",4),
                                                                                           var_w("Rn",4)))),
                                                                                qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(Or,
                                                                                 bop(And,
                                                                                     var_b"wback",
                                                                                     bop(Or,
                                                                                         eq(var_w("Rn",4),
                                                                                            lw(15,4)),
                                                                                         eq(var_w("Rn",4),
                                                                                            var_w("Rt",4)))),
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(bop(Or,
                                                                              eq(var_w("Rm",4),
                                                                                 lw(15,4)),var_b"v"),
                                                                          qTy))),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(bop(Or,
                                                                           eq(var_w("Rt",4),lw(15,4)),
                                                                           var_b"v"),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"StoreHalf"],@{theory}),
                                                                     mu(lu,qTy)))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(call
                                                                   ("instruction.Store",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Store.StoreHalf",
                                                                       @{typ Store},
                                                                       tp[eq(mop(Cast w1,
                                                                                 ll[var_b"b'23"]),
                                                                             lw(1,1)),
                                                                          eq(var_w("P",1),lw(1,1)),
                                                                          var_b"wback",
                                                                          var_w("Rt",4),
                                                                          var_w("Rn",4),
                                                                          call
                                                                            ("offset1.register_form1",
                                                                             @{typ offset1},
                                                                             tp[var_w("Rm",4),
                                                                                lc("SRType_LSL",
                                                                                   "SRType",
                                                                                   @{theory}),ln 0],
                                                                             @{theory})],@{theory}),
                                                                    @{theory}),qTy)))))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,mop(Not,var_b"b'22"),
                                 bop(And,var_b"b'21",
                                     bop(And,var_b"b'20",bop(And,var_b"b'7",var_b"b'4"))))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("H",1),mop(Cast w1,ll[var_b"b'5"]),
                               let'
                                 (var_w("S",1),mop(Cast w1,ll[var_b"b'6"]),
                                  let'
                                    (var_w("Rt",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        mb(call
                                             ("HaveThumb2",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mb(mb(mu(bop(And,
                                                              bop(Or,
                                                                  mop(Not,eq(var_w("H",1),lw(0,1))),
                                                                  eq(var_w("S",1),lw(1,1))),var_b"v"),
                                                          qTy),
                                                       close
                                                         (var_b"v",
                                                          mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                                   bop(Or,
                                                                       eq(var_w("Rn",4),lw(15,4)),
                                                                       bop(Or,
                                                                           eq(var_w("Rn",4),
                                                                              var_w("Rt",4)),
                                                                           eq(var_w("Rm",4),lw(15,4))))),
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls
                                                                      "LoadHalf/Byte (unprivileged)"],
                                                                  @{theory}),mu(lu,qTy)),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mu(let'
                                                                   (var_b"add",
                                                                    eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (var_b"postindex",lt,
                                                                       let'
                                                                         (var("m",@{typ offset2}),
                                                                          call
                                                                            ("offset2.register_form2",
                                                                             @{typ offset2},
                                                                             var_w("Rm",4),@{theory}),
                                                                          ite(eq(var_w("H",1),
                                                                                 lw(1,1)),
                                                                              call
                                                                                ("instruction.Load",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Load.LoadHalfUnprivileged",
                                                                                    @{typ Load},
                                                                                    tp[eq(var_w("S",1),
                                                                                          lw(0,1)),
                                                                                       var_b"add",
                                                                                       var_b"postindex",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset2})],
                                                                                    @{theory}),
                                                                                 @{theory}),
                                                                              call
                                                                                ("instruction.Load",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Load.LoadSignedByteUnprivileged",
                                                                                    @{typ Load},
                                                                                    tp[var_b"add",
                                                                                       var_b"postindex",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset2})],
                                                                                    @{theory}),
                                                                                 @{theory}))))),qTy))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))))),
                        (bop(And,mop(Not,var_b"b'22"),
                             bop(And,var_b"b'20",bop(And,var_b"b'7",var_b"b'4"))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("H",1),mop(Cast w1,ll[var_b"b'5"]),
                               let'
                                 (var_w("S",1),mop(Cast w1,ll[var_b"b'6"]),
                                  let'
                                    (var_w("Rt",4),
                                     mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                     let'
                                       (var_w("Rn",4),
                                        mop(Cast w4,
                                            ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                        let'
                                          (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                           mb(call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 tp[var_w("cond",4),
                                                    bop(Or,mop(Not,eq(var_w("H",1),lw(0,1))),
                                                        eq(var_w("S",1),lw(1,1)))],@{theory}),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     let'
                                                       (var_b"wback",
                                                        bop(Or,eq(var_w("P",1),lw(0,1)),
                                                            eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1))),
                                                        mb(call
                                                             ("ArchVersion",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (nat \<times> state)"},lu,@{theory}),
                                                           close
                                                             (var_n"v",
                                                              mb(mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),
                                                                                qTy),
                                                                             close
                                                                               (var_b"b",
                                                                                mu(bop(And,var_b"b",
                                                                                       bop(And,
                                                                                           var_b"wback",
                                                                                           eq(var_w("Rm",4),
                                                                                              var_w("Rn",4)))),
                                                                                   qTy))),
                                                                          close
                                                                            (var_b"v",
                                                                             mu(bop(Or,
                                                                                    eq(var_w("Rm",4),
                                                                                       lw(15,4)),
                                                                                    var_b"v"),qTy))),
                                                                       close
                                                                         (var_b"v",
                                                                          mu(bop(Or,
                                                                                 eq(var_w("Rt",4),
                                                                                    lw(15,4)),
                                                                                 var_b"v"),qTy))),
                                                                    close
                                                                      (var_b"b",
                                                                       ite(var_b"b",
                                                                           call
                                                                             ("DECODE_UNPREDICTABLE",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              tp[var("mc",
                                                                                     @{typ MachineCode}),
                                                                                 ls"LoadHalf/Byte"],
                                                                              @{theory}),mu(lu,qTy)))),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(let'
                                                                         (var_b"index",
                                                                          eq(var_w("P",1),lw(1,1)),
                                                                          let'
                                                                            (var_b"add",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'23"]),
                                                                                lw(1,1)),
                                                                             let'
                                                                               (var_b"unsigned",
                                                                                eq(var_w("S",1),
                                                                                   lw(0,1)),
                                                                                let'
                                                                                  (var("m",
                                                                                       @{typ offset1}),
                                                                                   call
                                                                                     ("offset1.register_form1",
                                                                                      @{typ offset1},
                                                                                      tp[var_w("Rm",4),
                                                                                         lc("SRType_LSL",
                                                                                            "SRType",
                                                                                            @{theory}),
                                                                                         ln 0],
                                                                                      @{theory}),
                                                                                   ite(eq(var_w("H",1),
                                                                                          lw(1,1)),
                                                                                       call
                                                                                         ("instruction.Load",
                                                                                          @{typ instruction},
                                                                                          call
                                                                                            ("Load.LoadHalf",
                                                                                             @{typ Load},
                                                                                             tp[var_b"unsigned",
                                                                                                var_b"add",
                                                                                                var_b"index",
                                                                                                var_b"wback",
                                                                                                var_w("Rt",4),
                                                                                                var_w("Rn",4),
                                                                                                var("m",
                                                                                                    @{typ offset1})],
                                                                                             @{theory}),
                                                                                          @{theory}),
                                                                                       call
                                                                                         ("instruction.Load",
                                                                                          @{typ instruction},
                                                                                          call
                                                                                            ("Load.LoadByte",
                                                                                             @{typ Load},
                                                                                             tp[var_b"unsigned",
                                                                                                var_b"add",
                                                                                                var_b"index",
                                                                                                var_b"wback",
                                                                                                var_w("Rt",4),
                                                                                                var_w("Rn",4),
                                                                                                var("m",
                                                                                                    @{typ offset1})],
                                                                                             @{theory}),
                                                                                          @{theory})))))),
                                                                       qTy)))))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'20"),
                                 bop(And,var_b"b'7",bop(And,var_b"b'6",var_b"b'4")))),
                         let'
                           (var_w("Rm",4),
                            mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                            let'
                              (var_w("Rt",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  let'
                                    (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                     let'
                                       (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                        mb(call
                                             ("HaveDSPSupport",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        let'
                                                          (var_w("Rt2",4),
                                                           bop(Add,var_w("Rt",4),lw(1,4)),
                                                           let'
                                                             (var_b"wback",
                                                              bop(Or,eq(var_w("P",1),lw(0,1)),
                                                                  eq(var_w("W",1),lw(1,1))),
                                                              let'
                                                                (var_b"store",
                                                                 eq(mop(Cast w1,ll[var_b"b'5"]),
                                                                    lw(1,1)),
                                                                 mb(call
                                                                      ("ArchVersion",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (nat \<times> state)"},lu,
                                                                       @{theory}),
                                                                    close
                                                                      (var_n"v",
                                                                       mb(mb(mb(mb(mb(mb(mb(mb(mb(mu(bop(Lt,
                                                                                                         var_n"v",
                                                                                                         ln
                                                                                                          6),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var_b"b",
                                                                                                     mu(bop(And,
                                                                                                            var_b"b",
                                                                                                            bop(And,
                                                                                                                var_b"wback",
                                                                                                                eq(var_w("Rm",4),
                                                                                                                   var_w("Rn",4)))),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(bop(Or,
                                                                                                         bop(And,
                                                                                                             var_b"wback",
                                                                                                             bop(Or,
                                                                                                                 eq(var_w("Rn",4),
                                                                                                                    lw(15,
                                                                                                                       4)),
                                                                                                                 bop(Or,
                                                                                                                     eq(var_w("Rn",4),
                                                                                                                        var_w("Rt",4)),
                                                                                                                     eq(var_w("Rn",4),
                                                                                                                        var_w("Rt2",4))))),
                                                                                                         var_b"v"),
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var_b"v",
                                                                                               mu(bop(Or,
                                                                                                      bop(And,
                                                                                                          mop(Not,
                                                                                                              var_b"store"),
                                                                                                          bop(Or,
                                                                                                              eq(var_w("Rm",4),
                                                                                                                 var_w("Rt",4)),
                                                                                                              eq(var_w("Rm",4),
                                                                                                                 var_w("Rt2",4)))),
                                                                                                      var_b"v"),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var_b"v",
                                                                                            mu(bop(Or,
                                                                                                   eq(var_w("Rm",4),
                                                                                                      lw(15,
                                                                                                         4)),
                                                                                                   var_b"v"),
                                                                                               qTy))),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(bop(Or,
                                                                                                eq(var_w("Rt2",4),
                                                                                                   lw(15,
                                                                                                      4)),
                                                                                                var_b"v"),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mu(bop(Or,
                                                                                             bop(And,
                                                                                                 eq(var_w("P",1),
                                                                                                    lw(0,
                                                                                                       1)),
                                                                                                 eq(var_w("W",1),
                                                                                                    lw(1,
                                                                                                       1))),
                                                                                             var_b"v"),
                                                                                         qTy))),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(Or,
                                                                                          bop(Bit,
                                                                                              var_w("Rt",4),
                                                                                              ln 0),
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("DECODE_UNPREDICTABLE",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       tp[var("mc",
                                                                                              @{typ MachineCode}),
                                                                                          ls
                                                                                           "Load/StoreDual (register)"],
                                                                                       @{theory}),
                                                                                    mu(lu,qTy)))),
                                                                          close
                                                                            (var_a HOLogic.unitT,
                                                                             mu(let'
                                                                                  (var_b"index",
                                                                                   eq(var_w("P",1),
                                                                                      lw(1,1)),
                                                                                   let'
                                                                                     (var_b"add",
                                                                                      eq(mop(Cast w1,
                                                                                             ll[var_b"b'23"]),
                                                                                         lw(1,1)),
                                                                                      let'
                                                                                        (var("m",
                                                                                             @{typ offset2}),
                                                                                         call
                                                                                           ("offset2.register_form2",
                                                                                            @{typ offset2},
                                                                                            var_w("Rm",4),
                                                                                            @{theory}),
                                                                                         ite(var_b"store",
                                                                                             call
                                                                                               ("instruction.Store",
                                                                                                @{typ instruction},
                                                                                                call
                                                                                                  ("Store.StoreDual",
                                                                                                   @{typ Store},
                                                                                                   tp[var_b"add",
                                                                                                      var_b"index",
                                                                                                      var_b"wback",
                                                                                                      var_w("Rt",4),
                                                                                                      var_w("Rt2",4),
                                                                                                      var_w("Rn",4),
                                                                                                      var("m",
                                                                                                          @{typ offset2})],
                                                                                                   @{theory}),
                                                                                                @{theory}),
                                                                                             call
                                                                                               ("instruction.Load",
                                                                                                @{typ instruction},
                                                                                                call
                                                                                                  ("Load.LoadDual",
                                                                                                   @{typ Load},
                                                                                                   tp[var_b"add",
                                                                                                      var_b"index",
                                                                                                      var_b"wback",
                                                                                                      var_w("Rt",4),
                                                                                                      var_w("Rt2",4),
                                                                                                      var_w("Rn",4),
                                                                                                      var("m",
                                                                                                          @{typ offset2})],
                                                                                                   @{theory}),
                                                                                                @{theory}))))),
                                                                                qTy)))))))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))))),
                        (bop(And,var_b"b'22",
                             bop(And,mop(Not,var_b"b'20"),
                                 bop(And,var_b"b'19",
                                     bop(And,var_b"b'18",
                                         bop(And,var_b"b'17",
                                             bop(And,var_b"b'16",
                                                 bop(And,var_b"b'7",
                                                     bop(And,var_b"b'6",
                                                         bop(And,mop(Not,var_b"b'5"),var_b"b'4"))))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            mb(call
                                 ("HaveDSPSupport",
                                  @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                               close
                                 (var_b"v",
                                  mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            let'
                                              (var_w("Rt2",4),bop(Add,var_w("Rt",4),lw(1,4)),
                                               mb(ite(bop(Or,bop(Bit,var_w("Rt",4),ln 0),
                                                          eq(var_w("Rt2",4),lw(15,4))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"LoadDual (literal)"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Load",@{typ instruction},
                                                           call
                                                             ("Load.LoadDualLiteral",@{typ Load},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                    lw(1,1)),var_w("Rt",4),
                                                                 var_w("Rt2",4),
                                                                 mop(Cast w32,
                                                                     cc[mop(Cast w4,
                                                                            ll[var_b"b'11",
                                                                               var_b"b'10",
                                                                               var_b"b'9",var_b"b'8"]),
                                                                        mop(Cast w4,
                                                                            ll[var_b"b'3",
                                                                               var_b"b'2",
                                                                               var_b"b'1",var_b"b'0"])])],
                                                              @{theory}),@{theory}),qTy)))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'22",
                             bop(And,mop(Not,var_b"b'20"),
                                 bop(And,var_b"b'7",bop(And,var_b"b'6",var_b"b'4")))),
                         let'
                           (var_w("S",1),mop(Cast w1,ll[var_b"b'5"]),
                            let'
                              (var_w("Rt",4),
                               mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                               let'
                                 (var_w("Rn",4),
                                  mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                  let'
                                    (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                     let'
                                       (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                        mb(call
                                             ("HaveDSPSupport",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        let'
                                                          (var_w("Rt2",4),
                                                           bop(Add,var_w("Rt",4),lw(1,4)),
                                                           let'
                                                             (var_b"wback",
                                                              bop(Or,eq(var_w("P",1),lw(0,1)),
                                                                  eq(var_w("W",1),lw(1,1))),
                                                              mb(ite(bop(Or,
                                                                         bop(Bit,var_w("Rt",4),ln 0),
                                                                         bop(Or,
                                                                             bop(And,
                                                                                 eq(var_w("P",1),
                                                                                    lw(0,1)),
                                                                                 eq(var_w("W",1),
                                                                                    lw(1,1))),
                                                                             bop(Or,
                                                                                 bop(And,
                                                                                     var_b"wback",
                                                                                     bop(Or,
                                                                                         bop(And,
                                                                                             eq(var_w("S",1),
                                                                                                lw(1,
                                                                                                   1)),
                                                                                             eq(var_w("Rn",4),
                                                                                                lw(15,
                                                                                                   4))),
                                                                                         bop(Or,
                                                                                             eq(var_w("Rn",4),
                                                                                                var_w("Rt",4)),
                                                                                             eq(var_w("Rn",4),
                                                                                                var_w("Rt2",4))))),
                                                                                 eq(var_w("Rt2",4),
                                                                                    lw(15,4))))),
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls
                                                                            "Load/StoreDual (immediate)"],
                                                                        @{theory}),mu(lu,qTy)),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(let'
                                                                         (var_b"index",
                                                                          eq(var_w("P",1),lw(1,1)),
                                                                          let'
                                                                            (var_b"add",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'23"]),
                                                                                lw(1,1)),
                                                                             let'
                                                                               (var("m",
                                                                                    @{typ offset2}),
                                                                                call
                                                                                  ("offset2.immediate_form2",
                                                                                   @{typ offset2},
                                                                                   mop(Cast w32,
                                                                                       cc[mop(Cast
                                                                                                w4,
                                                                                              ll[var_b"b'11",
                                                                                                 var_b"b'10",
                                                                                                 var_b"b'9",
                                                                                                 var_b"b'8"]),
                                                                                          mop(Cast
                                                                                                w4,
                                                                                              ll[var_b"b'3",
                                                                                                 var_b"b'2",
                                                                                                 var_b"b'1",
                                                                                                 var_b"b'0"])]),
                                                                                   @{theory}),
                                                                                ite(eq(var_w("S",1),
                                                                                       lw(1,1)),
                                                                                    call
                                                                                      ("instruction.Store",
                                                                                       @{typ instruction},
                                                                                       call
                                                                                         ("Store.StoreDual",
                                                                                          @{typ Store},
                                                                                          tp[var_b"add",
                                                                                             var_b"index",
                                                                                             var_b"wback",
                                                                                             var_w("Rt",4),
                                                                                             var_w("Rt2",4),
                                                                                             var_w("Rn",4),
                                                                                             var("m",
                                                                                                 @{typ offset2})],
                                                                                          @{theory}),
                                                                                       @{theory}),
                                                                                    call
                                                                                      ("instruction.Load",
                                                                                       @{typ instruction},
                                                                                       call
                                                                                         ("Load.LoadDual",
                                                                                          @{typ Load},
                                                                                          tp[var_b"add",
                                                                                             var_b"index",
                                                                                             var_b"wback",
                                                                                             var_w("Rt",4),
                                                                                             var_w("Rt2",4),
                                                                                             var_w("Rn",4),
                                                                                             var("m",
                                                                                                 @{typ offset2})],
                                                                                          @{theory}),
                                                                                       @{theory}))))),
                                                                       qTy))))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory})))))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,var_b"b'22",
                                 bop(And,var_b"b'21",
                                     bop(And,var_b"b'20",bop(And,var_b"b'7",var_b"b'4"))))),
                         let'
                           (var_w("H",1),mop(Cast w1,ll[var_b"b'5"]),
                            let'
                              (var_w("S",1),mop(Cast w1,ll[var_b"b'6"]),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     mb(call
                                          ("HaveThumb2",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mb(mu(bop(And,
                                                           bop(Or,mop(Not,eq(var_w("H",1),lw(0,1))),
                                                               eq(var_w("S",1),lw(1,1))),var_b"v"),
                                                       qTy),
                                                    close
                                                      (var_b"v",mu(tp[var_w("cond",4),var_b"v"],qTy))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                                bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                    eq(var_w("Rn",4),var_w("Rt",4)))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"LoadHalf/Byte (unprivileged)"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(let'
                                                                (var_b"postindex",lt,
                                                                 let'
                                                                   (var_b"add",
                                                                    eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (var("m",@{typ offset2}),
                                                                       call
                                                                         ("offset2.immediate_form2",
                                                                          @{typ offset2},
                                                                          mop(Cast w32,
                                                                              cc[mop(Cast w4,
                                                                                     ll[var_b"b'11",
                                                                                        var_b"b'10",
                                                                                        var_b"b'9",
                                                                                        var_b"b'8"]),
                                                                                 mop(Cast w4,
                                                                                     ll[var_b"b'3",
                                                                                        var_b"b'2",
                                                                                        var_b"b'1",
                                                                                        var_b"b'0"])]),
                                                                          @{theory}),
                                                                       ite(eq(var_w("H",1),lw(1,1)),
                                                                           call
                                                                             ("instruction.Load",
                                                                              @{typ instruction},
                                                                              call
                                                                                ("Load.LoadHalfUnprivileged",
                                                                                 @{typ Load},
                                                                                 tp[eq(var_w("S",1),
                                                                                       lw(0,1)),
                                                                                    var_b"add",
                                                                                    var_b"postindex",
                                                                                    var_w("Rt",4),
                                                                                    var_w("Rn",4),
                                                                                    var("m",
                                                                                        @{typ offset2})],
                                                                                 @{theory}),
                                                                              @{theory}),
                                                                           call
                                                                             ("instruction.Load",
                                                                              @{typ instruction},
                                                                              call
                                                                                ("Load.LoadSignedByteUnprivileged",
                                                                                 @{typ Load},
                                                                                 tp[var_b"add",
                                                                                    var_b"postindex",
                                                                                    var_w("Rt",4),
                                                                                    var_w("Rn",4),
                                                                                    var("m",
                                                                                        @{typ offset2})],
                                                                                 @{theory}),
                                                                              @{theory}))))),qTy))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))),
                        (bop(And,var_b"b'22",
                             bop(And,var_b"b'20",
                                 bop(And,var_b"b'19",
                                     bop(And,var_b"b'18",
                                         bop(And,var_b"b'17",
                                             bop(And,var_b"b'16",bop(And,var_b"b'7",var_b"b'4"))))))),
                         let'
                           (var_w("H",1),mop(Cast w1,ll[var_b"b'5"]),
                            let'
                              (var_w("S",1),mop(Cast w1,ll[var_b"b'6"]),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  mb(call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        tp[var_w("cond",4),
                                           bop(Or,mop(Not,eq(var_w("H",1),lw(0,1))),
                                               eq(var_w("S",1),lw(1,1)))],@{theory}),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(ite(eq(var_w("Rt",4),lw(15,4)),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),
                                                         ls"LoadHalf/Byte (literal)"],@{theory}),
                                                   mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(let'
                                                       (var_b"add",
                                                        eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                                        let'
                                                          (var_b"unsigned",eq(var_w("S",1),lw(0,1)),
                                                           let'
                                                             (var_w("imm32",32),
                                                              mop(Cast w32,
                                                                  cc[mop(Cast w4,
                                                                         ll[var_b"b'11",var_b"b'10",
                                                                            var_b"b'9",var_b"b'8"]),
                                                                     mop(Cast w4,
                                                                         ll[var_b"b'3",var_b"b'2",
                                                                            var_b"b'1",var_b"b'0"])]),
                                                              ite(eq(var_w("H",1),lw(1,1)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadHalfLiteral",
                                                                        @{typ Load},
                                                                        tp[var_b"unsigned",
                                                                           var_b"add",var_w("Rt",4),
                                                                           var_w("imm32",32)],
                                                                        @{theory}),@{theory}),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadByteLiteral",
                                                                        @{typ Load},
                                                                        tp[var_b"unsigned",
                                                                           var_b"add",var_w("Rt",4),
                                                                           var_w("imm32",32)],
                                                                        @{theory}),@{theory}))))),
                                                     qTy))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})))))))),
                        (bop(And,var_b"b'22",bop(And,var_b"b'20",bop(And,var_b"b'7",var_b"b'4"))),
                         let'
                           (var_w("H",1),mop(Cast w1,ll[var_b"b'5"]),
                            let'
                              (var_w("S",1),mop(Cast w1,ll[var_b"b'6"]),
                               let'
                                 (var_w("Rt",4),
                                  mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                  let'
                                    (var_w("Rn",4),
                                     mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                     let'
                                       (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                        mb(call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              tp[var_w("cond",4),
                                                 bop(Or,mop(Not,eq(var_w("H",1),lw(0,1))),
                                                     eq(var_w("S",1),lw(1,1)))],@{theory}),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  let'
                                                    (var_b"wback",
                                                     bop(Or,eq(var_w("P",1),lw(0,1)),
                                                         eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1))),
                                                     mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                                bop(And,var_b"wback",
                                                                    eq(var_w("Rn",4),var_w("Rt",4)))),
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"LoadHalf/Byte (immediate)"],
                                                               @{theory}),mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(let'
                                                                (var_b"index",
                                                                 eq(var_w("P",1),lw(1,1)),
                                                                 let'
                                                                   (var_b"add",
                                                                    eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    let'
                                                                      (var_b"unsigned",
                                                                       eq(var_w("S",1),lw(0,1)),
                                                                       let'
                                                                         (var("m",@{typ offset1}),
                                                                          call
                                                                            ("offset1.immediate_form1",
                                                                             @{typ offset1},
                                                                             mop(Cast w32,
                                                                                 cc[mop(Cast w4,
                                                                                        ll[var_b"b'11",
                                                                                           var_b"b'10",
                                                                                           var_b"b'9",
                                                                                           var_b"b'8"]),
                                                                                    mop(Cast w4,
                                                                                        ll[var_b"b'3",
                                                                                           var_b"b'2",
                                                                                           var_b"b'1",
                                                                                           var_b"b'0"])]),
                                                                             @{theory}),
                                                                          ite(eq(var_w("H",1),
                                                                                 lw(1,1)),
                                                                              call
                                                                                ("instruction.Load",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Load.LoadHalf",
                                                                                    @{typ Load},
                                                                                    tp[var_b"unsigned",
                                                                                       var_b"add",
                                                                                       var_b"index",
                                                                                       var_b"wback",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset1})],
                                                                                    @{theory}),
                                                                                 @{theory}),
                                                                              call
                                                                                ("instruction.Load",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Load.LoadByte",
                                                                                    @{typ Load},
                                                                                    tp[var_b"unsigned",
                                                                                       var_b"add",
                                                                                       var_b"index",
                                                                                       var_b"wback",
                                                                                       var_w("Rt",4),
                                                                                       var_w("Rn",4),
                                                                                       var("m",
                                                                                           @{typ offset1})],
                                                                                    @{theory}),
                                                                                 @{theory})))))),qTy)))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory})))))))))),
                        (bop(And,mop(Not,var_b"b'24"),
                             bop(And,var_b"b'22",
                                 bop(And,var_b"b'21",
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,var_b"b'7",
                                             bop(And,mop(Not,var_b"b'6"),
                                                 bop(And,var_b"b'5",var_b"b'4"))))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(call
                                    ("HaveThumb2",
                                     @{typ "state \<Rightarrow> (bool \<times> state)"},lu,@{theory}),
                                  close
                                    (var_b"v",
                                     mb(mb(mu(tp[var_w("cond",4),var_b"v"],qTy),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                          bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                              eq(var_w("Rn",4),var_w("Rt",4)))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"StoreHalf (immediate)"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Store",@{typ instruction},
                                                           call
                                                             ("Store.StoreHalfUnprivileged",
                                                              @{typ Store},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                    lw(1,1)),lt,var_w("Rt",4),
                                                                 var_w("Rn",4),
                                                                 call
                                                                   ("offset2.immediate_form2",
                                                                    @{typ offset2},
                                                                    mop(Cast w32,
                                                                        cc[mop(Cast w4,
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8"]),
                                                                           mop(Cast w4,
                                                                               ll[var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])]),
                                                                    @{theory})],@{theory}),@{theory}),
                                                        qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory}))))))))),
                        (bop(And,var_b"b'22",
                             bop(And,mop(Not,var_b"b'20"),
                                 bop(And,var_b"b'7",
                                     bop(And,mop(Not,var_b"b'6"),bop(And,var_b"b'5",var_b"b'4"))))),
                         let'
                           (var_w("Rt",4),
                            mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               let'
                                 (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                  mb(call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        tp[var_w("cond",4),lt],@{theory}),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            let'
                                              (var_b"wback",
                                               bop(Or,eq(var_w("P",1),lw(0,1)),
                                                   eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1))),
                                               mb(ite(bop(Or,eq(var_w("Rt",4),lw(15,4)),
                                                          bop(And,var_b"wback",
                                                              bop(Or,eq(var_w("Rn",4),lw(15,4)),
                                                                  eq(var_w("Rn",4),var_w("Rt",4))))),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"StoreHalf (immediate)"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.Store",@{typ instruction},
                                                           call
                                                             ("Store.StoreHalf",@{typ Store},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                    lw(1,1)),
                                                                 eq(var_w("P",1),lw(1,1)),
                                                                 var_b"wback",var_w("Rt",4),
                                                                 var_w("Rn",4),
                                                                 call
                                                                   ("offset1.immediate_form1",
                                                                    @{typ offset1},
                                                                    mop(Cast w32,
                                                                        cc[mop(Cast w4,
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8"]),
                                                                           mop(Cast w4,
                                                                               ll[var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])]),
                                                                    @{theory})],@{theory}),@{theory}),
                                                        qTy)))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))))],
                       call
                         ("UndefinedARM",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                          var_w("cond",4),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DecodeThumb",
   close
     (var_w("h",16),
      let'
        (var("mc",@{typ MachineCode}),
         call("MachineCode.Thumb",@{typ MachineCode},var_w("h",16),@{theory}),
         let'
           (tp[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",var_b"b'9",
               var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
               var_b"b'1",var_b"b'0"],
            call
              ("boolify'16",
               @{typ
               "bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
               var_w("h",16),@{theory}),
            itb([(var_b"b'13",
                  itb([(var_b"b'15",
                        itb([(bop(And,mop(Not,var_b"b'14"),mop(Not,var_b"b'12")),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(call
                                                   ("instruction.Data",@{typ instruction},
                                                    call
                                                      ("Data.ArithLogicImmediate",@{typ Data},
                                                       tp[lw(4,4),lf,
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'10",var_b"b'9",
                                                                     var_b"b'8"])),
                                                          ite(eq(mop(Cast w1,ll[var_b"b'11"]),
                                                                 lw(1,1)),lw(13,4),lw(15,4)),
                                                          cc[lw(15,4),
                                                             mop(Cast w8,
                                                                 ll[var_b"b'7",var_b"b'6",
                                                                    var_b"b'5",var_b"b'4",
                                                                    var_b"b'3",var_b"b'2",
                                                                    var_b"b'1",var_b"b'0"])]],
                                                       @{theory}),@{theory}),qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,mop(Not,var_b"b'11"),
                                          bop(And,mop(Not,var_b"b'10"),
                                              bop(And,mop(Not,var_b"b'9"),mop(Not,var_b"b'8")))))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(call
                                                   ("instruction.Data",@{typ instruction},
                                                    call
                                                      ("Data.ArithLogicImmediate",@{typ Data},
                                                       tp[ite(eq(mop(Cast w1,ll[var_b"b'7"]),lw(1,1)),
                                                              lw(2,4),lw(4,4)),lf,lw(13,4),lw(13,4),
                                                          cc[lw(30,5),
                                                             mop(Cast (Word_Lib.mk_wordT 7),
                                                                 ll[var_b"b'6",var_b"b'5",
                                                                    var_b"b'4",var_b"b'3",
                                                                    var_b"b'2",var_b"b'1",var_b"b'0"])]],
                                                       @{theory}),@{theory}),qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",bop(And,mop(Not,var_b"b'10"),var_b"b'8"))),
                              mb(call
                                   ("HaveThumb2",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                    lu,@{theory}),
                                 close
                                   (var_b"v",
                                    mb(mb(mu(tp[lw(14,4),var_b"v"],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mb(call
                                                   ("InITBlock",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"v",
                                                    mb(ite(var_b"v",
                                                           call
                                                             ("DECODE_UNPREDICTABLE",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var("mc",@{typ MachineCode}),
                                                                 ls"CompareBranch"],@{theory}),
                                                           mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.Branch",
                                                                @{typ instruction},
                                                                call
                                                                  ("Branch.CompareBranch",
                                                                   @{typ Branch},
                                                                   tp[eq(mop(Cast w1,ll[var_b"b'11"]),
                                                                         lw(1,1)),
                                                                      mop(Cast w4,
                                                                          mop(Cast
                                                                                (Word_Lib.mk_wordT 3),
                                                                              ll[var_b"b'2",
                                                                                 var_b"b'1",
                                                                                 var_b"b'0"])),
                                                                      mop(Cast w32,
                                                                          cc[mop(Cast w1,
                                                                                 ll[var_b"b'9"]),
                                                                             mop(Cast
                                                                                   (Word_Lib.mk_wordT 5),
                                                                                 ll[var_b"b'7",
                                                                                    var_b"b'6",
                                                                                    var_b"b'5",
                                                                                    var_b"b'4",
                                                                                    var_b"b'3"]),
                                                                             lw(0,1)])],@{theory}),
                                                                @{theory}),qTy))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,mop(Not,var_b"b'11"),
                                          bop(And,mop(Not,var_b"b'10"),
                                              bop(And,var_b"b'9",
                                                  bop(And,mop(Not,var_b"b'8"),mop(Not,var_b"b'6"))))))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mb(call
                                               ("ArchVersion",
                                                @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                lu,@{theory}),
                                             close
                                               (var_n"v0",
                                                mb(mu(bop(Ge,var_n"v0",ln 6),qTy),
                                                   close
                                                     (var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(call
                                                   ("instruction.Media",@{typ instruction},
                                                    call
                                                      ("Media.ExtendHalfword",@{typ Media},
                                                       tp[eq(mop(Cast w1,ll[var_b"b'7"]),lw(1,1)),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'2",var_b"b'1",
                                                                     var_b"b'0"])),lw(15,4),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'5",var_b"b'4",
                                                                     var_b"b'3"])),ln 0],@{theory}),
                                                    @{theory}),qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,mop(Not,var_b"b'11"),
                                          bop(And,mop(Not,var_b"b'10"),
                                              bop(And,var_b"b'9",
                                                  bop(And,mop(Not,var_b"b'8"),var_b"b'6")))))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mb(call
                                               ("ArchVersion",
                                                @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                lu,@{theory}),
                                             close
                                               (var_n"v0",
                                                mb(mu(bop(Ge,var_n"v0",ln 6),qTy),
                                                   close
                                                     (var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(call
                                                   ("instruction.Media",@{typ instruction},
                                                    call
                                                      ("Media.ExtendByte",@{typ Media},
                                                       tp[eq(mop(Cast w1,ll[var_b"b'7"]),lw(1,1)),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'2",var_b"b'1",
                                                                     var_b"b'0"])),lw(15,4),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'5",var_b"b'4",
                                                                     var_b"b'3"])),ln 0],@{theory}),
                                                    @{theory}),qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,mop(Not,var_b"b'11"),
                                          bop(And,var_b"b'10",mop(Not,var_b"b'9"))))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              let'
                                                (var_w("registers",16),
                                                 cc[lw(0,1),mop(Cast w1,ll[var_b"b'8"]),lw(0,6),
                                                    mop(Cast w8,
                                                        ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                           var_b"b'4",var_b"b'3",var_b"b'2",
                                                           var_b"b'1",var_b"b'0"])],
                                                 mb(call
                                                      ("BitCount",
                                                       @{typ
                                                       "state \<Rightarrow> (nat \<times> state)"},
                                                       var_w("registers",16),@{theory}),
                                                    close
                                                      (var_n"v",
                                                       mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("DECODE_UNPREDICTABLE",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[var("mc",
                                                                              @{typ MachineCode}),
                                                                          ls"StoreMultiple"],
                                                                       @{theory}),mu(lu,qTy)))),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(call
                                                                  ("instruction.Store",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Store.StoreMultiple",
                                                                      @{typ Store},
                                                                      tp[lf,lt,lt,lw(13,4),
                                                                         var_w("registers",16)],
                                                                      @{theory}),@{theory}),qTy)))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,mop(Not,var_b"b'11"),
                                          bop(And,var_b"b'10",
                                              bop(And,var_b"b'9",
                                                  bop(And,mop(Not,var_b"b'8"),
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,var_b"b'6",mop(Not,var_b"b'5"))))))))),
                              mb(call
                                   ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                    lu,@{theory}),
                                 close
                                   (var_n"v",
                                    mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                             close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mb(call
                                                   ("InITBlock",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"v",
                                                    mb(ite(var_b"v",
                                                           call
                                                             ("DECODE_UNPREDICTABLE",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var("mc",@{typ MachineCode}),
                                                                 ls"Setend"],@{theory}),mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.System",
                                                                @{typ instruction},
                                                                call
                                                                  ("System.Setend",@{typ System},
                                                                   eq(mop(Cast w1,ll[var_b"b'3"]),
                                                                      lw(1,1)),@{theory}),@{theory}),
                                                             qTy))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,mop(Not,var_b"b'11"),
                                          bop(And,var_b"b'10",
                                              bop(And,var_b"b'9",
                                                  bop(And,mop(Not,var_b"b'8"),
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,var_b"b'6",var_b"b'5")))))))),
                              let'
                                (var_w("F",1),mop(Cast w1,ll[var_b"b'0"]),
                                 let'
                                   (var_w("I",1),mop(Cast w1,ll[var_b"b'1"]),
                                    let'
                                      (var_w("A",1),mop(Cast w1,ll[var_b"b'2"]),
                                       mb(call
                                            ("ArchVersion",
                                             @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                             @{theory}),
                                          close
                                            (var_n"v",
                                             mb(mb(mb(mu(bop(Ge,var_n"v",ln 6),qTy),
                                                      close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       mb(call
                                                            ("InITBlock",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_b"v",
                                                             mb(mb(mu(bop(Or,
                                                                          eq(cc[var_w("A",1),
                                                                                var_w("I",1),
                                                                                var_w("F",1)],
                                                                             lw(0,3)),var_b"v"),qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("DECODE_UNPREDICTABLE",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[var("mc",
                                                                                    @{typ MachineCode}),
                                                                                ls
                                                                                 "ChangeProcessorState"],
                                                                             @{theory}),mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mu(let'
                                                                        (var_b"enable",
                                                                         eq(mop(Cast w1,
                                                                                ll[var_b"b'4"]),
                                                                            lw(0,1)),
                                                                         call
                                                                           ("instruction.System",
                                                                            @{typ instruction},
                                                                            call
                                                                              ("System.ChangeProcessorState",
                                                                               @{typ System},
                                                                               tp[var_b"enable",
                                                                                  mop(Not,
                                                                                      var_b"enable"),
                                                                                  eq(var_w("A",1),
                                                                                     lw(1,1)),
                                                                                  eq(var_w("I",1),
                                                                                     lw(1,1)),
                                                                                  eq(var_w("F",1),
                                                                                     lw(1,1)),
                                                                                  lo (Word_Lib.mk_wordT 5)],
                                                                               @{theory}),@{theory})),
                                                                      qTy))))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,var_b"b'11",
                                          bop(And,mop(Not,var_b"b'10"),
                                              bop(And,var_b"b'9",mop(Not,var_b"b'8")))))),
                              let'
                                (var_w("Rd",3),
                                 mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                                 let'
                                   (var_w("Rm",3),
                                    mop(Cast (Word_Lib.mk_wordT 3),
                                        ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                                    mb(call
                                         ("ThumbCondition",
                                          @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_w("v",4),
                                          mb(mb(mb(call
                                                     ("ArchVersion",
                                                      @{typ
                                                      "state \<Rightarrow> (nat \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_n"v0",
                                                      mb(mu(bop(Ge,var_n"v0",ln 6),qTy),
                                                         close
                                                           (var_b"v0",
                                                            mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                close
                                                  (var("v",@{typ "4 word \<times> bool"}),
                                                   call
                                                     ("Do",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      var("v",@{typ "4 word \<times> bool"}),
                                                      @{theory}))),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mu(cs(mop(Cast (Word_Lib.mk_wordT 2),
                                                              ll[var_b"b'7",var_b"b'6"]),
                                                          [(var_w("v",2),
                                                            itb([(eq(var_w("v",2),lw(0,2)),
                                                                  call
                                                                    ("instruction.Media",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Media.ByteReverse",
                                                                        @{typ Media},
                                                                        tp[mop(Cast w4,var_w("Rd",3)),
                                                                           mop(Cast w4,var_w("Rm",3))],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",2),lw(1,2)),
                                                                  call
                                                                    ("instruction.Media",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Media.ByteReversePackedHalfword",
                                                                        @{typ Media},
                                                                        tp[mop(Cast w4,var_w("Rd",3)),
                                                                           mop(Cast w4,var_w("Rm",3))],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",2),lw(3,2)),
                                                                  call
                                                                    ("instruction.Media",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Media.ByteReverseSignedHalfword",
                                                                        @{typ Media},
                                                                        tp[mop(Cast w4,var_w("Rd",3)),
                                                                           mop(Cast w4,var_w("Rm",3))],
                                                                        @{theory}),@{theory}))],
                                                                call
                                                                  ("instruction.Undefined",
                                                                   @{typ instruction},lw(0,32),
                                                                   @{theory})))],@{context}),qTy),
                                                    call
                                                      ("Skip",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (instruction \<times> state)"},lu,@{theory}))))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,var_b"b'11",bop(And,var_b"b'10",mop(Not,var_b"b'9"))))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              let'
                                                (var_w("registers",16),
                                                 cc[mop(Cast w1,ll[var_b"b'8"]),lw(0,7),
                                                    mop(Cast w8,
                                                        ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                           var_b"b'4",var_b"b'3",var_b"b'2",
                                                           var_b"b'1",var_b"b'0"])],
                                                 mb(call
                                                      ("BitCount",
                                                       @{typ
                                                       "state \<Rightarrow> (nat \<times> state)"},
                                                       var_w("registers",16),@{theory}),
                                                    close
                                                      (var_n"v",
                                                       mb(mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",mu(lt,qTy),
                                                                       mb(call
                                                                            ("InITBlock",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (bool \<times> state)"},
                                                                             lu,@{theory}),
                                                                          close
                                                                            (var_b"v",
                                                                             mb(ite(var_b"v",
                                                                                    mb(call
                                                                                         ("LastInITBlock",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (bool \<times>
                                                                                            state)"},
                                                                                          lu,
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var_b"v",
                                                                                          mu(mop(Not,
                                                                                                 var_b"v"),
                                                                                             qTy))),
                                                                                    mu(lf,qTy)),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(And,
                                                                                          bop(Bit,
                                                                                              var_w("registers",16),
                                                                                              ln 15),
                                                                                          var_b"v"),
                                                                                      qTy)))))))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("DECODE_UNPREDICTABLE",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[var("mc",
                                                                              @{typ MachineCode}),
                                                                          ls"LoadMultiple"],
                                                                       @{theory}),mu(lu,qTy)))),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(call
                                                                  ("instruction.Load",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Load.LoadMultiple",
                                                                      @{typ Load},
                                                                      tp[lt,lf,lt,lw(13,4),
                                                                         var_w("registers",16)],
                                                                      @{theory}),@{theory}),qTy)))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,var_b"b'11",
                                          bop(And,var_b"b'10",
                                              bop(And,var_b"b'9",mop(Not,var_b"b'8")))))),
                              mb(call
                                   ("ArchVersion",@{typ "state \<Rightarrow> (nat \<times> state)"},
                                    lu,@{theory}),
                                 close
                                   (var_n"v",
                                    mb(mb(mb(mu(bop(Ge,var_n"v",ln 5),qTy),
                                             close(var_b"v",mu(tp[lw(14,4),var_b"v"],qTy))),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(call
                                                   ("instruction.Hint",@{typ instruction},
                                                    call
                                                      ("Hint.Breakpoint",@{typ Hint},
                                                       mop(Cast w32,
                                                           mop(Cast w8,
                                                               ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                                  var_b"b'4",var_b"b'3",var_b"b'2",
                                                                  var_b"b'1",var_b"b'0"])),@{theory}),
                                                    @{theory}),qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,var_b"b'11",
                                          bop(And,var_b"b'10",
                                              bop(And,var_b"b'9",
                                                  bop(And,var_b"b'8",
                                                      bop(And,mop(Not,var_b"b'3"),
                                                          bop(And,mop(Not,var_b"b'2"),
                                                              bop(And,mop(Not,var_b"b'1"),
                                                                  mop(Not,var_b"b'0")))))))))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mu(tp[var_w("v",4),
                                             mop(Cast w8,
                                                 mop(Cast w4,
                                                     ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4"]))],
                                          qTy),
                                       close
                                         (var("v",@{typ "4 word \<times> 8 word"}),
                                          call
                                            ("DecodeHint",
                                             @{typ
                                             "state \<Rightarrow> (instruction \<times> state)"},
                                             var("v",@{typ "4 word \<times> 8 word"}),@{theory})))))),
                             (bop(And,mop(Not,var_b"b'14"),
                                  bop(And,var_b"b'12",
                                      bop(And,var_b"b'11",
                                          bop(And,var_b"b'10",bop(And,var_b"b'9",var_b"b'8"))))),
                              let'
                                (var_w("mask",4),
                                 mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                 let'
                                   (var_w("firstcond",4),
                                    mop(Cast w4,ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4"]),
                                    mb(call
                                         ("HaveThumb2",
                                          @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_b"v",
                                          mb(mb(mu(tp[lw(14,4),var_b"v"],qTy),
                                                close
                                                  (var("v",@{typ "4 word \<times> bool"}),
                                                   call
                                                     ("Do",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      var("v",@{typ "4 word \<times> bool"}),
                                                      @{theory}))),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(call
                                                         ("BitCount",
                                                          @{typ
                                                          "state \<Rightarrow> (nat \<times> state)"},
                                                          var_w("mask",4),@{theory}),
                                                       close
                                                         (var_n"v",
                                                          mb(mb(mb(mb(mb(mb(mu(eq(var_n"v",ln 1),qTy),
                                                                            close
                                                                              (var_b"v",
                                                                               mu(mop(Not,var_b"v"),
                                                                                  qTy))),
                                                                         close
                                                                           (var_b"v",
                                                                            mu(bop(And,
                                                                                   eq(var_w("firstcond",4),
                                                                                      lw(14,4)),
                                                                                   var_b"v"),qTy))),
                                                                      close
                                                                        (var_b"b",
                                                                         ite(var_b"b",mu(lt,qTy),
                                                                             call
                                                                               ("InITBlock",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (bool \<times>
                                                                                  state)"},lu,
                                                                                @{theory})))),
                                                                   close
                                                                     (var_b"v",
                                                                      mu(bop(Or,
                                                                             eq(var_w("firstcond",4),
                                                                                lw(15,4)),var_b"v"),
                                                                         qTy))),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"IfThen"],@{theory}),
                                                                       mu(lu,qTy)))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mu(call
                                                                     ("instruction.IfThen",
                                                                      @{typ instruction},
                                                                      tp[var_w("firstcond",4),
                                                                         var_w("mask",4)],@{theory}),
                                                                   qTy))))),
                                                    call
                                                      ("Skip",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (instruction \<times> state)"},lu,@{theory}))))))))),
                             (bop(And,var_b"b'14",bop(And,mop(Not,var_b"b'12"),mop(Not,var_b"b'11"))),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mb(call
                                                   ("InITBlock",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close
                                                   (var_b"v",
                                                    mb(mb(ite(var_b"v",
                                                              mb(call
                                                                   ("LastInITBlock",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (bool \<times> state)"},lu,
                                                                    @{theory}),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(mop(Not,var_b"v"),qTy))),
                                                              mu(lf,qTy)),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 call
                                                                   ("DECODE_UNPREDICTABLE",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[var("mc",@{typ MachineCode}),
                                                                       ls"BranchTarget"],@{theory}),
                                                                 mu(lu,qTy)))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.Branch",
                                                                @{typ instruction},
                                                                call
                                                                  ("Branch.BranchTarget",
                                                                   @{typ Branch},
                                                                   mop(SE w32,
                                                                       cc[mop(Cast
                                                                                (Word_Lib.mk_wordT 11),
                                                                              ll[var_b"b'10",
                                                                                 var_b"b'9",
                                                                                 var_b"b'8",
                                                                                 var_b"b'7",
                                                                                 var_b"b'6",
                                                                                 var_b"b'5",
                                                                                 var_b"b'4",
                                                                                 var_b"b'3",
                                                                                 var_b"b'2",
                                                                                 var_b"b'1",
                                                                                 var_b"b'0"]),
                                                                          lw(0,1)]),@{theory}),
                                                                @{theory}),qTy))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory})))))))],
                            call
                              ("UndefinedThumb",
                               @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                               @{theory}))),
                       (bop(And,mop(Not,var_b"b'14"),
                            bop(And,mop(Not,var_b"b'12"),mop(Not,var_b"b'11"))),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mb(call
                                             ("InITBlock",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v",
                                              mb(mu(mop(Not,var_b"v"),qTy),
                                                 close
                                                   (var_b"setflags",
                                                    mu(call
                                                         ("instruction.Data",@{typ instruction},
                                                          call
                                                            ("Data.Move",@{typ Data},
                                                             tp[var_b"setflags",lf,
                                                                mop(Cast w4,
                                                                    mop(Cast (Word_Lib.mk_wordT 3),
                                                                        ll[var_b"b'10",var_b"b'9",
                                                                           var_b"b'8"])),
                                                                mop(Cast (Word_Lib.mk_wordT 12),
                                                                    mop(Cast w8,
                                                                        ll[var_b"b'7",var_b"b'6",
                                                                           var_b"b'5",var_b"b'4",
                                                                           var_b"b'3",var_b"b'2",
                                                                           var_b"b'1",var_b"b'0"]))],
                                                             @{theory}),@{theory}),qTy))))),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))),
                       (bop(And,mop(Not,var_b"b'14"),bop(And,mop(Not,var_b"b'12"),var_b"b'11")),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mu(call
                                             ("instruction.Data",@{typ instruction},
                                              call
                                                ("Data.TestCompareImmediate",@{typ Data},
                                                 tp[lw(2,2),
                                                    mop(Cast w4,
                                                        mop(Cast (Word_Lib.mk_wordT 3),
                                                            ll[var_b"b'10",var_b"b'9",var_b"b'8"])),
                                                    mop(Cast (Word_Lib.mk_wordT 12),
                                                        mop(Cast w8,
                                                            ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                               var_b"b'4",var_b"b'3",var_b"b'2",
                                                               var_b"b'1",var_b"b'0"]))],@{theory}),
                                              @{theory}),qTy),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))),
                       (bop(And,mop(Not,var_b"b'14"),var_b"b'12"),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        let'
                                          (var_w("d",4),
                                           mop(Cast w4,
                                               mop(Cast (Word_Lib.mk_wordT 3),
                                                   ll[var_b"b'10",var_b"b'9",var_b"b'8"])),
                                           mb(call
                                                ("InITBlock",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_b"v",
                                                 mb(mu(mop(Not,var_b"v"),qTy),
                                                    close
                                                      (var_b"setflags",
                                                       mu(call
                                                            ("instruction.Data",@{typ instruction},
                                                             call
                                                               ("Data.ArithLogicImmediate",
                                                                @{typ Data},
                                                                tp[ite(eq(mop(Cast w1,
                                                                              ll[var_b"b'11"]),
                                                                          lw(1,1)),lw(2,4),lw(4,4)),
                                                                   var_b"setflags",var_w("d",4),
                                                                   var_w("d",4),
                                                                   mop(Cast (Word_Lib.mk_wordT 12),
                                                                       mop(Cast w8,
                                                                           ll[var_b"b'7",var_b"b'6",
                                                                              var_b"b'5",var_b"b'4",
                                                                              var_b"b'3",var_b"b'2",
                                                                              var_b"b'1",var_b"b'0"]))],
                                                                @{theory}),@{theory}),qTy)))))),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))),
                       (bop(And,var_b"b'14",mop(Not,var_b"b'12")),
                        let'
                          (var_w("Rt",3),
                           mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                           let'
                             (var_w("Rn",3),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(let'
                                                   (var_b"index",lt,
                                                    let'
                                                      (var_b"add",lt,
                                                       let'
                                                         (var_b"wback",lf,
                                                          let'
                                                            (var("m",@{typ offset1}),
                                                             call
                                                               ("offset1.immediate_form1",
                                                                @{typ offset1},
                                                                mop(Cast w32,
                                                                    cc[mop(Cast
                                                                             (Word_Lib.mk_wordT 5),
                                                                           ll[var_b"b'10",
                                                                              var_b"b'9",var_b"b'8",
                                                                              var_b"b'7",var_b"b'6"]),
                                                                       lw(0,2)]),@{theory}),
                                                             ite(eq(mop(Cast w1,ll[var_b"b'11"]),
                                                                    lw(1,1)),
                                                                 call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadWord",@{typ Load},
                                                                       tp[var_b"add",var_b"index",
                                                                          var_b"wback",
                                                                          mop(Cast w4,var_w("Rt",3)),
                                                                          mop(Cast w4,var_w("Rn",3)),
                                                                          var("m",@{typ offset1})],
                                                                       @{theory}),@{theory}),
                                                                 call
                                                                   ("instruction.Store",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Store.StoreWord",
                                                                       @{typ Store},
                                                                       tp[var_b"add",var_b"index",
                                                                          var_b"wback",
                                                                          mop(Cast w4,var_w("Rt",3)),
                                                                          mop(Cast w4,var_w("Rn",3)),
                                                                          var("m",@{typ offset1})],
                                                                       @{theory}),@{theory})))))),
                                                 qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))))),
                       (bop(And,var_b"b'14",var_b"b'12"),
                        let'
                          (var_w("Rt",3),
                           mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                           let'
                             (var_w("Rn",3),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(let'
                                                   (var_b"index",lt,
                                                    let'
                                                      (var_b"add",lt,
                                                       let'
                                                         (var_b"wback",lf,
                                                          let'
                                                            (var("m",@{typ offset1}),
                                                             call
                                                               ("offset1.immediate_form1",
                                                                @{typ offset1},
                                                                mop(Cast w32,
                                                                    mop(Cast (Word_Lib.mk_wordT 5),
                                                                        ll[var_b"b'10",var_b"b'9",
                                                                           var_b"b'8",var_b"b'7",
                                                                           var_b"b'6"])),@{theory}),
                                                             ite(eq(mop(Cast w1,ll[var_b"b'11"]),
                                                                    lw(1,1)),
                                                                 call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadByte",@{typ Load},
                                                                       tp[lt,var_b"add",
                                                                          var_b"index",var_b"wback",
                                                                          mop(Cast w4,var_w("Rt",3)),
                                                                          mop(Cast w4,var_w("Rn",3)),
                                                                          var("m",@{typ offset1})],
                                                                       @{theory}),@{theory}),
                                                                 call
                                                                   ("instruction.Store",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Store.StoreByte",
                                                                       @{typ Store},
                                                                       tp[var_b"add",var_b"index",
                                                                          var_b"wback",
                                                                          mop(Cast w4,var_w("Rt",3)),
                                                                          mop(Cast w4,var_w("Rn",3)),
                                                                          var("m",@{typ offset1})],
                                                                       @{theory}),@{theory})))))),
                                                 qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory})))))))))],
                      call
                        ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                         lu,@{theory}))),
                 (var_b"b'15",
                  itb([(bop(And,mop(Not,var_b"b'14"),mop(Not,var_b"b'12")),
                        let'
                          (var_w("Rt",3),
                           mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                           let'
                             (var_w("Rn",3),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mu(let'
                                                   (var_b"index",lt,
                                                    let'
                                                      (var_b"add",lt,
                                                       let'
                                                         (var_b"wback",lf,
                                                          let'
                                                            (var("m",@{typ offset1}),
                                                             call
                                                               ("offset1.immediate_form1",
                                                                @{typ offset1},
                                                                mop(Cast w32,
                                                                    cc[mop(Cast
                                                                             (Word_Lib.mk_wordT 5),
                                                                           ll[var_b"b'10",
                                                                              var_b"b'9",var_b"b'8",
                                                                              var_b"b'7",var_b"b'6"]),
                                                                       lw(0,1)]),@{theory}),
                                                             ite(eq(mop(Cast w1,ll[var_b"b'11"]),
                                                                    lw(1,1)),
                                                                 call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadHalf",@{typ Load},
                                                                       tp[lt,var_b"add",
                                                                          var_b"index",var_b"wback",
                                                                          mop(Cast w4,var_w("Rt",3)),
                                                                          mop(Cast w4,var_w("Rn",3)),
                                                                          var("m",@{typ offset1})],
                                                                       @{theory}),@{theory}),
                                                                 call
                                                                   ("instruction.Store",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Store.StoreHalf",
                                                                       @{typ Store},
                                                                       tp[var_b"add",var_b"index",
                                                                          var_b"wback",
                                                                          mop(Cast w4,var_w("Rt",3)),
                                                                          mop(Cast w4,var_w("Rn",3)),
                                                                          var("m",@{typ offset1})],
                                                                       @{theory}),@{theory})))))),
                                                 qTy),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))))),
                       (bop(And,mop(Not,var_b"b'14"),var_b"b'12"),
                        let'
                          (var_w("Rt",3),
                           mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'10",var_b"b'9",var_b"b'8"]),
                           mb(call
                                ("ThumbCondition",
                                 @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                              close
                                (var_w("v",4),
                                 mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                       close
                                         (var("v",@{typ "4 word \<times> bool"}),
                                          call
                                            ("Do",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           mu(let'
                                                (var_b"index",lt,
                                                 let'
                                                   (var_b"add",lt,
                                                    let'
                                                      (var_b"wback",lf,
                                                       let'
                                                         (var("m",@{typ offset1}),
                                                          call
                                                            ("offset1.immediate_form1",
                                                             @{typ offset1},
                                                             mop(Cast w32,
                                                                 cc[mop(Cast w8,
                                                                        ll[var_b"b'7",var_b"b'6",
                                                                           var_b"b'5",var_b"b'4",
                                                                           var_b"b'3",var_b"b'2",
                                                                           var_b"b'1",var_b"b'0"]),
                                                                    lw(0,2)]),@{theory}),
                                                          ite(eq(mop(Cast w1,ll[var_b"b'11"]),
                                                                 lw(1,1)),
                                                              call
                                                                ("instruction.Load",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Load.LoadWord",@{typ Load},
                                                                    tp[var_b"add",var_b"index",
                                                                       var_b"wback",
                                                                       mop(Cast w4,var_w("Rt",3)),
                                                                       lw(13,4),
                                                                       var("m",@{typ offset1})],
                                                                    @{theory}),@{theory}),
                                                              call
                                                                ("instruction.Store",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Store.StoreWord",@{typ Store},
                                                                    tp[var_b"add",var_b"index",
                                                                       var_b"wback",
                                                                       mop(Cast w4,var_w("Rt",3)),
                                                                       lw(13,4),
                                                                       var("m",@{typ offset1})],
                                                                    @{theory}),@{theory})))))),qTy),
                                           call
                                             ("Skip",
                                              @{typ
                                              "state \<Rightarrow> (instruction \<times> state)"},
                                              lu,@{theory})))))))),
                       (bop(And,var_b"b'14",bop(And,mop(Not,var_b"b'12"),mop(Not,var_b"b'11"))),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        let'
                                          (var_w("registers",16),
                                           mop(Cast w16,
                                               mop(Cast w8,
                                                   ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                      var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])),
                                           mb(call
                                                ("BitCount",
                                                 @{typ "state \<Rightarrow> (nat \<times> state)"},
                                                 var_w("registers",16),@{theory}),
                                              close
                                                (var_n"v",
                                                 mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls"StoreMultiple"],@{theory}),
                                                              mu(lu,qTy)))),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       mu(call
                                                            ("instruction.Store",@{typ instruction},
                                                             call
                                                               ("Store.StoreMultiple",@{typ Store},
                                                                tp[lt,lf,lt,
                                                                   mop(Cast w4,
                                                                       mop(Cast
                                                                             (Word_Lib.mk_wordT 3),
                                                                           ll[var_b"b'10",
                                                                              var_b"b'9",var_b"b'8"])),
                                                                   var_w("registers",16)],@{theory}),
                                                             @{theory}),qTy)))))),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))),
                       (bop(And,var_b"b'14",bop(And,mop(Not,var_b"b'12"),var_b"b'11")),
                        let'
                          (var_w("Rn",3),
                           mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'10",var_b"b'9",var_b"b'8"]),
                           mb(call
                                ("ThumbCondition",
                                 @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                              close
                                (var_w("v",4),
                                 mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                       close
                                         (var("v",@{typ "4 word \<times> bool"}),
                                          call
                                            ("Do",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           let'
                                             (var_w("registers",16),
                                              mop(Cast w16,
                                                  mop(Cast w8,
                                                      ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                         var_b"b'4",var_b"b'3",var_b"b'2",
                                                         var_b"b'1",var_b"b'0"])),
                                              mb(call
                                                   ("BitCount",
                                                    @{typ
                                                    "state \<Rightarrow> (nat \<times> state)"},
                                                    var_w("registers",16),@{theory}),
                                                 close
                                                   (var_n"v",
                                                    mb(mb(mu(bop(Lt,var_n"v",ln 1),qTy),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 call
                                                                   ("DECODE_UNPREDICTABLE",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[var("mc",@{typ MachineCode}),
                                                                       ls"LoadMultiple"],@{theory}),
                                                                 mu(lu,qTy)))),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.Load",
                                                                @{typ instruction},
                                                                call
                                                                  ("Load.LoadMultiple",@{typ Load},
                                                                   tp[lt,lf,
                                                                      mop(Not,
                                                                          bop(Bit,
                                                                              var_w("registers",16),
                                                                              mop(Cast HOLogic.natT,
                                                                                  var_w("Rn",3)))),
                                                                      mop(Cast w4,var_w("Rn",3)),
                                                                      var_w("registers",16)],
                                                                   @{theory}),@{theory}),qTy)))))),
                                           call
                                             ("Skip",
                                              @{typ
                                              "state \<Rightarrow> (instruction \<times> state)"},
                                              lu,@{theory})))))))),
                       (bop(And,var_b"b'14",
                            bop(And,var_b"b'12",
                                bop(And,var_b"b'11",
                                    bop(And,var_b"b'10",bop(And,var_b"b'9",mop(Not,var_b"b'8")))))),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mu(call
                                             ("instruction.Undefined",@{typ instruction},
                                              mop(Cast w32,
                                                  mop(Cast w8,
                                                      ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                         var_b"b'4",var_b"b'3",var_b"b'2",
                                                         var_b"b'1",var_b"b'0"])),@{theory}),qTy),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))),
                       (bop(And,var_b"b'14",
                            bop(And,var_b"b'12",
                                bop(And,var_b"b'11",
                                    bop(And,var_b"b'10",bop(And,var_b"b'9",var_b"b'8"))))),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mu(call
                                             ("instruction.System",@{typ instruction},
                                              call
                                                ("System.SupervisorCall",@{typ System},
                                                 mop(Cast w32,
                                                     mop(Cast w8,
                                                         ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                            var_b"b'4",var_b"b'3",var_b"b'2",
                                                            var_b"b'1",var_b"b'0"])),@{theory}),
                                              @{theory}),qTy),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))),
                       (bop(And,var_b"b'14",var_b"b'12"),
                        mb(call
                             ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                              tp[mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),lt],
                              @{theory}),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(call
                                       ("InITBlock",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(ite(var_b"v",
                                               call
                                                 ("DECODE_UNPREDICTABLE",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[var("mc",@{typ MachineCode}),ls"BranchTarget"],
                                                  @{theory}),mu(lu,qTy)),
                                           close
                                             (var_a HOLogic.unitT,
                                              mu(call
                                                   ("instruction.Branch",@{typ instruction},
                                                    call
                                                      ("Branch.BranchTarget",@{typ Branch},
                                                       mop(SE w32,
                                                           cc[mop(Cast w8,
                                                                  ll[var_b"b'7",var_b"b'6",
                                                                     var_b"b'5",var_b"b'4",
                                                                     var_b"b'3",var_b"b'2",
                                                                     var_b"b'1",var_b"b'0"]),lw(0,1)]),
                                                       @{theory}),@{theory}),qTy))))),
                                  call
                                    ("Skip",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory})))))],
                      call
                        ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                         lu,@{theory}))),
                 (bop(And,mop(Not,var_b"b'14"),
                      bop(And,var_b"b'12",bop(And,var_b"b'11",mop(Not,var_b"b'10")))),
                  mb(call
                       ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                        @{theory}),
                     close
                       (var_w("v",4),
                        mb(mb(mu(tp[var_w("v",4),lt],qTy),
                              close
                                (var("v",@{typ "4 word \<times> bool"}),
                                 call
                                   ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(call
                                       ("InITBlock",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mu(mop(Not,var_b"v"),qTy),
                                           close
                                             (var_b"setflags",
                                              mu(call
                                                   ("instruction.Data",@{typ instruction},
                                                    call
                                                      ("Data.Register",@{typ Data},
                                                       tp[ite(eq(mop(Cast w1,ll[var_b"b'9"]),lw(1,1)),
                                                              lw(2,4),lw(4,4)),var_b"setflags",
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'2",var_b"b'1",
                                                                     var_b"b'0"])),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'5",var_b"b'4",
                                                                     var_b"b'3"])),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'8",var_b"b'7",
                                                                     var_b"b'6"])),
                                                          lc("SRType_LSL","SRType",@{theory}),ln 0],
                                                       @{theory}),@{theory}),qTy))))),
                                  call
                                    ("Skip",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))))))),
                 (bop(And,mop(Not,var_b"b'14"),bop(And,var_b"b'12",bop(And,var_b"b'11",var_b"b'10"))),
                  mb(call
                       ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                        @{theory}),
                     close
                       (var_w("v",4),
                        mb(mb(mu(tp[var_w("v",4),lt],qTy),
                              close
                                (var("v",@{typ "4 word \<times> bool"}),
                                 call
                                   ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(call
                                       ("InITBlock",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mu(mop(Not,var_b"v"),qTy),
                                           close
                                             (var_b"setflags",
                                              mu(call
                                                   ("instruction.Data",@{typ instruction},
                                                    call
                                                      ("Data.ArithLogicImmediate",@{typ Data},
                                                       tp[ite(eq(mop(Cast w1,ll[var_b"b'9"]),lw(1,1)),
                                                              lw(2,4),lw(4,4)),var_b"setflags",
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'2",var_b"b'1",
                                                                     var_b"b'0"])),
                                                          mop(Cast w4,
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'5",var_b"b'4",
                                                                     var_b"b'3"])),
                                                          mop(Cast (Word_Lib.mk_wordT 12),
                                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                                  ll[var_b"b'8",var_b"b'7",
                                                                     var_b"b'6"]))],@{theory}),
                                                    @{theory}),qTy))))),
                                  call
                                    ("Skip",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))))))),
                 (mop(Not,var_b"b'14"),
                  mb(call
                       ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                        @{theory}),
                     close
                       (var_w("v",4),
                        mb(mb(mu(tp[var_w("v",4),lt],qTy),
                              close
                                (var("v",@{typ "4 word \<times> bool"}),
                                 call
                                   ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(call
                                       ("InITBlock",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mu(mop(Not,var_b"v"),qTy),
                                           close
                                             (var_b"setflags",
                                              mu(let'
                                                   (tp[var("shift_t",@{typ SRType}),var_n"shift_n"],
                                                    call
                                                      ("DecodeImmShift",
                                                       @{typ "SRType \<times> nat"},
                                                       tp[mop(Cast (Word_Lib.mk_wordT 2),
                                                              ll[var_b"b'12",var_b"b'11"]),
                                                          mop(Cast (Word_Lib.mk_wordT 5),
                                                              ll[var_b"b'10",var_b"b'9",var_b"b'8",
                                                                 var_b"b'7",var_b"b'6"])],@{theory}),
                                                    call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.ShiftImmediate",@{typ Data},
                                                          tp[lf,var_b"setflags",
                                                             mop(Cast w4,
                                                                 mop(Cast (Word_Lib.mk_wordT 3),
                                                                     ll[var_b"b'2",var_b"b'1",
                                                                        var_b"b'0"])),
                                                             mop(Cast w4,
                                                                 mop(Cast (Word_Lib.mk_wordT 3),
                                                                     ll[var_b"b'5",var_b"b'4",
                                                                        var_b"b'3"])),
                                                             var("shift_t",@{typ SRType}),
                                                             var_n"shift_n"],@{theory}),@{theory})),
                                                 qTy))))),
                                  call
                                    ("Skip",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))))))),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),mop(Not,var_b"b'10")))),
                  let'
                    (var_w("Ry",3),
                     mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                     let'
                       (var_w("Rx",3),
                        mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                        let'
                          (var_w("opc",4),
                           mop(Cast w4,ll[var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"]),
                           mb(call
                                ("ThumbCondition",
                                 @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                              close
                                (var_w("v",4),
                                 mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                       close
                                         (var("v",@{typ "4 word \<times> bool"}),
                                          call
                                            ("Do",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           itb([(eq(var_w("opc",4),lw(0,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.Register",
                                                                         @{typ Data},
                                                                         tp[var_w("opc",4),
                                                                            var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3)),
                                                                            lc("SRType_LSL",
                                                                               "SRType",@{theory}),
                                                                            ln 0],@{theory}),
                                                                      @{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(1,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.Register",
                                                                         @{typ Data},
                                                                         tp[var_w("opc",4),
                                                                            var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3)),
                                                                            lc("SRType_LSL",
                                                                               "SRType",@{theory}),
                                                                            ln 0],@{theory}),
                                                                      @{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(5,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.Register",
                                                                         @{typ Data},
                                                                         tp[var_w("opc",4),
                                                                            var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3)),
                                                                            lc("SRType_LSL",
                                                                               "SRType",@{theory}),
                                                                            ln 0],@{theory}),
                                                                      @{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(6,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.Register",
                                                                         @{typ Data},
                                                                         tp[var_w("opc",4),
                                                                            var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3)),
                                                                            lc("SRType_LSL",
                                                                               "SRType",@{theory}),
                                                                            ln 0],@{theory}),
                                                                      @{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(12,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.Register",
                                                                         @{typ Data},
                                                                         tp[var_w("opc",4),
                                                                            var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3)),
                                                                            lc("SRType_LSL",
                                                                               "SRType",@{theory}),
                                                                            ln 0],@{theory}),
                                                                      @{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(14,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.Register",
                                                                         @{typ Data},
                                                                         tp[var_w("opc",4),
                                                                            var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3)),
                                                                            lc("SRType_LSL",
                                                                               "SRType",@{theory}),
                                                                            ln 0],@{theory}),
                                                                      @{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(2,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.ShiftRegister",
                                                                         @{typ Data},
                                                                         tp[lf,var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            call
                                                                              ("DecodeRegShift",
                                                                               @{typ SRType},
                                                                               mop(Cast
                                                                                     (Word_Lib.mk_wordT 2),
                                                                                   bop(Sub,
                                                                                       var_w("opc",4),
                                                                                       lw(2,4))),
                                                                               @{theory}),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3))],
                                                                         @{theory}),@{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(3,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.ShiftRegister",
                                                                         @{typ Data},
                                                                         tp[lf,var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            call
                                                                              ("DecodeRegShift",
                                                                               @{typ SRType},
                                                                               mop(Cast
                                                                                     (Word_Lib.mk_wordT 2),
                                                                                   bop(Sub,
                                                                                       var_w("opc",4),
                                                                                       lw(2,4))),
                                                                               @{theory}),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3))],
                                                                         @{theory}),@{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(4,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.ShiftRegister",
                                                                         @{typ Data},
                                                                         tp[lf,var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            call
                                                                              ("DecodeRegShift",
                                                                               @{typ SRType},
                                                                               mop(Cast
                                                                                     (Word_Lib.mk_wordT 2),
                                                                                   bop(Sub,
                                                                                       var_w("opc",4),
                                                                                       lw(2,4))),
                                                                               @{theory}),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3))],
                                                                         @{theory}),@{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(7,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mu(mop(Not,var_b"v"),qTy),
                                                             close
                                                               (var_b"setflags",
                                                                mu(call
                                                                     ("instruction.Data",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Data.ShiftRegister",
                                                                         @{typ Data},
                                                                         tp[lf,var_b"setflags",
                                                                            var_w("d",4),
                                                                            var_w("d",4),
                                                                            lc("SRType_ROR",
                                                                               "SRType",@{theory}),
                                                                            mop(Cast w4,
                                                                                var_w("Rx",3))],
                                                                         @{theory}),@{theory}),qTy))))))),
                                                (eq(var_w("opc",4),lw(8,4)),
                                                 mu(call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.TestCompareRegister",@{typ Data},
                                                          tp[ex(var_w("opc",4),ln 1,ln 0,
                                                                (Word_Lib.mk_wordT 2)),
                                                             mop(Cast w4,var_w("Ry",3)),
                                                             mop(Cast w4,var_w("Rx",3)),
                                                             lc("SRType_LSL","SRType",@{theory}),
                                                             ln 0],@{theory}),@{theory}),qTy)),
                                                (eq(var_w("opc",4),lw(10,4)),
                                                 mu(call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.TestCompareRegister",@{typ Data},
                                                          tp[ex(var_w("opc",4),ln 1,ln 0,
                                                                (Word_Lib.mk_wordT 2)),
                                                             mop(Cast w4,var_w("Ry",3)),
                                                             mop(Cast w4,var_w("Rx",3)),
                                                             lc("SRType_LSL","SRType",@{theory}),
                                                             ln 0],@{theory}),@{theory}),qTy)),
                                                (eq(var_w("opc",4),lw(11,4)),
                                                 mu(call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.TestCompareRegister",@{typ Data},
                                                          tp[ex(var_w("opc",4),ln 1,ln 0,
                                                                (Word_Lib.mk_wordT 2)),
                                                             mop(Cast w4,var_w("Ry",3)),
                                                             mop(Cast w4,var_w("Rx",3)),
                                                             lc("SRType_LSL","SRType",@{theory}),
                                                             ln 0],@{theory}),@{theory}),qTy)),
                                                (eq(var_w("opc",4),lw(9,4)),
                                                 mb(call
                                                      ("InITBlock",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_b"v",
                                                       mb(mu(mop(Not,var_b"v"),qTy),
                                                          close
                                                            (var_b"setflags",
                                                             mu(call
                                                                  ("instruction.Data",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Data.ArithLogicImmediate",
                                                                      @{typ Data},
                                                                      tp[lw(3,4),var_b"setflags",
                                                                         mop(Cast w4,var_w("Ry",3)),
                                                                         mop(Cast w4,var_w("Rx",3)),
                                                                         lw(0,12)],@{theory}),
                                                                   @{theory}),qTy)))))),
                                                (eq(var_w("opc",4),lw(13,4)),
                                                 let'
                                                   (var_w("d",4),mop(Cast w4,var_w("Ry",3)),
                                                    let'
                                                      (var_w("n",4),mop(Cast w4,var_w("Rx",3)),
                                                       mb(call
                                                            ("ArchVersion",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (nat \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_n"v",
                                                             mb(mb(mb(mu(bop(Lt,var_n"v",ln 6),qTy),
                                                                      close
                                                                        (var_b"b",
                                                                         mu(bop(And,var_b"b",
                                                                                eq(var_w("d",4),
                                                                                   var_w("n",4))),
                                                                            qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("DECODE_UNPREDICTABLE",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[var("mc",
                                                                                    @{typ MachineCode}),
                                                                                ls"Multiply"],
                                                                             @{theory}),mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mb(call
                                                                        ("InITBlock",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (bool \<times> state)"},
                                                                         lu,@{theory}),
                                                                      close
                                                                        (var_b"v",
                                                                         mb(mu(mop(Not,var_b"v"),qTy),
                                                                            close
                                                                              (var_b"setflags",
                                                                               mu(call
                                                                                    ("instruction.Multiply",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Multiply.Multiply32",
                                                                                        @{typ Multiply},
                                                                                        tp[var_b"setflags",
                                                                                           var_w("d",4),
                                                                                           var_w("n",4),
                                                                                           var_w("d",4)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))))))))))),
                                                (eq(var_w("opc",4),lw(15,4)),
                                                 mb(call
                                                      ("InITBlock",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_b"v",
                                                       mb(mu(mop(Not,var_b"v"),qTy),
                                                          close
                                                            (var_b"setflags",
                                                             mu(call
                                                                  ("instruction.Data",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Data.ShiftImmediate",
                                                                      @{typ Data},
                                                                      tp[lt,var_b"setflags",
                                                                         mop(Cast w4,var_w("Ry",3)),
                                                                         mop(Cast w4,var_w("Rx",3)),
                                                                         lc("SRType_LSL","SRType",
                                                                            @{theory}),ln 0],
                                                                      @{theory}),@{theory}),qTy))))))],
                                               lx(@{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"})),
                                           call
                                             ("Skip",
                                              @{typ
                                              "state \<Rightarrow> (instruction \<times> state)"},
                                              lu,@{theory})))))))))),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),
                              bop(And,var_b"b'10",bop(And,mop(Not,var_b"b'9"),mop(Not,var_b"b'8")))))),
                  let'
                    (var_w("Rm",4),mop(Cast w4,ll[var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3"]),
                     let'
                       (var_w("DN",1),mop(Cast w1,ll[var_b"b'7"]),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mb(call
                                         ("HaveThumb2",
                                          @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_b"v0",
                                          mb(mb(mu(bop(Or,eq(var_w("DN",1),lw(1,1)),var_b"v0"),qTy),
                                                close
                                                  (var_b"v",
                                                   mu(bop(Or,mop(Msb,var_w("Rm",4)),var_b"v"),qTy))),
                                             close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        let'
                                          (var_w("d",4),
                                           cc[var_w("DN",1),
                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                  ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                                           mb(call
                                                ("InITBlock",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_b"v",
                                                 mb(mb(mb(mb(ite(var_b"v",
                                                                 mb(call
                                                                      ("LastInITBlock",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (bool \<times> state)"},lu,
                                                                       @{theory}),
                                                                    close
                                                                      (var_b"v",
                                                                       mu(mop(Not,var_b"v"),qTy))),
                                                                 mu(lf,qTy)),
                                                             close
                                                               (var_b"v",
                                                                mu(bop(And,
                                                                       eq(var_w("d",4),lw(15,4)),
                                                                       var_b"v"),qTy))),
                                                          close
                                                            (var_b"v",
                                                             mu(bop(Or,
                                                                    bop(And,
                                                                        eq(var_w("d",4),lw(15,4)),
                                                                        eq(var_w("Rm",4),lw(15,4))),
                                                                    var_b"v"),qTy))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls"ADD"],@{theory}),mu(lu,qTy)))),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       mu(call
                                                            ("instruction.Data",@{typ instruction},
                                                             call
                                                               ("Data.Register",@{typ Data},
                                                                tp[lw(4,4),lf,var_w("d",4),
                                                                   var_w("d",4),var_w("Rm",4),
                                                                   lc("SRType_LSL","SRType",
                                                                      @{theory}),ln 0],@{theory}),
                                                             @{theory}),qTy)))))),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))))),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),
                              bop(And,var_b"b'10",
                                  bop(And,mop(Not,var_b"b'9"),
                                      bop(And,var_b"b'8",
                                          bop(And,mop(Not,var_b"b'7"),mop(Not,var_b"b'6")))))))),
                  call
                    ("raise'exception",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                     call
                       ("exception.UNPREDICTABLE",@{typ exception},ls"Thumb: 010001 0100 _",
                        @{theory}),@{theory})),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),
                              bop(And,var_b"b'10",bop(And,mop(Not,var_b"b'9"),var_b"b'8"))))),
                  let'
                    (var_w("Rm",4),mop(Cast w4,ll[var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3"]),
                     mb(call
                          ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                           @{theory}),
                        close
                          (var_w("v",4),
                           mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                 close
                                   (var("v",@{typ "4 word \<times> bool"}),
                                    call
                                      ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                       var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                              close
                                (var_b"b",
                                 ite(var_b"b",
                                     let'
                                       (var_w("n",4),
                                        cc[mop(Cast w1,ll[var_b"b'7"]),
                                           mop(Cast (Word_Lib.mk_wordT 3),
                                               ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                                        mb(ite(bop(Or,
                                                   bop(And,bop(Ult,var_w("n",4),lw(8,4)),
                                                       bop(Ult,var_w("Rm",4),lw(8,4))),
                                                   bop(Or,eq(var_w("n",4),lw(15,4)),
                                                       eq(var_w("Rm",4),lw(15,4)))),
                                               call
                                                 ("DECODE_UNPREDICTABLE",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[var("mc",@{typ MachineCode}),ls"CMP"],@{theory}),
                                               mu(lu,qTy)),
                                           close
                                             (var_a HOLogic.unitT,
                                              mu(call
                                                   ("instruction.Data",@{typ instruction},
                                                    call
                                                      ("Data.TestCompareRegister",@{typ Data},
                                                       tp[lw(2,2),var_w("n",4),var_w("Rm",4),
                                                          lc("SRType_LSL","SRType",@{theory}),ln 0],
                                                       @{theory}),@{theory}),qTy)))),
                                     call
                                       ("Skip",
                                        @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                        lu,@{theory})))))))),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),
                              bop(And,var_b"b'10",bop(And,var_b"b'9",mop(Not,var_b"b'8")))))),
                  let'
                    (var_w("Rm",4),mop(Cast w4,ll[var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3"]),
                     let'
                       (var_w("D",1),mop(Cast w1,ll[var_b"b'7"]),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mb(call
                                         ("ArchVersion",
                                          @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_n"v0",
                                          mb(mb(mb(mu(bop(Ge,var_n"v0",ln 6),qTy),
                                                   close
                                                     (var_b"v",
                                                      mu(bop(Or,eq(var_w("D",1),lw(1,1)),var_b"v"),
                                                         qTy))),
                                                close
                                                  (var_b"v",
                                                   mu(bop(Or,mop(Msb,var_w("Rm",4)),var_b"v"),qTy))),
                                             close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        let'
                                          (var_w("d",4),
                                           cc[var_w("D",1),
                                              mop(Cast (Word_Lib.mk_wordT 3),
                                                  ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                                           mb(call
                                                ("InITBlock",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close
                                                (var_b"v",
                                                 mb(mb(mb(ite(var_b"v",
                                                              mb(call
                                                                   ("LastInITBlock",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (bool \<times> state)"},lu,
                                                                    @{theory}),
                                                                 close
                                                                   (var_b"v",
                                                                    mu(mop(Not,var_b"v"),qTy))),
                                                              mu(lf,qTy)),
                                                          close
                                                            (var_b"v",
                                                             mu(bop(And,eq(var_w("d",4),lw(15,4)),
                                                                    var_b"v"),qTy))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls"MOV"],@{theory}),mu(lu,qTy)))),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       mu(call
                                                            ("instruction.Data",@{typ instruction},
                                                             call
                                                               ("Data.ShiftImmediate",@{typ Data},
                                                                tp[lf,lf,var_w("d",4),var_w("Rm",4),
                                                                   lc("SRType_LSL","SRType",
                                                                      @{theory}),ln 0],@{theory}),
                                                             @{theory}),qTy)))))),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))))))))),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),
                              bop(And,var_b"b'10",
                                  bop(And,var_b"b'9",bop(And,var_b"b'8",mop(Not,var_b"b'7"))))))),
                  mb(call
                       ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                        @{theory}),
                     close
                       (var_w("v",4),
                        mb(mb(mu(tp[var_w("v",4),lt],qTy),
                              close
                                (var("v",@{typ "4 word \<times> bool"}),
                                 call
                                   ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(call
                                       ("InITBlock",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_b"v",
                                        mb(mb(ite(var_b"v",
                                                  mb(call
                                                       ("LastInITBlock",
                                                        @{typ
                                                        "state \<Rightarrow> (bool \<times> state)"},
                                                        lu,@{theory}),
                                                     close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                  mu(lf,qTy)),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     call
                                                       ("DECODE_UNPREDICTABLE",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        tp[var("mc",@{typ MachineCode}),
                                                           ls"BranchExchange"],@{theory}),mu(lu,qTy)))),
                                           close
                                             (var_a HOLogic.unitT,
                                              mu(call
                                                   ("instruction.Branch",@{typ instruction},
                                                    call
                                                      ("Branch.BranchExchange",@{typ Branch},
                                                       mop(Cast w4,
                                                           ll[var_b"b'6",var_b"b'5",var_b"b'4",
                                                              var_b"b'3"]),@{theory}),@{theory}),qTy))))),
                                  call
                                    ("Skip",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))))))),
                 (bop(And,var_b"b'14",
                      bop(And,mop(Not,var_b"b'12"),
                          bop(And,mop(Not,var_b"b'11"),
                              bop(And,var_b"b'10",bop(And,var_b"b'9",bop(And,var_b"b'8",var_b"b'7")))))),
                  let'
                    (var_w("Rm",4),mop(Cast w4,ll[var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3"]),
                     mb(call
                          ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                           @{theory}),
                        close
                          (var_w("v",4),
                           mb(mb(mb(call
                                      ("ArchVersion",
                                       @{typ "state \<Rightarrow> (nat \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_n"v0",
                                       mb(mu(bop(Ge,var_n"v0",ln 5),qTy),
                                          close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                 close
                                   (var("v",@{typ "4 word \<times> bool"}),
                                    call
                                      ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                       var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                              close
                                (var_b"b",
                                 ite(var_b"b",
                                     mb(call
                                          ("InITBlock",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_b"v",
                                           mb(mb(mb(ite(var_b"v",
                                                        mb(call
                                                             ("LastInITBlock",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (bool \<times> state)"},lu,@{theory}),
                                                           close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                        mu(lf,qTy)),
                                                    close
                                                      (var_b"v",
                                                       mu(bop(Or,eq(var_w("Rm",4),lw(15,4)),var_b"v"),
                                                          qTy))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        call
                                                          ("DECODE_UNPREDICTABLE",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           tp[var("mc",@{typ MachineCode}),
                                                              ls"BranchLinkExchangeRegister"],
                                                           @{theory}),mu(lu,qTy)))),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mu(call
                                                      ("instruction.Branch",@{typ instruction},
                                                       call
                                                         ("Branch.BranchLinkExchangeRegister",
                                                          @{typ Branch},var_w("Rm",4),@{theory}),
                                                       @{theory}),qTy))))),
                                     call
                                       ("Skip",
                                        @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                        lu,@{theory})))))))),
                 (bop(And,var_b"b'14",bop(And,mop(Not,var_b"b'12"),var_b"b'11")),
                  mb(call
                       ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                        @{theory}),
                     close
                       (var_w("v",4),
                        mb(mb(mu(tp[var_w("v",4),lt],qTy),
                              close
                                (var("v",@{typ "4 word \<times> bool"}),
                                 call
                                   ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mu(call
                                       ("instruction.Load",@{typ instruction},
                                        call
                                          ("Load.LoadLiteral",@{typ Load},
                                           tp[lt,
                                              mop(Cast w4,
                                                  mop(Cast (Word_Lib.mk_wordT 3),
                                                      ll[var_b"b'10",var_b"b'9",var_b"b'8"])),
                                              mop(Cast w32,
                                                  cc[mop(Cast w8,
                                                         ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                            var_b"b'4",var_b"b'3",var_b"b'2",
                                                            var_b"b'1",var_b"b'0"]),lw(0,2)])],
                                           @{theory}),@{theory}),qTy),
                                  call
                                    ("Skip",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))))))),
                 (bop(And,var_b"b'14",var_b"b'12"),
                  let'
                    (var_w("Rt",3),
                     mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                     let'
                       (var_w("Rn",3),
                        mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                        mb(call
                             ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                              lu,@{theory}),
                           close
                             (var_w("v",4),
                              mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                    close
                                      (var("v",@{typ "4 word \<times> bool"}),
                                       call
                                         ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                          var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mu(let'
                                             (var_b"index",lt,
                                              let'
                                                (var_b"add",lt,
                                                 let'
                                                   (var_b"wback",lf,
                                                    let'
                                                      (var("m",@{typ offset1}),
                                                       call
                                                         ("offset1.register_form1",@{typ offset1},
                                                          tp[mop(Cast w4,
                                                                 mop(Cast (Word_Lib.mk_wordT 3),
                                                                     ll[var_b"b'8",var_b"b'7",
                                                                        var_b"b'6"])),
                                                             lc("SRType_LSL","SRType",@{theory}),
                                                             ln 0],@{theory}),
                                                       cs(mop(Cast (Word_Lib.mk_wordT 3),
                                                              ll[var_b"b'11",var_b"b'10",var_b"b'9"]),
                                                          [(var_w("v",3),
                                                            itb([(eq(var_w("v",3),lw(0,3)),
                                                                  call
                                                                    ("instruction.Store",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Store.StoreWord",
                                                                        @{typ Store},
                                                                        tp[var_b"add",var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(1,3)),
                                                                  call
                                                                    ("instruction.Store",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Store.StoreHalf",
                                                                        @{typ Store},
                                                                        tp[var_b"add",var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(2,3)),
                                                                  call
                                                                    ("instruction.Store",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Store.StoreByte",
                                                                        @{typ Store},
                                                                        tp[var_b"add",var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(3,3)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadByte",@{typ Load},
                                                                        tp[lf,var_b"add",
                                                                           var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(4,3)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadWord",@{typ Load},
                                                                        tp[var_b"add",var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(5,3)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadHalf",@{typ Load},
                                                                        tp[lt,var_b"add",
                                                                           var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(6,3)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadByte",@{typ Load},
                                                                        tp[lt,var_b"add",
                                                                           var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory})),
                                                                 (eq(var_w("v",3),lw(7,3)),
                                                                  call
                                                                    ("instruction.Load",
                                                                     @{typ instruction},
                                                                     call
                                                                       ("Load.LoadHalf",@{typ Load},
                                                                        tp[lf,var_b"add",
                                                                           var_b"index",
                                                                           var_b"wback",
                                                                           mop(Cast w4,var_w("Rt",3)),
                                                                           mop(Cast w4,var_w("Rn",3)),
                                                                           var("m",@{typ offset1})],
                                                                        @{theory}),@{theory}))],
                                                                lx @{typ instruction}))],@{context}))))),
                                           qTy),
                                        call
                                          ("Skip",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory})))))))))],
                call
                  ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                   @{theory}))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DecodeThumbEE",
   close
     (var_w("h",16),
      let'
        (var("mc",@{typ MachineCode}),
         call("MachineCode.Thumb",@{typ MachineCode},var_w("h",16),@{theory}),
         let'
           (tp[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",var_b"b'9",
               var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
               var_b"b'1",var_b"b'0"],
            call
              ("boolify'16",
               @{typ
               "bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times>
                bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
               var_w("h",16),@{theory}),
            ite(bop(And,var_b"b'14",mop(Not,var_b"b'13")),
                itb([(bop(And,mop(Not,var_b"b'15"),var_b"b'12"),
                      let'
                        (var_w("Rt",3),
                         mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                         let'
                           (var_w("Rn",3),
                            mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'5",var_b"b'4",var_b"b'3"]),
                            mb(call
                                 ("ThumbCondition",
                                  @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                               close
                                 (var_w("v",4),
                                  mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            let'
                                              (var_b"index",lt,
                                               let'
                                                 (var_b"add",lt,
                                                  let'
                                                    (var_b"wback",lf,
                                                     let'
                                                       (var_w("m",4),
                                                        mop(Cast w4,
                                                            mop(Cast (Word_Lib.mk_wordT 3),
                                                                ll[var_b"b'8",var_b"b'7",var_b"b'6"])),
                                                        let'
                                                          (var("m1",@{typ offset1}),
                                                           call
                                                             ("offset1.register_form1",
                                                              @{typ offset1},
                                                              tp[var_w("m",4),
                                                                 lc("SRType_LSL","SRType",@{theory}),
                                                                 ln 1],@{theory}),
                                                           let'
                                                             (var("m2",@{typ offset1}),
                                                              call
                                                                ("offset1.register_form1",
                                                                 @{typ offset1},
                                                                 tp[var_w("m",4),
                                                                    lc("SRType_LSL","SRType",
                                                                       @{theory}),ln 2],@{theory}),
                                                              cs(mop(Cast (Word_Lib.mk_wordT 3),
                                                                     ll[var_b"b'11",var_b"b'10",
                                                                        var_b"b'9"]),
                                                                 [(var_w("v",3),
                                                                   itb([(eq(var_w("v",3),lw(0,3)),
                                                                         mu(call
                                                                              ("instruction.Store",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Store.StoreWord",
                                                                                  @{typ Store},
                                                                                  tp[var_b"add",
                                                                                     var_b"index",
                                                                                     var_b"wback",
                                                                                     mop(Cast w4,
                                                                                         var_w("Rt",3)),
                                                                                     mop(Cast w4,
                                                                                         var_w("Rn",3)),
                                                                                     var("m2",
                                                                                         @{typ offset1})],
                                                                                  @{theory}),
                                                                               @{theory}),qTy)),
                                                                        (eq(var_w("v",3),lw(1,3)),
                                                                         mu(call
                                                                              ("instruction.Store",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Store.StoreHalf",
                                                                                  @{typ Store},
                                                                                  tp[var_b"add",
                                                                                     var_b"index",
                                                                                     var_b"wback",
                                                                                     mop(Cast w4,
                                                                                         var_w("Rt",3)),
                                                                                     mop(Cast w4,
                                                                                         var_w("Rn",3)),
                                                                                     var("m1",
                                                                                         @{typ offset1})],
                                                                                  @{theory}),
                                                                               @{theory}),qTy)),
                                                                        (eq(var_w("v",3),lw(4,3)),
                                                                         mu(call
                                                                              ("instruction.Load",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Load.LoadWord",
                                                                                  @{typ Load},
                                                                                  tp[var_b"add",
                                                                                     var_b"index",
                                                                                     var_b"wback",
                                                                                     mop(Cast w4,
                                                                                         var_w("Rt",3)),
                                                                                     mop(Cast w4,
                                                                                         var_w("Rn",3)),
                                                                                     var("m2",
                                                                                         @{typ offset1})],
                                                                                  @{theory}),
                                                                               @{theory}),qTy)),
                                                                        (eq(var_w("v",3),lw(5,3)),
                                                                         mu(call
                                                                              ("instruction.Load",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Load.LoadHalf",
                                                                                  @{typ Load},
                                                                                  tp[lt,var_b"add",
                                                                                     var_b"index",
                                                                                     var_b"wback",
                                                                                     mop(Cast w4,
                                                                                         var_w("Rt",3)),
                                                                                     mop(Cast w4,
                                                                                         var_w("Rn",3)),
                                                                                     var("m1",
                                                                                         @{typ offset1})],
                                                                                  @{theory}),
                                                                               @{theory}),qTy)),
                                                                        (eq(var_w("v",3),lw(7,3)),
                                                                         mu(call
                                                                              ("instruction.Load",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Load.LoadHalf",
                                                                                  @{typ Load},
                                                                                  tp[lf,var_b"add",
                                                                                     var_b"index",
                                                                                     var_b"wback",
                                                                                     mop(Cast w4,
                                                                                         var_w("Rt",3)),
                                                                                     mop(Cast w4,
                                                                                         var_w("Rn",3)),
                                                                                     var("m1",
                                                                                         @{typ offset1})],
                                                                                  @{theory}),
                                                                               @{theory}),qTy))],
                                                                       call
                                                                         ("DecodeThumb",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (instruction \<times>
                                                                            state)"},var_w("h",16),
                                                                          @{theory})))],@{context}))))))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),
                              bop(And,mop(Not,var_b"b'11"),
                                  bop(And,mop(Not,var_b"b'10"),
                                      bop(And,mop(Not,var_b"b'9"),mop(Not,var_b"b'8")))))),
                      mb(call
                           ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                            lu,@{theory}),
                         close
                           (var_w("v",4),
                            mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                  close
                                    (var("v",@{typ "4 word \<times> bool"}),
                                     call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(call
                                           ("InITBlock",
                                            @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                            @{theory}),
                                         close
                                           (var_b"v",
                                            mb(mb(ite(var_b"v",
                                                      mb(call
                                                           ("LastInITBlock",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},lu,@{theory}),
                                                         close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                      mu(lf,qTy)),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"HandlerBranchParameter"],@{theory}),
                                                         mu(lu,qTy)))),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.Branch",@{typ instruction},
                                                        call
                                                          ("Branch.HandlerBranchParameter",
                                                           @{typ Branch},
                                                           tp[mop(Cast w32,
                                                                  mop(Cast (Word_Lib.mk_wordT 3),
                                                                      ll[var_b"b'7",var_b"b'6",
                                                                         var_b"b'5"])),
                                                              mop(Cast w32,
                                                                  cc[mop(Cast (Word_Lib.mk_wordT 5),
                                                                         ll[var_b"b'4",var_b"b'3",
                                                                            var_b"b'2",var_b"b'1",
                                                                            var_b"b'0"]),lw(0,5)])],
                                                           @{theory}),@{theory}),qTy))))),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory}))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),
                              bop(And,mop(Not,var_b"b'11"),
                                  bop(And,mop(Not,var_b"b'10"),
                                      bop(And,mop(Not,var_b"b'9"),var_b"b'8"))))),
                      mu(call("instruction.Undefined",@{typ instruction},lw(0,32),@{theory}),qTy)),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),
                              bop(And,mop(Not,var_b"b'11"),bop(And,mop(Not,var_b"b'10"),var_b"b'9")))),
                      mb(call
                           ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                            lu,@{theory}),
                         close
                           (var_w("v",4),
                            mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                  close
                                    (var("v",@{typ "4 word \<times> bool"}),
                                     call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(call
                                           ("InITBlock",
                                            @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                            @{theory}),
                                         close
                                           (var_b"v",
                                            mb(mb(ite(var_b"v",
                                                      mb(call
                                                           ("LastInITBlock",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},lu,@{theory}),
                                                         close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                      mu(lf,qTy)),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"HandlerBranchLink"],@{theory}),
                                                         mu(lu,qTy)))),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.Branch",@{typ instruction},
                                                        call
                                                          ("Branch.HandlerBranchLink",@{typ Branch},
                                                           tp[eq(mop(Cast w1,ll[var_b"b'8"]),lw(1,1)),
                                                              mop(Cast w32,
                                                                  cc[mop(Cast w8,
                                                                         ll[var_b"b'7",var_b"b'6",
                                                                            var_b"b'5",var_b"b'4",
                                                                            var_b"b'3",var_b"b'2",
                                                                            var_b"b'1",var_b"b'0"]),
                                                                     lw(0,5)])],@{theory}),@{theory}),
                                                     qTy))))),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory}))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),bop(And,mop(Not,var_b"b'11"),var_b"b'10"))),
                      mb(call
                           ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                            lu,@{theory}),
                         close
                           (var_w("v",4),
                            mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                  close
                                    (var("v",@{typ "4 word \<times> bool"}),
                                     call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mb(call
                                           ("InITBlock",
                                            @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                            @{theory}),
                                         close
                                           (var_b"v",
                                            mb(mb(ite(var_b"v",
                                                      mb(call
                                                           ("LastInITBlock",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},lu,@{theory}),
                                                         close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                      mu(lf,qTy)),
                                                  close
                                                    (var_b"b",
                                                     ite(var_b"b",
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"HandlerBranchLinkParameter"],
                                                            @{theory}),mu(lu,qTy)))),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.Branch",@{typ instruction},
                                                        call
                                                          ("Branch.HandlerBranchLinkParameter",
                                                           @{typ Branch},
                                                           tp[mop(Cast w32,
                                                                  mop(Cast (Word_Lib.mk_wordT 5),
                                                                      ll[var_b"b'9",var_b"b'8",
                                                                         var_b"b'7",var_b"b'6",
                                                                         var_b"b'5"])),
                                                              mop(Cast w32,
                                                                  cc[mop(Cast (Word_Lib.mk_wordT 5),
                                                                         ll[var_b"b'4",var_b"b'3",
                                                                            var_b"b'2",var_b"b'1",
                                                                            var_b"b'0"]),lw(0,5)])],
                                                           @{theory}),@{theory}),qTy))))),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory}))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),
                              bop(And,var_b"b'11",bop(And,mop(Not,var_b"b'10"),mop(Not,var_b"b'9"))))),
                      mb(call
                           ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                            lu,@{theory}),
                         close
                           (var_w("v",4),
                            mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                  close
                                    (var("v",@{typ "4 word \<times> bool"}),
                                     call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mu(call
                                           ("instruction.Load",@{typ instruction},
                                            call
                                              ("Load.LoadWord",@{typ Load},
                                               tp[lf,lt,lf,
                                                  mop(Cast w4,
                                                      mop(Cast (Word_Lib.mk_wordT 3),
                                                          ll[var_b"b'2",var_b"b'1",var_b"b'0"])),
                                                  mop(Cast w4,
                                                      mop(Cast (Word_Lib.mk_wordT 3),
                                                          ll[var_b"b'5",var_b"b'4",var_b"b'3"])),
                                                  call
                                                    ("offset1.immediate_form1",@{typ offset1},
                                                     mop(Cast w32,
                                                         cc[mop(Cast (Word_Lib.mk_wordT 3),
                                                                ll[var_b"b'8",var_b"b'7",var_b"b'6"]),
                                                            lw(0,2)]),@{theory})],@{theory}),
                                            @{theory}),qTy),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory}))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),
                              bop(And,var_b"b'11",
                                  bop(And,mop(Not,var_b"b'10"),
                                      bop(And,var_b"b'9",mop(Not,var_b"b'8")))))),
                      let'
                        (var_w("Rm",4),mop(Cast w4,ll[var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3"]),
                         mb(call
                              ("ThumbCondition",
                               @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                            close
                              (var_w("v",4),
                               mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         let'
                                           (var_w("n",4),
                                            cc[mop(Cast w1,ll[var_b"b'7"]),
                                               mop(Cast (Word_Lib.mk_wordT 3),
                                                   ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                                            mb(ite(bop(Or,eq(var_w("n",4),lw(15,4)),
                                                       bop(In,var_w("Rm",4),sl[lw(13,4),lw(15,4)])),
                                                   call
                                                     ("DECODE_UNPREDICTABLE",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      tp[var("mc",@{typ MachineCode}),ls"CheckArray"],
                                                      @{theory}),mu(lu,qTy)),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mu(call
                                                       ("instruction.Branch",@{typ instruction},
                                                        call
                                                          ("Branch.CheckArray",@{typ Branch},
                                                           tp[var_w("Rm",4),var_w("n",4)],@{theory}),
                                                        @{theory}),qTy)))),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory})))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),
                              bop(And,var_b"b'11",
                                  bop(And,mop(Not,var_b"b'10"),bop(And,var_b"b'9",var_b"b'8"))))),
                      mb(call
                           ("ThumbCondition",@{typ "state \<Rightarrow> (4 word \<times> state)"},
                            lu,@{theory}),
                         close
                           (var_w("v",4),
                            mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                  close
                                    (var("v",@{typ "4 word \<times> bool"}),
                                     call
                                       ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      mu(call
                                           ("instruction.Load",@{typ instruction},
                                            call
                                              ("Load.LoadWord",@{typ Load},
                                               tp[lt,lt,lf,
                                                  mop(Cast w4,
                                                      mop(Cast (Word_Lib.mk_wordT 3),
                                                          ll[var_b"b'2",var_b"b'1",var_b"b'0"])),
                                                  lw(10,4),
                                                  call
                                                    ("offset1.immediate_form1",@{typ offset1},
                                                     mop(Cast w32,
                                                         cc[mop(Cast (Word_Lib.mk_wordT 5),
                                                                ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                                   var_b"b'4",var_b"b'3"]),lw(0,2)]),
                                                     @{theory})],@{theory}),@{theory}),qTy),
                                      call
                                        ("Skip",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory}))))))),
                     (bop(And,var_b"b'15",
                          bop(And,mop(Not,var_b"b'12"),bop(And,var_b"b'11",var_b"b'10"))),
                      let'
                        (var_w("Rt",3),
                         mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"]),
                         mb(call
                              ("ThumbCondition",
                               @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                            close
                              (var_w("v",4),
                               mb(mb(mu(tp[var_w("v",4),lt],qTy),
                                     close
                                       (var("v",@{typ "4 word \<times> bool"}),
                                        call
                                          ("Do",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mu(let'
                                              (var_b"index",lt,
                                               let'
                                                 (var_b"add",lt,
                                                  let'
                                                    (var_b"wback",lf,
                                                     let'
                                                       (var("m",@{typ offset1}),
                                                        call
                                                          ("offset1.immediate_form1",@{typ offset1},
                                                           mop(Cast w32,
                                                               cc[mop(Cast (Word_Lib.mk_wordT 6),
                                                                      ll[var_b"b'8",var_b"b'7",
                                                                         var_b"b'6",var_b"b'5",
                                                                         var_b"b'4",var_b"b'3"]),
                                                                  lw(0,2)]),@{theory}),
                                                        ite(eq(mop(Cast w1,ll[var_b"b'9"]),lw(1,1)),
                                                            call
                                                              ("instruction.Store",
                                                               @{typ instruction},
                                                               call
                                                                 ("Store.StoreWord",@{typ Store},
                                                                  tp[var_b"add",var_b"index",
                                                                     var_b"wback",
                                                                     mop(Cast w4,var_w("Rt",3)),
                                                                     lw(9,4),var("m",@{typ offset1})],
                                                                  @{theory}),@{theory}),
                                                            call
                                                              ("instruction.Load",
                                                               @{typ instruction},
                                                               call
                                                                 ("Load.LoadWord",@{typ Load},
                                                                  tp[var_b"add",var_b"index",
                                                                     var_b"wback",
                                                                     mop(Cast w4,var_w("Rt",3)),
                                                                     lw(9,4),var("m",@{typ offset1})],
                                                                  @{theory}),@{theory})))))),qTy),
                                         call
                                           ("Skip",
                                            @{typ
                                            "state \<Rightarrow> (instruction \<times> state)"},lu,
                                            @{theory}))))))))],
                    call
                      ("DecodeThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                       mop(Cast w16,
                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                              var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",
                              var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),@{theory})),
                call
                  ("DecodeThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                   mop(Cast w16,
                       ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",
                          var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                          var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),@{theory}))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("DecodeThumb2",
   close
     (var("h",@{typ "16 word \<times> 16 word"}),
      let'
        (var("mc",@{typ MachineCode}),
         call
           ("MachineCode.Thumb2",@{typ MachineCode},var("h",@{typ "16 word \<times> 16 word"}),
            @{theory}),
         let'
           (tp[tp[var_b"b'31",var_b"b'30",var_b"b'29",var_b"b'28",var_b"b'27",var_b"b'26",
                  var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",var_b"b'20",
                  var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"],var_b"b'15",var_b"b'14",
               var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
               var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"],
            tp[call
                 ("boolify'16",
                  @{typ
                  "bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
                  mop(Fst,var("h",@{typ "16 word \<times> 16 word"})),@{theory}),
               call
                 ("boolify'16",
                  @{typ
                  "bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
                  mop(Snd,var("h",@{typ "16 word \<times> 16 word"})),@{theory})],
            itb([(var_b"b'27",
                  itb([(var_b"b'28",
                        itb([(var_b"b'25",
                              ite(bop(And,var_b"b'31",
                                      bop(And,var_b"b'30",bop(And,var_b"b'29",mop(Not,var_b"b'26")))),
                                  itb([(bop(And,mop(Not,var_b"b'24"),
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,var_b"b'15",
                                                    bop(And,var_b"b'14",
                                                        bop(And,var_b"b'13",
                                                            bop(And,var_b"b'12",
                                                                bop(And,mop(Not,var_b"b'7"),
                                                                    bop(And,mop(Not,var_b"b'6"),
                                                                        bop(And,mop(Not,var_b"b'5"),
                                                                            mop(Not,var_b"b'4")))))))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            bop(In,var_w("Rd",4),
                                                                                sl[lw(13,4),lw(15,4)]),
                                                                            bop(Or,
                                                                                bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"Shift (register)"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(call
                                                                            ("instruction.Data",
                                                                             @{typ instruction},
                                                                             call
                                                                               ("Data.ShiftRegister",
                                                                                @{typ Data},
                                                                                tp[lf,
                                                                                   eq(mop(Cast w1,
                                                                                          ll[var_b"b'20"]),
                                                                                      lw(1,1)),
                                                                                   var_w("Rd",4),
                                                                                   var_w("Rn",4),
                                                                                   call
                                                                                     ("DecodeRegShift",
                                                                                      @{typ SRType},
                                                                                      mop(Cast
                                                                                            (Word_Lib.mk_wordT 2),
                                                                                          ll[var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      @{theory}),
                                                                                   var_w("Rm",4)],
                                                                                @{theory}),@{theory}),
                                                                          qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,var_b"b'15",
                                                    bop(And,var_b"b'14",
                                                        bop(And,var_b"b'13",
                                                            bop(And,var_b"b'12",var_b"b'7")))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            bop(In,var_w("Rd",4),
                                                                                sl[lw(13,4),lw(15,4)]),
                                                                            bop(Or,
                                                                                eq(var_w("Rn",4),
                                                                                   lw(13,4)),
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"Extend (register)"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(let'
                                                                            (var("args",
                                                                                 @{typ
                                                                                 "bool \<times>
                                                                                  4 word \<times>
                                                                                  4 word \<times>
                                                                                  4 word \<times>
                                                                                  nat"}),
                                                                             tp[eq(mop(Cast w1,
                                                                                       ll[var_b"b'20"]),
                                                                                   lw(1,1)),
                                                                                var_w("Rd",4),
                                                                                var_w("Rn",4),
                                                                                var_w("Rm",4),
                                                                                mop(Cast
                                                                                      HOLogic.natT,
                                                                                    cc[mop(Cast
                                                                                             (Word_Lib.mk_wordT 2),
                                                                                           ll[var_b"b'5",
                                                                                              var_b"b'4"]),
                                                                                       lw(0,3)])],
                                                                             cs(mop(Cast
                                                                                      (Word_Lib.mk_wordT 2),
                                                                                    ll[var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                [(var_w("v",2),
                                                                                  itb([(eq(var_w("v",2),
                                                                                           lw(0,2)),
                                                                                        call
                                                                                          ("instruction.Media",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Media.ExtendHalfword",
                                                                                              @{typ Media},
                                                                                              var("args",
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   4 word \<times>
                                                                                                   4 word \<times>
                                                                                                   4 word \<times>
                                                                                                   nat"}),
                                                                                              @{theory}),
                                                                                           @{theory})),
                                                                                       (eq(var_w("v",2),
                                                                                           lw(1,2)),
                                                                                        call
                                                                                          ("instruction.Media",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Media.ExtendByte16",
                                                                                              @{typ Media},
                                                                                              var("args",
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   4 word \<times>
                                                                                                   4 word \<times>
                                                                                                   4 word \<times>
                                                                                                   nat"}),
                                                                                              @{theory}),
                                                                                           @{theory})),
                                                                                       (eq(var_w("v",2),
                                                                                           lw(2,2)),
                                                                                        call
                                                                                          ("instruction.Media",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Media.ExtendByte",
                                                                                              @{typ Media},
                                                                                              var("args",
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   4 word \<times>
                                                                                                   4 word \<times>
                                                                                                   4 word \<times>
                                                                                                   nat"}),
                                                                                              @{theory}),
                                                                                           @{theory})),
                                                                                       (eq(var_w("v",2),
                                                                                           lw(3,2)),
                                                                                        call
                                                                                          ("instruction.Undefined",
                                                                                           @{typ instruction},
                                                                                           lw(0,32),
                                                                                           @{theory}))],
                                                                                      lx @{typ instruction}))],
                                                                                @{context})),qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'23",
                                                bop(And,var_b"b'15",
                                                    bop(And,var_b"b'14",
                                                        bop(And,var_b"b'13",
                                                            bop(And,var_b"b'12",mop(Not,var_b"b'7"))))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            bop(In,var_w("Rd",4),
                                                                                sl[lw(13,4),lw(15,4)]),
                                                                            bop(Or,
                                                                                bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls
                                                                               "Parallel addition and subtraction"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_u"_0",
                                                                       mu(call
                                                                            ("DecodeParallelAdditionSubtraction",
                                                                             @{typ instruction},
                                                                             tp[bop(Add,
                                                                                    mop(Cast
                                                                                          (Word_Lib.mk_wordT 2),
                                                                                        ll[var_b"b'5",
                                                                                           var_b"b'4"]),
                                                                                    lw(1,2)),
                                                                                cs(mop(Cast
                                                                                         (Word_Lib.mk_wordT 3),
                                                                                       ll[var_b"b'22",
                                                                                          var_b"b'21",
                                                                                          var_b"b'20"]),
                                                                                   [(var_w("v",3),
                                                                                     itb([(eq(var_w("v",3),
                                                                                              lw(1,3)),
                                                                                           lw(0,3)),
                                                                                          (eq(var_w("v",3),
                                                                                              lw(2,3)),
                                                                                           lw(1,3)),
                                                                                          (eq(var_w("v",3),
                                                                                              lw(6,3)),
                                                                                           lw(2,3)),
                                                                                          (eq(var_w("v",3),
                                                                                              lw(5,3)),
                                                                                           lw(3,3)),
                                                                                          (eq(var_w("v",3),
                                                                                              lw(0,3)),
                                                                                           lw(4,3)),
                                                                                          (eq(var_w("v",3),
                                                                                              lw(4,3)),
                                                                                           lw(7,3))],
                                                                                         lw(5,3)))],
                                                                                   @{context}),
                                                                                mop(Cast w1,
                                                                                    ll[var_b"b'6"]),
                                                                                var_w("Rd",4),
                                                                                var_w("Rn",4),
                                                                                var_w("Rm",4)],
                                                                             @{theory}),qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'23",
                                                bop(And,mop(Not,var_b"b'22"),
                                                    bop(And,mop(Not,var_b"b'21"),
                                                        bop(And,mop(Not,var_b"b'20"),
                                                            bop(And,var_b"b'15",
                                                                bop(And,var_b"b'14",
                                                                    bop(And,var_b"b'13",
                                                                        bop(And,var_b"b'12",
                                                                            bop(And,var_b"b'7",
                                                                                mop(Not,var_b"b'6"))))))))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            bop(In,var_w("Rd",4),
                                                                                sl[lw(13,4),lw(15,4)]),
                                                                            bop(Or,
                                                                                bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls
                                                                               "SaturatingAddSubtract"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(call
                                                                            ("instruction.Media",
                                                                             @{typ instruction},
                                                                             call
                                                                               ("Media.SaturatingAddSubtract",
                                                                                @{typ Media},
                                                                                tp[mop(Rev,
                                                                                       mop(Cast
                                                                                             (Word_Lib.mk_wordT 2),
                                                                                           ll[var_b"b'5",
                                                                                              var_b"b'4"])),
                                                                                   var_w("Rd",4),
                                                                                   var_w("Rm",4),
                                                                                   var_w("Rn",4)],
                                                                                @{theory}),@{theory}),
                                                                          qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'23",
                                                bop(And,mop(Not,var_b"b'22"),
                                                    bop(And,mop(Not,var_b"b'21"),
                                                        bop(And,var_b"b'20",
                                                            bop(And,var_b"b'15",
                                                                bop(And,var_b"b'14",
                                                                    bop(And,var_b"b'13",
                                                                        bop(And,var_b"b'12",
                                                                            bop(And,var_b"b'7",
                                                                                mop(Not,var_b"b'6"))))))))))),
                                        let'
                                          (var_w("Rm",4),
                                           mop(Cast w4,
                                               ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                           let'
                                             (var_w("Rd",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(call
                                                               ("HaveThumb2",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(ite(bop(Or,
                                                                         mop(Not,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'19",
                                                                                       var_b"b'18",
                                                                                       var_b"b'17",
                                                                                       var_b"b'16"]),
                                                                                var_w("Rm",4))),
                                                                         bop(Or,
                                                                             bop(In,var_w("Rd",4),
                                                                                 sl[lw(13,4),
                                                                                    lw(15,4)]),
                                                                             bop(In,var_w("Rm",4),
                                                                                 sl[lw(13,4),
                                                                                    lw(15,4)]))),
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"Reverses"],@{theory}),
                                                                     mu(lu,qTy)),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(cs(mop(Cast
                                                                                (Word_Lib.mk_wordT 2),
                                                                              ll[var_b"b'5",
                                                                                 var_b"b'4"]),
                                                                          [(var_w("v",2),
                                                                            itb([(eq(var_w("v",2),
                                                                                     lw(0,2)),
                                                                                  call
                                                                                    ("instruction.Media",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Media.ByteReverse",
                                                                                        @{typ Media},
                                                                                        tp[var_w("Rd",4),
                                                                                           var_w("Rm",4)],
                                                                                        @{theory}),
                                                                                     @{theory})),
                                                                                 (eq(var_w("v",2),
                                                                                     lw(1,2)),
                                                                                  call
                                                                                    ("instruction.Media",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Media.ByteReversePackedHalfword",
                                                                                        @{typ Media},
                                                                                        tp[var_w("Rd",4),
                                                                                           var_w("Rm",4)],
                                                                                        @{theory}),
                                                                                     @{theory})),
                                                                                 (eq(var_w("v",2),
                                                                                     lw(2,2)),
                                                                                  call
                                                                                    ("instruction.Media",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Media.ReverseBits",
                                                                                        @{typ Media},
                                                                                        tp[var_w("Rd",4),
                                                                                           var_w("Rm",4)],
                                                                                        @{theory}),
                                                                                     @{theory})),
                                                                                 (eq(var_w("v",2),
                                                                                     lw(3,2)),
                                                                                  call
                                                                                    ("instruction.Media",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Media.ByteReverseSignedHalfword",
                                                                                        @{typ Media},
                                                                                        tp[var_w("Rd",4),
                                                                                           var_w("Rm",4)],
                                                                                        @{theory}),
                                                                                     @{theory}))],
                                                                                lx @{typ instruction}))],
                                                                          @{context}),qTy))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'23",
                                                bop(And,mop(Not,var_b"b'22"),
                                                    bop(And,var_b"b'21",
                                                        bop(And,mop(Not,var_b"b'20"),
                                                            bop(And,var_b"b'15",
                                                                bop(And,var_b"b'14",
                                                                    bop(And,var_b"b'13",
                                                                        bop(And,var_b"b'12",
                                                                            bop(And,var_b"b'7",
                                                                                bop(And,
                                                                                    mop(Not,
                                                                                        var_b"b'6"),
                                                                                    bop(And,
                                                                                        mop(Not,
                                                                                            var_b"b'5"),
                                                                                        mop(Not,
                                                                                            var_b"b'4"))))))))))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            bop(In,var_w("Rd",4),
                                                                                sl[lw(13,4),lw(15,4)]),
                                                                            bop(Or,
                                                                                bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"SelectBytes"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(call
                                                                            ("instruction.Media",
                                                                             @{typ instruction},
                                                                             call
                                                                               ("Media.SelectBytes",
                                                                                @{typ Media},
                                                                                tp[var_w("Rd",4),
                                                                                   var_w("Rn",4),
                                                                                   var_w("Rm",4)],
                                                                                @{theory}),@{theory}),
                                                                          qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'23",
                                                bop(And,mop(Not,var_b"b'22"),
                                                    bop(And,var_b"b'21",
                                                        bop(And,var_b"b'20",
                                                            bop(And,var_b"b'15",
                                                                bop(And,var_b"b'14",
                                                                    bop(And,var_b"b'13",
                                                                        bop(And,var_b"b'12",
                                                                            bop(And,var_b"b'7",
                                                                                bop(And,
                                                                                    mop(Not,
                                                                                        var_b"b'6"),
                                                                                    bop(And,
                                                                                        mop(Not,
                                                                                            var_b"b'5"),
                                                                                        mop(Not,
                                                                                            var_b"b'4"))))))))))))),
                                        let'
                                          (var_w("Rm",4),
                                           mop(Cast w4,
                                               ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                           let'
                                             (var_w("Rd",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(call
                                                               ("HaveThumb2",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(ite(bop(Or,
                                                                         mop(Not,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'19",
                                                                                       var_b"b'18",
                                                                                       var_b"b'17",
                                                                                       var_b"b'16"]),
                                                                                var_w("Rm",4))),
                                                                         bop(Or,
                                                                             bop(In,var_w("Rd",4),
                                                                                 sl[lw(13,4),
                                                                                    lw(15,4)]),
                                                                             bop(In,var_w("Rm",4),
                                                                                 sl[lw(13,4),
                                                                                    lw(15,4)]))),
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"CountLeadingZeroes"],
                                                                        @{theory}),mu(lu,qTy)),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(call
                                                                         ("instruction.Data",
                                                                          @{typ instruction},
                                                                          call
                                                                            ("Data.CountLeadingZeroes",
                                                                             @{typ Data},
                                                                             tp[var_w("Rd",4),
                                                                                var_w("Rm",4)],
                                                                             @{theory}),@{theory}),
                                                                       qTy))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,mop(Not,var_b"b'7"),mop(Not,var_b"b'6")))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 let'
                                                   (var_w("Ra",4),
                                                    mop(Cast w4,
                                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                           var_b"b'12"]),
                                                    mb(call
                                                         ("ThumbCondition",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (4 word \<times> state)"},lu,@{theory}),
                                                       close
                                                         (var_w("v",4),
                                                          mb(mb(mb(call
                                                                     ("HaveThumb2",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (bool \<times> state)"},lu,
                                                                      @{theory}),
                                                                   close
                                                                     (var_b"v0",
                                                                      mu(tp[var_w("v",4),var_b"v0"],
                                                                         qTy))),
                                                                close
                                                                  (var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   call
                                                                     ("Do",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (bool \<times> state)"},
                                                                      var("v",
                                                                          @{typ
                                                                          "4 word \<times> bool"}),
                                                                      @{theory}))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    mb(ite(bop(Or,
                                                                               bop(In,var_w("Rd",4),
                                                                                   sl[lw(13,4),
                                                                                      lw(15,4)]),
                                                                               bop(Or,
                                                                                   bop(In,
                                                                                       var_w("Rn",4),
                                                                                       sl[lw(13,4),
                                                                                          lw(15,4)]),
                                                                                   bop(Or,
                                                                                       bop(In,
                                                                                           var_w("Rm",4),
                                                                                           sl[lw(13,
                                                                                                 4),
                                                                                              lw(15,
                                                                                                 4)]),
                                                                                       eq(var_w("Ra",4),
                                                                                          lw(13,4))))),
                                                                           call
                                                                             ("DECODE_UNPREDICTABLE",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              tp[var("mc",
                                                                                     @{typ MachineCode}),
                                                                                 ls
                                                                                  "Multiplies and absolute difference"],
                                                                              @{theory}),mu(lu,qTy)),
                                                                       close
                                                                         (var_u"_0",
                                                                          cs(tp[mop(Cast
                                                                                      (Word_Lib.mk_wordT 3),
                                                                                    ll[var_b"b'22",
                                                                                       var_b"b'21",
                                                                                       var_b"b'20"]),
                                                                                var_w("Ra",4),
                                                                                eq(mop(Cast w1,
                                                                                       ll[var_b"b'5"]),
                                                                                   lw(1,1)),
                                                                                eq(mop(Cast w1,
                                                                                       ll[var_b"b'4"]),
                                                                                   lw(1,1))],
                                                                             [(tp[var_w("v",3),
                                                                                  var_w("v0",4),lf,
                                                                                  lt],
                                                                               itb([(bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(0,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mb(call
                                                                                          ("DECODE_UNPREDICTABLE",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var("mc",
                                                                                                  @{typ MachineCode}),
                                                                                              ls
                                                                                               "MultiplySubtract"],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mu(lx @{typ instruction},
                                                                                              qTy)))),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(0,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.MultiplySubtract",
                                                                                              @{typ Multiply},
                                                                                              tp[var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(1,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(1,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(2,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMultiplyDual",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 lt,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(3,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16x32Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(3,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16x32Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(4,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMultiplyDual",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 lt,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(5,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMostSignificantMultiply",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(6,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mb(call
                                                                                          ("DECODE_UNPREDICTABLE",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var("mc",
                                                                                                  @{typ MachineCode}),
                                                                                              ls
                                                                                               "SignedMostSignificantMultiplySubtract"],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mu(lx @{typ instruction},
                                                                                              qTy)))),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(6,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMostSignificantMultiplySubtract",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy))],
                                                                                   mu(call
                                                                                        ("instruction.Undefined",
                                                                                         @{typ instruction},
                                                                                         lw(0,32),
                                                                                         @{theory}),
                                                                                      qTy))),
                                                                              (tp[var_w("v",3),
                                                                                  var_w("v0",4),lf,
                                                                                  lf],
                                                                               itb([(bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(0,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Multiply32",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(0,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.MultiplyAccumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(1,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(1,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(2,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMultiplyDual",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(3,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16x32Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(3,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16x32Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(4,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMultiplyDual",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(5,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMostSignificantMultiply",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(6,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mb(call
                                                                                          ("DECODE_UNPREDICTABLE",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var("mc",
                                                                                                  @{typ MachineCode}),
                                                                                              ls
                                                                                               "SignedMostSignificantMultiplySubtract"],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mu(lx @{typ instruction},
                                                                                              qTy)))),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(6,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMostSignificantMultiplySubtract",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(7,3)),
                                                                                     mu(call
                                                                                          ("instruction.SIMD",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("SIMD.UnsignedSumAbsoluteDifferences",
                                                                                              @{typ SIMD},
                                                                                              tp[var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy))],
                                                                                   mu(call
                                                                                        ("instruction.Undefined",
                                                                                         @{typ instruction},
                                                                                         lw(0,32),
                                                                                         @{theory}),
                                                                                      qTy))),
                                                                              (tp[var_w("v",3),
                                                                                  var_w("v0",4),lf,
                                                                                  var_b"round"],
                                                                               itb([(bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(1,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"round",
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(1,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"round",
                                                                                                 lf,
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(2,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMultiplyDual",
                                                                                              @{typ Multiply},
                                                                                              tp[lf,
                                                                                                 var_b"round",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(3,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16x32Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"round",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(3,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16x32Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"round",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(4,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMultiplyDual",
                                                                                              @{typ Multiply},
                                                                                              tp[lt,
                                                                                                 var_b"round",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(5,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMostSignificantMultiply",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"round",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(6,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mb(call
                                                                                          ("DECODE_UNPREDICTABLE",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var("mc",
                                                                                                  @{typ MachineCode}),
                                                                                              ls
                                                                                               "SignedMostSignificantMultiplySubtract"],
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_a
                                                                                             HOLogic.unitT,
                                                                                           mu(lx @{typ instruction},
                                                                                              qTy)))),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(6,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.SignedMostSignificantMultiplySubtract",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"round",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy))],
                                                                                   mu(call
                                                                                        ("instruction.Undefined",
                                                                                         @{typ instruction},
                                                                                         lw(0,32),
                                                                                         @{theory}),
                                                                                      qTy))),
                                                                              (tp[var_w("v",3),
                                                                                  var_w("v0",4),
                                                                                  var_b"v1",
                                                                                  var_b"v2"],
                                                                               itb([(bop(And,
                                                                                         eq(var_w("v",3),
                                                                                            lw(1,3)),
                                                                                         eq(var_w("v0",4),
                                                                                            lw(15,4))),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Result",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"v2",
                                                                                                 var_b"v1",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)),
                                                                                    (eq(var_w("v",3),
                                                                                        lw(1,3)),
                                                                                     mu(call
                                                                                          ("instruction.Multiply",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Multiply.Signed16Multiply32Accumulate",
                                                                                              @{typ Multiply},
                                                                                              tp[var_b"v2",
                                                                                                 var_b"v1",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var_w("Ra",4)],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy))],
                                                                                   mu(call
                                                                                        ("instruction.Undefined",
                                                                                         @{typ instruction},
                                                                                         lw(0,32),
                                                                                         @{theory}),
                                                                                      qTy)))],
                                                                             @{context}))),
                                                                    call
                                                                      ("Skip",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (instruction \<times> state)"},
                                                                       lu,@{theory}))))))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,var_b"b'23",
                                                bop(And,mop(Not,var_b"b'22"),
                                                    bop(And,var_b"b'20",
                                                        bop(And,var_b"b'7",
                                                            bop(And,var_b"b'6",
                                                                bop(And,var_b"b'5",var_b"b'4"))))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rd",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveVirtExt",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mb(ite(var_b"v0",mu(lt,qTy),
                                                                          mb(mr(close
                                                                                  (var("s",qTy),
                                                                                   call
                                                                                     ("state.Architecture",
                                                                                      @{typ Architecture},
                                                                                      var("s",qTy),
                                                                                      @{theory}))),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Architecture}),
                                                                                mu(eq(var("v",
                                                                                          @{typ Architecture}),
                                                                                      lc("ARMv7_R",
                                                                                         "Architecture",
                                                                                         @{theory})),
                                                                                   qTy)))),
                                                                      close
                                                                        (var_b"v0",
                                                                         mu(tp[var_w("v",4),
                                                                               var_b"v0"],qTy))))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            bop(In,var_w("Rd",4),
                                                                                sl[lw(13,4),lw(15,4)]),
                                                                            bop(Or,
                                                                                bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"Divide"],@{theory}),
                                                                        mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(call
                                                                            ("instruction.Divide",
                                                                             @{typ instruction},
                                                                             tp[eq(mop(Cast w1,
                                                                                       ll[var_b"b'21"]),
                                                                                   lw(1,1)),
                                                                                var_w("Rd",4),
                                                                                var_w("Rn",4),
                                                                                var_w("Rm",4)],
                                                                             @{theory}),qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))))),
                                       (bop(And,var_b"b'24",var_b"b'23"),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("RdHi",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                        var_b"b'8"]),
                                                 let'
                                                   (var_w("RdLo",4),
                                                    mop(Cast w4,
                                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                           var_b"b'12"]),
                                                    mb(call
                                                         ("ThumbCondition",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (4 word \<times> state)"},lu,@{theory}),
                                                       close
                                                         (var_w("v",4),
                                                          mb(mb(mb(call
                                                                     ("HaveThumb2",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (bool \<times> state)"},lu,
                                                                      @{theory}),
                                                                   close
                                                                     (var_b"v0",
                                                                      mu(tp[var_w("v",4),var_b"v0"],
                                                                         qTy))),
                                                                close
                                                                  (var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   call
                                                                     ("Do",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (bool \<times> state)"},
                                                                      var("v",
                                                                          @{typ
                                                                          "4 word \<times> bool"}),
                                                                      @{theory}))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    mb(ite(bop(Or,
                                                                               bop(In,
                                                                                   var_w("RdLo",4),
                                                                                   sl[lw(13,4),
                                                                                      lw(15,4)]),
                                                                               bop(Or,
                                                                                   bop(In,
                                                                                       var_w("RdHi",4),
                                                                                       sl[lw(13,4),
                                                                                          lw(15,4)]),
                                                                                   bop(Or,
                                                                                       bop(In,
                                                                                           var_w("Rn",4),
                                                                                           sl[lw(13,
                                                                                                 4),
                                                                                              lw(15,
                                                                                                 4)]),
                                                                                       bop(Or,
                                                                                           bop(In,
                                                                                               var_w("Rm",4),
                                                                                               sl[lw(13,
                                                                                                     4),
                                                                                                  lw(15,
                                                                                                     4)]),
                                                                                           eq(var_w("RdHi",4),
                                                                                              var_w("RdLo",4)))))),
                                                                           call
                                                                             ("DECODE_UNPREDICTABLE",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              tp[var("mc",
                                                                                     @{typ MachineCode}),
                                                                                 ls
                                                                                  "Long multiply, long multiply accumulate"],
                                                                              @{theory}),mu(lu,qTy)),
                                                                       close
                                                                         (var_u"_0",
                                                                          mu(let'
                                                                               (tp[tp[var_b"b'6",
                                                                                      var_b"b'5",
                                                                                      var_b"b'4"],
                                                                                   var_b"b'3",
                                                                                   var_b"b'2",
                                                                                   var_b"b'1",
                                                                                   var_b"b'0"],
                                                                                tp[call
                                                                                     ("boolify'3",
                                                                                      @{typ
                                                                                      "bool \<times>
                                                                                       bool \<times>
                                                                                       bool"},
                                                                                      mop(Cast
                                                                                            (Word_Lib.mk_wordT 3),
                                                                                          ll[var_b"b'22",
                                                                                             var_b"b'21",
                                                                                             var_b"b'20"]),
                                                                                      @{theory}),
                                                                                   call
                                                                                     ("boolify'4",
                                                                                      @{typ
                                                                                      "bool \<times>
                                                                                       bool \<times>
                                                                                       bool \<times>
                                                                                       bool"},
                                                                                      mop(Cast w4,
                                                                                          ll[var_b"b'7",
                                                                                             var_b"b'6",
                                                                                             var_b"b'5",
                                                                                             var_b"b'4"]),
                                                                                      @{theory})],
                                                                                itb([(bop(And,
                                                                                          mop(Not,
                                                                                              var_b"b'4"),
                                                                                          bop(And,
                                                                                              mop(Not,
                                                                                                  var_b"b'3"),
                                                                                              bop(And,
                                                                                                  mop(Not,
                                                                                                      var_b"b'2"),
                                                                                                  bop(And,
                                                                                                      mop(Not,
                                                                                                          var_b"b'1"),
                                                                                                      mop(Not,
                                                                                                          var_b"b'0"))))),
                                                                                      call
                                                                                        ("instruction.Multiply",
                                                                                         @{typ instruction},
                                                                                         call
                                                                                           ("Multiply.MultiplyLong",
                                                                                            @{typ Multiply},
                                                                                            tp[eq(mop(Cast
                                                                                                        w1,
                                                                                                      ll[var_b"b'6"]),
                                                                                                  lw(1,
                                                                                                     1)),
                                                                                               eq(mop(Cast
                                                                                                        w1,
                                                                                                      ll[var_b"b'5"]),
                                                                                                  lw(0,
                                                                                                     1)),
                                                                                               lf,
                                                                                               var_w("RdHi",4),
                                                                                               var_w("RdLo",4),
                                                                                               var_w("Rn",4),
                                                                                               var_w("Rm",4)],
                                                                                            @{theory}),
                                                                                         @{theory})),
                                                                                     (bop(And,
                                                                                          var_b"b'6",
                                                                                          bop(And,
                                                                                              mop(Not,
                                                                                                  var_b"b'5"),
                                                                                              bop(And,
                                                                                                  mop(Not,
                                                                                                      var_b"b'4"),
                                                                                                  bop(And,
                                                                                                      var_b"b'3",
                                                                                                      mop(Not,
                                                                                                          var_b"b'2"))))),
                                                                                      call
                                                                                        ("instruction.Multiply",
                                                                                         @{typ instruction},
                                                                                         call
                                                                                           ("Multiply.Signed16Multiply64Accumulate",
                                                                                            @{typ Multiply},
                                                                                            tp[eq(mop(Cast
                                                                                                        w1,
                                                                                                      ll[var_b"b'0"]),
                                                                                                  lw(1,
                                                                                                     1)),
                                                                                               eq(mop(Cast
                                                                                                        w1,
                                                                                                      ll[var_b"b'1"]),
                                                                                                  lw(1,
                                                                                                     1)),
                                                                                               var_w("RdHi",4),
                                                                                               var_w("RdLo",4),
                                                                                               var_w("Rn",4),
                                                                                               var_w("Rm",4)],
                                                                                            @{theory}),
                                                                                         @{theory})),
                                                                                     (bop(And,
                                                                                          var_b"b'6",
                                                                                          bop(And,
                                                                                              mop(Not,
                                                                                                  var_b"b'5"),
                                                                                              bop(And,
                                                                                                  var_b"b'3",
                                                                                                  bop(And,
                                                                                                      var_b"b'2",
                                                                                                      mop(Not,
                                                                                                          var_b"b'1"))))),
                                                                                      call
                                                                                        ("instruction.Multiply",
                                                                                         @{typ instruction},
                                                                                         call
                                                                                           ("Multiply.SignedMultiplyLongDual",
                                                                                            @{typ Multiply},
                                                                                            tp[eq(mop(Cast
                                                                                                        w1,
                                                                                                      ll[var_b"b'4"]),
                                                                                                  lw(1,
                                                                                                     1)),
                                                                                               eq(mop(Cast
                                                                                                        w1,
                                                                                                      ll[var_b"b'0"]),
                                                                                                  lw(1,
                                                                                                     1)),
                                                                                               var_w("RdHi",4),
                                                                                               var_w("RdLo",4),
                                                                                               var_w("Rn",4),
                                                                                               var_w("Rm",4)],
                                                                                            @{theory}),
                                                                                         @{theory})),
                                                                                     (bop(And,
                                                                                          var_b"b'6",
                                                                                          bop(And,
                                                                                              var_b"b'5",
                                                                                              bop(And,
                                                                                                  mop(Not,
                                                                                                      var_b"b'4"),
                                                                                                  bop(And,
                                                                                                      mop(Not,
                                                                                                          var_b"b'3"),
                                                                                                      bop(And,
                                                                                                          var_b"b'2",
                                                                                                          bop(And,
                                                                                                              var_b"b'1",
                                                                                                              mop(Not,
                                                                                                                  var_b"b'0"))))))),
                                                                                      call
                                                                                        ("instruction.Multiply",
                                                                                         @{typ instruction},
                                                                                         call
                                                                                           ("Multiply.MultiplyAccumulateAccumulate",
                                                                                            @{typ Multiply},
                                                                                            tp[var_w("RdHi",4),
                                                                                               var_w("RdLo",4),
                                                                                               var_w("Rn",4),
                                                                                               var_w("Rm",4)],
                                                                                            @{theory}),
                                                                                         @{theory}))],
                                                                                    call
                                                                                      ("instruction.Undefined",
                                                                                       @{typ instruction},
                                                                                       lw(0,32),
                                                                                       @{theory}))),
                                                                             qTy))),
                                                                    call
                                                                      ("Skip",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (instruction \<times> state)"},
                                                                       lu,@{theory})))))))))))],
                                      call
                                        ("UndefinedThumb",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory})),
                                  call
                                    ("UndefinedThumb",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))),
                             (var_b"b'22",
                              itb([(var_b"b'20",
                                    ite(bop(And,var_b"b'31",
                                            bop(And,var_b"b'30",
                                                bop(And,var_b"b'29",
                                                    bop(And,mop(Not,var_b"b'26"),
                                                        bop(And,mop(Not,var_b"b'24"),
                                                            mop(Not,var_b"b'21")))))),
                                        itb([(bop(And,var_b"b'19",
                                                  bop(And,var_b"b'18",
                                                      bop(And,var_b"b'17",var_b"b'16"))),
                                              let'
                                                (var_w("Rt",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                        var_b"b'12"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(call
                                                                      ("InITBlock",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (bool \<times> state)"},lu,
                                                                       @{theory}),
                                                                    close
                                                                      (var_b"v",
                                                                       mb(mb(mb(ite(var_b"v",
                                                                                    mb(call
                                                                                         ("LastInITBlock",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (bool \<times>
                                                                                            state)"},
                                                                                          lu,
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var_b"v",
                                                                                          mu(mop(Not,
                                                                                                 var_b"v"),
                                                                                             qTy))),
                                                                                    mu(lf,qTy)),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(And,
                                                                                          eq(var_w("Rt",4),
                                                                                             lw(15,4)),
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("DECODE_UNPREDICTABLE",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       tp[var("mc",
                                                                                              @{typ MachineCode}),
                                                                                          ls
                                                                                           "LoadLiteral"],
                                                                                       @{theory}),
                                                                                    mu(lu,qTy)))),
                                                                          close
                                                                            (var_a HOLogic.unitT,
                                                                             mu(call
                                                                                  ("instruction.Load",
                                                                                   @{typ instruction},
                                                                                   call
                                                                                     ("Load.LoadLiteral",
                                                                                      @{typ Load},
                                                                                      tp[eq(mop(Cast
                                                                                                  w1,
                                                                                                ll[var_b"b'23"]),
                                                                                            lw(1,1)),
                                                                                         var_w("Rt",4),
                                                                                         mop(Cast
                                                                                               w32,
                                                                                             mop(Cast
                                                                                                   (Word_Lib.mk_wordT 12),
                                                                                                 ll[var_b"b'11",
                                                                                                    var_b"b'10",
                                                                                                    var_b"b'9",
                                                                                                    var_b"b'8",
                                                                                                    var_b"b'7",
                                                                                                    var_b"b'6",
                                                                                                    var_b"b'5",
                                                                                                    var_b"b'4",
                                                                                                    var_b"b'3",
                                                                                                    var_b"b'2",
                                                                                                    var_b"b'1",
                                                                                                    var_b"b'0"]))],
                                                                                      @{theory}),
                                                                                   @{theory}),qTy))))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))),
                                             (var_b"b'23",
                                              let'
                                                (var_w("Rt",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                        var_b"b'12"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(call
                                                                      ("InITBlock",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (bool \<times> state)"},lu,
                                                                       @{theory}),
                                                                    close
                                                                      (var_b"v",
                                                                       mb(mb(mb(ite(var_b"v",
                                                                                    mb(call
                                                                                         ("LastInITBlock",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (bool \<times>
                                                                                            state)"},
                                                                                          lu,
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var_b"v",
                                                                                          mu(mop(Not,
                                                                                                 var_b"v"),
                                                                                             qTy))),
                                                                                    mu(lf,qTy)),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(And,
                                                                                          eq(var_w("Rt",4),
                                                                                             lw(15,4)),
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("DECODE_UNPREDICTABLE",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       tp[var("mc",
                                                                                              @{typ MachineCode}),
                                                                                          ls
                                                                                           "LoadWord"],
                                                                                       @{theory}),
                                                                                    mu(lu,qTy)))),
                                                                          close
                                                                            (var_a HOLogic.unitT,
                                                                             mu(call
                                                                                  ("instruction.Load",
                                                                                   @{typ instruction},
                                                                                   call
                                                                                     ("Load.LoadWord",
                                                                                      @{typ Load},
                                                                                      tp[lt,lt,lf,
                                                                                         var_w("Rt",4),
                                                                                         mop(Cast w4,
                                                                                             ll[var_b"b'19",
                                                                                                var_b"b'18",
                                                                                                var_b"b'17",
                                                                                                var_b"b'16"]),
                                                                                         call
                                                                                           ("offset1.immediate_form1",
                                                                                            @{typ offset1},
                                                                                            mop(Cast
                                                                                                  w32,
                                                                                                mop(Cast
                                                                                                      (Word_Lib.mk_wordT 12),
                                                                                                    ll[var_b"b'11",
                                                                                                       var_b"b'10",
                                                                                                       var_b"b'9",
                                                                                                       var_b"b'8",
                                                                                                       var_b"b'7",
                                                                                                       var_b"b'6",
                                                                                                       var_b"b'5",
                                                                                                       var_b"b'4",
                                                                                                       var_b"b'3",
                                                                                                       var_b"b'2",
                                                                                                       var_b"b'1",
                                                                                                       var_b"b'0"])),
                                                                                            @{theory})],
                                                                                      @{theory}),
                                                                                   @{theory}),qTy))))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))),
                                             (bop(And,mop(Not,var_b"b'23"),
                                                  bop(And,var_b"b'11",
                                                      bop(And,var_b"b'10",
                                                          bop(And,var_b"b'9",mop(Not,var_b"b'8"))))),
                                              let'
                                                (var_w("Rt",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                        var_b"b'12"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(In,var_w("Rt",4),
                                                                            sl[lw(13,4),lw(15,4)]),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"LoadUnprivileged"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(call
                                                                            ("instruction.Load",
                                                                             @{typ instruction},
                                                                             call
                                                                               ("Load.LoadUnprivileged",
                                                                                @{typ Load},
                                                                                tp[lt,lf,
                                                                                   var_w("Rt",4),
                                                                                   mop(Cast w4,
                                                                                       ll[var_b"b'19",
                                                                                          var_b"b'18",
                                                                                          var_b"b'17",
                                                                                          var_b"b'16"]),
                                                                                   call
                                                                                     ("offset1.immediate_form1",
                                                                                      @{typ offset1},
                                                                                      mop(Cast w32,
                                                                                          mop(Cast
                                                                                                w8,
                                                                                              ll[var_b"b'7",
                                                                                                 var_b"b'6",
                                                                                                 var_b"b'5",
                                                                                                 var_b"b'4",
                                                                                                 var_b"b'3",
                                                                                                 var_b"b'2",
                                                                                                 var_b"b'1",
                                                                                                 var_b"b'0"])),
                                                                                      @{theory})],
                                                                                @{theory}),@{theory}),
                                                                          qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory})))))))),
                                             (bop(And,mop(Not,var_b"b'23"),var_b"b'11"),
                                              let'
                                                (var_w("Rn",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'19",var_b"b'18",var_b"b'17",
                                                        var_b"b'16"]),
                                                 let'
                                                   (var_w("W",1),mop(Cast w1,ll[var_b"b'8"]),
                                                    let'
                                                      (var_w("P",1),mop(Cast w1,ll[var_b"b'10"]),
                                                       let'
                                                         (var_w("Rt",4),
                                                          mop(Cast w4,
                                                              ll[var_b"b'15",var_b"b'14",
                                                                 var_b"b'13",var_b"b'12"]),
                                                          mb(call
                                                               ("ThumbCondition",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (4 word \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_w("v",4),
                                                                mb(mb(mb(call
                                                                           ("HaveThumb2",
                                                                            @{typ
                                                                            "state \<Rightarrow>
                                                                             (bool \<times> state)"},
                                                                            lu,@{theory}),
                                                                         close
                                                                           (var_b"v0",
                                                                            mb(mu(bop(And,
                                                                                      bop(Or,
                                                                                          eq(var_w("P",1),
                                                                                             lw(1,1)),
                                                                                          eq(var_w("W",1),
                                                                                             lw(1,1))),
                                                                                      var_b"v0"),qTy),
                                                                               close
                                                                                 (var_b"v0",
                                                                                  mu(tp[var_w("v",4),
                                                                                        var_b"v0"],
                                                                                     qTy))))),
                                                                      close
                                                                        (var("v",
                                                                             @{typ
                                                                             "4 word \<times> bool"}),
                                                                         call
                                                                           ("Do",
                                                                            @{typ
                                                                            "state \<Rightarrow>
                                                                             (bool \<times> state)"},
                                                                            var("v",
                                                                                @{typ
                                                                                "4 word \<times>
                                                                                 bool"}),@{theory}))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          let'
                                                                            (var_b"wback",
                                                                             eq(var_w("W",1),lw(1,1)),
                                                                             mb(call
                                                                                  ("InITBlock",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (bool \<times>
                                                                                     state)"},lu,
                                                                                   @{theory}),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mb(mb(mb(mb(ite(var_b"v",
                                                                                                   mb(call
                                                                                                        ("LastInITBlock",
                                                                                                         @{typ
                                                                                                         "state \<Rightarrow>
                                                                                                          (bool \<times>
                                                                                                           state)"},
                                                                                                         lu,
                                                                                                         @{theory}),
                                                                                                      close
                                                                                                        (var_b"v",
                                                                                                         mu(mop(Not,
                                                                                                                var_b"v"),
                                                                                                            qTy))),
                                                                                                   mu(lf,
                                                                                                      qTy)),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(bop(And,
                                                                                                         eq(var_w("Rt",4),
                                                                                                            lw(15,
                                                                                                               4)),
                                                                                                         var_b"v"),
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var_b"v",
                                                                                               mu(bop(Or,
                                                                                                      bop(And,
                                                                                                          var_b"wback",
                                                                                                          eq(var_w("Rn",4),
                                                                                                             var_w("Rt",4))),
                                                                                                      var_b"v"),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var_b"b",
                                                                                            ite(var_b"b",
                                                                                                call
                                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                                   @{typ
                                                                                                   "state \<Rightarrow>
                                                                                                    (unit \<times>
                                                                                                     state)"},
                                                                                                   tp[var("mc",
                                                                                                          @{typ MachineCode}),
                                                                                                      ls
                                                                                                       "LoadWord"],
                                                                                                   @{theory}),
                                                                                                mu(lu,
                                                                                                   qTy)))),
                                                                                      close
                                                                                        (var_a
                                                                                           HOLogic.unitT,
                                                                                         mu(call
                                                                                              ("instruction.Load",
                                                                                               @{typ instruction},
                                                                                               call
                                                                                                 ("Load.LoadWord",
                                                                                                  @{typ Load},
                                                                                                  tp[eq(mop(Cast
                                                                                                              w1,
                                                                                                            ll[var_b"b'9"]),
                                                                                                        lw(1,
                                                                                                           1)),
                                                                                                     eq(var_w("P",1),
                                                                                                        lw(1,
                                                                                                           1)),
                                                                                                     var_b"wback",
                                                                                                     var_w("Rt",4),
                                                                                                     var_w("Rn",4),
                                                                                                     call
                                                                                                       ("offset1.immediate_form1",
                                                                                                        @{typ offset1},
                                                                                                        mop(Cast
                                                                                                              w32,
                                                                                                            mop(Cast
                                                                                                                  w8,
                                                                                                                ll[var_b"b'7",
                                                                                                                   var_b"b'6",
                                                                                                                   var_b"b'5",
                                                                                                                   var_b"b'4",
                                                                                                                   var_b"b'3",
                                                                                                                   var_b"b'2",
                                                                                                                   var_b"b'1",
                                                                                                                   var_b"b'0"])),
                                                                                                        @{theory})],
                                                                                                  @{theory}),
                                                                                               @{theory}),
                                                                                            qTy)))))),
                                                                          call
                                                                            ("Skip",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (instruction \<times>
                                                                               state)"},lu,@{theory}))))))))))),
                                             (bop(And,mop(Not,var_b"b'23"),
                                                  bop(And,mop(Not,var_b"b'11"),
                                                      bop(And,mop(Not,var_b"b'10"),
                                                          bop(And,mop(Not,var_b"b'9"),
                                                              bop(And,mop(Not,var_b"b'8"),
                                                                  bop(And,mop(Not,var_b"b'7"),
                                                                      mop(Not,var_b"b'6"))))))),
                                              let'
                                                (var_w("Rm",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                                 let'
                                                   (var_w("Rt",4),
                                                    mop(Cast w4,
                                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                           var_b"b'12"]),
                                                    mb(call
                                                         ("ThumbCondition",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (4 word \<times> state)"},lu,@{theory}),
                                                       close
                                                         (var_w("v",4),
                                                          mb(mb(mb(call
                                                                     ("HaveThumb2",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (bool \<times> state)"},lu,
                                                                      @{theory}),
                                                                   close
                                                                     (var_b"v0",
                                                                      mu(tp[var_w("v",4),var_b"v0"],
                                                                         qTy))),
                                                                close
                                                                  (var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   call
                                                                     ("Do",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (bool \<times> state)"},
                                                                      var("v",
                                                                          @{typ
                                                                          "4 word \<times> bool"}),
                                                                      @{theory}))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    mb(call
                                                                         ("InITBlock",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (bool \<times> state)"},
                                                                          lu,@{theory}),
                                                                       close
                                                                         (var_b"v",
                                                                          mb(mb(mb(mb(ite(var_b"v",
                                                                                          mb(call
                                                                                               ("LastInITBlock",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (bool \<times>
                                                                                                  state)"},
                                                                                                lu,
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var_b"v",
                                                                                                mu(mop(Not,
                                                                                                       var_b"v"),
                                                                                                   qTy))),
                                                                                          mu(lf,qTy)),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(bop(And,
                                                                                                eq(var_w("Rt",4),
                                                                                                   lw(15,
                                                                                                      4)),
                                                                                                var_b"v"),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      mu(bop(Or,
                                                                                             var_b"b",
                                                                                             bop(In,
                                                                                                 var_w("Rm",4),
                                                                                                 sl[lw(13,
                                                                                                       4),
                                                                                                    lw(15,
                                                                                                       4)])),
                                                                                         qTy))),
                                                                                close
                                                                                  (var_b"b",
                                                                                   ite(var_b"b",
                                                                                       call
                                                                                         ("DECODE_UNPREDICTABLE",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (unit \<times>
                                                                                            state)"},
                                                                                          tp[var("mc",
                                                                                                 @{typ MachineCode}),
                                                                                             ls
                                                                                              "LoadWord"],
                                                                                          @{theory}),
                                                                                       mu(lu,qTy)))),
                                                                             close
                                                                               (var_a HOLogic.unitT,
                                                                                mu(call
                                                                                     ("instruction.Load",
                                                                                      @{typ instruction},
                                                                                      call
                                                                                        ("Load.LoadWord",
                                                                                         @{typ Load},
                                                                                         tp[lt,lt,
                                                                                            lf,
                                                                                            var_w("Rt",4),
                                                                                            mop(Cast
                                                                                                  w4,
                                                                                                ll[var_b"b'19",
                                                                                                   var_b"b'18",
                                                                                                   var_b"b'17",
                                                                                                   var_b"b'16"]),
                                                                                            call
                                                                                              ("offset1.register_form1",
                                                                                               @{typ offset1},
                                                                                               tp[var_w("Rm",4),
                                                                                                  lc("SRType_LSL",
                                                                                                     "SRType",
                                                                                                     @{theory}),
                                                                                                  mop(Cast
                                                                                                        HOLogic.natT,
                                                                                                      mop(Cast
                                                                                                            (Word_Lib.mk_wordT 2),
                                                                                                          ll[var_b"b'5",
                                                                                                             var_b"b'4"]))],
                                                                                               @{theory})],
                                                                                         @{theory}),
                                                                                      @{theory}),qTy))))),
                                                                    call
                                                                      ("Skip",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (instruction \<times> state)"},
                                                                       lu,@{theory})))))))))],
                                            call
                                              ("UndefinedThumb",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory})),
                                        call
                                          ("UndefinedThumb",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory}))),
                                   (bop(And,var_b"b'31",
                                        bop(And,var_b"b'30",
                                            bop(And,var_b"b'29",
                                                bop(And,mop(Not,var_b"b'26"),
                                                    bop(And,mop(Not,var_b"b'24"),
                                                        mop(Not,var_b"b'21")))))),
                                    itb([(bop(And,mop(Not,var_b"b'23"),
                                              bop(And,mop(Not,var_b"b'11"),
                                                  bop(And,mop(Not,var_b"b'10"),
                                                      bop(And,mop(Not,var_b"b'9"),
                                                          bop(And,mop(Not,var_b"b'8"),
                                                              bop(And,mop(Not,var_b"b'7"),
                                                                  mop(Not,var_b"b'6"))))))),
                                          let'
                                            (var_w("Rn",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                             let'
                                               (var_w("Rm",4),
                                                mop(Cast w4,
                                                    ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                                let'
                                                  (var_w("Rt",4),
                                                   mop(Cast w4,
                                                       ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                          var_b"b'12"]),
                                                   mb(call
                                                        ("ThumbCondition",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (4 word \<times> state)"},lu,@{theory}),
                                                      close
                                                        (var_w("v",4),
                                                         mb(mb(mb(call
                                                                    ("HaveThumb2",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (bool \<times> state)"},lu,
                                                                     @{theory}),
                                                                  close
                                                                    (var_b"v0",
                                                                     mb(mu(bop(And,
                                                                               mop(Not,
                                                                                   eq(var_w("Rn",4),
                                                                                      lw(15,4))),
                                                                               var_b"v0"),qTy),
                                                                        close
                                                                          (var_b"v0",
                                                                           mu(tp[var_w("v",4),
                                                                                 var_b"v0"],qTy))))),
                                                               close
                                                                 (var("v",
                                                                      @{typ "4 word \<times> bool"}),
                                                                  call
                                                                    ("Do",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (bool \<times> state)"},
                                                                     var("v",
                                                                         @{typ
                                                                         "4 word \<times> bool"}),
                                                                     @{theory}))),
                                                            close
                                                              (var_b"b",
                                                               ite(var_b"b",
                                                                   mb(ite(bop(Or,
                                                                              eq(var_w("Rt",4),
                                                                                 lw(15,4)),
                                                                              bop(In,var_w("Rm",4),
                                                                                  sl[lw(13,4),
                                                                                     lw(15,4)])),
                                                                          call
                                                                            ("DECODE_UNPREDICTABLE",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[var("mc",
                                                                                    @{typ MachineCode}),
                                                                                ls"Store (register)"],
                                                                             @{theory}),mu(lu,qTy)),
                                                                      close
                                                                        (var_a HOLogic.unitT,
                                                                         mu(call
                                                                              ("instruction.Store",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Store.StoreWord",
                                                                                  @{typ Store},
                                                                                  tp[lt,lt,lf,
                                                                                     var_w("Rt",4),
                                                                                     var_w("Rn",4),
                                                                                     call
                                                                                       ("offset1.register_form1",
                                                                                        @{typ offset1},
                                                                                        tp[var_w("Rm",4),
                                                                                           lc("SRType_LSL",
                                                                                              "SRType",
                                                                                              @{theory}),
                                                                                           mop(Cast
                                                                                                 HOLogic.natT,
                                                                                               mop(Cast
                                                                                                     (Word_Lib.mk_wordT 2),
                                                                                                   ll[var_b"b'5",
                                                                                                      var_b"b'4"]))],
                                                                                        @{theory})],
                                                                                  @{theory}),
                                                                               @{theory}),qTy))),
                                                                   call
                                                                     ("Skip",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (instruction \<times> state)"},
                                                                      lu,@{theory})))))))))),
                                         (bop(And,mop(Not,var_b"b'23"),
                                              bop(And,var_b"b'11",
                                                  bop(And,var_b"b'10",
                                                      bop(And,var_b"b'9",mop(Not,var_b"b'8"))))),
                                          let'
                                            (var_w("Rn",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                             let'
                                               (var_w("Rt",4),
                                                mop(Cast w4,
                                                    ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                       var_b"b'12"]),
                                                mb(call
                                                     ("ThumbCondition",
                                                      @{typ
                                                      "state \<Rightarrow> (4 word \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_w("v",4),
                                                      mb(mb(mb(call
                                                                 ("HaveThumb2",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},lu,
                                                                  @{theory}),
                                                               close
                                                                 (var_b"v0",
                                                                  mb(mu(bop(And,
                                                                            mop(Not,
                                                                                eq(var_w("Rn",4),
                                                                                   lw(15,4))),
                                                                            var_b"v0"),qTy),
                                                                     close
                                                                       (var_b"v0",
                                                                        mu(tp[var_w("v",4),var_b"v0"],
                                                                           qTy))))),
                                                            close
                                                              (var("v",@{typ "4 word \<times> bool"}),
                                                               call
                                                                 ("Do",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},
                                                                  var("v",
                                                                      @{typ "4 word \<times> bool"}),
                                                                  @{theory}))),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                mb(ite(bop(In,var_w("Rt",4),
                                                                           sl[lw(13,4),lw(15,4)]),
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"StoreUnprivileged"],
                                                                          @{theory}),mu(lu,qTy)),
                                                                   close
                                                                     (var_a HOLogic.unitT,
                                                                      mu(call
                                                                           ("instruction.Store",
                                                                            @{typ instruction},
                                                                            call
                                                                              ("Store.StoreUnprivileged",
                                                                               @{typ Store},
                                                                               tp[lt,lf,
                                                                                  var_w("Rt",4),
                                                                                  var_w("Rn",4),
                                                                                  call
                                                                                    ("offset1.immediate_form1",
                                                                                     @{typ offset1},
                                                                                     mop(Cast w32,
                                                                                         mop(Cast w8,
                                                                                             ll[var_b"b'7",
                                                                                                var_b"b'6",
                                                                                                var_b"b'5",
                                                                                                var_b"b'4",
                                                                                                var_b"b'3",
                                                                                                var_b"b'2",
                                                                                                var_b"b'1",
                                                                                                var_b"b'0"])),
                                                                                     @{theory})],
                                                                               @{theory}),@{theory}),
                                                                         qTy))),
                                                                call
                                                                  ("Skip",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (instruction \<times> state)"},
                                                                   lu,@{theory}))))))))),
                                         (bop(And,mop(Not,var_b"b'23"),var_b"b'11"),
                                          let'
                                            (var_w("Rn",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                             let'
                                               (var_w("W",1),mop(Cast w1,ll[var_b"b'8"]),
                                                let'
                                                  (var_w("P",1),mop(Cast w1,ll[var_b"b'10"]),
                                                   let'
                                                     (var_w("Rt",4),
                                                      mop(Cast w4,
                                                          ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                             var_b"b'12"]),
                                                      mb(call
                                                           ("ThumbCondition",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (4 word \<times> state)"},lu,@{theory}),
                                                         close
                                                           (var_w("v",4),
                                                            mb(mb(mb(call
                                                                       ("HaveThumb2",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (bool \<times> state)"},lu,
                                                                        @{theory}),
                                                                     close
                                                                       (var_b"v0",
                                                                        mb(mb(mu(bop(And,
                                                                                     bop(Or,
                                                                                         eq(var_w("P",1),
                                                                                            lw(1,1)),
                                                                                         eq(var_w("W",1),
                                                                                            lw(1,1))),
                                                                                     var_b"v0"),qTy),
                                                                              close
                                                                                (var_b"v",
                                                                                 mu(bop(And,
                                                                                        mop(Not,
                                                                                            eq(var_w("Rn",4),
                                                                                               lw(15,
                                                                                                  4))),
                                                                                        var_b"v"),
                                                                                    qTy))),
                                                                           close
                                                                             (var_b"v0",
                                                                              mu(tp[var_w("v",4),
                                                                                    var_b"v0"],qTy))))),
                                                                  close
                                                                    (var("v",
                                                                         @{typ
                                                                         "4 word \<times> bool"}),
                                                                     call
                                                                       ("Do",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (bool \<times> state)"},
                                                                        var("v",
                                                                            @{typ
                                                                            "4 word \<times> bool"}),
                                                                        @{theory}))),
                                                               close
                                                                 (var_b"b",
                                                                  ite(var_b"b",
                                                                      let'
                                                                        (var_b"wback",
                                                                         eq(var_w("W",1),lw(1,1)),
                                                                         mb(ite(bop(Or,
                                                                                    eq(var_w("Rt",4),
                                                                                       lw(15,4)),
                                                                                    bop(And,
                                                                                        var_b"wback",
                                                                                        eq(var_w("Rn",4),
                                                                                           var_w("Rt",4)))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "Store (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Store",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Store.StoreWord",
                                                                                        @{typ Store},
                                                                                        tp[eq(mop(Cast
                                                                                                    w1,
                                                                                                  ll[var_b"b'9"]),
                                                                                              lw(1,1)),
                                                                                           eq(var_w("P",1),
                                                                                              lw(1,1)),
                                                                                           var_b"wback",
                                                                                           var_w("Rt",4),
                                                                                           var_w("Rn",4),
                                                                                           call
                                                                                             ("offset1.immediate_form1",
                                                                                              @{typ offset1},
                                                                                              mop(Cast
                                                                                                    w32,
                                                                                                  mop(Cast
                                                                                                        w8,
                                                                                                      ll[var_b"b'7",
                                                                                                         var_b"b'6",
                                                                                                         var_b"b'5",
                                                                                                         var_b"b'4",
                                                                                                         var_b"b'3",
                                                                                                         var_b"b'2",
                                                                                                         var_b"b'1",
                                                                                                         var_b"b'0"])),
                                                                                              @{theory})],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                      call
                                                                        ("Skip",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (instruction \<times>
                                                                           state)"},lu,@{theory}))))))))))),
                                         (var_b"b'23",
                                          let'
                                            (var_w("Rn",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                             let'
                                               (var_w("Rt",4),
                                                mop(Cast w4,
                                                    ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                       var_b"b'12"]),
                                                mb(call
                                                     ("ThumbCondition",
                                                      @{typ
                                                      "state \<Rightarrow> (4 word \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_w("v",4),
                                                      mb(mb(mb(call
                                                                 ("HaveThumb2",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},lu,
                                                                  @{theory}),
                                                               close
                                                                 (var_b"v0",
                                                                  mb(mu(bop(And,
                                                                            mop(Not,
                                                                                eq(var_w("Rn",4),
                                                                                   lw(15,4))),
                                                                            var_b"v0"),qTy),
                                                                     close
                                                                       (var_b"v0",
                                                                        mu(tp[var_w("v",4),var_b"v0"],
                                                                           qTy))))),
                                                            close
                                                              (var("v",@{typ "4 word \<times> bool"}),
                                                               call
                                                                 ("Do",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},
                                                                  var("v",
                                                                      @{typ "4 word \<times> bool"}),
                                                                  @{theory}))),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                mb(ite(eq(var_w("Rt",4),lw(15,4)),
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"Store (immediate)"],
                                                                          @{theory}),mu(lu,qTy)),
                                                                   close
                                                                     (var_a HOLogic.unitT,
                                                                      mu(call
                                                                           ("instruction.Store",
                                                                            @{typ instruction},
                                                                            call
                                                                              ("Store.StoreWord",
                                                                               @{typ Store},
                                                                               tp[lt,lt,lf,
                                                                                  var_w("Rt",4),
                                                                                  var_w("Rn",4),
                                                                                  call
                                                                                    ("offset1.immediate_form1",
                                                                                     @{typ offset1},
                                                                                     mop(Cast w32,
                                                                                         mop(Cast
                                                                                               (Word_Lib.mk_wordT 12),
                                                                                             ll[var_b"b'11",
                                                                                                var_b"b'10",
                                                                                                var_b"b'9",
                                                                                                var_b"b'8",
                                                                                                var_b"b'7",
                                                                                                var_b"b'6",
                                                                                                var_b"b'5",
                                                                                                var_b"b'4",
                                                                                                var_b"b'3",
                                                                                                var_b"b'2",
                                                                                                var_b"b'1",
                                                                                                var_b"b'0"])),
                                                                                     @{theory})],
                                                                               @{theory}),@{theory}),
                                                                         qTy))),
                                                                call
                                                                  ("Skip",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (instruction \<times> state)"},
                                                                   lu,@{theory})))))))))],
                                        call
                                          ("UndefinedThumb",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           lu,@{theory})))],
                                  call
                                    ("UndefinedThumb",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))),
                             (var_b"b'20",
                              ite(bop(And,var_b"b'31",
                                      bop(And,var_b"b'30",bop(And,var_b"b'29",mop(Not,var_b"b'26")))),
                                  itb([(bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'21",
                                                bop(And,var_b"b'19",
                                                    bop(And,var_b"b'18",
                                                        bop(And,var_b"b'17",
                                                            bop(And,var_b"b'16",
                                                                bop(And,var_b"b'15",
                                                                    bop(And,var_b"b'14",
                                                                        bop(And,var_b"b'13",
                                                                            var_b"b'12"))))))))),
                                        mb(call
                                             ("DECODE_UNPREDICTABLE",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              tp[var("mc",@{typ MachineCode}),ls"PreloadDataLiteral"],
                                              @{theory}),
                                           close(var_a HOLogic.unitT,mu(lx @{typ instruction},qTy)))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'19",
                                                bop(And,var_b"b'18",
                                                    bop(And,var_b"b'17",
                                                        bop(And,var_b"b'16",
                                                            bop(And,var_b"b'15",
                                                                bop(And,var_b"b'14",
                                                                    bop(And,var_b"b'13",var_b"b'12")))))))),
                                        mb(call
                                             ("ThumbCondition",
                                              @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                              lu,@{theory}),
                                           close
                                             (var_w("v",4),
                                              mb(mb(mb(call
                                                         ("HaveThumb2",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v0",
                                                          mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mu(call
                                                             ("instruction.Hint",@{typ instruction},
                                                              call
                                                                ("Hint.PreloadDataLiteral",
                                                                 @{typ Hint},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),
                                                                    mop(Cast w32,
                                                                        mop(Cast
                                                                              (Word_Lib.mk_wordT 12),
                                                                            ll[var_b"b'11",
                                                                               var_b"b'10",
                                                                               var_b"b'9",
                                                                               var_b"b'8",
                                                                               var_b"b'7",
                                                                               var_b"b'6",
                                                                               var_b"b'5",
                                                                               var_b"b'4",
                                                                               var_b"b'3",
                                                                               var_b"b'2",
                                                                               var_b"b'1",var_b"b'0"]))],
                                                                 @{theory}),@{theory}),qTy),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory}))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,mop(Not,var_b"b'21"),
                                                bop(And,var_b"b'19",
                                                    bop(And,var_b"b'18",
                                                        bop(And,var_b"b'17",
                                                            bop(And,var_b"b'16",
                                                                bop(And,var_b"b'15",
                                                                    bop(And,var_b"b'14",
                                                                        bop(And,var_b"b'13",
                                                                            var_b"b'12"))))))))),
                                        mb(call
                                             ("ThumbCondition",
                                              @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                              lu,@{theory}),
                                           close
                                             (var_w("v",4),
                                              mb(mb(mb(call
                                                         ("ArchVersion",
                                                          @{typ
                                                          "state \<Rightarrow> (nat \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_n"v0",
                                                          mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mu(call
                                                             ("instruction.Hint",@{typ instruction},
                                                              call
                                                                ("Hint.PreloadInstruction",
                                                                 @{typ Hint},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                       lw(1,1)),lw(15,4),
                                                                    call
                                                                      ("offset1.immediate_form1",
                                                                       @{typ offset1},
                                                                       mop(Cast w32,
                                                                           mop(Cast
                                                                                 (Word_Lib.mk_wordT 12),
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8",
                                                                                  var_b"b'7",
                                                                                  var_b"b'6",
                                                                                  var_b"b'5",
                                                                                  var_b"b'4",
                                                                                  var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])),
                                                                       @{theory})],@{theory}),
                                                              @{theory}),qTy),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory}))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,var_b"b'23",
                                                bop(And,mop(Not,var_b"b'21"),
                                                    bop(And,var_b"b'15",
                                                        bop(And,var_b"b'14",
                                                            bop(And,var_b"b'13",var_b"b'12")))))),
                                        mb(call
                                             ("ThumbCondition",
                                              @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                              lu,@{theory}),
                                           close
                                             (var_w("v",4),
                                              mb(mb(mb(call
                                                         ("ArchVersion",
                                                          @{typ
                                                          "state \<Rightarrow> (nat \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_n"v0",
                                                          mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mu(call
                                                             ("instruction.Hint",@{typ instruction},
                                                              call
                                                                ("Hint.PreloadInstruction",
                                                                 @{typ Hint},
                                                                 tp[lt,
                                                                    mop(Cast w4,
                                                                        ll[var_b"b'19",var_b"b'18",
                                                                           var_b"b'17",var_b"b'16"]),
                                                                    call
                                                                      ("offset1.immediate_form1",
                                                                       @{typ offset1},
                                                                       mop(Cast w32,
                                                                           mop(Cast
                                                                                 (Word_Lib.mk_wordT 12),
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8",
                                                                                  var_b"b'7",
                                                                                  var_b"b'6",
                                                                                  var_b"b'5",
                                                                                  var_b"b'4",
                                                                                  var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])),
                                                                       @{theory})],@{theory}),
                                                              @{theory}),qTy),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory}))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,var_b"b'23",
                                                bop(And,var_b"b'15",
                                                    bop(And,var_b"b'14",
                                                        bop(And,var_b"b'13",var_b"b'12"))))),
                                        let'
                                          (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                           mb(call
                                                ("ThumbCondition",
                                                 @{typ
                                                 "state \<Rightarrow> (4 word \<times> state)"},lu,
                                                 @{theory}),
                                              close
                                                (var_w("v",4),
                                                 mb(mb(mb(ite(eq(var_w("W",1),lw(1,1)),
                                                              call
                                                                ("HaveMPExt",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (bool \<times> state)"},lu,
                                                                 @{theory}),
                                                              call
                                                                ("HaveThumb2",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (bool \<times> state)"},lu,
                                                                 @{theory})),
                                                          close
                                                            (var_b"v0",
                                                             mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mu(call
                                                                ("instruction.Hint",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Hint.PreloadData",@{typ Hint},
                                                                    tp[lt,eq(var_w("W",1),lw(1,1)),
                                                                       mop(Cast w4,
                                                                           ll[var_b"b'19",
                                                                              var_b"b'18",
                                                                              var_b"b'17",
                                                                              var_b"b'16"]),
                                                                       call
                                                                         ("offset1.immediate_form1",
                                                                          @{typ offset1},
                                                                          mop(Cast w32,
                                                                              mop(Cast
                                                                                    (Word_Lib.mk_wordT 12),
                                                                                  ll[var_b"b'11",
                                                                                     var_b"b'10",
                                                                                     var_b"b'9",
                                                                                     var_b"b'8",
                                                                                     var_b"b'7",
                                                                                     var_b"b'6",
                                                                                     var_b"b'5",
                                                                                     var_b"b'4",
                                                                                     var_b"b'3",
                                                                                     var_b"b'2",
                                                                                     var_b"b'1",
                                                                                     var_b"b'0"])),
                                                                          @{theory})],@{theory}),
                                                                 @{theory}),qTy),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory})))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,var_b"b'21",
                                                bop(And,var_b"b'19",
                                                    bop(And,var_b"b'18",
                                                        bop(And,var_b"b'17",
                                                            bop(And,var_b"b'16",
                                                                bop(And,var_b"b'15",
                                                                    bop(And,var_b"b'14",
                                                                        bop(And,var_b"b'13",
                                                                            var_b"b'12"))))))))),
                                        mu(Term.Const
                                             (@{const_name "NoOperation"},@{typ instruction}),qTy)),
                                       (bop(And,var_b"b'19",
                                            bop(And,var_b"b'18",bop(And,var_b"b'17",var_b"b'16"))),
                                        let'
                                          (var_w("Rt",4),
                                           mop(Cast w4,
                                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                           mb(call
                                                ("ThumbCondition",
                                                 @{typ
                                                 "state \<Rightarrow> (4 word \<times> state)"},lu,
                                                 @{theory}),
                                              close
                                                (var_w("v",4),
                                                 mb(mb(mb(call
                                                            ("HaveThumb2",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_b"v0",
                                                             mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mb(ite(eq(var_w("Rt",4),lw(13,4)),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls
                                                                         "LoadByteLiteral/LoadHalfLiteral"],
                                                                     @{theory}),mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(let'
                                                                      (var_w("imm32",32),
                                                                       mop(Cast w32,
                                                                           mop(Cast
                                                                                 (Word_Lib.mk_wordT 12),
                                                                               ll[var_b"b'11",
                                                                                  var_b"b'10",
                                                                                  var_b"b'9",
                                                                                  var_b"b'8",
                                                                                  var_b"b'7",
                                                                                  var_b"b'6",
                                                                                  var_b"b'5",
                                                                                  var_b"b'4",
                                                                                  var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])),
                                                                       let'
                                                                         (var_b"add",
                                                                          eq(mop(Cast w1,
                                                                                 ll[var_b"b'23"]),
                                                                             lw(1,1)),
                                                                          let'
                                                                            (var_b"unsigned",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'24"]),
                                                                                lw(0,1)),
                                                                             ite(eq(mop(Cast w1,
                                                                                        ll[var_b"b'21"]),
                                                                                    lw(1,1)),
                                                                                 call
                                                                                   ("instruction.Load",
                                                                                    @{typ instruction},
                                                                                    call
                                                                                      ("Load.LoadHalfLiteral",
                                                                                       @{typ Load},
                                                                                       tp[var_b"unsigned",
                                                                                          var_b"add",
                                                                                          var_w("Rt",4),
                                                                                          var_w("imm32",32)],
                                                                                       @{theory}),
                                                                                    @{theory}),
                                                                                 call
                                                                                   ("instruction.Load",
                                                                                    @{typ instruction},
                                                                                    call
                                                                                      ("Load.LoadByteLiteral",
                                                                                       @{typ Load},
                                                                                       tp[var_b"unsigned",
                                                                                          var_b"add",
                                                                                          var_w("Rt",4),
                                                                                          var_w("imm32",32)],
                                                                                       @{theory}),
                                                                                    @{theory}))))),
                                                                    qTy))),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory})))))))),
                                       (var_b"b'23",
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rt",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(call
                                                               ("HaveThumb2",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(ite(eq(var_w("Rt",4),lw(13,4)),
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls
                                                                            "LoadByte/LoadHalf (immediate)"],
                                                                        @{theory}),mu(lu,qTy)),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(let'
                                                                         (var_b"add",lt,
                                                                          let'
                                                                            (var_b"index",lt,
                                                                             let'
                                                                               (var_b"wback",lf,
                                                                                let'
                                                                                  (var("m",
                                                                                       @{typ offset1}),
                                                                                   call
                                                                                     ("offset1.immediate_form1",
                                                                                      @{typ offset1},
                                                                                      mop(Cast w32,
                                                                                          mop(Cast
                                                                                                (Word_Lib.mk_wordT 12),
                                                                                              ll[var_b"b'11",
                                                                                                 var_b"b'10",
                                                                                                 var_b"b'9",
                                                                                                 var_b"b'8",
                                                                                                 var_b"b'7",
                                                                                                 var_b"b'6",
                                                                                                 var_b"b'5",
                                                                                                 var_b"b'4",
                                                                                                 var_b"b'3",
                                                                                                 var_b"b'2",
                                                                                                 var_b"b'1",
                                                                                                 var_b"b'0"])),
                                                                                      @{theory}),
                                                                                   let'
                                                                                     (var_b"unsigned",
                                                                                      eq(mop(Cast w1,
                                                                                             ll[var_b"b'24"]),
                                                                                         lw(0,1)),
                                                                                      ite(eq(mop(Cast
                                                                                                   w1,
                                                                                                 ll[var_b"b'21"]),
                                                                                             lw(1,1)),
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadHalf",
                                                                                                @{typ Load},
                                                                                                tp[var_b"unsigned",
                                                                                                   var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory}),
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadByte",
                                                                                                @{typ Load},
                                                                                                tp[var_b"unsigned",
                                                                                                   var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory}))))))),
                                                                       qTy))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,var_b"b'15",
                                                    bop(And,var_b"b'14",
                                                        bop(And,var_b"b'13",
                                                            bop(And,var_b"b'12",
                                                                bop(And,var_b"b'11",
                                                                    bop(And,var_b"b'10",
                                                                        bop(And,mop(Not,var_b"b'9"),
                                                                            mop(Not,var_b"b'8")))))))))),
                                        let'
                                          (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                           mb(call
                                                ("ThumbCondition",
                                                 @{typ
                                                 "state \<Rightarrow> (4 word \<times> state)"},lu,
                                                 @{theory}),
                                              close
                                                (var_w("v",4),
                                                 mb(mb(mb(ite(eq(var_w("W",1),lw(1,1)),
                                                              call
                                                                ("HaveMPExt",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (bool \<times> state)"},lu,
                                                                 @{theory}),
                                                              call
                                                                ("HaveThumb2",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (bool \<times> state)"},lu,
                                                                 @{theory})),
                                                          close
                                                            (var_b"v0",
                                                             mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mu(call
                                                                ("instruction.Hint",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("Hint.PreloadData",@{typ Hint},
                                                                    tp[lf,eq(var_w("W",1),lw(1,1)),
                                                                       mop(Cast w4,
                                                                           ll[var_b"b'19",
                                                                              var_b"b'18",
                                                                              var_b"b'17",
                                                                              var_b"b'16"]),
                                                                       call
                                                                         ("offset1.immediate_form1",
                                                                          @{typ offset1},
                                                                          mop(Cast w32,
                                                                              mop(Cast w8,
                                                                                  ll[var_b"b'7",
                                                                                     var_b"b'6",
                                                                                     var_b"b'5",
                                                                                     var_b"b'4",
                                                                                     var_b"b'3",
                                                                                     var_b"b'2",
                                                                                     var_b"b'1",
                                                                                     var_b"b'0"])),
                                                                          @{theory})],@{theory}),
                                                                 @{theory}),qTy),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory})))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,mop(Not,var_b"b'21"),
                                                    bop(And,var_b"b'15",
                                                        bop(And,var_b"b'14",
                                                            bop(And,var_b"b'13",
                                                                bop(And,var_b"b'12",
                                                                    bop(And,var_b"b'11",
                                                                        bop(And,var_b"b'10",
                                                                            bop(And,
                                                                                mop(Not,var_b"b'9"),
                                                                                mop(Not,var_b"b'8"))))))))))),
                                        mb(call
                                             ("ThumbCondition",
                                              @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                              lu,@{theory}),
                                           close
                                             (var_w("v",4),
                                              mb(mb(mb(call
                                                         ("ArchVersion",
                                                          @{typ
                                                          "state \<Rightarrow> (nat \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_n"v0",
                                                          mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mu(call
                                                             ("instruction.Hint",@{typ instruction},
                                                              call
                                                                ("Hint.PreloadInstruction",
                                                                 @{typ Hint},
                                                                 tp[lf,
                                                                    mop(Cast w4,
                                                                        ll[var_b"b'19",var_b"b'18",
                                                                           var_b"b'17",var_b"b'16"]),
                                                                    call
                                                                      ("offset1.immediate_form1",
                                                                       @{typ offset1},
                                                                       mop(Cast w32,
                                                                           mop(Cast w8,
                                                                               ll[var_b"b'7",
                                                                                  var_b"b'6",
                                                                                  var_b"b'5",
                                                                                  var_b"b'4",
                                                                                  var_b"b'3",
                                                                                  var_b"b'2",
                                                                                  var_b"b'1",
                                                                                  var_b"b'0"])),
                                                                       @{theory})],@{theory}),
                                                              @{theory}),qTy),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory}))))))),
                                       (bop(And,mop(Not,var_b"b'23"),
                                            bop(And,var_b"b'11",
                                                bop(And,mop(Not,var_b"b'10"),mop(Not,var_b"b'8")))),
                                        mu(call
                                             ("instruction.Undefined",@{typ instruction},lw(0,32),
                                              @{theory}),qTy)),
                                       (bop(And,mop(Not,var_b"b'23"),
                                            bop(And,var_b"b'11",
                                                bop(And,var_b"b'10",
                                                    bop(And,var_b"b'9",mop(Not,var_b"b'8"))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rt",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(call
                                                               ("HaveThumb2",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(ite(bop(In,var_w("Rt",4),
                                                                         sl[lw(13,4),lw(15,4)]),
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"LoadUnprivileged"],
                                                                        @{theory}),mu(lu,qTy)),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(let'
                                                                         (var_b"add",lt,
                                                                          let'
                                                                            (var_b"postindex",lf,
                                                                             let'
                                                                               (var_b"unsigned",
                                                                                eq(mop(Cast w1,
                                                                                       ll[var_b"b'24"]),
                                                                                   lw(0,1)),
                                                                                let'
                                                                                  (var_w("imm32",32),
                                                                                   mop(Cast w32,
                                                                                       mop(Cast w8,
                                                                                           ll[var_b"b'7",
                                                                                              var_b"b'6",
                                                                                              var_b"b'5",
                                                                                              var_b"b'4",
                                                                                              var_b"b'3",
                                                                                              var_b"b'2",
                                                                                              var_b"b'1",
                                                                                              var_b"b'0"])),
                                                                                   let'
                                                                                     (var("m",
                                                                                          @{typ offset2}),
                                                                                      call
                                                                                        ("offset2.immediate_form2",
                                                                                         @{typ offset2},
                                                                                         var_w("imm32",32),
                                                                                         @{theory}),
                                                                                      itb([(eq(mop(Cast
                                                                                                     w1,
                                                                                                   ll[var_b"b'21"]),
                                                                                               lw(1,
                                                                                                  1)),
                                                                                            call
                                                                                              ("instruction.Load",
                                                                                               @{typ instruction},
                                                                                               call
                                                                                                 ("Load.LoadHalfUnprivileged",
                                                                                                  @{typ Load},
                                                                                                  tp[var_b"unsigned",
                                                                                                     var_b"add",
                                                                                                     var_b"postindex",
                                                                                                     var_w("Rt",4),
                                                                                                     var_w("Rn",4),
                                                                                                     var("m",
                                                                                                         @{typ offset2})],
                                                                                                  @{theory}),
                                                                                               @{theory})),
                                                                                           (var_b"unsigned",
                                                                                            call
                                                                                              ("instruction.Load",
                                                                                               @{typ instruction},
                                                                                               call
                                                                                                 ("Load.LoadByteUnprivileged",
                                                                                                  @{typ Load},
                                                                                                  tp[var_b"add",
                                                                                                     var_b"postindex",
                                                                                                     var_w("Rt",4),
                                                                                                     var_w("Rn",4),
                                                                                                     call
                                                                                                       ("offset1.immediate_form1",
                                                                                                        @{typ offset1},
                                                                                                        var_w("imm32",32),
                                                                                                        @{theory})],
                                                                                                  @{theory}),
                                                                                               @{theory}))],
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadSignedByteUnprivileged",
                                                                                                @{typ Load},
                                                                                                tp[var_b"add",
                                                                                                   var_b"postindex",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset2})],
                                                                                                @{theory}),
                                                                                             @{theory}))))))),
                                                                       qTy))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,var_b"b'21",
                                                    bop(And,var_b"b'15",
                                                        bop(And,var_b"b'14",
                                                            bop(And,var_b"b'13",
                                                                bop(And,var_b"b'12",
                                                                    bop(And,var_b"b'11",
                                                                        bop(And,var_b"b'10",
                                                                            bop(And,
                                                                                mop(Not,var_b"b'9"),
                                                                                mop(Not,var_b"b'8"))))))))))),
                                        mu(Term.Const
                                             (@{const_name "NoOperation"},@{typ instruction}),qTy)),
                                       (bop(And,mop(Not,var_b"b'23"),var_b"b'11"),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rt",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(call
                                                               ("HaveThumb2",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              let'
                                                                (var_b"wback",
                                                                 eq(mop(Cast w1,ll[var_b"b'8"]),
                                                                    lw(1,1)),
                                                                 mb(ite(bop(Or,
                                                                            eq(var_w("Rt",4),
                                                                               lw(13,4)),
                                                                            bop(Or,
                                                                                bop(And,
                                                                                    eq(var_w("Rt",4),
                                                                                       lw(15,4)),
                                                                                    var_b"wback"),
                                                                                bop(And,
                                                                                    var_b"wback",
                                                                                    eq(var_w("Rn",4),
                                                                                       var_w("Rt",4))))),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"Load (immediate)"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(let'
                                                                            (var_b"add",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'9"]),
                                                                                lw(1,1)),
                                                                             let'
                                                                               (var_b"index",
                                                                                eq(mop(Cast w1,
                                                                                       ll[var_b"b'10"]),
                                                                                   lw(1,1)),
                                                                                let'
                                                                                  (var_b"unsigned",
                                                                                   eq(mop(Cast w1,
                                                                                          ll[var_b"b'24"]),
                                                                                      lw(0,1)),
                                                                                   let'
                                                                                     (var("m",
                                                                                          @{typ offset1}),
                                                                                      call
                                                                                        ("offset1.immediate_form1",
                                                                                         @{typ offset1},
                                                                                         mop(Cast
                                                                                               w32,
                                                                                             mop(Cast
                                                                                                   w8,
                                                                                                 ll[var_b"b'7",
                                                                                                    var_b"b'6",
                                                                                                    var_b"b'5",
                                                                                                    var_b"b'4",
                                                                                                    var_b"b'3",
                                                                                                    var_b"b'2",
                                                                                                    var_b"b'1",
                                                                                                    var_b"b'0"])),
                                                                                         @{theory}),
                                                                                      ite(eq(mop(Cast
                                                                                                   w1,
                                                                                                 ll[var_b"b'21"]),
                                                                                             lw(1,1)),
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadHalf",
                                                                                                @{typ Load},
                                                                                                tp[var_b"unsigned",
                                                                                                   var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory}),
                                                                                          call
                                                                                            ("instruction.Load",
                                                                                             @{typ instruction},
                                                                                             call
                                                                                               ("Load.LoadByte",
                                                                                                @{typ Load},
                                                                                                tp[var_b"unsigned",
                                                                                                   var_b"add",
                                                                                                   var_b"index",
                                                                                                   var_b"wback",
                                                                                                   var_w("Rt",4),
                                                                                                   var_w("Rn",4),
                                                                                                   var("m",
                                                                                                       @{typ offset1})],
                                                                                                @{theory}),
                                                                                             @{theory})))))),
                                                                          qTy)))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))),
                                       (bop(And,mop(Not,var_b"b'24"),
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,var_b"b'15",
                                                    bop(And,var_b"b'14",
                                                        bop(And,var_b"b'13",
                                                            bop(And,var_b"b'12",
                                                                bop(And,mop(Not,var_b"b'11"),
                                                                    bop(And,mop(Not,var_b"b'10"),
                                                                        bop(And,mop(Not,var_b"b'9"),
                                                                            bop(And,
                                                                                mop(Not,var_b"b'8"),
                                                                                bop(And,
                                                                                    mop(Not,
                                                                                        var_b"b'7"),
                                                                                    mop(Not,
                                                                                        var_b"b'6")))))))))))),
                                        let'
                                          (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(ite(eq(var_w("W",1),lw(1,1)),
                                                                 call
                                                                   ("HaveMPExt",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (bool \<times> state)"},lu,
                                                                    @{theory}),
                                                                 call
                                                                   ("HaveThumb2",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (bool \<times> state)"},lu,
                                                                    @{theory})),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(ite(bop(In,var_w("Rm",4),
                                                                         sl[lw(13,4),lw(15,4)]),
                                                                     call
                                                                       ("DECODE_UNPREDICTABLE",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[var("mc",
                                                                               @{typ MachineCode}),
                                                                           ls"PreloadData"],
                                                                        @{theory}),mu(lu,qTy)),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(call
                                                                         ("instruction.Hint",
                                                                          @{typ instruction},
                                                                          call
                                                                            ("Hint.PreloadData",
                                                                             @{typ Hint},
                                                                             tp[lt,
                                                                                eq(var_w("W",1),
                                                                                   lw(1,1)),
                                                                                mop(Cast w4,
                                                                                    ll[var_b"b'19",
                                                                                       var_b"b'18",
                                                                                       var_b"b'17",
                                                                                       var_b"b'16"]),
                                                                                call
                                                                                  ("offset1.register_form1",
                                                                                   @{typ offset1},
                                                                                   tp[var_w("Rm",4),
                                                                                      lc("SRType_LSL",
                                                                                         "SRType",
                                                                                         @{theory}),
                                                                                      mop(Cast
                                                                                            HOLogic.natT,
                                                                                          mop(Cast
                                                                                                (Word_Lib.mk_wordT 2),
                                                                                              ll[var_b"b'5",
                                                                                                 var_b"b'4"]))],
                                                                                   @{theory})],
                                                                             @{theory}),@{theory}),
                                                                       qTy))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,mop(Not,var_b"b'21"),
                                                    bop(And,var_b"b'15",
                                                        bop(And,var_b"b'14",
                                                            bop(And,var_b"b'13",
                                                                bop(And,var_b"b'12",
                                                                    bop(And,mop(Not,var_b"b'11"),
                                                                        bop(And,
                                                                            mop(Not,var_b"b'10"),
                                                                            bop(And,
                                                                                mop(Not,var_b"b'9"),
                                                                                bop(And,
                                                                                    mop(Not,
                                                                                        var_b"b'8"),
                                                                                    bop(And,
                                                                                        mop(Not,
                                                                                            var_b"b'7"),
                                                                                        mop(Not,
                                                                                            var_b"b'6"))))))))))))),
                                        let'
                                          (var_w("Rm",4),
                                           mop(Cast w4,
                                               ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                           mb(call
                                                ("ThumbCondition",
                                                 @{typ
                                                 "state \<Rightarrow> (4 word \<times> state)"},lu,
                                                 @{theory}),
                                              close
                                                (var_w("v",4),
                                                 mb(mb(mb(call
                                                            ("ArchVersion",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (nat \<times> state)"},lu,@{theory}),
                                                          close
                                                            (var_n"v0",
                                                             mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                       close
                                                         (var("v",@{typ "4 word \<times> bool"}),
                                                          call
                                                            ("Do",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (bool \<times> state)"},
                                                             var("v",@{typ "4 word \<times> bool"}),
                                                             @{theory}))),
                                                    close
                                                      (var_b"b",
                                                       ite(var_b"b",
                                                           mb(ite(bop(In,var_w("Rm",4),
                                                                      sl[lw(13,4),lw(15,4)]),
                                                                  call
                                                                    ("DECODE_UNPREDICTABLE",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     tp[var("mc",@{typ MachineCode}),
                                                                        ls"PreloadInstruction"],
                                                                     @{theory}),mu(lu,qTy)),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.Hint",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Hint.PreloadInstruction",
                                                                          @{typ Hint},
                                                                          tp[lt,
                                                                             mop(Cast w4,
                                                                                 ll[var_b"b'19",
                                                                                    var_b"b'18",
                                                                                    var_b"b'17",
                                                                                    var_b"b'16"]),
                                                                             call
                                                                               ("offset1.register_form1",
                                                                                @{typ offset1},
                                                                                tp[var_w("Rm",4),
                                                                                   lc("SRType_LSL",
                                                                                      "SRType",
                                                                                      @{theory}),
                                                                                   mop(Cast
                                                                                         HOLogic.natT,
                                                                                       mop(Cast
                                                                                             (Word_Lib.mk_wordT 2),
                                                                                           ll[var_b"b'5",
                                                                                              var_b"b'4"]))],
                                                                                @{theory})],
                                                                          @{theory}),@{theory}),qTy))),
                                                           call
                                                             ("Skip",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (instruction \<times> state)"},lu,
                                                              @{theory})))))))),
                                       (bop(And,var_b"b'24",
                                            bop(And,mop(Not,var_b"b'23"),
                                                bop(And,var_b"b'21",
                                                    bop(And,var_b"b'15",
                                                        bop(And,var_b"b'14",
                                                            bop(And,var_b"b'13",
                                                                bop(And,var_b"b'12",
                                                                    bop(And,mop(Not,var_b"b'11"),
                                                                        bop(And,
                                                                            mop(Not,var_b"b'10"),
                                                                            bop(And,
                                                                                mop(Not,var_b"b'9"),
                                                                                bop(And,
                                                                                    mop(Not,
                                                                                        var_b"b'8"),
                                                                                    bop(And,
                                                                                        mop(Not,
                                                                                            var_b"b'7"),
                                                                                        mop(Not,
                                                                                            var_b"b'6"))))))))))))),
                                        mu(Term.Const
                                             (@{const_name "NoOperation"},@{typ instruction}),qTy)),
                                       (bop(And,mop(Not,var_b"b'23"),
                                            bop(And,mop(Not,var_b"b'11"),
                                                bop(And,mop(Not,var_b"b'10"),
                                                    bop(And,mop(Not,var_b"b'9"),
                                                        bop(And,mop(Not,var_b"b'8"),
                                                            bop(And,mop(Not,var_b"b'7"),
                                                                mop(Not,var_b"b'6"))))))),
                                        let'
                                          (var_w("Rn",4),
                                           mop(Cast w4,
                                               ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                           let'
                                             (var_w("Rm",4),
                                              mop(Cast w4,
                                                  ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                              let'
                                                (var_w("Rt",4),
                                                 mop(Cast w4,
                                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                        var_b"b'12"]),
                                                 mb(call
                                                      ("ThumbCondition",
                                                       @{typ
                                                       "state \<Rightarrow> (4 word \<times> state)"},
                                                       lu,@{theory}),
                                                    close
                                                      (var_w("v",4),
                                                       mb(mb(mb(call
                                                                  ("HaveThumb2",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},lu,
                                                                   @{theory}),
                                                                close
                                                                  (var_b"v0",
                                                                   mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                             close
                                                               (var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                call
                                                                  ("Do",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (bool \<times> state)"},
                                                                   var("v",
                                                                       @{typ "4 word \<times> bool"}),
                                                                   @{theory}))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(ite(bop(Or,
                                                                            eq(var_w("Rt",4),
                                                                               lw(13,4)),
                                                                            bop(In,var_w("Rm",4),
                                                                                sl[lw(13,4),lw(15,4)])),
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls"Load (register)"],
                                                                           @{theory}),mu(lu,qTy)),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mu(let'
                                                                            (var_b"add",lt,
                                                                             let'
                                                                               (var_b"index",lt,
                                                                                let'
                                                                                  (var_b"wback",lf,
                                                                                   let'
                                                                                     (var_b"unsigned",
                                                                                      eq(mop(Cast w1,
                                                                                             ll[var_b"b'24"]),
                                                                                         lw(0,1)),
                                                                                      let'
                                                                                        (var("m",
                                                                                             @{typ offset1}),
                                                                                         call
                                                                                           ("offset1.register_form1",
                                                                                            @{typ offset1},
                                                                                            tp[var_w("Rm",4),
                                                                                               lc("SRType_LSL",
                                                                                                  "SRType",
                                                                                                  @{theory}),
                                                                                               mop(Cast
                                                                                                     HOLogic.natT,
                                                                                                   mop(Cast
                                                                                                         (Word_Lib.mk_wordT 2),
                                                                                                       ll[var_b"b'5",
                                                                                                          var_b"b'4"]))],
                                                                                            @{theory}),
                                                                                         ite(eq(mop(Cast
                                                                                                      w1,
                                                                                                    ll[var_b"b'21"]),
                                                                                                lw(1,
                                                                                                   1)),
                                                                                             call
                                                                                               ("instruction.Load",
                                                                                                @{typ instruction},
                                                                                                call
                                                                                                  ("Load.LoadHalf",
                                                                                                   @{typ Load},
                                                                                                   tp[var_b"unsigned",
                                                                                                      var_b"add",
                                                                                                      var_b"index",
                                                                                                      var_b"wback",
                                                                                                      var_w("Rt",4),
                                                                                                      var_w("Rn",4),
                                                                                                      var("m",
                                                                                                          @{typ offset1})],
                                                                                                   @{theory}),
                                                                                                @{theory}),
                                                                                             call
                                                                                               ("instruction.Load",
                                                                                                @{typ instruction},
                                                                                                call
                                                                                                  ("Load.LoadByte",
                                                                                                   @{typ Load},
                                                                                                   tp[var_b"unsigned",
                                                                                                      var_b"add",
                                                                                                      var_b"index",
                                                                                                      var_b"wback",
                                                                                                      var_w("Rt",4),
                                                                                                      var_w("Rn",4),
                                                                                                      var("m",
                                                                                                          @{typ offset1})],
                                                                                                   @{theory}),
                                                                                                @{theory}))))))),
                                                                          qTy))),
                                                                 call
                                                                   ("Skip",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (instruction \<times> state)"},
                                                                    lu,@{theory}))))))))))],
                                      call
                                        ("UndefinedThumb",
                                         @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                         lu,@{theory})),
                                  call
                                    ("UndefinedThumb",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory}))),
                             (bop(And,var_b"b'31",
                                  bop(And,var_b"b'30",
                                      bop(And,var_b"b'29",
                                          bop(And,mop(Not,var_b"b'26"),mop(Not,var_b"b'24"))))),
                              itb([(bop(And,mop(Not,var_b"b'23"),
                                        bop(And,mop(Not,var_b"b'11"),
                                            bop(And,mop(Not,var_b"b'10"),
                                                bop(And,mop(Not,var_b"b'9"),
                                                    bop(And,mop(Not,var_b"b'8"),
                                                        bop(And,mop(Not,var_b"b'7"),
                                                            mop(Not,var_b"b'6"))))))),
                                    let'
                                      (var_w("Rn",4),
                                       mop(Cast w4,
                                           ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                       let'
                                         (var_w("Rm",4),
                                          mop(Cast w4,
                                              ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                          let'
                                            (var_w("Rt",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                             mb(call
                                                  ("ThumbCondition",
                                                   @{typ
                                                   "state \<Rightarrow> (4 word \<times> state)"},
                                                   lu,@{theory}),
                                                close
                                                  (var_w("v",4),
                                                   mb(mb(mb(call
                                                              ("HaveThumb2",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool \<times> state)"},lu,@{theory}),
                                                            close
                                                              (var_b"v0",
                                                               mb(mu(bop(And,
                                                                         mop(Not,
                                                                             eq(var_w("Rn",4),
                                                                                lw(15,4))),var_b"v0"),
                                                                     qTy),
                                                                  close
                                                                    (var_b"v0",
                                                                     mu(tp[var_w("v",4),var_b"v0"],
                                                                        qTy))))),
                                                         close
                                                           (var("v",@{typ "4 word \<times> bool"}),
                                                            call
                                                              ("Do",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool \<times> state)"},
                                                               var("v",@{typ "4 word \<times> bool"}),
                                                               @{theory}))),
                                                      close
                                                        (var_b"b",
                                                         ite(var_b"b",
                                                             mb(ite(bop(Or,
                                                                        bop(In,var_w("Rt",4),
                                                                            sl[lw(13,4),lw(15,4)]),
                                                                        bop(In,var_w("Rm",4),
                                                                            sl[lw(13,4),lw(15,4)])),
                                                                    call
                                                                      ("DECODE_UNPREDICTABLE",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[var("mc",
                                                                              @{typ MachineCode}),
                                                                          ls
                                                                           "StoreByte/Half (register)"],
                                                                       @{theory}),mu(lu,qTy)),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mu(let'
                                                                        (var_b"add",lt,
                                                                         let'
                                                                           (var_b"index",lt,
                                                                            let'
                                                                              (var_b"wback",lf,
                                                                               let'
                                                                                 (var("m",
                                                                                      @{typ offset1}),
                                                                                  call
                                                                                    ("offset1.register_form1",
                                                                                     @{typ offset1},
                                                                                     tp[var_w("Rm",4),
                                                                                        lc("SRType_LSL",
                                                                                           "SRType",
                                                                                           @{theory}),
                                                                                        mop(Cast
                                                                                              HOLogic.natT,
                                                                                            mop(Cast
                                                                                                  (Word_Lib.mk_wordT 2),
                                                                                                ll[var_b"b'5",
                                                                                                   var_b"b'4"]))],
                                                                                     @{theory}),
                                                                                  ite(eq(mop(Cast w1,
                                                                                             ll[var_b"b'21"]),
                                                                                         lw(1,1)),
                                                                                      call
                                                                                        ("instruction.Store",
                                                                                         @{typ instruction},
                                                                                         call
                                                                                           ("Store.StoreHalf",
                                                                                            @{typ Store},
                                                                                            tp[var_b"add",
                                                                                               var_b"index",
                                                                                               var_b"wback",
                                                                                               var_w("Rt",4),
                                                                                               var_w("Rn",4),
                                                                                               var("m",
                                                                                                   @{typ offset1})],
                                                                                            @{theory}),
                                                                                         @{theory}),
                                                                                      call
                                                                                        ("instruction.Store",
                                                                                         @{typ instruction},
                                                                                         call
                                                                                           ("Store.StoreByte",
                                                                                            @{typ Store},
                                                                                            tp[var_b"add",
                                                                                               var_b"index",
                                                                                               var_b"wback",
                                                                                               var_w("Rt",4),
                                                                                               var_w("Rn",4),
                                                                                               var("m",
                                                                                                   @{typ offset1})],
                                                                                            @{theory}),
                                                                                         @{theory})))))),
                                                                      qTy))),
                                                             call
                                                               ("Skip",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (instruction \<times> state)"},lu,
                                                                @{theory})))))))))),
                                   (bop(And,mop(Not,var_b"b'23"),
                                        bop(And,var_b"b'11",
                                            bop(And,var_b"b'10",
                                                bop(And,var_b"b'9",mop(Not,var_b"b'8"))))),
                                    let'
                                      (var_w("Rn",4),
                                       mop(Cast w4,
                                           ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                       let'
                                         (var_w("Rt",4),
                                          mop(Cast w4,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                          mb(call
                                               ("ThumbCondition",
                                                @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                                lu,@{theory}),
                                             close
                                               (var_w("v",4),
                                                mb(mb(mb(call
                                                           ("HaveThumb2",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},lu,@{theory}),
                                                         close
                                                           (var_b"v0",
                                                            mb(mu(bop(And,
                                                                      mop(Not,
                                                                          eq(var_w("Rn",4),lw(15,4))),
                                                                      var_b"v0"),qTy),
                                                               close
                                                                 (var_b"v0",
                                                                  mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                      close
                                                        (var("v",@{typ "4 word \<times> bool"}),
                                                         call
                                                           ("Do",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},
                                                            var("v",@{typ "4 word \<times> bool"}),
                                                            @{theory}))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          mb(ite(bop(In,var_w("Rt",4),
                                                                     sl[lw(13,4),lw(15,4)]),
                                                                 call
                                                                   ("DECODE_UNPREDICTABLE",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[var("mc",@{typ MachineCode}),
                                                                       ls
                                                                        "StoreByte/HalfUnprivileged"],
                                                                    @{theory}),mu(lu,qTy)),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mu(let'
                                                                     (var_b"add",lt,
                                                                      let'
                                                                        (var_b"postindex",lf,
                                                                         let'
                                                                           (var_w("imm32",32),
                                                                            mop(Cast w32,
                                                                                mop(Cast w8,
                                                                                    ll[var_b"b'7",
                                                                                       var_b"b'6",
                                                                                       var_b"b'5",
                                                                                       var_b"b'4",
                                                                                       var_b"b'3",
                                                                                       var_b"b'2",
                                                                                       var_b"b'1",
                                                                                       var_b"b'0"])),
                                                                            ite(eq(mop(Cast w1,
                                                                                       ll[var_b"b'21"]),
                                                                                   lw(1,1)),
                                                                                call
                                                                                  ("instruction.Store",
                                                                                   @{typ instruction},
                                                                                   call
                                                                                     ("Store.StoreHalfUnprivileged",
                                                                                      @{typ Store},
                                                                                      tp[var_b"add",
                                                                                         var_b"postindex",
                                                                                         var_w("Rt",4),
                                                                                         var_w("Rn",4),
                                                                                         call
                                                                                           ("offset2.immediate_form2",
                                                                                            @{typ offset2},
                                                                                            var_w("imm32",32),
                                                                                            @{theory})],
                                                                                      @{theory}),
                                                                                   @{theory}),
                                                                                call
                                                                                  ("instruction.Store",
                                                                                   @{typ instruction},
                                                                                   call
                                                                                     ("Store.StoreByteUnprivileged",
                                                                                      @{typ Store},
                                                                                      tp[var_b"add",
                                                                                         var_b"postindex",
                                                                                         var_w("Rt",4),
                                                                                         var_w("Rn",4),
                                                                                         call
                                                                                           ("offset1.immediate_form1",
                                                                                            @{typ offset1},
                                                                                            var_w("imm32",32),
                                                                                            @{theory})],
                                                                                      @{theory}),
                                                                                   @{theory}))))),
                                                                   qTy))),
                                                          call
                                                            ("Skip",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (instruction \<times> state)"},lu,
                                                             @{theory}))))))))),
                                   (bop(And,mop(Not,var_b"b'23"),var_b"b'11"),
                                    let'
                                      (var_w("Rn",4),
                                       mop(Cast w4,
                                           ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                       let'
                                         (var_w("W",1),mop(Cast w1,ll[var_b"b'8"]),
                                          let'
                                            (var_w("P",1),mop(Cast w1,ll[var_b"b'10"]),
                                             let'
                                               (var_w("Rt",4),
                                                mop(Cast w4,
                                                    ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                       var_b"b'12"]),
                                                mb(call
                                                     ("ThumbCondition",
                                                      @{typ
                                                      "state \<Rightarrow> (4 word \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_w("v",4),
                                                      mb(mb(mb(call
                                                                 ("HaveThumb2",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},lu,
                                                                  @{theory}),
                                                               close
                                                                 (var_b"v0",
                                                                  mb(mb(mu(bop(And,
                                                                               bop(Or,
                                                                                   eq(var_w("P",1),
                                                                                      lw(1,1)),
                                                                                   eq(var_w("W",1),
                                                                                      lw(1,1))),
                                                                               var_b"v0"),qTy),
                                                                        close
                                                                          (var_b"v",
                                                                           mu(bop(And,
                                                                                  mop(Not,
                                                                                      eq(var_w("Rn",4),
                                                                                         lw(15,4))),
                                                                                  var_b"v"),qTy))),
                                                                     close
                                                                       (var_b"v0",
                                                                        mu(tp[var_w("v",4),var_b"v0"],
                                                                           qTy))))),
                                                            close
                                                              (var("v",@{typ "4 word \<times> bool"}),
                                                               call
                                                                 ("Do",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},
                                                                  var("v",
                                                                      @{typ "4 word \<times> bool"}),
                                                                  @{theory}))),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                let'
                                                                  (var_b"wback",
                                                                   eq(var_w("W",1),lw(1,1)),
                                                                   mb(ite(bop(Or,
                                                                              bop(In,var_w("Rt",4),
                                                                                  sl[lw(13,4),
                                                                                     lw(15,4)]),
                                                                              bop(And,var_b"wback",
                                                                                  eq(var_w("Rn",4),
                                                                                     var_w("Rt",4)))),
                                                                          call
                                                                            ("DECODE_UNPREDICTABLE",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[var("mc",
                                                                                    @{typ MachineCode}),
                                                                                ls
                                                                                 "StoreByte/Half (immediate)"],
                                                                             @{theory}),mu(lu,qTy)),
                                                                      close
                                                                        (var_a HOLogic.unitT,
                                                                         mu(let'
                                                                              (var_b"add",
                                                                               eq(mop(Cast w1,
                                                                                      ll[var_b"b'9"]),
                                                                                  lw(1,1)),
                                                                               let'
                                                                                 (var_b"index",
                                                                                  eq(var_w("P",1),
                                                                                     lw(1,1)),
                                                                                  let'
                                                                                    (var("m",
                                                                                         @{typ offset1}),
                                                                                     call
                                                                                       ("offset1.immediate_form1",
                                                                                        @{typ offset1},
                                                                                        mop(Cast w32,
                                                                                            mop(Cast
                                                                                                  w8,
                                                                                                ll[var_b"b'7",
                                                                                                   var_b"b'6",
                                                                                                   var_b"b'5",
                                                                                                   var_b"b'4",
                                                                                                   var_b"b'3",
                                                                                                   var_b"b'2",
                                                                                                   var_b"b'1",
                                                                                                   var_b"b'0"])),
                                                                                        @{theory}),
                                                                                     ite(eq(mop(Cast
                                                                                                  w1,
                                                                                                ll[var_b"b'21"]),
                                                                                            lw(1,1)),
                                                                                         call
                                                                                           ("instruction.Store",
                                                                                            @{typ instruction},
                                                                                            call
                                                                                              ("Store.StoreHalf",
                                                                                               @{typ Store},
                                                                                               tp[var_b"add",
                                                                                                  var_b"index",
                                                                                                  var_b"wback",
                                                                                                  var_w("Rt",4),
                                                                                                  var_w("Rn",4),
                                                                                                  var("m",
                                                                                                      @{typ offset1})],
                                                                                               @{theory}),
                                                                                            @{theory}),
                                                                                         call
                                                                                           ("instruction.Store",
                                                                                            @{typ instruction},
                                                                                            call
                                                                                              ("Store.StoreByte",
                                                                                               @{typ Store},
                                                                                               tp[var_b"add",
                                                                                                  var_b"index",
                                                                                                  var_b"wback",
                                                                                                  var_w("Rt",4),
                                                                                                  var_w("Rn",4),
                                                                                                  var("m",
                                                                                                      @{typ offset1})],
                                                                                               @{theory}),
                                                                                            @{theory}))))),
                                                                            qTy)))),
                                                                call
                                                                  ("Skip",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (instruction \<times> state)"},
                                                                   lu,@{theory}))))))))))),
                                   (var_b"b'23",
                                    let'
                                      (var_w("Rn",4),
                                       mop(Cast w4,
                                           ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                       let'
                                         (var_w("Rt",4),
                                          mop(Cast w4,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                          mb(call
                                               ("ThumbCondition",
                                                @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                                lu,@{theory}),
                                             close
                                               (var_w("v",4),
                                                mb(mb(mb(call
                                                           ("HaveThumb2",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},lu,@{theory}),
                                                         close
                                                           (var_b"v0",
                                                            mb(mu(bop(And,
                                                                      mop(Not,
                                                                          eq(var_w("Rn",4),lw(15,4))),
                                                                      var_b"v0"),qTy),
                                                               close
                                                                 (var_b"v0",
                                                                  mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                      close
                                                        (var("v",@{typ "4 word \<times> bool"}),
                                                         call
                                                           ("Do",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},
                                                            var("v",@{typ "4 word \<times> bool"}),
                                                            @{theory}))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          mb(ite(bop(In,var_w("Rt",4),
                                                                     sl[lw(13,4),lw(15,4)]),
                                                                 call
                                                                   ("DECODE_UNPREDICTABLE",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[var("mc",@{typ MachineCode}),
                                                                       ls
                                                                        "StoreByte/Half (immediate)"],
                                                                    @{theory}),mu(lu,qTy)),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mu(let'
                                                                     (var_b"add",lt,
                                                                      let'
                                                                        (var_b"index",lt,
                                                                         let'
                                                                           (var_b"wback",lf,
                                                                            let'
                                                                              (var("m",
                                                                                   @{typ offset1}),
                                                                               call
                                                                                 ("offset1.immediate_form1",
                                                                                  @{typ offset1},
                                                                                  mop(Cast w32,
                                                                                      mop(Cast
                                                                                            (Word_Lib.mk_wordT 12),
                                                                                          ll[var_b"b'11",
                                                                                             var_b"b'10",
                                                                                             var_b"b'9",
                                                                                             var_b"b'8",
                                                                                             var_b"b'7",
                                                                                             var_b"b'6",
                                                                                             var_b"b'5",
                                                                                             var_b"b'4",
                                                                                             var_b"b'3",
                                                                                             var_b"b'2",
                                                                                             var_b"b'1",
                                                                                             var_b"b'0"])),
                                                                                  @{theory}),
                                                                               ite(eq(mop(Cast w1,
                                                                                          ll[var_b"b'21"]),
                                                                                      lw(1,1)),
                                                                                   call
                                                                                     ("instruction.Store",
                                                                                      @{typ instruction},
                                                                                      call
                                                                                        ("Store.StoreHalf",
                                                                                         @{typ Store},
                                                                                         tp[var_b"add",
                                                                                            var_b"index",
                                                                                            var_b"wback",
                                                                                            var_w("Rt",4),
                                                                                            var_w("Rn",4),
                                                                                            var("m",
                                                                                                @{typ offset1})],
                                                                                         @{theory}),
                                                                                      @{theory}),
                                                                                   call
                                                                                     ("instruction.Store",
                                                                                      @{typ instruction},
                                                                                      call
                                                                                        ("Store.StoreByte",
                                                                                         @{typ Store},
                                                                                         tp[var_b"add",
                                                                                            var_b"index",
                                                                                            var_b"wback",
                                                                                            var_w("Rt",4),
                                                                                            var_w("Rn",4),
                                                                                            var("m",
                                                                                                @{typ offset1})],
                                                                                         @{theory}),
                                                                                      @{theory})))))),
                                                                   qTy))),
                                                          call
                                                            ("Skip",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (instruction \<times> state)"},lu,
                                                             @{theory})))))))))],
                                  call
                                    ("UndefinedThumb",
                                     @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                                     @{theory})))],
                            call
                              ("UndefinedThumb",
                               @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                               @{theory}))),
                       (bop(And,var_b"b'31",
                            bop(And,var_b"b'30",bop(And,var_b"b'29",mop(Not,var_b"b'26")))),
                        itb([(bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",
                                          bop(And,mop(Not,var_b"b'22"),mop(Not,var_b"b'20"))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mb(call
                                      ("ThumbCondition",
                                       @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_w("v",4),
                                       mb(mb(mb(call
                                                  ("HaveThumb2",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                             close
                                               (var("v",@{typ "4 word \<times> bool"}),
                                                call
                                                  ("Do",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},
                                                   var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 let'
                                                   (var_w("registers",16),
                                                    cc[lw(0,1),mop(Cast w1,ll[var_b"b'14"]),lw(0,1),
                                                       mop(Cast (Word_Lib.mk_wordT 13),
                                                           ll[var_b"b'12",var_b"b'11",var_b"b'10",
                                                              var_b"b'9",var_b"b'8",var_b"b'7",
                                                              var_b"b'6",var_b"b'5",var_b"b'4",
                                                              var_b"b'3",var_b"b'2",var_b"b'1",
                                                              var_b"b'0"])],
                                                    let'
                                                      (var_b"wback",
                                                       eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                       mb(call
                                                            ("BitCount",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (nat \<times> state)"},
                                                             var_w("registers",16),@{theory}),
                                                          close
                                                            (var_n"v",
                                                             mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 2),
                                                                            qTy),
                                                                         close
                                                                           (var_b"b",
                                                                            mu(bop(Or,var_b"b",
                                                                                   bop(And,
                                                                                       var_b"wback",
                                                                                       bop(Bit,
                                                                                           var_w("registers",16),
                                                                                           mop(Cast
                                                                                                 HOLogic.natT,
                                                                                               var_w("Rn",4))))),
                                                                               qTy))),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(bop(Or,
                                                                                eq(var_w("Rn",4),
                                                                                   lw(15,4)),
                                                                                var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("DECODE_UNPREDICTABLE",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[var("mc",
                                                                                    @{typ MachineCode}),
                                                                                ls"StoreMultiple"],
                                                                             @{theory}),mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mu(call
                                                                        ("instruction.Store",
                                                                         @{typ instruction},
                                                                         call
                                                                           ("Store.StoreMultiple",
                                                                            @{typ Store},
                                                                            tp[lt,lf,var_b"wback",
                                                                               var_w("Rn",4),
                                                                               var_w("registers",16)],
                                                                            @{theory}),@{theory}),
                                                                      qTy))))))),
                                                 call
                                                   ("Skip",
                                                    @{typ
                                                    "state \<Rightarrow>
                                                     (instruction \<times> state)"},lu,@{theory})))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,var_b"b'24",
                                      bop(And,mop(Not,var_b"b'23"),
                                          bop(And,mop(Not,var_b"b'22"),mop(Not,var_b"b'20"))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mb(call
                                      ("ThumbCondition",
                                       @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_w("v",4),
                                       mb(mb(mb(call
                                                  ("HaveThumb2",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                             close
                                               (var("v",@{typ "4 word \<times> bool"}),
                                                call
                                                  ("Do",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},
                                                   var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 let'
                                                   (var_w("registers",16),
                                                    cc[lw(0,1),mop(Cast w1,ll[var_b"b'14"]),lw(0,1),
                                                       mop(Cast (Word_Lib.mk_wordT 13),
                                                           ll[var_b"b'12",var_b"b'11",var_b"b'10",
                                                              var_b"b'9",var_b"b'8",var_b"b'7",
                                                              var_b"b'6",var_b"b'5",var_b"b'4",
                                                              var_b"b'3",var_b"b'2",var_b"b'1",
                                                              var_b"b'0"])],
                                                    let'
                                                      (var_b"wback",
                                                       eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                       mb(call
                                                            ("BitCount",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (nat \<times> state)"},
                                                             var_w("registers",16),@{theory}),
                                                          close
                                                            (var_n"v",
                                                             mb(mb(mb(mb(mu(bop(Lt,var_n"v",ln 2),
                                                                            qTy),
                                                                         close
                                                                           (var_b"b",
                                                                            mu(bop(Or,var_b"b",
                                                                                   bop(And,
                                                                                       var_b"wback",
                                                                                       bop(Bit,
                                                                                           var_w("registers",16),
                                                                                           mop(Cast
                                                                                                 HOLogic.natT,
                                                                                               var_w("Rn",4))))),
                                                                               qTy))),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(bop(Or,
                                                                                eq(var_w("Rn",4),
                                                                                   lw(15,4)),
                                                                                var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("DECODE_UNPREDICTABLE",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[var("mc",
                                                                                    @{typ MachineCode}),
                                                                                ls"StoreMultiple"],
                                                                             @{theory}),mu(lu,qTy)))),
                                                                close
                                                                  (var_a HOLogic.unitT,
                                                                   mu(call
                                                                        ("instruction.Store",
                                                                         @{typ instruction},
                                                                         call
                                                                           ("Store.StoreMultiple",
                                                                            @{typ Store},
                                                                            tp[lf,lt,var_b"wback",
                                                                               var_w("Rn",4),
                                                                               var_w("registers",16)],
                                                                            @{theory}),@{theory}),
                                                                      qTy))))))),
                                                 call
                                                   ("Skip",
                                                    @{typ
                                                    "state \<Rightarrow>
                                                     (instruction \<times> state)"},lu,@{theory})))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",bop(And,mop(Not,var_b"b'22"),var_b"b'20")))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("M",1),mop(Cast w1,ll[var_b"b'14"]),
                                    let'
                                      (var_w("P",1),mop(Cast w1,ll[var_b"b'15"]),
                                       mb(call
                                            ("ThumbCondition",
                                             @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                             lu,@{theory}),
                                          close
                                            (var_w("v",4),
                                             mb(mb(mb(call
                                                        ("HaveThumb2",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_b"v0",
                                                         mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       let'
                                                         (var_w("registers",16),
                                                          cc[var_w("P",1),var_w("M",1),lw(0,1),
                                                             mop(Cast (Word_Lib.mk_wordT 13),
                                                                 ll[var_b"b'12",var_b"b'11",
                                                                    var_b"b'10",var_b"b'9",
                                                                    var_b"b'8",var_b"b'7",
                                                                    var_b"b'6",var_b"b'5",
                                                                    var_b"b'4",var_b"b'3",
                                                                    var_b"b'2",var_b"b'1",var_b"b'0"])],
                                                          let'
                                                            (var_b"wback",
                                                             eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                             mb(call
                                                                  ("BitCount",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (nat \<times> state)"},
                                                                   var_w("registers",16),@{theory}),
                                                                close
                                                                  (var_n"v",
                                                                   mb(mb(mb(mb(mu(bop(Lt,var_n"v",
                                                                                      ln 2),qTy),
                                                                               close
                                                                                 (var_b"b",
                                                                                  ite(var_b"b",
                                                                                      mu(lt,qTy),
                                                                                      mb(call
                                                                                           ("InITBlock",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (bool \<times>
                                                                                              state)"},
                                                                                            lu,
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var_b"v",
                                                                                            mb(mb(mb(ite(var_b"v",
                                                                                                         mb(call
                                                                                                              ("LastInITBlock",
                                                                                                               @{typ
                                                                                                               "state \<Rightarrow>
                                                                                                                (bool \<times>
                                                                                                                 state)"},
                                                                                                               lu,
                                                                                                               @{theory}),
                                                                                                            close
                                                                                                              (var_b"v",
                                                                                                               mu(mop(Not,
                                                                                                                      var_b"v"),
                                                                                                                  qTy))),
                                                                                                         mu(lf,
                                                                                                            qTy)),
                                                                                                     close
                                                                                                       (var_b"v",
                                                                                                        mu(bop(And,
                                                                                                               bop(Bit,
                                                                                                                   var_w("registers",16),
                                                                                                                   ln
                                                                                                                    15),
                                                                                                               var_b"v"),
                                                                                                           qTy))),
                                                                                                  close
                                                                                                    (var_b"b",
                                                                                                     mu(bop(Or,
                                                                                                            var_b"b",
                                                                                                            bop(And,
                                                                                                                var_b"wback",
                                                                                                                bop(Bit,
                                                                                                                    var_w("registers",16),
                                                                                                                    mop(Cast
                                                                                                                          HOLogic.natT,
                                                                                                                        var_w("Rn",4))))),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(bop(Or,
                                                                                                         bop(And,
                                                                                                             eq(var_w("P",1),
                                                                                                                lw(1,
                                                                                                                   1)),
                                                                                                             eq(var_w("M",1),
                                                                                                                lw(1,
                                                                                                                   1))),
                                                                                                         var_b"v"),
                                                                                                     qTy)))))))),
                                                                            close
                                                                              (var_b"v",
                                                                               mu(bop(Or,
                                                                                      eq(var_w("Rn",4),
                                                                                         lw(15,4)),
                                                                                      var_b"v"),qTy))),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "LoadMultiple"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)))),
                                                                      close
                                                                        (var_a HOLogic.unitT,
                                                                         mu(call
                                                                              ("instruction.Load",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Load.LoadMultiple",
                                                                                  @{typ Load},
                                                                                  tp[lt,lf,
                                                                                     var_b"wback",
                                                                                     var_w("Rn",4),
                                                                                     var_w("registers",16)],
                                                                                  @{theory}),
                                                                               @{theory}),qTy))))))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,var_b"b'24",
                                      bop(And,mop(Not,var_b"b'23"),
                                          bop(And,mop(Not,var_b"b'22"),var_b"b'20")))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("M",1),mop(Cast w1,ll[var_b"b'14"]),
                                    let'
                                      (var_w("P",1),mop(Cast w1,ll[var_b"b'15"]),
                                       mb(call
                                            ("ThumbCondition",
                                             @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                             lu,@{theory}),
                                          close
                                            (var_w("v",4),
                                             mb(mb(mb(call
                                                        ("HaveThumb2",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_b"v0",
                                                         mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       let'
                                                         (var_w("registers",16),
                                                          cc[var_w("P",1),var_w("M",1),lw(0,1),
                                                             mop(Cast (Word_Lib.mk_wordT 13),
                                                                 ll[var_b"b'12",var_b"b'11",
                                                                    var_b"b'10",var_b"b'9",
                                                                    var_b"b'8",var_b"b'7",
                                                                    var_b"b'6",var_b"b'5",
                                                                    var_b"b'4",var_b"b'3",
                                                                    var_b"b'2",var_b"b'1",var_b"b'0"])],
                                                          let'
                                                            (var_b"wback",
                                                             eq(mop(Cast w1,ll[var_b"b'21"]),lw(1,1)),
                                                             mb(call
                                                                  ("BitCount",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (nat \<times> state)"},
                                                                   var_w("registers",16),@{theory}),
                                                                close
                                                                  (var_n"v",
                                                                   mb(mb(mb(mb(mu(bop(Lt,var_n"v",
                                                                                      ln 2),qTy),
                                                                               close
                                                                                 (var_b"b",
                                                                                  ite(var_b"b",
                                                                                      mu(lt,qTy),
                                                                                      mb(call
                                                                                           ("InITBlock",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (bool \<times>
                                                                                              state)"},
                                                                                            lu,
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var_b"v",
                                                                                            mb(mb(mb(ite(var_b"v",
                                                                                                         mb(call
                                                                                                              ("LastInITBlock",
                                                                                                               @{typ
                                                                                                               "state \<Rightarrow>
                                                                                                                (bool \<times>
                                                                                                                 state)"},
                                                                                                               lu,
                                                                                                               @{theory}),
                                                                                                            close
                                                                                                              (var_b"v",
                                                                                                               mu(mop(Not,
                                                                                                                      var_b"v"),
                                                                                                                  qTy))),
                                                                                                         mu(lf,
                                                                                                            qTy)),
                                                                                                     close
                                                                                                       (var_b"v",
                                                                                                        mu(bop(And,
                                                                                                               bop(Bit,
                                                                                                                   var_w("registers",16),
                                                                                                                   ln
                                                                                                                    15),
                                                                                                               var_b"v"),
                                                                                                           qTy))),
                                                                                                  close
                                                                                                    (var_b"b",
                                                                                                     mu(bop(Or,
                                                                                                            var_b"b",
                                                                                                            bop(And,
                                                                                                                var_b"wback",
                                                                                                                bop(Bit,
                                                                                                                    var_w("registers",16),
                                                                                                                    mop(Cast
                                                                                                                          HOLogic.natT,
                                                                                                                        var_w("Rn",4))))),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(bop(Or,
                                                                                                         bop(And,
                                                                                                             eq(var_w("P",1),
                                                                                                                lw(1,
                                                                                                                   1)),
                                                                                                             eq(var_w("M",1),
                                                                                                                lw(1,
                                                                                                                   1))),
                                                                                                         var_b"v"),
                                                                                                     qTy)))))))),
                                                                            close
                                                                              (var_b"v",
                                                                               mu(bop(Or,
                                                                                      eq(var_w("Rn",4),
                                                                                         lw(15,4)),
                                                                                      var_b"v"),qTy))),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "LoadMultiple"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)))),
                                                                      close
                                                                        (var_a HOLogic.unitT,
                                                                         mu(call
                                                                              ("instruction.Load",
                                                                               @{typ instruction},
                                                                               call
                                                                                 ("Load.LoadMultiple",
                                                                                  @{typ Load},
                                                                                  tp[lf,lt,
                                                                                     var_b"wback",
                                                                                     var_w("Rn",4),
                                                                                     var_w("registers",16)],
                                                                                  @{theory}),
                                                                               @{theory}),qTy))))))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'22"),mop(Not,var_b"b'20"))),
                              let'
                                (var_w("op",2),
                                 mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"b'24",var_b"b'23"]),
                                 mb(call
                                      ("ThumbCondition",
                                       @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_w("v",4),
                                       mb(mb(mb(call
                                                  ("HaveThumb2",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close
                                                  (var_b"v0",
                                                   mb(mu(bop(And,
                                                             bop(In,var_w("op",2),
                                                                 sl[lw(0,2),lw(3,2)]),var_b"v0"),qTy),
                                                      close
                                                        (var_b"v0",
                                                         mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                             close
                                               (var("v",@{typ "4 word \<times> bool"}),
                                                call
                                                  ("Do",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},
                                                   var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(call
                                                      ("CurrentInstrSet",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (InstrSet \<times> state)"},lu,@{theory}),
                                                    close
                                                      (var("v",@{typ InstrSet}),
                                                       mb(mb(mu(eq(var("v",@{typ InstrSet}),
                                                                   lc("InstrSet_ThumbEE","InstrSet",
                                                                      @{theory})),qTy),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("DECODE_UNPREDICTABLE",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[var("mc",
                                                                              @{typ MachineCode}),
                                                                          ls"StoreReturnState"],
                                                                       @{theory}),mu(lu,qTy)))),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(call
                                                                  ("instruction.System",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("System.StoreReturnState",
                                                                      @{typ System},
                                                                      tp[eq(var_w("op",2),lw(3,2)),
                                                                         lf,
                                                                         eq(mop(Cast w1,
                                                                                ll[var_b"b'21"]),
                                                                            lw(1,1)),
                                                                         mop(Cast
                                                                               (Word_Lib.mk_wordT 5),
                                                                             ll[var_b"b'4",
                                                                                var_b"b'3",
                                                                                var_b"b'2",
                                                                                var_b"b'1",
                                                                                var_b"b'0"])],
                                                                      @{theory}),@{theory}),qTy))))),
                                                 call
                                                   ("Skip",
                                                    @{typ
                                                    "state \<Rightarrow>
                                                     (instruction \<times> state)"},lu,@{theory})))))))),
                             (bop(And,mop(Not,var_b"b'25"),bop(And,mop(Not,var_b"b'22"),var_b"b'20")),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("op",2),
                                    mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"b'24",var_b"b'23"]),
                                    mb(call
                                         ("ThumbCondition",
                                          @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_w("v",4),
                                          mb(mb(mb(call
                                                     ("HaveThumb2",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_b"v0",
                                                      mb(mu(bop(And,
                                                                bop(In,var_w("op",2),
                                                                    sl[lw(0,2),lw(3,2)]),var_b"v0"),
                                                            qTy),
                                                         close
                                                           (var_b"v0",
                                                            mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                close
                                                  (var("v",@{typ "4 word \<times> bool"}),
                                                   call
                                                     ("Do",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      var("v",@{typ "4 word \<times> bool"}),
                                                      @{theory}))),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(call
                                                         ("CurrentInstrSet",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (InstrSet \<times> state)"},lu,@{theory}),
                                                       close
                                                         (var("v",@{typ InstrSet}),
                                                          mb(mb(mb(mu(eq(var("v",@{typ InstrSet}),
                                                                         lc("InstrSet_ThumbEE",
                                                                            "InstrSet",@{theory})),
                                                                      qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",mu(lt,qTy),
                                                                          mb(call
                                                                               ("InITBlock",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (bool \<times>
                                                                                  state)"},lu,
                                                                                @{theory}),
                                                                             close
                                                                               (var_b"v",
                                                                                mb(ite(var_b"v",
                                                                                       mb(call
                                                                                            ("LastInITBlock",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (bool \<times>
                                                                                               state)"},
                                                                                             lu,
                                                                                             @{theory}),
                                                                                          close
                                                                                            (var_b"v",
                                                                                             mu(mop(Not,
                                                                                                    var_b"v"),
                                                                                                qTy))),
                                                                                       mu(lf,qTy)),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mu(bop(Or,
                                                                                             eq(var_w("Rn",4),
                                                                                                lw(15,
                                                                                                   4)),
                                                                                             var_b"v"),
                                                                                         qTy)))))))),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"ReturnFromException"],
                                                                          @{theory}),mu(lu,qTy)))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mu(call
                                                                     ("instruction.System",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("System.ReturnFromException",
                                                                         @{typ System},
                                                                         tp[eq(var_w("op",2),lw(3,2)),
                                                                            lf,
                                                                            eq(mop(Cast w1,
                                                                                   ll[var_b"b'21"]),
                                                                               lw(1,1)),
                                                                            var_w("Rn",4)],@{theory}),
                                                                      @{theory}),qTy))))),
                                                    call
                                                      ("Skip",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (instruction \<times> state)"},lu,@{theory}))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,mop(Not,var_b"b'23"),
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),mop(Not,var_b"b'20")))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rd",4),
                                    mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                    let'
                                      (var_w("Rt",4),
                                       mop(Cast w4,
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                       mb(call
                                            ("ThumbCondition",
                                             @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                             lu,@{theory}),
                                          close
                                            (var_w("v",4),
                                             mb(mb(mb(call
                                                        ("HaveThumb2",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_b"v0",
                                                         mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       mb(ite(bop(Or,
                                                                  bop(In,var_w("Rd",4),
                                                                      sl[lw(13,4),lw(15,4)]),
                                                                  bop(Or,
                                                                      bop(In,var_w("Rt",4),
                                                                          sl[lw(13,4),lw(15,4)]),
                                                                      bop(Or,
                                                                          eq(var_w("Rn",4),lw(15,4)),
                                                                          bop(Or,
                                                                              eq(var_w("Rd",4),
                                                                                 var_w("Rn",4)),
                                                                              eq(var_w("Rd",4),
                                                                                 var_w("Rt",4)))))),
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls"StoreExclusive"],@{theory}),
                                                              mu(lu,qTy)),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(call
                                                                  ("instruction.Store",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Store.StoreExclusive",
                                                                      @{typ Store},
                                                                      tp[var_w("Rd",4),
                                                                         var_w("Rt",4),
                                                                         var_w("Rn",4),
                                                                         mop(Cast w32,
                                                                             cc[mop(Cast w8,
                                                                                    ll[var_b"b'7",
                                                                                       var_b"b'6",
                                                                                       var_b"b'5",
                                                                                       var_b"b'4",
                                                                                       var_b"b'3",
                                                                                       var_b"b'2",
                                                                                       var_b"b'1",
                                                                                       var_b"b'0"]),
                                                                                lw(0,2)])],@{theory}),
                                                                   @{theory}),qTy))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,mop(Not,var_b"b'23"),
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),var_b"b'20"))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rt",4),
                                    mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                    mb(call
                                         ("ThumbCondition",
                                          @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_w("v",4),
                                          mb(mb(mb(call
                                                     ("HaveThumb2",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                close
                                                  (var("v",@{typ "4 word \<times> bool"}),
                                                   call
                                                     ("Do",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      var("v",@{typ "4 word \<times> bool"}),
                                                      @{theory}))),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(ite(bop(Or,
                                                               bop(In,var_w("Rt",4),
                                                                   sl[lw(13,4),lw(15,4)]),
                                                               eq(var_w("Rn",4),lw(15,4))),
                                                           call
                                                             ("DECODE_UNPREDICTABLE",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var("mc",@{typ MachineCode}),
                                                                 ls"StoreExclusive"],@{theory}),
                                                           mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.Load",
                                                                @{typ instruction},
                                                                call
                                                                  ("Load.LoadExclusive",@{typ Load},
                                                                   tp[var_w("Rt",4),var_w("Rn",4),
                                                                      mop(Cast w32,
                                                                          cc[mop(Cast w8,
                                                                                 ll[var_b"b'7",
                                                                                    var_b"b'6",
                                                                                    var_b"b'5",
                                                                                    var_b"b'4",
                                                                                    var_b"b'3",
                                                                                    var_b"b'2",
                                                                                    var_b"b'1",
                                                                                    var_b"b'0"]),
                                                                             lw(0,2)])],@{theory}),
                                                                @{theory}),qTy))),
                                                    call
                                                      ("Skip",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (instruction \<times> state)"},lu,@{theory}))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),
                                                  bop(And,mop(Not,var_b"b'20"),
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,var_b"b'6",mop(Not,var_b"b'5"))))))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rd",4),
                                    mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                    let'
                                      (var_w("Rt",4),
                                       mop(Cast w4,
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                       mb(call
                                            ("ThumbCondition",
                                             @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                             lu,@{theory}),
                                          close
                                            (var_w("v",4),
                                             mb(mb(mb(call
                                                        ("ArchVersion",
                                                         @{typ
                                                         "state \<Rightarrow> (nat \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_n"v0",
                                                         mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                            close
                                                              (var_b"v0",
                                                               mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       mb(ite(bop(Or,
                                                                  bop(In,var_w("Rd",4),
                                                                      sl[lw(13,4),lw(15,4)]),
                                                                  bop(Or,
                                                                      bop(In,var_w("Rt",4),
                                                                          sl[lw(13,4),lw(15,4)]),
                                                                      bop(Or,
                                                                          eq(var_w("Rn",4),lw(15,4)),
                                                                          bop(Or,
                                                                              eq(var_w("Rd",4),
                                                                                 var_w("Rn",4)),
                                                                              eq(var_w("Rd",4),
                                                                                 var_w("Rt",4)))))),
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls
                                                                     "StoreExclusive: Byte or Halfword"],
                                                                 @{theory}),mu(lu,qTy)),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(ite(eq(mop(Cast w1,ll[var_b"b'4"]),
                                                                       lw(1,1)),
                                                                    call
                                                                      ("instruction.Store",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Store.StoreExclusiveHalf",
                                                                          @{typ Store},
                                                                          tp[var_w("Rd",4),
                                                                             var_w("Rt",4),
                                                                             var_w("Rn",4)],
                                                                          @{theory}),@{theory}),
                                                                    call
                                                                      ("instruction.Store",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Store.StoreExclusiveByte",
                                                                          @{typ Store},
                                                                          tp[var_w("Rd",4),
                                                                             var_w("Rt",4),
                                                                             var_w("Rn",4)],
                                                                          @{theory}),@{theory})),qTy))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),
                                                  bop(And,mop(Not,var_b"b'20"),
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,var_b"b'6",
                                                              bop(And,var_b"b'5",var_b"b'4"))))))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rd",4),
                                    mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                    let'
                                      (var_w("Rt2",4),
                                       mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                       let'
                                         (var_w("Rt",4),
                                          mop(Cast w4,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                          mb(call
                                               ("ThumbCondition",
                                                @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                                lu,@{theory}),
                                             close
                                               (var_w("v",4),
                                                mb(mb(mb(call
                                                           ("ArchVersion",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (nat \<times> state)"},lu,@{theory}),
                                                         close
                                                           (var_n"v0",
                                                            mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                               close
                                                                 (var_b"v0",
                                                                  mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                      close
                                                        (var("v",@{typ "4 word \<times> bool"}),
                                                         call
                                                           ("Do",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (bool \<times> state)"},
                                                            var("v",@{typ "4 word \<times> bool"}),
                                                            @{theory}))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          mb(ite(bop(Or,
                                                                     bop(In,var_w("Rd",4),
                                                                         sl[lw(13,4),lw(15,4)]),
                                                                     bop(Or,
                                                                         bop(In,var_w("Rt",4),
                                                                             sl[lw(13,4),lw(15,4)]),
                                                                         bop(Or,
                                                                             bop(In,var_w("Rt2",4),
                                                                                 sl[lw(13,4),
                                                                                    lw(15,4)]),
                                                                             bop(Or,
                                                                                 eq(var_w("Rn",4),
                                                                                    lw(15,4)),
                                                                                 bop(Or,
                                                                                     eq(var_w("Rd",4),
                                                                                        var_w("Rn",4)),
                                                                                     eq(var_w("Rd",4),
                                                                                        var_w("Rt",4))))))),
                                                                 call
                                                                   ("DECODE_UNPREDICTABLE",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[var("mc",@{typ MachineCode}),
                                                                       ls"StoreExclusivDoubleword"],
                                                                    @{theory}),mu(lu,qTy)),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mu(call
                                                                     ("instruction.Store",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Store.StoreExclusiveDoubleword",
                                                                         @{typ Store},
                                                                         tp[var_w("Rd",4),
                                                                            var_w("Rt",4),
                                                                            var_w("Rt2",4),
                                                                            var_w("Rn",4)],@{theory}),
                                                                      @{theory}),qTy))),
                                                          call
                                                            ("Skip",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (instruction \<times> state)"},lu,
                                                             @{theory}))))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),
                                                  bop(And,var_b"b'20",
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,mop(Not,var_b"b'6"),
                                                              mop(Not,var_b"b'5"))))))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rm",4),
                                    mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                    mb(call
                                         ("ThumbCondition",
                                          @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_w("v",4),
                                          mb(mb(mb(call
                                                     ("HaveThumb2",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                close
                                                  (var("v",@{typ "4 word \<times> bool"}),
                                                   call
                                                     ("Do",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      var("v",@{typ "4 word \<times> bool"}),
                                                      @{theory}))),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(call
                                                         ("InITBlock",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v",
                                                          mb(mb(mb(mb(ite(var_b"v",
                                                                          mb(call
                                                                               ("LastInITBlock",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (bool \<times>
                                                                                  state)"},lu,
                                                                                @{theory}),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(mop(Not,var_b"v"),
                                                                                   qTy))),mu(lf,qTy)),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(bop(Or,
                                                                                bop(In,
                                                                                    var_w("Rm",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"v",
                                                                      mu(bop(Or,
                                                                             eq(var_w("Rn",4),
                                                                                lw(13,4)),var_b"v"),
                                                                         qTy))),
                                                                close
                                                                  (var_b"b",
                                                                   ite(var_b"b",
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"TableBranchByte"],
                                                                          @{theory}),mu(lu,qTy)))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mu(call
                                                                     ("instruction.Branch",
                                                                      @{typ instruction},
                                                                      call
                                                                        ("Branch.TableBranchByte",
                                                                         @{typ Branch},
                                                                         tp[eq(mop(Cast w1,
                                                                                   ll[var_b"b'4"]),
                                                                               lw(1,1)),
                                                                            var_w("Rm",4),
                                                                            var_w("Rn",4)],@{theory}),
                                                                      @{theory}),qTy))))),
                                                    call
                                                      ("Skip",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (instruction \<times> state)"},lu,@{theory}))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),
                                                  bop(And,var_b"b'20",
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,var_b"b'6",mop(Not,var_b"b'5"))))))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rt",4),
                                    mop(Cast w4,ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                    mb(call
                                         ("ThumbCondition",
                                          @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                          @{theory}),
                                       close
                                         (var_w("v",4),
                                          mb(mb(mb(call
                                                     ("ArchVersion",
                                                      @{typ
                                                      "state \<Rightarrow> (nat \<times> state)"},
                                                      lu,@{theory}),
                                                   close
                                                     (var_n"v0",
                                                      mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                         close
                                                           (var_b"v0",
                                                            mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                close
                                                  (var("v",@{typ "4 word \<times> bool"}),
                                                   call
                                                     ("Do",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      var("v",@{typ "4 word \<times> bool"}),
                                                      @{theory}))),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(ite(bop(Or,
                                                               bop(In,var_w("Rt",4),
                                                                   sl[lw(13,4),lw(15,4)]),
                                                               eq(var_w("Rn",4),lw(15,4))),
                                                           call
                                                             ("DECODE_UNPREDICTABLE",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var("mc",@{typ MachineCode}),
                                                                 ls"LoadExclusive: Byte or Halfword"],
                                                              @{theory}),mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(ite(eq(mop(Cast w1,ll[var_b"b'4"]),
                                                                    lw(1,1)),
                                                                 call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadExclusiveHalf",
                                                                       @{typ Load},
                                                                       tp[var_w("Rt",4),
                                                                          var_w("Rn",4)],@{theory}),
                                                                    @{theory}),
                                                                 call
                                                                   ("instruction.Load",
                                                                    @{typ instruction},
                                                                    call
                                                                      ("Load.LoadExclusiveByte",
                                                                       @{typ Load},
                                                                       tp[var_w("Rt",4),
                                                                          var_w("Rn",4)],@{theory}),
                                                                    @{theory})),qTy))),
                                                    call
                                                      ("Skip",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (instruction \<times> state)"},lu,@{theory}))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,mop(Not,var_b"b'24"),
                                      bop(And,var_b"b'23",
                                          bop(And,var_b"b'22",
                                              bop(And,mop(Not,var_b"b'21"),
                                                  bop(And,var_b"b'20",
                                                      bop(And,mop(Not,var_b"b'7"),
                                                          bop(And,var_b"b'6",
                                                              bop(And,var_b"b'5",var_b"b'4"))))))))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("Rt2",4),
                                    mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                    let'
                                      (var_w("Rt",4),
                                       mop(Cast w4,
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                       mb(call
                                            ("ThumbCondition",
                                             @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                             lu,@{theory}),
                                          close
                                            (var_w("v",4),
                                             mb(mb(mb(call
                                                        ("ArchVersion",
                                                         @{typ
                                                         "state \<Rightarrow> (nat \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_n"v0",
                                                         mb(mu(bop(Ge,var_n"v0",ln 7),qTy),
                                                            close
                                                              (var_b"v0",
                                                               mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       mb(ite(bop(Or,
                                                                  bop(In,var_w("Rt",4),
                                                                      sl[lw(13,4),lw(15,4)]),
                                                                  bop(Or,
                                                                      bop(In,var_w("Rt2",4),
                                                                          sl[lw(13,4),lw(15,4)]),
                                                                      bop(Or,
                                                                          eq(var_w("Rt",4),
                                                                             var_w("Rt2",4)),
                                                                          eq(var_w("Rn",4),lw(15,4))))),
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls"LoadExclusiveDoubleword"],
                                                                 @{theory}),mu(lu,qTy)),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(call
                                                                  ("instruction.Load",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Load.LoadExclusiveDoubleword",
                                                                      @{typ Load},
                                                                      tp[var_w("Rt",4),
                                                                         var_w("Rt2",4),
                                                                         var_w("Rn",4)],@{theory}),
                                                                   @{theory}),qTy))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'25"),bop(And,var_b"b'22",mop(Not,var_b"b'20"))),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                    let'
                                      (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                       let'
                                         (var_w("Rt2",4),
                                          mop(Cast w4,
                                              ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                          let'
                                            (var_w("Rt",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                             mb(call
                                                  ("ThumbCondition",
                                                   @{typ
                                                   "state \<Rightarrow> (4 word \<times> state)"},
                                                   lu,@{theory}),
                                                close
                                                  (var_w("v",4),
                                                   mb(mb(mb(call
                                                              ("HaveThumb2",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool \<times> state)"},lu,@{theory}),
                                                            close
                                                              (var_b"v0",
                                                               mb(mu(bop(And,
                                                                         bop(Or,
                                                                             eq(var_w("P",1),lw(1,1)),
                                                                             eq(var_w("W",1),lw(1,1))),
                                                                         var_b"v0"),qTy),
                                                                  close
                                                                    (var_b"v0",
                                                                     mu(tp[var_w("v",4),var_b"v0"],
                                                                        qTy))))),
                                                         close
                                                           (var("v",@{typ "4 word \<times> bool"}),
                                                            call
                                                              ("Do",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool \<times> state)"},
                                                               var("v",@{typ "4 word \<times> bool"}),
                                                               @{theory}))),
                                                      close
                                                        (var_b"b",
                                                         ite(var_b"b",
                                                             let'
                                                               (var_b"wback",
                                                                eq(var_w("W",1),lw(1,1)),
                                                                mb(ite(bop(Or,
                                                                           bop(And,var_b"wback",
                                                                               bop(Or,
                                                                                   eq(var_w("Rn",4),
                                                                                      var_w("Rt",4)),
                                                                                   eq(var_w("Rn",4),
                                                                                      var_w("Rt2",4)))),
                                                                           bop(Or,
                                                                               eq(var_w("Rn",4),
                                                                                  lw(15,4)),
                                                                               bop(Or,
                                                                                   bop(In,
                                                                                       var_w("Rt",4),
                                                                                       sl[lw(13,4),
                                                                                          lw(15,4)]),
                                                                                   bop(In,
                                                                                       var_w("Rt2",4),
                                                                                       sl[lw(13,4),
                                                                                          lw(15,4)])))),
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"StoreDual"],
                                                                          @{theory}),mu(lu,qTy)),
                                                                   close
                                                                     (var_a HOLogic.unitT,
                                                                      mu(call
                                                                           ("instruction.Store",
                                                                            @{typ instruction},
                                                                            call
                                                                              ("Store.StoreDual",
                                                                               @{typ Store},
                                                                               tp[eq(mop(Cast w1,
                                                                                         ll[var_b"b'23"]),
                                                                                     lw(1,1)),
                                                                                  eq(var_w("P",1),
                                                                                     lw(1,1)),
                                                                                  var_b"wback",
                                                                                  var_w("Rt",4),
                                                                                  var_w("Rt2",4),
                                                                                  var_w("Rn",4),
                                                                                  call
                                                                                    ("offset2.immediate_form2",
                                                                                     @{typ offset2},
                                                                                     mop(Cast w32,
                                                                                         cc[mop(Cast
                                                                                                  w8,
                                                                                                ll[var_b"b'7",
                                                                                                   var_b"b'6",
                                                                                                   var_b"b'5",
                                                                                                   var_b"b'4",
                                                                                                   var_b"b'3",
                                                                                                   var_b"b'2",
                                                                                                   var_b"b'1",
                                                                                                   var_b"b'0"]),
                                                                                            lw(0,2)]),
                                                                                     @{theory})],
                                                                               @{theory}),@{theory}),
                                                                         qTy)))),
                                                             call
                                                               ("Skip",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (instruction \<times> state)"},lu,
                                                                @{theory})))))))))))),
                             (bop(And,mop(Not,var_b"b'25"),
                                  bop(And,var_b"b'22",
                                      bop(And,var_b"b'20",
                                          bop(And,var_b"b'19",
                                              bop(And,var_b"b'18",bop(And,var_b"b'17",var_b"b'16")))))),
                              let'
                                (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                 let'
                                   (var_w("Rt2",4),
                                    mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                    let'
                                      (var_w("Rt",4),
                                       mop(Cast w4,
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                       mb(call
                                            ("ThumbCondition",
                                             @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                             lu,@{theory}),
                                          close
                                            (var_w("v",4),
                                             mb(mb(mb(call
                                                        ("HaveThumb2",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         lu,@{theory}),
                                                      close
                                                        (var_b"v0",
                                                         mb(mu(bop(And,
                                                                   bop(Or,
                                                                       eq(mop(Cast w1,
                                                                              ll[var_b"b'24"]),
                                                                          lw(1,1)),
                                                                       eq(var_w("W",1),lw(1,1))),
                                                                   var_b"v0"),qTy),
                                                            close
                                                              (var_b"v0",
                                                               mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                   close
                                                     (var("v",@{typ "4 word \<times> bool"}),
                                                      call
                                                        ("Do",
                                                         @{typ
                                                         "state \<Rightarrow> (bool \<times> state)"},
                                                         var("v",@{typ "4 word \<times> bool"}),
                                                         @{theory}))),
                                                close
                                                  (var_b"b",
                                                   ite(var_b"b",
                                                       mb(ite(bop(Or,
                                                                  bop(In,var_w("Rt",4),
                                                                      sl[lw(13,4),lw(15,4)]),
                                                                  bop(Or,
                                                                      bop(In,var_w("Rt2",4),
                                                                          sl[lw(13,4),lw(15,4)]),
                                                                      bop(Or,
                                                                          eq(var_w("Rt",4),
                                                                             var_w("Rt2",4)),
                                                                          eq(var_w("W",1),lw(1,1))))),
                                                              call
                                                                ("DECODE_UNPREDICTABLE",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 tp[var("mc",@{typ MachineCode}),
                                                                    ls"LoadDual: literal"],@{theory}),
                                                              mu(lu,qTy)),
                                                          close
                                                            (var_a HOLogic.unitT,
                                                             mu(call
                                                                  ("instruction.Load",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Load.LoadDualLiteral",
                                                                      @{typ Load},
                                                                      tp[eq(mop(Cast w1,
                                                                                ll[var_b"b'23"]),
                                                                            lw(1,1)),var_w("Rt",4),
                                                                         var_w("Rt2",4),
                                                                         mop(Cast w32,
                                                                             cc[mop(Cast w8,
                                                                                    ll[var_b"b'7",
                                                                                       var_b"b'6",
                                                                                       var_b"b'5",
                                                                                       var_b"b'4",
                                                                                       var_b"b'3",
                                                                                       var_b"b'2",
                                                                                       var_b"b'1",
                                                                                       var_b"b'0"]),
                                                                                lw(0,2)])],@{theory}),
                                                                   @{theory}),qTy))),
                                                       call
                                                         ("Skip",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (instruction \<times> state)"},lu,
                                                          @{theory})))))))))),
                             (bop(And,mop(Not,var_b"b'25"),bop(And,var_b"b'22",var_b"b'20")),
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("W",1),mop(Cast w1,ll[var_b"b'21"]),
                                    let'
                                      (var_w("P",1),mop(Cast w1,ll[var_b"b'24"]),
                                       let'
                                         (var_w("Rt2",4),
                                          mop(Cast w4,
                                              ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                          let'
                                            (var_w("Rt",4),
                                             mop(Cast w4,
                                                 ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12"]),
                                             mb(call
                                                  ("ThumbCondition",
                                                   @{typ
                                                   "state \<Rightarrow> (4 word \<times> state)"},
                                                   lu,@{theory}),
                                                close
                                                  (var_w("v",4),
                                                   mb(mb(mb(call
                                                              ("HaveThumb2",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool \<times> state)"},lu,@{theory}),
                                                            close
                                                              (var_b"v0",
                                                               mb(mu(bop(And,
                                                                         bop(Or,
                                                                             eq(var_w("P",1),lw(1,1)),
                                                                             eq(var_w("W",1),lw(1,1))),
                                                                         var_b"v0"),qTy),
                                                                  close
                                                                    (var_b"v0",
                                                                     mu(tp[var_w("v",4),var_b"v0"],
                                                                        qTy))))),
                                                         close
                                                           (var("v",@{typ "4 word \<times> bool"}),
                                                            call
                                                              ("Do",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (bool \<times> state)"},
                                                               var("v",@{typ "4 word \<times> bool"}),
                                                               @{theory}))),
                                                      close
                                                        (var_b"b",
                                                         ite(var_b"b",
                                                             let'
                                                               (var_b"wback",
                                                                eq(var_w("W",1),lw(1,1)),
                                                                mb(ite(bop(Or,
                                                                           bop(And,var_b"wback",
                                                                               bop(Or,
                                                                                   eq(var_w("Rn",4),
                                                                                      var_w("Rt",4)),
                                                                                   eq(var_w("Rn",4),
                                                                                      var_w("Rt2",4)))),
                                                                           bop(Or,
                                                                               bop(In,var_w("Rt",4),
                                                                                   sl[lw(13,4),
                                                                                      lw(15,4)]),
                                                                               bop(Or,
                                                                                   bop(In,
                                                                                       var_w("Rt2",4),
                                                                                       sl[lw(13,4),
                                                                                          lw(15,4)]),
                                                                                   eq(var_w("Rt",4),
                                                                                      var_w("Rt2",4))))),
                                                                       call
                                                                         ("DECODE_UNPREDICTABLE",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          tp[var("mc",
                                                                                 @{typ MachineCode}),
                                                                             ls"LoadDual"],@{theory}),
                                                                       mu(lu,qTy)),
                                                                   close
                                                                     (var_a HOLogic.unitT,
                                                                      mu(call
                                                                           ("instruction.Load",
                                                                            @{typ instruction},
                                                                            call
                                                                              ("Load.LoadDual",
                                                                               @{typ Load},
                                                                               tp[eq(mop(Cast w1,
                                                                                         ll[var_b"b'23"]),
                                                                                     lw(1,1)),
                                                                                  eq(var_w("P",1),
                                                                                     lw(1,1)),
                                                                                  var_b"wback",
                                                                                  var_w("Rt",4),
                                                                                  var_w("Rt2",4),
                                                                                  var_w("Rn",4),
                                                                                  call
                                                                                    ("offset2.immediate_form2",
                                                                                     @{typ offset2},
                                                                                     mop(Cast w32,
                                                                                         cc[mop(Cast
                                                                                                  w8,
                                                                                                ll[var_b"b'7",
                                                                                                   var_b"b'6",
                                                                                                   var_b"b'5",
                                                                                                   var_b"b'4",
                                                                                                   var_b"b'3",
                                                                                                   var_b"b'2",
                                                                                                   var_b"b'1",
                                                                                                   var_b"b'0"]),
                                                                                            lw(0,2)]),
                                                                                     @{theory})],
                                                                               @{theory}),@{theory}),
                                                                         qTy)))),
                                                             call
                                                               ("Skip",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (instruction \<times> state)"},lu,
                                                                @{theory})))))))))))),
                             (var_b"b'25",
                              let'
                                (var_w("Rn",4),
                                 mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 let'
                                   (var_w("S",1),mop(Cast w1,ll[var_b"b'20"]),
                                    let'
                                      (var_w("Rm",4),
                                       mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                       let'
                                         (var_w("typ",2),
                                          mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"b'5",var_b"b'4"]),
                                          let'
                                            (var_w("imm2",2),
                                             mop(Cast (Word_Lib.mk_wordT 2),
                                                 ll[var_b"b'7",var_b"b'6"]),
                                             let'
                                               (var_w("Rd",4),
                                                mop(Cast w4,
                                                    ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                                let'
                                                  (var_w("imm3",3),
                                                   mop(Cast (Word_Lib.mk_wordT 3),
                                                       ll[var_b"b'14",var_b"b'13",var_b"b'12"]),
                                                   mb(call
                                                        ("ThumbCondition",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (4 word \<times> state)"},lu,@{theory}),
                                                      close
                                                        (var_w("v",4),
                                                         mb(mb(mb(call
                                                                    ("HaveThumb2",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (bool \<times> state)"},lu,
                                                                     @{theory}),
                                                                  close
                                                                    (var_b"v0",
                                                                     mu(tp[var_w("v",4),var_b"v0"],
                                                                        qTy))),
                                                               close
                                                                 (var("v",
                                                                      @{typ "4 word \<times> bool"}),
                                                                  call
                                                                    ("Do",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (bool \<times> state)"},
                                                                     var("v",
                                                                         @{typ
                                                                         "4 word \<times> bool"}),
                                                                     @{theory}))),
                                                            close
                                                              (var_b"b",
                                                               ite(var_b"b",
                                                                   let'
                                                                     (tp[var("shift_t",@{typ SRType}),
                                                                         var_n"shift_n"],
                                                                      call
                                                                        ("DecodeImmShift",
                                                                         @{typ
                                                                         "SRType \<times> nat"},
                                                                         tp[var_w("typ",2),
                                                                            cc[var_w("imm3",3),
                                                                               var_w("imm2",2)]],
                                                                         @{theory}),
                                                                      let'
                                                                        (var_b"setflags",
                                                                         eq(var_w("S",1),lw(1,1)),
                                                                         itb([(bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(0,4)),
                                                                                   bop(And,
                                                                                       eq(var_w("Rd",4),
                                                                                          lw(15,4)),
                                                                                       eq(var_w("S",1),
                                                                                          lw(1,1)))),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rn",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(In,
                                                                                              var_w("Rm",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)])),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "TST (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.TestCompareRegister",
                                                                                              @{typ Data},
                                                                                              tp[lw(0,
                                                                                                    2),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(0,4)),
                                                                               mb(ite(bop(Or,
                                                                                          eq(var_w("Rd",4),
                                                                                             lw(13,4)),
                                                                                          bop(Or,
                                                                                              bop(And,
                                                                                                  eq(var_w("Rd",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  mop(Not,
                                                                                                      var_b"setflags")),
                                                                                              bop(Or,
                                                                                                  bop(In,
                                                                                                      var_w("Rn",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)]),
                                                                                                  bop(In,
                                                                                                      var_w("Rm",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)])))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "AND (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(0,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(1,4)),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(Or,
                                                                                              bop(In,
                                                                                                  var_w("Rn",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]),
                                                                                              bop(In,
                                                                                                  var_w("Rm",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "BIC (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(14,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(2,4)),
                                                                                   eq(var_w("Rn",4),
                                                                                      lw(15,4))),
                                                                               mb(itb([(bop(And,
                                                                                            eq(var_w("typ",2),
                                                                                               lw(0,
                                                                                                  2)),
                                                                                            bop(And,
                                                                                                eq(var_w("imm3",3),
                                                                                                   lw(0,
                                                                                                      3)),
                                                                                                eq(var_w("imm2",2),
                                                                                                   lw(0,
                                                                                                      2)))),
                                                                                        ite(bop(Or,
                                                                                                bop(And,
                                                                                                    var_b"setflags",
                                                                                                    bop(Or,
                                                                                                        bop(In,
                                                                                                            var_w("Rd",4),
                                                                                                            sl[lw(13,
                                                                                                                  4),
                                                                                                               lw(15,
                                                                                                                  4)]),
                                                                                                        bop(In,
                                                                                                            var_w("Rm",4),
                                                                                                            sl[lw(13,
                                                                                                                  4),
                                                                                                               lw(15,
                                                                                                                  4)]))),
                                                                                                bop(And,
                                                                                                    mop(Not,
                                                                                                        var_b"setflags"),
                                                                                                    bop(Or,
                                                                                                        eq(var_w("Rd",4),
                                                                                                           lw(15,
                                                                                                              4)),
                                                                                                        bop(Or,
                                                                                                            eq(var_w("Rm",4),
                                                                                                               lw(15,
                                                                                                                  4)),
                                                                                                            bop(And,
                                                                                                                eq(var_w("Rd",4),
                                                                                                                   lw(13,
                                                                                                                      4)),
                                                                                                                eq(var_w("Rm",4),
                                                                                                                   lw(13,
                                                                                                                      4))))))),
                                                                                            call
                                                                                              ("DECODE_UNPREDICTABLE",
                                                                                               @{typ
                                                                                               "state \<Rightarrow>
                                                                                                (unit \<times>
                                                                                                 state)"},
                                                                                               tp[var("mc",
                                                                                                      @{typ MachineCode}),
                                                                                                  ls
                                                                                                   "MOV (register)"],
                                                                                               @{theory}),
                                                                                            mu(lu,
                                                                                               qTy))),
                                                                                       (bop(Or,
                                                                                            bop(In,
                                                                                                var_w("Rd",4),
                                                                                                sl[lw(13,
                                                                                                      4),
                                                                                                   lw(15,
                                                                                                      4)]),
                                                                                            bop(In,
                                                                                                var_w("Rm",4),
                                                                                                sl[lw(13,
                                                                                                      4),
                                                                                                   lw(15,
                                                                                                      4)])),
                                                                                        call
                                                                                          ("DECODE_UNPREDICTABLE",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (unit \<times>
                                                                                             state)"},
                                                                                           tp[var("mc",
                                                                                                  @{typ MachineCode}),
                                                                                              ls
                                                                                               "SHIFT (register)"],
                                                                                           @{theory}))],
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.ShiftImmediate",
                                                                                              @{typ Data},
                                                                                              tp[lf,
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(2,4)),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(Or,
                                                                                              eq(var_w("Rn",4),
                                                                                                 lw(13,
                                                                                                    4)),
                                                                                              bop(In,
                                                                                                  var_w("Rm",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "ORR (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(12,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(3,4)),
                                                                                   eq(var_w("Rn",4),
                                                                                      lw(15,4))),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(In,
                                                                                              var_w("Rm",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)])),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "MVN (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.ShiftImmediate",
                                                                                              @{typ Data},
                                                                                              tp[lt,
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(3,4)),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(Or,
                                                                                              eq(var_w("Rn",4),
                                                                                                 lw(13,
                                                                                                    4)),
                                                                                              bop(In,
                                                                                                  var_w("Rm",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "ORN (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(15,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(4,4)),
                                                                                   bop(And,
                                                                                       eq(var_w("Rd",4),
                                                                                          lw(15,4)),
                                                                                       eq(var_w("S",1),
                                                                                          lw(1,1)))),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rn",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(In,
                                                                                              var_w("Rm",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)])),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "TEQ (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.TestCompareRegister",
                                                                                              @{typ Data},
                                                                                              tp[lw(1,
                                                                                                    2),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(4,4)),
                                                                               mb(ite(bop(Or,
                                                                                          eq(var_w("Rd",4),
                                                                                             lw(13,4)),
                                                                                          bop(Or,
                                                                                              bop(And,
                                                                                                  eq(var_w("Rd",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  mop(Not,
                                                                                                      var_b"setflags")),
                                                                                              bop(Or,
                                                                                                  bop(In,
                                                                                                      var_w("Rn",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)]),
                                                                                                  bop(In,
                                                                                                      var_w("Rm",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)])))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "EOR (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(1,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(6,4)),
                                                                                   eq(var_w("S",1),
                                                                                      lw(0,1))),
                                                                               ite(bop(Bit,
                                                                                       var_w("typ",2),
                                                                                       ln 0),
                                                                                   mu(call
                                                                                        ("instruction.Undefined",
                                                                                         @{typ instruction},
                                                                                         lw(0,32),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   mb(ite(bop(Or,
                                                                                              bop(In,
                                                                                                  var_w("Rd",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]),
                                                                                              bop(Or,
                                                                                                  bop(In,
                                                                                                      var_w("Rn",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)]),
                                                                                                  bop(In,
                                                                                                      var_w("Rm",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)]))),
                                                                                          call
                                                                                            ("DECODE_UNPREDICTABLE",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             tp[var("mc",
                                                                                                    @{typ MachineCode}),
                                                                                                ls
                                                                                                 "PackHalfword"],
                                                                                             @{theory}),
                                                                                          mu(lu,qTy)),
                                                                                      close
                                                                                        (var_a
                                                                                           HOLogic.unitT,
                                                                                         mu(call
                                                                                              ("instruction.Media",
                                                                                               @{typ instruction},
                                                                                               call
                                                                                                 ("Media.PackHalfword",
                                                                                                  @{typ Media},
                                                                                                  tp[var("shift_t",
                                                                                                         @{typ SRType}),
                                                                                                     var_n"shift_n",
                                                                                                     bop(Bit,
                                                                                                         var_w("typ",2),
                                                                                                         ln
                                                                                                          1),
                                                                                                     var_w("Rd",4),
                                                                                                     var_w("Rn",4),
                                                                                                     var_w("Rm",4)],
                                                                                                  @{theory}),
                                                                                               @{theory}),
                                                                                            qTy))))),
                                                                              (bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(8,4)),
                                                                                   bop(And,
                                                                                       eq(var_w("Rd",4),
                                                                                          lw(15,4)),
                                                                                       eq(var_w("S",1),
                                                                                          lw(1,1)))),
                                                                               mb(ite(bop(Or,
                                                                                          eq(var_w("Rn",4),
                                                                                             lw(15,4)),
                                                                                          bop(In,
                                                                                              var_w("Rm",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)])),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "CMN (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.TestCompareRegister",
                                                                                              @{typ Data},
                                                                                              tp[lw(3,
                                                                                                    2),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(8,4)),
                                                                               mb(ite(bop(Or,
                                                                                          eq(var_w("Rd",4),
                                                                                             lw(13,4)),
                                                                                          bop(Or,
                                                                                              bop(And,
                                                                                                  eq(var_w("Rd",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  mop(Not,
                                                                                                      var_b"setflags")),
                                                                                              bop(Or,
                                                                                                  eq(var_w("Rn",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  bop(In,
                                                                                                      var_w("Rm",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)])))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "ADD (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(let'
                                                                                          (tp[var("shift_t",
                                                                                                  @{typ SRType}),
                                                                                              var_n"shift_n"],
                                                                                           call
                                                                                             ("DecodeImmShift",
                                                                                              @{typ
                                                                                              "SRType \<times>
                                                                                               nat"},
                                                                                              tp[var_w("typ",2),
                                                                                                 cc[var_w("imm3",3),
                                                                                                    var_w("imm2",2)]],
                                                                                              @{theory}),
                                                                                           call
                                                                                             ("instruction.Data",
                                                                                              @{typ instruction},
                                                                                              call
                                                                                                ("Data.Register",
                                                                                                 @{typ Data},
                                                                                                 tp[lw(4,
                                                                                                       4),
                                                                                                    var_b"setflags",
                                                                                                    var_w("Rd",4),
                                                                                                    var_w("Rn",4),
                                                                                                    var_w("Rm",4),
                                                                                                    var("shift_t",
                                                                                                        @{typ SRType}),
                                                                                                    var_n"shift_n"],
                                                                                                 @{theory}),
                                                                                              @{theory})),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(10,4)),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(Or,
                                                                                              bop(In,
                                                                                                  var_w("Rn",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]),
                                                                                              bop(In,
                                                                                                  var_w("Rm",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "ADC (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(5,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(11,4)),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(Or,
                                                                                              bop(In,
                                                                                                  var_w("Rn",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]),
                                                                                              bop(In,
                                                                                                  var_w("Rm",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "SBC (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(6,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (bop(And,
                                                                                   eq(mop(Cast w4,
                                                                                          ll[var_b"b'24",
                                                                                             var_b"b'23",
                                                                                             var_b"b'22",
                                                                                             var_b"b'21"]),
                                                                                      lw(13,4)),
                                                                                   bop(And,
                                                                                       eq(var_w("Rd",4),
                                                                                          lw(15,4)),
                                                                                       eq(var_w("S",1),
                                                                                          lw(1,1)))),
                                                                               mb(ite(bop(Or,
                                                                                          eq(var_w("Rn",4),
                                                                                             lw(15,4)),
                                                                                          bop(In,
                                                                                              var_w("Rm",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)])),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "CMP (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.TestCompareRegister",
                                                                                              @{typ Data},
                                                                                              tp[lw(2,
                                                                                                    2),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(13,4)),
                                                                               mb(ite(bop(Or,
                                                                                          eq(var_w("Rd",4),
                                                                                             lw(13,4)),
                                                                                          bop(Or,
                                                                                              bop(And,
                                                                                                  eq(var_w("Rd",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  mop(Not,
                                                                                                      var_b"setflags")),
                                                                                              bop(Or,
                                                                                                  eq(var_w("Rn",4),
                                                                                                     lw(15,
                                                                                                        4)),
                                                                                                  bop(In,
                                                                                                      var_w("Rm",4),
                                                                                                      sl[lw(13,
                                                                                                            4),
                                                                                                         lw(15,
                                                                                                            4)])))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "SUB (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(2,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy)))),
                                                                              (eq(mop(Cast w4,
                                                                                      ll[var_b"b'24",
                                                                                         var_b"b'23",
                                                                                         var_b"b'22",
                                                                                         var_b"b'21"]),
                                                                                  lw(14,4)),
                                                                               mb(ite(bop(Or,
                                                                                          bop(In,
                                                                                              var_w("Rd",4),
                                                                                              sl[lw(13,
                                                                                                    4),
                                                                                                 lw(15,
                                                                                                    4)]),
                                                                                          bop(Or,
                                                                                              bop(In,
                                                                                                  var_w("Rn",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]),
                                                                                              bop(In,
                                                                                                  var_w("Rm",4),
                                                                                                  sl[lw(13,
                                                                                                        4),
                                                                                                     lw(15,
                                                                                                        4)]))),
                                                                                      call
                                                                                        ("DECODE_UNPREDICTABLE",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[var("mc",
                                                                                                @{typ MachineCode}),
                                                                                            ls
                                                                                             "RSB (register)"],
                                                                                         @{theory}),
                                                                                      mu(lu,qTy)),
                                                                                  close
                                                                                    (var_a
                                                                                       HOLogic.unitT,
                                                                                     mu(call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.Register",
                                                                                              @{typ Data},
                                                                                              tp[lw(3,
                                                                                                    4),
                                                                                                 var_b"setflags",
                                                                                                 var_w("Rd",4),
                                                                                                 var_w("Rn",4),
                                                                                                 var_w("Rm",4),
                                                                                                 var("shift_t",
                                                                                                     @{typ SRType}),
                                                                                                 var_n"shift_n"],
                                                                                              @{theory}),
                                                                                           @{theory}),
                                                                                        qTy))))],
                                                                             mu(call
                                                                                  ("instruction.Undefined",
                                                                                   @{typ instruction},
                                                                                   lw(0,32),
                                                                                   @{theory}),qTy)))),
                                                                   call
                                                                     ("Skip",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (instruction \<times> state)"},
                                                                      lu,@{theory}))))))))))))))],
                            call
                              ("UndefinedThumb",
                               @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                               @{theory})))],
                      call
                        ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                         lu,@{theory}))),
                 (var_b"b'15",
                  ite(bop(And,var_b"b'31",bop(And,var_b"b'30",bop(And,var_b"b'29",var_b"b'28"))),
                      itb([(bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,mop(Not,var_b"b'22"),
                                                bop(And,mop(Not,var_b"b'21"),
                                                    bop(And,mop(Not,var_b"b'14"),
                                                        bop(And,mop(Not,var_b"b'12"),var_b"b'5")))))))),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               mb(call
                                    ("ThumbCondition",
                                     @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                     @{theory}),
                                  close
                                    (var_w("v",4),
                                     mb(mb(mb(call
                                                ("HaveVirtExt",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(In,var_w("Rn",4),sl[lw(13,4),lw(15,4)]),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"MoveToBankedOrSpecialRegister"],
                                                         @{theory}),mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.System",@{typ instruction},
                                                           call
                                                             ("System.MoveToBankedOrSpecialRegister",
                                                              @{typ System},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'20"]),
                                                                    lw(1,1)),
                                                                 cc[mop(Cast w1,ll[var_b"b'4"]),
                                                                    mop(Cast w4,
                                                                        ll[var_b"b'11",var_b"b'10",
                                                                           var_b"b'9",var_b"b'8"])],
                                                                 var_w("Rn",4)],@{theory}),@{theory}),
                                                        qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,mop(Not,var_b"b'22"),
                                                bop(And,mop(Not,var_b"b'21"),
                                                    bop(And,mop(Not,var_b"b'14"),
                                                        bop(And,mop(Not,var_b"b'12"),
                                                            mop(Not,var_b"b'5"))))))))),
                            let'
                              (var_w("Rn",4),
                               mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                               let'
                                 (var_w("mask",4),
                                  mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                  mb(call
                                       ("ThumbCondition",
                                        @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                        @{theory}),
                                     close
                                       (var_w("v",4),
                                        mb(mb(mb(call
                                                   ("HaveThumb2",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(ite(bop(Or,eq(var_w("mask",4),lw(0,4)),
                                                             bop(In,var_w("Rn",4),
                                                                 sl[lw(13,4),lw(15,4)])),
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"MoveToSpecialFromRegister"],
                                                            @{theory}),mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.System",
                                                              @{typ instruction},
                                                              call
                                                                ("System.MoveToSpecialFromRegister",
                                                                 @{typ System},
                                                                 tp[eq(mop(Cast w1,ll[var_b"b'20"]),
                                                                       lw(1,1)),var_w("Rn",4),
                                                                    var_w("mask",4)],@{theory}),
                                                              @{theory}),qTy))),
                                                  call
                                                    ("Skip",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (instruction \<times> state)"},lu,@{theory}))))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,mop(Not,var_b"b'22"),
                                                bop(And,var_b"b'21",
                                                    bop(And,mop(Not,var_b"b'20"),
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            bop(And,mop(Not,var_b"b'12"),
                                                                bop(And,mop(Not,var_b"b'10"),
                                                                    bop(And,mop(Not,var_b"b'9"),
                                                                        mop(Not,var_b"b'8")))))))))))),
                            mb(call
                                 ("ThumbCondition",
                                  @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                               close
                                 (var_w("v",4),
                                  mb(mu(tp[var_w("v",4),
                                           mop(Cast w8,
                                               ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                  var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],qTy),
                                     close
                                       (var("v",@{typ "4 word \<times> 8 word"}),
                                        call
                                          ("DecodeHint",
                                           @{typ "state \<Rightarrow> (instruction \<times> state)"},
                                           var("v",@{typ "4 word \<times> 8 word"}),@{theory})))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,mop(Not,var_b"b'22"),
                                                bop(And,var_b"b'21",
                                                    bop(And,mop(Not,var_b"b'20"),
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            mop(Not,var_b"b'12"))))))))),
                            let'
                              (var_w("mode",5),
                               mop(Cast (Word_Lib.mk_wordT 5),
                                   ll[var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                               let'
                                 (var_w("F",1),mop(Cast w1,ll[var_b"b'5"]),
                                  let'
                                    (var_w("I",1),mop(Cast w1,ll[var_b"b'6"]),
                                     let'
                                       (var_w("A",1),mop(Cast w1,ll[var_b"b'7"]),
                                        let'
                                          (var_w("M",1),mop(Cast w1,ll[var_b"b'8"]),
                                           let'
                                             (var_w("imod",2),
                                              mop(Cast (Word_Lib.mk_wordT 2),
                                                  ll[var_b"b'10",var_b"b'9"]),
                                              mb(call
                                                   ("ThumbCondition",
                                                    @{typ
                                                    "state \<Rightarrow> (4 word \<times> state)"},
                                                    lu,@{theory}),
                                                 close
                                                   (var_w("v",4),
                                                    mb(mb(mb(call
                                                               ("HaveThumb2",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},lu,
                                                                @{theory}),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                                          close
                                                            (var("v",@{typ "4 word \<times> bool"}),
                                                             call
                                                               ("Do",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var("v",
                                                                    @{typ "4 word \<times> bool"}),
                                                                @{theory}))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              mb(call
                                                                   ("InITBlock",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (bool \<times> state)"},lu,
                                                                    @{theory}),
                                                                 close
                                                                   (var_b"v",
                                                                    mb(mb(mb(mb(mu(bop(Or,
                                                                                       eq(var_w("imod",2),
                                                                                          lw(1,2)),
                                                                                       var_b"v"),qTy),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(bop(Or,
                                                                                          eq(bop(Bit,
                                                                                                 var_w("imod",2),
                                                                                                 ln
                                                                                                  1),
                                                                                             eq(cc[var_w("A",1),
                                                                                                   var_w("I",1),
                                                                                                   var_w("F",1)],
                                                                                                lw(0,
                                                                                                   3))),
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"v",
                                                                                mu(bop(Or,
                                                                                       bop(And,
                                                                                           mop(Not,
                                                                                               eq(var_w("mode",5),
                                                                                                  lw(0,
                                                                                                     5))),
                                                                                           eq(var_w("M",1),
                                                                                              lw(0,1))),
                                                                                       var_b"v"),qTy))),
                                                                          close
                                                                            (var_b"b",
                                                                             ite(var_b"b",
                                                                                 call
                                                                                   ("DECODE_UNPREDICTABLE",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (unit \<times>
                                                                                      state)"},
                                                                                    tp[var("mc",
                                                                                           @{typ MachineCode}),
                                                                                       ls
                                                                                        "ChangeProcessorState"],
                                                                                    @{theory}),
                                                                                 mu(lu,qTy)))),
                                                                       close
                                                                         (var_a HOLogic.unitT,
                                                                          mu(call
                                                                               ("instruction.System",
                                                                                @{typ instruction},
                                                                                call
                                                                                  ("System.ChangeProcessorState",
                                                                                   @{typ System},
                                                                                   tp[eq(var_w("imod",2),
                                                                                         lw(2,2)),
                                                                                      eq(var_w("imod",2),
                                                                                         lw(3,2)),
                                                                                      eq(var_w("A",1),
                                                                                         lw(1,1)),
                                                                                      eq(var_w("I",1),
                                                                                         lw(1,1)),
                                                                                      eq(var_w("F",1),
                                                                                         lw(1,1)),
                                                                                      ite(eq(var_w("M",1),
                                                                                             lw(1,1)),
                                                                                          mop(Some,
                                                                                              var_w("mode",5)),
                                                                                          lo (Word_Lib.mk_wordT 5))],
                                                                                   @{theory}),
                                                                                @{theory}),qTy))))),
                                                              call
                                                                ("Skip",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (instruction \<times> state)"},lu,
                                                                 @{theory}))))))))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,mop(Not,var_b"b'22"),
                                                bop(And,var_b"b'21",
                                                    bop(And,var_b"b'20",
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            bop(And,mop(Not,var_b"b'12"),
                                                                bop(And,mop(Not,var_b"b'7"),
                                                                    bop(And,mop(Not,var_b"b'6"),
                                                                        mop(Not,var_b"b'5")))))))))))),
                            let'
                              (var_w("J",1),mop(Cast w1,ll[var_b"b'4"]),
                               mb(call
                                    ("ThumbCondition",
                                     @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                     @{theory}),
                                  close
                                    (var_w("v",4),
                                     mb(mb(mb(mb(call
                                                   ("HaveThumbEE",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},lu,
                                                    @{theory}),
                                                 close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                              close
                                                (var("v",@{typ "4 word \<times> bool"}),
                                                 call
                                                   ("Do",
                                                    @{typ
                                                    "state \<Rightarrow> (bool \<times> state)"},
                                                    var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",
                                                  mb(call
                                                       ("CurrentInstrSet",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (InstrSet \<times> state)"},lu,@{theory}),
                                                     close
                                                       (var("v",@{typ InstrSet}),
                                                        mb(mb(mu(eq(var("v",@{typ InstrSet}),
                                                                    lc("InstrSet_Thumb","InstrSet",
                                                                       @{theory})),qTy),
                                                              close
                                                                (var_b"b",
                                                                 mu(bop(And,var_b"b",
                                                                        eq(var_w("J",1),lw(0,1))),
                                                                    qTy))),
                                                           close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),
                                                  mu(lf,qTy)))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(call
                                                    ("InITBlock",
                                                     @{typ
                                                     "state \<Rightarrow> (bool \<times> state)"},
                                                     lu,@{theory}),
                                                  close
                                                    (var_b"v",
                                                     mb(ite(var_b"v",
                                                            call
                                                              ("DECODE_UNPREDICTABLE",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               tp[var("mc",@{typ MachineCode}),
                                                                  ls"EnterxLeavex"],@{theory}),
                                                            mu(lu,qTy)),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(call
                                                                ("instruction.System",
                                                                 @{typ instruction},
                                                                 call
                                                                   ("System.EnterxLeavex",
                                                                    @{typ System},
                                                                    eq(var_w("J",1),lw(1,1)),
                                                                    @{theory}),@{theory}),qTy))))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,mop(Not,var_b"b'22"),
                                                bop(And,var_b"b'21",
                                                    bop(And,var_b"b'20",
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            mop(Not,var_b"b'12"))))))))),
                            let'
                              (var_w("option",4),
                               mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                               mb(call
                                    ("ThumbCondition",
                                     @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                     @{theory}),
                                  close
                                    (var_w("v",4),
                                     mb(mb(mb(call
                                                ("HaveThumb2",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               cs(mop(Cast w4,
                                                      ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4"]),
                                                  [(var_w("v",4),
                                                    itb([(eq(var_w("v",4),lw(2,4)),
                                                          mu(Term.Const
                                                               (@{const_name "ClearExclusive"},
                                                                @{typ instruction}),qTy)),
                                                         (eq(var_w("v",4),lw(4,4)),
                                                          mu(call
                                                               ("instruction.Hint",
                                                                @{typ instruction},
                                                                call
                                                                  ("Hint.DataSynchronizationBarrier",
                                                                   @{typ Hint},var_w("option",4),
                                                                   @{theory}),@{theory}),qTy)),
                                                         (eq(var_w("v",4),lw(5,4)),
                                                          mu(call
                                                               ("instruction.Hint",
                                                                @{typ instruction},
                                                                call
                                                                  ("Hint.DataMemoryBarrier",
                                                                   @{typ Hint},var_w("option",4),
                                                                   @{theory}),@{theory}),qTy)),
                                                         (eq(var_w("v",4),lw(6,4)),
                                                          mu(call
                                                               ("instruction.Hint",
                                                                @{typ instruction},
                                                                call
                                                                  ("Hint.InstructionSynchronizationBarrier",
                                                                   @{typ Hint},var_w("option",4),
                                                                   @{theory}),@{theory}),qTy))],
                                                        mb(call
                                                             ("ArchVersion",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (nat \<times> state)"},lu,@{theory}),
                                                           close
                                                             (var_n"v",
                                                              mb(mu(bop(Ge,var_n"v",ln 7),qTy),
                                                                 close
                                                                   (var_b"b",
                                                                    ite(var_b"b",
                                                                        mu(call
                                                                             ("instruction.Undefined",
                                                                              @{typ instruction},
                                                                              lw(0,32),@{theory}),
                                                                           qTy),
                                                                        mb(call
                                                                             ("DECODE_UNPREDICTABLE",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              tp[var("mc",
                                                                                     @{typ MachineCode}),
                                                                                 ls
                                                                                  "Miscellaneous control"],
                                                                              @{theory}),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mu(lx @{typ instruction},
                                                                                 qTy))))))))))],
                                                  @{context}),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,var_b"b'22",
                                                bop(And,mop(Not,var_b"b'21"),
                                                    bop(And,var_b"b'20",
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            mop(Not,var_b"b'12"))))))))),
                            let'
                              (var_w("imm8",8),
                               mop(Cast w8,
                                   ll[var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                                      var_b"b'2",var_b"b'1",var_b"b'0"]),
                               mb(call
                                    ("ThumbCondition",
                                     @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                     @{theory}),
                                  close
                                    (var_w("v",4),
                                     mb(mb(mb(call
                                                ("HaveThumb2",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(call
                                                    ("HaveVirtExt",
                                                     @{typ
                                                     "state \<Rightarrow> (bool \<times> state)"},
                                                     lu,@{theory}),
                                                  close
                                                    (var_b"v",
                                                     mb(mu(bop(And,var_b"v",
                                                               eq(var_w("imm8",8),lw(0,8))),qTy),
                                                        close
                                                          (var_b"b",
                                                           ite(var_b"b",
                                                               mu(call
                                                                    ("instruction.System",
                                                                     @{typ instruction},
                                                                     Term.Const
                                                                       (@{const_name
                                                                        "ExceptionReturn"},
                                                                        @{typ System}),@{theory}),
                                                                  qTy),
                                                               mb(call
                                                                    ("CurrentInstrSet",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (InstrSet \<times> state)"},
                                                                     lu,@{theory}),
                                                                  close
                                                                    (var("v",@{typ InstrSet}),
                                                                     mb(mb(mb(mu(eq(var("v",
                                                                                        @{typ InstrSet}),
                                                                                    lc("InstrSet_ThumbEE",
                                                                                       "InstrSet",
                                                                                       @{theory})),
                                                                                 qTy),
                                                                              close
                                                                                (var_b"b",
                                                                                 ite(var_b"b",
                                                                                     mu(lt,qTy),
                                                                                     mb(call
                                                                                          ("InITBlock",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (bool \<times>
                                                                                             state)"},
                                                                                           lu,
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_b"b",
                                                                                           ite(var_b"b",
                                                                                               mb(call
                                                                                                    ("LastInITBlock",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (bool \<times>
                                                                                                       state)"},
                                                                                                     lu,
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_b"v",
                                                                                                     mu(mop(Not,
                                                                                                            var_b"v"),
                                                                                                        qTy))),
                                                                                               mu(lf,
                                                                                                  qTy))))))),
                                                                           close
                                                                             (var_b"b",
                                                                              ite(var_b"b",
                                                                                  call
                                                                                    ("DECODE_UNPREDICTABLE",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (unit \<times>
                                                                                       state)"},
                                                                                     tp[var("mc",
                                                                                            @{typ MachineCode}),
                                                                                        ls
                                                                                         "SUBS<c> PC, LR, #0"],
                                                                                     @{theory}),
                                                                                  mu(lu,qTy)))),
                                                                        close
                                                                          (var_a HOLogic.unitT,
                                                                           mb(call
                                                                                ("CurrentModeIsHyp",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (bool \<times>
                                                                                   state)"},lu,
                                                                                 @{theory}),
                                                                              close
                                                                                (var_b"b",
                                                                                 mu(ite(var_b"b",
                                                                                        call
                                                                                          ("instruction.Undefined",
                                                                                           @{typ instruction},
                                                                                           lw(0,32),
                                                                                           @{theory}),
                                                                                        call
                                                                                          ("instruction.Data",
                                                                                           @{typ instruction},
                                                                                           call
                                                                                             ("Data.ArithLogicImmediate",
                                                                                              @{typ Data},
                                                                                              tp[lw(2,
                                                                                                    4),
                                                                                                 lt,
                                                                                                 lw(15,
                                                                                                    4),
                                                                                                 lw(14,
                                                                                                    4),
                                                                                                 mop(Cast
                                                                                                       (Word_Lib.mk_wordT 12),
                                                                                                     var_w("imm8",8))],
                                                                                              @{theory}),
                                                                                           @{theory})),
                                                                                    qTy)))))))))))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,var_b"b'22",
                                                bop(And,var_b"b'21",
                                                    bop(And,mop(Not,var_b"b'14"),
                                                        bop(And,mop(Not,var_b"b'12"),var_b"b'5")))))))),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               mb(call
                                    ("ThumbCondition",
                                     @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                     @{theory}),
                                  close
                                    (var_w("v",4),
                                     mb(mb(mb(call
                                                ("HaveVirtExt",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(In,var_w("Rd",4),sl[lw(13,4),lw(15,4)]),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"MoveToRegisterFromBankedOrSpecial"],
                                                         @{theory}),mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.System",@{typ instruction},
                                                           call
                                                             ("System.MoveToRegisterFromBankedOrSpecial",
                                                              @{typ System},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'20"]),
                                                                    lw(1,1)),
                                                                 cc[mop(Cast w1,ll[var_b"b'4"]),
                                                                    mop(Cast w4,
                                                                        ll[var_b"b'19",var_b"b'18",
                                                                           var_b"b'17",var_b"b'16"])],
                                                                 var_w("Rd",4)],@{theory}),@{theory}),
                                                        qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))),
                           (bop(And,mop(Not,var_b"b'26"),
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,var_b"b'22",
                                                bop(And,var_b"b'21",
                                                    bop(And,mop(Not,var_b"b'14"),
                                                        bop(And,mop(Not,var_b"b'12"),
                                                            mop(Not,var_b"b'5"))))))))),
                            let'
                              (var_w("Rd",4),
                               mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                               mb(call
                                    ("ThumbCondition",
                                     @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                     @{theory}),
                                  close
                                    (var_w("v",4),
                                     mb(mb(mb(call
                                                ("HaveThumb2",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 lu,@{theory}),
                                              close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                           close
                                             (var("v",@{typ "4 word \<times> bool"}),
                                              call
                                                ("Do",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               mb(ite(bop(In,var_w("Rd",4),sl[lw(13,4),lw(15,4)]),
                                                      call
                                                        ("DECODE_UNPREDICTABLE",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[var("mc",@{typ MachineCode}),
                                                            ls"MoveToRegisterFromSpecial"],@{theory}),
                                                      mu(lu,qTy)),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mu(call
                                                          ("instruction.System",@{typ instruction},
                                                           call
                                                             ("System.MoveToRegisterFromSpecial",
                                                              @{typ System},
                                                              tp[eq(mop(Cast w1,ll[var_b"b'20"]),
                                                                    lw(1,1)),var_w("Rd",4)],
                                                              @{theory}),@{theory}),qTy))),
                                               call
                                                 ("Skip",
                                                  @{typ
                                                  "state \<Rightarrow> (instruction \<times> state)"},
                                                  lu,@{theory})))))))),
                           (bop(And,var_b"b'26",
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,var_b"b'22",
                                                bop(And,var_b"b'21",
                                                    bop(And,mop(Not,var_b"b'20"),
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            bop(And,mop(Not,var_b"b'13"),
                                                                mop(Not,var_b"b'12")))))))))),
                            mb(call
                                 ("ThumbCondition",
                                  @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                               close
                                 (var_w("v",4),
                                  mb(mb(mb(call
                                             ("HaveVirtExt",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(call
                                                 ("InITBlock",
                                                  @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                  lu,@{theory}),
                                               close
                                                 (var_b"v",
                                                  mb(ite(var_b"v",
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"HypervisorCall"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.System",
                                                              @{typ instruction},
                                                              call
                                                                ("System.HypervisorCall",
                                                                 @{typ System},
                                                                 cc[mop(Cast w4,
                                                                        ll[var_b"b'19",var_b"b'18",
                                                                           var_b"b'17",var_b"b'16"]),
                                                                    mop(Cast (Word_Lib.mk_wordT 12),
                                                                        ll[var_b"b'11",var_b"b'10",
                                                                           var_b"b'9",var_b"b'8",
                                                                           var_b"b'7",var_b"b'6",
                                                                           var_b"b'5",var_b"b'4",
                                                                           var_b"b'3",var_b"b'2",
                                                                           var_b"b'1",var_b"b'0"])],
                                                                 @{theory}),@{theory}),qTy))))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))),
                           (bop(And,var_b"b'26",
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,var_b"b'22",
                                                bop(And,var_b"b'21",
                                                    bop(And,var_b"b'20",
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            bop(And,mop(Not,var_b"b'13"),
                                                                mop(Not,var_b"b'12")))))))))),
                            mb(call
                                 ("ThumbCondition",
                                  @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                               close
                                 (var_w("v",4),
                                  mb(mb(mb(call
                                             ("HaveSecurityExt",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close
                                             (var_b"v0",
                                              mb(ite(var_b"v0",
                                                     mb(mr(close
                                                             (var("s",qTy),
                                                              call
                                                                ("state.Architecture",
                                                                 @{typ Architecture},var("s",qTy),
                                                                 @{theory}))),
                                                        close
                                                          (var("v",@{typ Architecture}),
                                                           mb(mu(eq(var("v",@{typ Architecture}),
                                                                    lc("ARMv6K","Architecture",
                                                                       @{theory})),qTy),
                                                              close
                                                                (var_b"v",mu(mop(Not,var_b"v"),qTy))))),
                                                     mu(lf,qTy)),
                                                 close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(call
                                                 ("InITBlock",
                                                  @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                  lu,@{theory}),
                                               close
                                                 (var_b"v",
                                                  mb(mb(ite(var_b"v",
                                                            mb(call
                                                                 ("LastInITBlock",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},lu,
                                                                  @{theory}),
                                                               close
                                                                 (var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                            mu(lf,qTy)),
                                                        close
                                                          (var_b"b",
                                                           ite(var_b"b",
                                                               call
                                                                 ("DECODE_UNPREDICTABLE",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[var("mc",@{typ MachineCode}),
                                                                     ls"SecureMonitorCall"],
                                                                  @{theory}),mu(lu,qTy)))),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.System",
                                                              @{typ instruction},
                                                              call
                                                                ("System.SecureMonitorCall",
                                                                 @{typ System},
                                                                 mop(Cast w4,
                                                                     ll[var_b"b'19",var_b"b'18",
                                                                        var_b"b'17",var_b"b'16"]),
                                                                 @{theory}),@{theory}),qTy))))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))),
                           (bop(And,var_b"b'26",
                                bop(And,var_b"b'25",
                                    bop(And,var_b"b'24",
                                        bop(And,var_b"b'23",
                                            bop(And,var_b"b'22",
                                                bop(And,var_b"b'21",
                                                    bop(And,var_b"b'20",
                                                        bop(And,mop(Not,var_b"b'14"),
                                                            bop(And,var_b"b'13",mop(Not,var_b"b'12")))))))))),
                            mb(call
                                 ("ThumbCondition",
                                  @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                               close
                                 (var_w("v",4),
                                  mb(mb(mb(call
                                             ("HaveThumb2",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                              @{theory}),
                                           close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mu(call
                                                 ("instruction.Undefined",@{typ instruction},
                                                  mop(Cast w32,
                                                      cc[mop(Cast w4,
                                                             ll[var_b"b'19",var_b"b'18",var_b"b'17",
                                                                var_b"b'16"]),
                                                         mop(Cast (Word_Lib.mk_wordT 12),
                                                             ll[var_b"b'11",var_b"b'10",var_b"b'9",
                                                                var_b"b'8",var_b"b'7",var_b"b'6",
                                                                var_b"b'5",var_b"b'4",var_b"b'3",
                                                                var_b"b'2",var_b"b'1",var_b"b'0"])]),
                                                  @{theory}),qTy),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))),
                           (bop(And,mop(Not,var_b"b'14"),mop(Not,var_b"b'12")),
                            mb(call
                                 ("HaveThumb2",@{typ "state \<Rightarrow> (bool \<times> state)"},
                                  lu,@{theory}),
                               close
                                 (var_b"v",
                                  mb(mb(mu(tp[mop(Cast w4,
                                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22"]),
                                              var_b"v"],qTy),
                                        close
                                          (var("v",@{typ "4 word \<times> bool"}),
                                           call
                                             ("Do",
                                              @{typ "state \<Rightarrow> (bool \<times> state)"},
                                              var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(call
                                                 ("InITBlock",
                                                  @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                  lu,@{theory}),
                                               close
                                                 (var_b"v",
                                                  mb(ite(var_b"v",
                                                         call
                                                           ("DECODE_UNPREDICTABLE",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            tp[var("mc",@{typ MachineCode}),
                                                               ls"BranchTarget"],@{theory}),
                                                         mu(lu,qTy)),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mu(call
                                                             ("instruction.Branch",
                                                              @{typ instruction},
                                                              call
                                                                ("Branch.BranchTarget",
                                                                 @{typ Branch},
                                                                 mop(SE w32,
                                                                     cc[mop(Cast w1,ll[var_b"b'26"]),
                                                                        mop(Cast w1,ll[var_b"b'11"]),
                                                                        mop(Cast w1,ll[var_b"b'13"]),
                                                                        mop(Cast
                                                                              (Word_Lib.mk_wordT 6),
                                                                            ll[var_b"b'21",
                                                                               var_b"b'20",
                                                                               var_b"b'19",
                                                                               var_b"b'18",
                                                                               var_b"b'17",
                                                                               var_b"b'16"]),
                                                                        mop(Cast
                                                                              (Word_Lib.mk_wordT 11),
                                                                            ll[var_b"b'10",
                                                                               var_b"b'9",
                                                                               var_b"b'8",
                                                                               var_b"b'7",
                                                                               var_b"b'6",
                                                                               var_b"b'5",
                                                                               var_b"b'4",
                                                                               var_b"b'3",
                                                                               var_b"b'2",
                                                                               var_b"b'1",var_b"b'0"]),
                                                                        lw(0,1)]),@{theory}),
                                                              @{theory}),qTy))))),
                                            call
                                              ("Skip",
                                               @{typ
                                               "state \<Rightarrow> (instruction \<times> state)"},
                                               lu,@{theory}))))))),
                           (var_b"b'12",
                            let'
                              (var_w("S",1),mop(Cast w1,ll[var_b"b'26"]),
                               let'
                                 (var_w("J2",1),mop(Cast w1,ll[var_b"b'11"]),
                                  let'
                                    (var_w("J1",1),mop(Cast w1,ll[var_b"b'13"]),
                                     let'
                                       (var_w("L",1),mop(Cast w1,ll[var_b"b'14"]),
                                        mb(call
                                             ("ThumbCondition",
                                              @{typ "state \<Rightarrow> (4 word \<times> state)"},
                                              lu,@{theory}),
                                           close
                                             (var_w("v",4),
                                              mb(mb(mb(call
                                                         ("HaveThumb2",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          lu,@{theory}),
                                                       close
                                                         (var_b"v0",
                                                          mb(mu(bop(Or,
                                                                    bop(And,
                                                                        eq(var_w("L",1),lw(1,1)),
                                                                        bop(And,
                                                                            eq(var_w("J1",1),lw(1,1)),
                                                                            eq(var_w("J1",1),
                                                                               var_w("J2",1)))),
                                                                    var_b"v0"),qTy),
                                                             close
                                                               (var_b"v0",
                                                                mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                    close
                                                      (var("v",@{typ "4 word \<times> bool"}),
                                                       call
                                                         ("Do",
                                                          @{typ
                                                          "state \<Rightarrow> (bool \<times> state)"},
                                                          var("v",@{typ "4 word \<times> bool"}),
                                                          @{theory}))),
                                                 close
                                                   (var_b"b",
                                                    ite(var_b"b",
                                                        mb(call
                                                             ("InITBlock",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (bool \<times> state)"},lu,@{theory}),
                                                           close
                                                             (var_b"v",
                                                              mb(mb(ite(var_b"v",
                                                                        mb(call
                                                                             ("LastInITBlock",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (bool \<times> state)"},
                                                                              lu,@{theory}),
                                                                           close
                                                                             (var_b"v",
                                                                              mu(mop(Not,var_b"v"),
                                                                                 qTy))),mu(lf,qTy)),
                                                                    close
                                                                      (var_b"b",
                                                                       ite(var_b"b",
                                                                           call
                                                                             ("DECODE_UNPREDICTABLE",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              tp[var("mc",
                                                                                     @{typ MachineCode}),
                                                                                 ls
                                                                                  "BranchTarget or BranchLinkExchangeImmediate"],
                                                                              @{theory}),mu(lu,qTy)))),
                                                                 close
                                                                   (var_a HOLogic.unitT,
                                                                    mu(let'
                                                                         (var_w("imm32",32),
                                                                          mop(SE w32,
                                                                              cc[var_w("S",1),
                                                                                 mop(BNot,
                                                                                     bop(BXor,
                                                                                         var_w("J1",1),
                                                                                         var_w("S",1))),
                                                                                 mop(BNot,
                                                                                     bop(BXor,
                                                                                         var_w("J2",1),
                                                                                         var_w("S",1))),
                                                                                 mop(Cast
                                                                                       (Word_Lib.mk_wordT 10),
                                                                                     ll[var_b"b'25",
                                                                                        var_b"b'24",
                                                                                        var_b"b'23",
                                                                                        var_b"b'22",
                                                                                        var_b"b'21",
                                                                                        var_b"b'20",
                                                                                        var_b"b'19",
                                                                                        var_b"b'18",
                                                                                        var_b"b'17",
                                                                                        var_b"b'16"]),
                                                                                 mop(Cast
                                                                                       (Word_Lib.mk_wordT 11),
                                                                                     ll[var_b"b'10",
                                                                                        var_b"b'9",
                                                                                        var_b"b'8",
                                                                                        var_b"b'7",
                                                                                        var_b"b'6",
                                                                                        var_b"b'5",
                                                                                        var_b"b'4",
                                                                                        var_b"b'3",
                                                                                        var_b"b'2",
                                                                                        var_b"b'1",
                                                                                        var_b"b'0"]),
                                                                                 lw(0,1)]),
                                                                          ite(eq(var_w("L",1),
                                                                                 lw(1,1)),
                                                                              call
                                                                                ("instruction.Branch",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Branch.BranchLinkExchangeImmediate",
                                                                                    @{typ Branch},
                                                                                    tp[lc("InstrSet_Thumb",
                                                                                          "InstrSet",
                                                                                          @{theory}),
                                                                                       var_w("imm32",32)],
                                                                                    @{theory}),
                                                                                 @{theory}),
                                                                              call
                                                                                ("instruction.Branch",
                                                                                 @{typ instruction},
                                                                                 call
                                                                                   ("Branch.BranchTarget",
                                                                                    @{typ Branch},
                                                                                    var_w("imm32",32),
                                                                                    @{theory}),
                                                                                 @{theory}))),qTy))))),
                                                        call
                                                          ("Skip",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (instruction \<times> state)"},lu,
                                                           @{theory}))))))))))),
                           (bop(And,var_b"b'14",mop(Not,var_b"b'12")),
                            let'
                              (var_w("S",1),mop(Cast w1,ll[var_b"b'26"]),
                               let'
                                 (var_w("J2",1),mop(Cast w1,ll[var_b"b'11"]),
                                  let'
                                    (var_w("J1",1),mop(Cast w1,ll[var_b"b'13"]),
                                     mb(call
                                          ("ThumbCondition",
                                           @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                           @{theory}),
                                        close
                                          (var_w("v",4),
                                           mb(mb(mb(call
                                                      ("CurrentInstrSet",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        (InstrSet \<times> state)"},lu,@{theory}),
                                                    close
                                                      (var("v0",@{typ InstrSet}),
                                                       mb(mb(mb(mb(mu(eq(var("v0",@{typ InstrSet}),
                                                                         lc("InstrSet_ThumbEE",
                                                                            "InstrSet",@{theory})),
                                                                      qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      mu(bop(Or,var_b"b",
                                                                             eq(mop(Cast w1,
                                                                                    ll[var_b"b'0"]),
                                                                                lw(1,1))),qTy))),
                                                                close
                                                                  (var_b"v",
                                                                   mu(mop(Not,var_b"v"),qTy))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    ite(bop(And,
                                                                            eq(var_w("J1",1),lw(1,1)),
                                                                            eq(var_w("J1",1),
                                                                               var_w("J2",1))),
                                                                        mb(call
                                                                             ("ArchVersion",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (nat \<times> state)"},
                                                                              lu,@{theory}),
                                                                           close
                                                                             (var_n"v",
                                                                              mu(bop(Ge,var_n"v",
                                                                                     ln 5),qTy))),
                                                                        call
                                                                          ("HaveThumb2",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (bool \<times> state)"},
                                                                           lu,@{theory})),mu(lf,qTy)))),
                                                          close
                                                            (var_b"v0",
                                                             mu(tp[var_w("v",4),var_b"v0"],qTy))))),
                                                 close
                                                   (var("v",@{typ "4 word \<times> bool"}),
                                                    call
                                                      ("Do",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       var("v",@{typ "4 word \<times> bool"}),
                                                       @{theory}))),
                                              close
                                                (var_b"b",
                                                 ite(var_b"b",
                                                     mb(call
                                                          ("InITBlock",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},lu,@{theory}),
                                                        close
                                                          (var_b"v",
                                                           mb(mb(ite(var_b"v",
                                                                     mb(call
                                                                          ("LastInITBlock",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (bool \<times> state)"},
                                                                           lu,@{theory}),
                                                                        close
                                                                          (var_b"v",
                                                                           mu(mop(Not,var_b"v"),qTy))),
                                                                     mu(lf,qTy)),
                                                                 close
                                                                   (var_b"b",
                                                                    ite(var_b"b",
                                                                        call
                                                                          ("DECODE_UNPREDICTABLE",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           tp[var("mc",
                                                                                  @{typ MachineCode}),
                                                                              ls
                                                                               "BranchLinkExchangeImmediate"],
                                                                           @{theory}),mu(lu,qTy)))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mu(call
                                                                      ("instruction.Branch",
                                                                       @{typ instruction},
                                                                       call
                                                                         ("Branch.BranchLinkExchangeImmediate",
                                                                          @{typ Branch},
                                                                          tp[lc("InstrSet_ARM",
                                                                                "InstrSet",@{theory}),
                                                                             mop(SE w32,
                                                                                 cc[var_w("S",1),
                                                                                    mop(BNot,
                                                                                        bop(BXor,
                                                                                            var_w("J1",1),
                                                                                            var_w("S",1))),
                                                                                    mop(BNot,
                                                                                        bop(BXor,
                                                                                            var_w("J2",1),
                                                                                            var_w("S",1))),
                                                                                    mop(Cast
                                                                                          (Word_Lib.mk_wordT 10),
                                                                                        ll[var_b"b'25",
                                                                                           var_b"b'24",
                                                                                           var_b"b'23",
                                                                                           var_b"b'22",
                                                                                           var_b"b'21",
                                                                                           var_b"b'20",
                                                                                           var_b"b'19",
                                                                                           var_b"b'18",
                                                                                           var_b"b'17",
                                                                                           var_b"b'16"]),
                                                                                    mop(Cast
                                                                                          (Word_Lib.mk_wordT 10),
                                                                                        ll[var_b"b'10",
                                                                                           var_b"b'9",
                                                                                           var_b"b'8",
                                                                                           var_b"b'7",
                                                                                           var_b"b'6",
                                                                                           var_b"b'5",
                                                                                           var_b"b'4",
                                                                                           var_b"b'3",
                                                                                           var_b"b'2",
                                                                                           var_b"b'1"]),
                                                                                    lw(0,2)])],
                                                                          @{theory}),@{theory}),qTy))))),
                                                     call
                                                       ("Skip",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (instruction \<times> state)"},lu,@{theory}))))))))))],
                          call
                            ("UndefinedThumb",
                             @{typ "state \<Rightarrow> (instruction \<times> state)"},lu,@{theory})),
                      call
                        ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                         lu,@{theory}))),
                 (bop(And,var_b"b'31",bop(And,var_b"b'30",bop(And,var_b"b'29",var_b"b'28"))),
                  itb([(mop(Not,var_b"b'25"),
                        let'
                          (var_w("Rn",4),
                           mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           let'
                             (var_w("S",1),mop(Cast w1,ll[var_b"b'20"]),
                              let'
                                (var_w("Rd",4),
                                 mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                 mb(call
                                      ("ThumbCondition",
                                       @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_w("v",4),
                                       mb(mb(mb(call
                                                  ("HaveThumb2",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                             close
                                               (var("v",@{typ "4 word \<times> bool"}),
                                                call
                                                  ("Do",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},
                                                   var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 let'
                                                   (var_w("imm12",12),
                                                    cc[mop(Cast w1,ll[var_b"b'26"]),
                                                       mop(Cast (Word_Lib.mk_wordT 3),
                                                           ll[var_b"b'14",var_b"b'13",var_b"b'12"]),
                                                       mop(Cast w8,
                                                           ll[var_b"b'7",var_b"b'6",var_b"b'5",
                                                              var_b"b'4",var_b"b'3",var_b"b'2",
                                                              var_b"b'1",var_b"b'0"])],
                                                    mb(mr(close
                                                            (var("s",qTy),
                                                             call
                                                               ("state.CPSR",@{typ PSR},
                                                                var("s",qTy),@{theory}))),
                                                       close
                                                         (var("v",@{typ PSR}),
                                                          mb(mb(mb(mu(call
                                                                        ("PSR.C",HOLogic.boolT,
                                                                         var("v",@{typ PSR}),
                                                                         @{theory}),qTy),
                                                                   close
                                                                     (var_b"v",
                                                                      mu(tp[var_w("imm12",12),
                                                                            var_b"v"],qTy))),
                                                                close
                                                                  (var("v",
                                                                       @{typ
                                                                       "12 word \<times> bool"}),
                                                                   call
                                                                     ("ThumbExpandImm_C",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       ((32 word \<times> bool) \<times>
                                                                        state)"},
                                                                      var("v",
                                                                          @{typ
                                                                          "12 word \<times> bool"}),
                                                                      @{theory}))),
                                                             close
                                                               (var("x",
                                                                    @{typ "32 word \<times> bool"}),
                                                                let'
                                                                  (var_b"setflags",
                                                                   eq(var_w("S",1),lw(1,1)),
                                                                   itb([(bop(And,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'24",
                                                                                       var_b"b'23",
                                                                                       var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                lw(0,4)),
                                                                             bop(And,
                                                                                 eq(var_w("Rd",4),
                                                                                    lw(15,4)),
                                                                                 eq(var_w("S",1),
                                                                                    lw(1,1)))),
                                                                         mb(ite(bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "TST (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.TestCompareImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(0,2),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(0,4)),
                                                                         mb(ite(bop(Or,
                                                                                    eq(var_w("Rd",4),
                                                                                       lw(13,4)),
                                                                                    bop(Or,
                                                                                        bop(And,
                                                                                            eq(var_w("Rd",4),
                                                                                               lw(15,
                                                                                                  4)),
                                                                                            mop(Not,
                                                                                                var_b"setflags")),
                                                                                        bop(In,
                                                                                            var_w("Rn",4),
                                                                                            sl[lw(13,
                                                                                                  4),
                                                                                               lw(15,
                                                                                                  4)]))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "AND (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(0,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(1,4)),
                                                                         mb(ite(bop(Or,
                                                                                    bop(In,
                                                                                        var_w("Rd",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)]),
                                                                                    bop(In,
                                                                                        var_w("Rn",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)])),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "BIC (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(14,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (bop(And,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'24",
                                                                                       var_b"b'23",
                                                                                       var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                lw(2,4)),
                                                                             eq(var_w("Rn",4),
                                                                                lw(15,4))),
                                                                         mb(ite(bop(In,
                                                                                    var_w("Rd",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "MOV (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.Move",
                                                                                        @{typ Data},
                                                                                        tp[var_b"setflags",
                                                                                           lf,
                                                                                           var_w("Rd",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(2,4)),
                                                                         mb(ite(bop(Or,
                                                                                    bop(In,
                                                                                        var_w("Rd",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)]),
                                                                                    eq(var_w("Rn",4),
                                                                                       lw(13,4))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "ORR (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(12,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (bop(And,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'24",
                                                                                       var_b"b'23",
                                                                                       var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                lw(3,4)),
                                                                             eq(var_w("Rn",4),
                                                                                lw(15,4))),
                                                                         mb(ite(bop(In,
                                                                                    var_w("Rd",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "MVN (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.Move",
                                                                                        @{typ Data},
                                                                                        tp[var_b"setflags",
                                                                                           lt,
                                                                                           var_w("Rd",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(3,4)),
                                                                         mb(ite(bop(Or,
                                                                                    bop(In,
                                                                                        var_w("Rd",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)]),
                                                                                    eq(var_w("Rn",4),
                                                                                       lw(13,4))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "ORN (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(15,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (bop(And,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'24",
                                                                                       var_b"b'23",
                                                                                       var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                lw(4,4)),
                                                                             bop(And,
                                                                                 eq(var_w("Rd",4),
                                                                                    lw(15,4)),
                                                                                 eq(var_w("S",1),
                                                                                    lw(1,1)))),
                                                                         mb(ite(bop(In,
                                                                                    var_w("Rn",4),
                                                                                    sl[lw(13,4),
                                                                                       lw(15,4)]),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "TEQ (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.TestCompareImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(1,2),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(4,4)),
                                                                         mb(ite(bop(Or,
                                                                                    eq(var_w("Rd",4),
                                                                                       lw(13,4)),
                                                                                    bop(Or,
                                                                                        bop(And,
                                                                                            eq(var_w("Rd",4),
                                                                                               lw(15,
                                                                                                  4)),
                                                                                            mop(Not,
                                                                                                var_b"setflags")),
                                                                                        bop(In,
                                                                                            var_w("Rn",4),
                                                                                            sl[lw(13,
                                                                                                  4),
                                                                                               lw(15,
                                                                                                  4)]))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "EOR (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(1,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (bop(And,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'24",
                                                                                       var_b"b'23",
                                                                                       var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                lw(8,4)),
                                                                             bop(And,
                                                                                 eq(var_w("Rd",4),
                                                                                    lw(15,4)),
                                                                                 eq(var_w("S",1),
                                                                                    lw(1,1)))),
                                                                         mb(ite(eq(var_w("Rn",4),
                                                                                   lw(15,4)),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "CMN (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.TestCompareImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(3,2),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(8,4)),
                                                                         mb(ite(bop(Or,
                                                                                    eq(var_w("Rd",4),
                                                                                       lw(13,4)),
                                                                                    bop(Or,
                                                                                        bop(And,
                                                                                            eq(var_w("Rd",4),
                                                                                               lw(15,
                                                                                                  4)),
                                                                                            mop(Not,
                                                                                                var_b"setflags")),
                                                                                        eq(var_w("Rn",4),
                                                                                           lw(15,4)))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "ADD (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(4,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(10,4)),
                                                                         mb(ite(bop(Or,
                                                                                    bop(In,
                                                                                        var_w("Rd",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)]),
                                                                                    bop(In,
                                                                                        var_w("Rn",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)])),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "ADC (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(5,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(11,4)),
                                                                         mb(ite(bop(Or,
                                                                                    bop(In,
                                                                                        var_w("Rd",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)]),
                                                                                    bop(In,
                                                                                        var_w("Rn",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)])),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "SBC (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(6,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (bop(And,
                                                                             eq(mop(Cast w4,
                                                                                    ll[var_b"b'24",
                                                                                       var_b"b'23",
                                                                                       var_b"b'22",
                                                                                       var_b"b'21"]),
                                                                                lw(13,4)),
                                                                             bop(And,
                                                                                 eq(var_w("Rd",4),
                                                                                    lw(15,4)),
                                                                                 eq(var_w("S",1),
                                                                                    lw(1,1)))),
                                                                         mb(ite(eq(var_w("Rn",4),
                                                                                   lw(15,4)),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "CMP (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.TestCompareImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(2,2),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(13,4)),
                                                                         mb(ite(bop(Or,
                                                                                    eq(var_w("Rd",4),
                                                                                       lw(13,4)),
                                                                                    bop(Or,
                                                                                        bop(And,
                                                                                            eq(var_w("Rd",4),
                                                                                               lw(15,
                                                                                                  4)),
                                                                                            mop(Not,
                                                                                                var_b"setflags")),
                                                                                        eq(var_w("Rn",4),
                                                                                           lw(15,4)))),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "SUB (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(2,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy)))),
                                                                        (eq(mop(Cast w4,
                                                                                ll[var_b"b'24",
                                                                                   var_b"b'23",
                                                                                   var_b"b'22",
                                                                                   var_b"b'21"]),
                                                                            lw(14,4)),
                                                                         mb(ite(bop(Or,
                                                                                    bop(In,
                                                                                        var_w("Rd",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)]),
                                                                                    bop(In,
                                                                                        var_w("Rn",4),
                                                                                        sl[lw(13,4),
                                                                                           lw(15,4)])),
                                                                                call
                                                                                  ("DECODE_UNPREDICTABLE",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[var("mc",
                                                                                          @{typ MachineCode}),
                                                                                      ls
                                                                                       "RSB (immediate)"],
                                                                                   @{theory}),
                                                                                mu(lu,qTy)),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               mu(call
                                                                                    ("instruction.Data",
                                                                                     @{typ instruction},
                                                                                     call
                                                                                       ("Data.ArithLogicImmediate",
                                                                                        @{typ Data},
                                                                                        tp[lw(3,4),
                                                                                           var_b"setflags",
                                                                                           var_w("Rd",4),
                                                                                           var_w("Rn",4),
                                                                                           var_w("imm12",12)],
                                                                                        @{theory}),
                                                                                     @{theory}),qTy))))],
                                                                       mu(call
                                                                            ("instruction.Undefined",
                                                                             @{typ instruction},
                                                                             lw(0,32),@{theory}),qTy)))))))),
                                                 call
                                                   ("Skip",
                                                    @{typ
                                                    "state \<Rightarrow>
                                                     (instruction \<times> state)"},lu,@{theory})))))))))),
                       (bop(And,var_b"b'25",
                            bop(And,mop(Not,var_b"b'24"),
                                bop(And,mop(Not,var_b"b'23"),
                                    bop(And,mop(Not,var_b"b'22"),
                                        bop(And,mop(Not,var_b"b'21"),mop(Not,var_b"b'20")))))),
                        let'
                          (var_w("Rd",4),
                           mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                           mb(call
                                ("ThumbCondition",
                                 @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                              close
                                (var_w("v",4),
                                 mb(mb(mb(call
                                            ("HaveThumb2",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                       close
                                         (var("v",@{typ "4 word \<times> bool"}),
                                          call
                                            ("Do",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           mb(ite(bop(In,var_w("Rd",4),sl[lw(13,4),lw(15,4)]),
                                                  call
                                                    ("DECODE_UNPREDICTABLE",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[var("mc",@{typ MachineCode}),
                                                        ls"ADDW (immediate)"],@{theory}),mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mu(call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.AddSub",@{typ Data},
                                                          tp[lf,var_w("Rd",4),
                                                             mop(Cast w4,
                                                                 ll[var_b"b'19",var_b"b'18",
                                                                    var_b"b'17",var_b"b'16"]),
                                                             cc[mop(Cast w1,ll[var_b"b'26"]),
                                                                mop(Cast (Word_Lib.mk_wordT 3),
                                                                    ll[var_b"b'14",var_b"b'13",
                                                                       var_b"b'12"]),
                                                                mop(Cast w8,
                                                                    ll[var_b"b'7",var_b"b'6",
                                                                       var_b"b'5",var_b"b'4",
                                                                       var_b"b'3",var_b"b'2",
                                                                       var_b"b'1",var_b"b'0"])]],
                                                          @{theory}),@{theory}),qTy))),
                                           call
                                             ("Skip",
                                              @{typ
                                              "state \<Rightarrow> (instruction \<times> state)"},
                                              lu,@{theory})))))))),
                       (bop(And,var_b"b'25",
                            bop(And,mop(Not,var_b"b'24"),
                                bop(And,var_b"b'23",
                                    bop(And,mop(Not,var_b"b'22"),
                                        bop(And,var_b"b'21",mop(Not,var_b"b'20")))))),
                        let'
                          (var_w("Rd",4),
                           mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                           mb(call
                                ("ThumbCondition",
                                 @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                              close
                                (var_w("v",4),
                                 mb(mb(mb(call
                                            ("HaveThumb2",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                       close
                                         (var("v",@{typ "4 word \<times> bool"}),
                                          call
                                            ("Do",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           mb(ite(bop(In,var_w("Rd",4),sl[lw(13,4),lw(15,4)]),
                                                  call
                                                    ("DECODE_UNPREDICTABLE",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[var("mc",@{typ MachineCode}),
                                                        ls"SUBW (immediate)"],@{theory}),mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mu(call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.AddSub",@{typ Data},
                                                          tp[lt,var_w("Rd",4),
                                                             mop(Cast w4,
                                                                 ll[var_b"b'19",var_b"b'18",
                                                                    var_b"b'17",var_b"b'16"]),
                                                             cc[mop(Cast w1,ll[var_b"b'26"]),
                                                                mop(Cast (Word_Lib.mk_wordT 3),
                                                                    ll[var_b"b'14",var_b"b'13",
                                                                       var_b"b'12"]),
                                                                mop(Cast w8,
                                                                    ll[var_b"b'7",var_b"b'6",
                                                                       var_b"b'5",var_b"b'4",
                                                                       var_b"b'3",var_b"b'2",
                                                                       var_b"b'1",var_b"b'0"])]],
                                                          @{theory}),@{theory}),qTy))),
                                           call
                                             ("Skip",
                                              @{typ
                                              "state \<Rightarrow> (instruction \<times> state)"},
                                              lu,@{theory})))))))),
                       (bop(And,var_b"b'25",
                            bop(And,mop(Not,var_b"b'24"),
                                bop(And,var_b"b'22",
                                    bop(And,mop(Not,var_b"b'21"),mop(Not,var_b"b'20"))))),
                        let'
                          (var_w("Rd",4),
                           mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                           mb(call
                                ("ThumbCondition",
                                 @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,@{theory}),
                              close
                                (var_w("v",4),
                                 mb(mb(mb(call
                                            ("HaveThumb2",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},lu,
                                             @{theory}),
                                          close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                       close
                                         (var("v",@{typ "4 word \<times> bool"}),
                                          call
                                            ("Do",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           mb(ite(bop(In,var_w("Rd",4),sl[lw(13,4),lw(15,4)]),
                                                  call
                                                    ("DECODE_UNPREDICTABLE",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[var("mc",@{typ MachineCode}),
                                                        ls"MOVT or MOVW (immediate)"],@{theory}),
                                                  mu(lu,qTy)),
                                              close
                                                (var_a HOLogic.unitT,
                                                 mu(call
                                                      ("instruction.Data",@{typ instruction},
                                                       call
                                                         ("Data.MoveHalfword",@{typ Data},
                                                          tp[eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                                             var_w("Rd",4),
                                                             cc[mop(Cast w4,
                                                                    ll[var_b"b'19",var_b"b'18",
                                                                       var_b"b'17",var_b"b'16"]),
                                                                mop(Cast w1,ll[var_b"b'26"]),
                                                                mop(Cast (Word_Lib.mk_wordT 3),
                                                                    ll[var_b"b'14",var_b"b'13",
                                                                       var_b"b'12"]),
                                                                mop(Cast w8,
                                                                    ll[var_b"b'7",var_b"b'6",
                                                                       var_b"b'5",var_b"b'4",
                                                                       var_b"b'3",var_b"b'2",
                                                                       var_b"b'1",var_b"b'0"])]],
                                                          @{theory}),@{theory}),qTy))),
                                           call
                                             ("Skip",
                                              @{typ
                                              "state \<Rightarrow> (instruction \<times> state)"},
                                              lu,@{theory})))))))),
                       (bop(And,var_b"b'25",
                            bop(And,var_b"b'24",
                                bop(And,mop(Not,var_b"b'22"),
                                    bop(And,var_b"b'21",
                                        bop(And,mop(Not,var_b"b'20"),
                                            bop(And,mop(Not,var_b"b'14"),
                                                bop(And,mop(Not,var_b"b'13"),
                                                    bop(And,mop(Not,var_b"b'12"),
                                                        bop(And,mop(Not,var_b"b'7"),
                                                            mop(Not,var_b"b'6")))))))))),
                        let'
                          (var_w("Rn",4),
                           mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           let'
                             (var_w("sat_imm",4),
                              mop(Cast w4,ll[var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                              let'
                                (var_w("Rd",4),
                                 mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                 mb(call
                                      ("ThumbCondition",
                                       @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_w("v",4),
                                       mb(mb(mb(call
                                                  ("HaveThumb2",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                             close
                                               (var("v",@{typ "4 word \<times> bool"}),
                                                call
                                                  ("Do",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},
                                                   var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(ite(bop(Or,
                                                            bop(In,var_w("Rd",4),
                                                                sl[lw(13,4),lw(15,4)]),
                                                            bop(In,var_w("Rn",4),
                                                                sl[lw(13,4),lw(15,4)])),
                                                        call
                                                          ("DECODE_UNPREDICTABLE",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           tp[var("mc",@{typ MachineCode}),
                                                              ls"Saturate16"],@{theory}),mu(lu,qTy)),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       mu(let'
                                                            (var_b"unsigned",
                                                             eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                                             call
                                                               ("instruction.Media",
                                                                @{typ instruction},
                                                                call
                                                                  ("Media.Saturate16",@{typ Media},
                                                                   tp[ite(var_b"unsigned",
                                                                          mop(Cast HOLogic.natT,
                                                                              var_w("sat_imm",4)),
                                                                          bop(Add,
                                                                              mop(Cast HOLogic.natT,
                                                                                  var_w("sat_imm",4)),
                                                                              ln 1)),
                                                                      var_b"unsigned",var_w("Rd",4),
                                                                      var_w("Rn",4)],@{theory}),
                                                                @{theory})),qTy))),
                                                 call
                                                   ("Skip",
                                                    @{typ
                                                    "state \<Rightarrow>
                                                     (instruction \<times> state)"},lu,@{theory})))))))))),
                       (bop(And,var_b"b'25",
                            bop(And,var_b"b'24",bop(And,mop(Not,var_b"b'22"),mop(Not,var_b"b'20")))),
                        let'
                          (var_w("Rn",4),
                           mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           let'
                             (var_w("sat_imm",5),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                              let'
                                (var_w("Rd",4),
                                 mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                                 mb(call
                                      ("ThumbCondition",
                                       @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                       @{theory}),
                                    close
                                      (var_w("v",4),
                                       mb(mb(mb(call
                                                  ("HaveThumb2",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},lu,
                                                   @{theory}),
                                                close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                             close
                                               (var("v",@{typ "4 word \<times> bool"}),
                                                call
                                                  ("Do",
                                                   @{typ
                                                   "state \<Rightarrow> (bool \<times> state)"},
                                                   var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(ite(bop(Or,
                                                            bop(In,var_w("Rd",4),
                                                                sl[lw(13,4),lw(15,4)]),
                                                            bop(In,var_w("Rn",4),
                                                                sl[lw(13,4),lw(15,4)])),
                                                        call
                                                          ("DECODE_UNPREDICTABLE",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           tp[var("mc",@{typ MachineCode}),
                                                              ls"Saturate"],@{theory}),mu(lu,qTy)),
                                                    close
                                                      (var_a HOLogic.unitT,
                                                       mu(let'
                                                            (var_b"unsigned",
                                                             eq(mop(Cast w1,ll[var_b"b'23"]),lw(1,1)),
                                                             let'
                                                               (tp[var("shift_t",@{typ SRType}),
                                                                   var_n"shift_n"],
                                                                call
                                                                  ("DecodeImmShift",
                                                                   @{typ "SRType \<times> nat"},
                                                                   tp[cc[mop(Cast w1,ll[var_b"b'21"]),
                                                                         lw(0,1)],
                                                                      cc[mop(Cast
                                                                               (Word_Lib.mk_wordT 3),
                                                                             ll[var_b"b'14",
                                                                                var_b"b'13",
                                                                                var_b"b'12"]),
                                                                         mop(Cast
                                                                               (Word_Lib.mk_wordT 2),
                                                                             ll[var_b"b'7",
                                                                                var_b"b'6"])]],
                                                                   @{theory}),
                                                                call
                                                                  ("instruction.Media",
                                                                   @{typ instruction},
                                                                   call
                                                                     ("Media.Saturate",@{typ Media},
                                                                      tp[var("shift_t",@{typ SRType}),
                                                                         var_n"shift_n",
                                                                         ite(var_b"unsigned",
                                                                             mop(Cast HOLogic.natT,
                                                                                 var_w("sat_imm",5)),
                                                                             bop(Add,
                                                                                 mop(Cast
                                                                                       HOLogic.natT,
                                                                                     var_w("sat_imm",5)),
                                                                                 ln 1)),
                                                                         var_b"unsigned",
                                                                         var_w("Rd",4),var_w("Rn",4)],
                                                                      @{theory}),@{theory}))),qTy))),
                                                 call
                                                   ("Skip",
                                                    @{typ
                                                    "state \<Rightarrow>
                                                     (instruction \<times> state)"},lu,@{theory})))))))))),
                       (bop(And,var_b"b'25",
                            bop(And,var_b"b'24",
                                bop(And,var_b"b'22",
                                    bop(And,mop(Not,var_b"b'21"),mop(Not,var_b"b'20"))))),
                        let'
                          (var_w("Rn",4),
                           mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           let'
                             (var_w("Rd",4),
                              mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mb(call
                                               ("HaveThumb2",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                lu,@{theory}),
                                             close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              let'
                                                (var_n"widthminus1",
                                                 mop(Cast HOLogic.natT,
                                                     mop(Cast (Word_Lib.mk_wordT 5),
                                                         ll[var_b"b'4",var_b"b'3",var_b"b'2",
                                                            var_b"b'1",var_b"b'0"])),
                                                 let'
                                                   (var_n"lsbit",
                                                    mop(Cast HOLogic.natT,
                                                        cc[mop(Cast (Word_Lib.mk_wordT 3),
                                                               ll[var_b"b'14",var_b"b'13",
                                                                  var_b"b'12"]),
                                                           mop(Cast (Word_Lib.mk_wordT 2),
                                                               ll[var_b"b'7",var_b"b'6"])]),
                                                    mb(ite(bop(Or,
                                                               bop(In,var_w("Rd",4),
                                                                   sl[lw(13,4),lw(15,4)]),
                                                               bop(Or,
                                                                   bop(In,var_w("Rn",4),
                                                                       sl[lw(13,4),lw(15,4)]),
                                                                   bop(Lt,ln 31,
                                                                       bop(Add,var_n"lsbit",
                                                                           var_n"widthminus1")))),
                                                           call
                                                             ("DECODE_UNPREDICTABLE",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var("mc",@{typ MachineCode}),
                                                                 ls"BitFieldExtract"],@{theory}),
                                                           mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.Media",
                                                                @{typ instruction},
                                                                call
                                                                  ("Media.BitFieldExtract",
                                                                   @{typ Media},
                                                                   tp[eq(mop(Cast w1,ll[var_b"b'23"]),
                                                                         lw(1,1)),var_w("Rd",4),
                                                                      var_w("Rn",4),var_n"lsbit",
                                                                      var_n"widthminus1"],@{theory}),
                                                                @{theory}),qTy))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory}))))))))),
                       (bop(And,var_b"b'25",
                            bop(And,var_b"b'24",
                                bop(And,mop(Not,var_b"b'23"),
                                    bop(And,var_b"b'22",bop(And,var_b"b'21",mop(Not,var_b"b'20")))))),
                        let'
                          (var_w("Rn",4),
                           mop(Cast w4,ll[var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           let'
                             (var_w("Rd",4),
                              mop(Cast w4,ll[var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8"]),
                              mb(call
                                   ("ThumbCondition",
                                    @{typ "state \<Rightarrow> (4 word \<times> state)"},lu,
                                    @{theory}),
                                 close
                                   (var_w("v",4),
                                    mb(mb(mb(call
                                               ("HaveThumb2",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                lu,@{theory}),
                                             close(var_b"v0",mu(tp[var_w("v",4),var_b"v0"],qTy))),
                                          close
                                            (var("v",@{typ "4 word \<times> bool"}),
                                             call
                                               ("Do",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var("v",@{typ "4 word \<times> bool"}),@{theory}))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              let'
                                                (var_n"msbit",
                                                 mop(Cast HOLogic.natT,
                                                     mop(Cast (Word_Lib.mk_wordT 5),
                                                         ll[var_b"b'4",var_b"b'3",var_b"b'2",
                                                            var_b"b'1",var_b"b'0"])),
                                                 let'
                                                   (var_n"lsbit",
                                                    mop(Cast HOLogic.natT,
                                                        cc[mop(Cast (Word_Lib.mk_wordT 3),
                                                               ll[var_b"b'14",var_b"b'13",
                                                                  var_b"b'12"]),
                                                           mop(Cast (Word_Lib.mk_wordT 2),
                                                               ll[var_b"b'7",var_b"b'6"])]),
                                                    mb(ite(bop(Or,
                                                               bop(In,var_w("Rd",4),
                                                                   sl[lw(13,4),lw(15,4)]),
                                                               bop(Or,eq(var_w("Rn",4),lw(13,4)),
                                                                   bop(Lt,var_n"msbit",var_n"lsbit"))),
                                                           call
                                                             ("DECODE_UNPREDICTABLE",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              tp[var("mc",@{typ MachineCode}),
                                                                 ls"BitFieldClearOrInsert"],
                                                              @{theory}),mu(lu,qTy)),
                                                       close
                                                         (var_a HOLogic.unitT,
                                                          mu(call
                                                               ("instruction.Media",
                                                                @{typ instruction},
                                                                call
                                                                  ("Media.BitFieldClearOrInsert",
                                                                   @{typ Media},
                                                                   tp[var_w("Rd",4),var_w("Rn",4),
                                                                      var_n"lsbit",var_n"msbit"],
                                                                   @{theory}),@{theory}),qTy))))),
                                              call
                                                ("Skip",
                                                 @{typ
                                                 "state \<Rightarrow> (instruction \<times> state)"},
                                                 lu,@{theory})))))))))],
                      call
                        ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                         lu,@{theory})))],
                call
                  ("UndefinedThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},lu,
                   @{theory}))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Decode",
   close
     (var("mc",@{typ MachineCode}),
      cs(var("mc",@{typ MachineCode}),
         [(call("MachineCode.ARM",@{typ MachineCode},var_w("w",32),@{theory}),
           call
             ("DecodeARM",@{typ "state \<Rightarrow> (instruction \<times> state)"},var_w("w",32),
              @{theory})),
          (call("MachineCode.Thumb",@{typ MachineCode},var_w("h",16),@{theory}),
           call
             ("DecodeThumb",@{typ "state \<Rightarrow> (instruction \<times> state)"},var_w("h",16),
              @{theory})),
          (call("MachineCode.ThumbEE",@{typ MachineCode},var_w("h",16),@{theory}),
           call
             ("DecodeThumbEE",@{typ "state \<Rightarrow> (instruction \<times> state)"},
              var_w("h",16),@{theory})),
          (call
             ("MachineCode.Thumb2",@{typ MachineCode},var("hs",@{typ "16 word \<times> 16 word"}),
              @{theory}),
           call
             ("DecodeThumb2",@{typ "state \<Rightarrow> (instruction \<times> state)"},
              var("hs",@{typ "16 word \<times> 16 word"}),@{theory})),
          (call("MachineCode.BadCode",@{typ MachineCode},var_s"s",@{theory}),
           call
             ("raise'exception",@{typ "state \<Rightarrow> (instruction \<times> state)"},
              call("exception.UNPREDICTABLE",@{typ exception},var_s"s",@{theory}),@{theory}))],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Next",
   mb(const("Fetch",@{typ "state \<Rightarrow> (MachineCode \<times> state)"},@{theory}),
      close
        (var("v",@{typ MachineCode}),
         mb(mb(call
                 ("Decode",@{typ "state \<Rightarrow> (instruction \<times> state)"},
                  var("v",@{typ MachineCode}),@{theory}),
               close
                 (var("v",@{typ instruction}),
                  call
                    ("Run",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ instruction}),@{theory}))),
            close
              (var_a HOLogic.unitT,
               call("ITAdvance",@{typ "state \<Rightarrow> (unit \<times> state)"},lu,@{theory}))))))
end
\<close>

end